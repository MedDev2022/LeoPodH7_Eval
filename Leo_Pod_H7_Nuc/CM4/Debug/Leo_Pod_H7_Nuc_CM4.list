
Leo_Pod_H7_Nuc_CM4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08100000  08100000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000112c4  081002a0  081002a0  000012a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000006c4  08111568  08111568  00012568  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  08111c2c  08111c2c  00012c2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000008  08111c34  08111c34  00012c34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .fini_array   00000008  08111c3c  08111c3c  00012c3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .data         000001dc  10000000  08111c44  00013000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .RAM_D3       000001cc  100001dc  08111e20  000131dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .bss          00004d88  100003a8  08111fec  000133a8  2**2
                  ALLOC
  9 ._user_heap_stack 00000600  10005130  08111fec  00014130  2**0
                  ALLOC
 10 .ARM.attributes 00000030  00000000  00000000  000133a8  2**0
                  CONTENTS, READONLY
 11 .debug_info   0004ec8d  00000000  00000000  000133d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_abbrev 00007c1b  00000000  00000000  00062065  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_aranges 00002700  00000000  00000000  00069c80  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_rnglists 00001e19  00000000  00000000  0006c380  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_macro  0004478f  00000000  00000000  0006e199  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line   0002e8e9  00000000  00000000  000b2928  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_str    001ab64c  00000000  00000000  000e1211  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .comment      00000043  00000000  00000000  0028c85d  2**0
                  CONTENTS, READONLY
 19 .debug_frame  0000bcec  00000000  00000000  0028c8a0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line_str 00000062  00000000  00000000  0029858c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

081002a0 <__do_global_dtors_aux>:
 81002a0:	b510      	push	{r4, lr}
 81002a2:	4c05      	ldr	r4, [pc, #20]	@ (81002b8 <__do_global_dtors_aux+0x18>)
 81002a4:	7823      	ldrb	r3, [r4, #0]
 81002a6:	b933      	cbnz	r3, 81002b6 <__do_global_dtors_aux+0x16>
 81002a8:	4b04      	ldr	r3, [pc, #16]	@ (81002bc <__do_global_dtors_aux+0x1c>)
 81002aa:	b113      	cbz	r3, 81002b2 <__do_global_dtors_aux+0x12>
 81002ac:	4804      	ldr	r0, [pc, #16]	@ (81002c0 <__do_global_dtors_aux+0x20>)
 81002ae:	f3af 8000 	nop.w
 81002b2:	2301      	movs	r3, #1
 81002b4:	7023      	strb	r3, [r4, #0]
 81002b6:	bd10      	pop	{r4, pc}
 81002b8:	100003a8 	.word	0x100003a8
 81002bc:	00000000 	.word	0x00000000
 81002c0:	0811154c 	.word	0x0811154c

081002c4 <frame_dummy>:
 81002c4:	b508      	push	{r3, lr}
 81002c6:	4b03      	ldr	r3, [pc, #12]	@ (81002d4 <frame_dummy+0x10>)
 81002c8:	b11b      	cbz	r3, 81002d2 <frame_dummy+0xe>
 81002ca:	4903      	ldr	r1, [pc, #12]	@ (81002d8 <frame_dummy+0x14>)
 81002cc:	4803      	ldr	r0, [pc, #12]	@ (81002dc <frame_dummy+0x18>)
 81002ce:	f3af 8000 	nop.w
 81002d2:	bd08      	pop	{r3, pc}
 81002d4:	00000000 	.word	0x00000000
 81002d8:	100003ac 	.word	0x100003ac
 81002dc:	0811154c 	.word	0x0811154c

081002e0 <memchr>:
 81002e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 81002e4:	2a10      	cmp	r2, #16
 81002e6:	db2b      	blt.n	8100340 <memchr+0x60>
 81002e8:	f010 0f07 	tst.w	r0, #7
 81002ec:	d008      	beq.n	8100300 <memchr+0x20>
 81002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 81002f2:	3a01      	subs	r2, #1
 81002f4:	428b      	cmp	r3, r1
 81002f6:	d02d      	beq.n	8100354 <memchr+0x74>
 81002f8:	f010 0f07 	tst.w	r0, #7
 81002fc:	b342      	cbz	r2, 8100350 <memchr+0x70>
 81002fe:	d1f6      	bne.n	81002ee <memchr+0xe>
 8100300:	b4f0      	push	{r4, r5, r6, r7}
 8100302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8100306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 810030a:	f022 0407 	bic.w	r4, r2, #7
 810030e:	f07f 0700 	mvns.w	r7, #0
 8100312:	2300      	movs	r3, #0
 8100314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8100318:	3c08      	subs	r4, #8
 810031a:	ea85 0501 	eor.w	r5, r5, r1
 810031e:	ea86 0601 	eor.w	r6, r6, r1
 8100322:	fa85 f547 	uadd8	r5, r5, r7
 8100326:	faa3 f587 	sel	r5, r3, r7
 810032a:	fa86 f647 	uadd8	r6, r6, r7
 810032e:	faa5 f687 	sel	r6, r5, r7
 8100332:	b98e      	cbnz	r6, 8100358 <memchr+0x78>
 8100334:	d1ee      	bne.n	8100314 <memchr+0x34>
 8100336:	bcf0      	pop	{r4, r5, r6, r7}
 8100338:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 810033c:	f002 0207 	and.w	r2, r2, #7
 8100340:	b132      	cbz	r2, 8100350 <memchr+0x70>
 8100342:	f810 3b01 	ldrb.w	r3, [r0], #1
 8100346:	3a01      	subs	r2, #1
 8100348:	ea83 0301 	eor.w	r3, r3, r1
 810034c:	b113      	cbz	r3, 8100354 <memchr+0x74>
 810034e:	d1f8      	bne.n	8100342 <memchr+0x62>
 8100350:	2000      	movs	r0, #0
 8100352:	4770      	bx	lr
 8100354:	3801      	subs	r0, #1
 8100356:	4770      	bx	lr
 8100358:	2d00      	cmp	r5, #0
 810035a:	bf06      	itte	eq
 810035c:	4635      	moveq	r5, r6
 810035e:	3803      	subeq	r0, #3
 8100360:	3807      	subne	r0, #7
 8100362:	f015 0f01 	tst.w	r5, #1
 8100366:	d107      	bne.n	8100378 <memchr+0x98>
 8100368:	3001      	adds	r0, #1
 810036a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 810036e:	bf02      	ittt	eq
 8100370:	3001      	addeq	r0, #1
 8100372:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8100376:	3001      	addeq	r0, #1
 8100378:	bcf0      	pop	{r4, r5, r6, r7}
 810037a:	3801      	subs	r0, #1
 810037c:	4770      	bx	lr
 810037e:	bf00      	nop

08100380 <strlen>:
 8100380:	4603      	mov	r3, r0
 8100382:	f813 2b01 	ldrb.w	r2, [r3], #1
 8100386:	2a00      	cmp	r2, #0
 8100388:	d1fb      	bne.n	8100382 <strlen+0x2>
 810038a:	1a18      	subs	r0, r3, r0
 810038c:	3801      	subs	r0, #1
 810038e:	4770      	bx	lr

08100390 <__aeabi_drsub>:
 8100390:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8100394:	e002      	b.n	810039c <__adddf3>
 8100396:	bf00      	nop

08100398 <__aeabi_dsub>:
 8100398:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0810039c <__adddf3>:
 810039c:	b530      	push	{r4, r5, lr}
 810039e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 81003a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 81003a6:	ea94 0f05 	teq	r4, r5
 81003aa:	bf08      	it	eq
 81003ac:	ea90 0f02 	teqeq	r0, r2
 81003b0:	bf1f      	itttt	ne
 81003b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 81003b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 81003ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 81003be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 81003c2:	f000 80e2 	beq.w	810058a <__adddf3+0x1ee>
 81003c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 81003ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 81003ce:	bfb8      	it	lt
 81003d0:	426d      	neglt	r5, r5
 81003d2:	dd0c      	ble.n	81003ee <__adddf3+0x52>
 81003d4:	442c      	add	r4, r5
 81003d6:	ea80 0202 	eor.w	r2, r0, r2
 81003da:	ea81 0303 	eor.w	r3, r1, r3
 81003de:	ea82 0000 	eor.w	r0, r2, r0
 81003e2:	ea83 0101 	eor.w	r1, r3, r1
 81003e6:	ea80 0202 	eor.w	r2, r0, r2
 81003ea:	ea81 0303 	eor.w	r3, r1, r3
 81003ee:	2d36      	cmp	r5, #54	@ 0x36
 81003f0:	bf88      	it	hi
 81003f2:	bd30      	pophi	{r4, r5, pc}
 81003f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 81003f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 81003fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8100400:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8100404:	d002      	beq.n	810040c <__adddf3+0x70>
 8100406:	4240      	negs	r0, r0
 8100408:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 810040c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8100410:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8100414:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8100418:	d002      	beq.n	8100420 <__adddf3+0x84>
 810041a:	4252      	negs	r2, r2
 810041c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8100420:	ea94 0f05 	teq	r4, r5
 8100424:	f000 80a7 	beq.w	8100576 <__adddf3+0x1da>
 8100428:	f1a4 0401 	sub.w	r4, r4, #1
 810042c:	f1d5 0e20 	rsbs	lr, r5, #32
 8100430:	db0d      	blt.n	810044e <__adddf3+0xb2>
 8100432:	fa02 fc0e 	lsl.w	ip, r2, lr
 8100436:	fa22 f205 	lsr.w	r2, r2, r5
 810043a:	1880      	adds	r0, r0, r2
 810043c:	f141 0100 	adc.w	r1, r1, #0
 8100440:	fa03 f20e 	lsl.w	r2, r3, lr
 8100444:	1880      	adds	r0, r0, r2
 8100446:	fa43 f305 	asr.w	r3, r3, r5
 810044a:	4159      	adcs	r1, r3
 810044c:	e00e      	b.n	810046c <__adddf3+0xd0>
 810044e:	f1a5 0520 	sub.w	r5, r5, #32
 8100452:	f10e 0e20 	add.w	lr, lr, #32
 8100456:	2a01      	cmp	r2, #1
 8100458:	fa03 fc0e 	lsl.w	ip, r3, lr
 810045c:	bf28      	it	cs
 810045e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8100462:	fa43 f305 	asr.w	r3, r3, r5
 8100466:	18c0      	adds	r0, r0, r3
 8100468:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 810046c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8100470:	d507      	bpl.n	8100482 <__adddf3+0xe6>
 8100472:	f04f 0e00 	mov.w	lr, #0
 8100476:	f1dc 0c00 	rsbs	ip, ip, #0
 810047a:	eb7e 0000 	sbcs.w	r0, lr, r0
 810047e:	eb6e 0101 	sbc.w	r1, lr, r1
 8100482:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8100486:	d31b      	bcc.n	81004c0 <__adddf3+0x124>
 8100488:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 810048c:	d30c      	bcc.n	81004a8 <__adddf3+0x10c>
 810048e:	0849      	lsrs	r1, r1, #1
 8100490:	ea5f 0030 	movs.w	r0, r0, rrx
 8100494:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8100498:	f104 0401 	add.w	r4, r4, #1
 810049c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 81004a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 81004a4:	f080 809a 	bcs.w	81005dc <__adddf3+0x240>
 81004a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 81004ac:	bf08      	it	eq
 81004ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 81004b2:	f150 0000 	adcs.w	r0, r0, #0
 81004b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 81004ba:	ea41 0105 	orr.w	r1, r1, r5
 81004be:	bd30      	pop	{r4, r5, pc}
 81004c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 81004c4:	4140      	adcs	r0, r0
 81004c6:	eb41 0101 	adc.w	r1, r1, r1
 81004ca:	3c01      	subs	r4, #1
 81004cc:	bf28      	it	cs
 81004ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 81004d2:	d2e9      	bcs.n	81004a8 <__adddf3+0x10c>
 81004d4:	f091 0f00 	teq	r1, #0
 81004d8:	bf04      	itt	eq
 81004da:	4601      	moveq	r1, r0
 81004dc:	2000      	moveq	r0, #0
 81004de:	fab1 f381 	clz	r3, r1
 81004e2:	bf08      	it	eq
 81004e4:	3320      	addeq	r3, #32
 81004e6:	f1a3 030b 	sub.w	r3, r3, #11
 81004ea:	f1b3 0220 	subs.w	r2, r3, #32
 81004ee:	da0c      	bge.n	810050a <__adddf3+0x16e>
 81004f0:	320c      	adds	r2, #12
 81004f2:	dd08      	ble.n	8100506 <__adddf3+0x16a>
 81004f4:	f102 0c14 	add.w	ip, r2, #20
 81004f8:	f1c2 020c 	rsb	r2, r2, #12
 81004fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8100500:	fa21 f102 	lsr.w	r1, r1, r2
 8100504:	e00c      	b.n	8100520 <__adddf3+0x184>
 8100506:	f102 0214 	add.w	r2, r2, #20
 810050a:	bfd8      	it	le
 810050c:	f1c2 0c20 	rsble	ip, r2, #32
 8100510:	fa01 f102 	lsl.w	r1, r1, r2
 8100514:	fa20 fc0c 	lsr.w	ip, r0, ip
 8100518:	bfdc      	itt	le
 810051a:	ea41 010c 	orrle.w	r1, r1, ip
 810051e:	4090      	lslle	r0, r2
 8100520:	1ae4      	subs	r4, r4, r3
 8100522:	bfa2      	ittt	ge
 8100524:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8100528:	4329      	orrge	r1, r5
 810052a:	bd30      	popge	{r4, r5, pc}
 810052c:	ea6f 0404 	mvn.w	r4, r4
 8100530:	3c1f      	subs	r4, #31
 8100532:	da1c      	bge.n	810056e <__adddf3+0x1d2>
 8100534:	340c      	adds	r4, #12
 8100536:	dc0e      	bgt.n	8100556 <__adddf3+0x1ba>
 8100538:	f104 0414 	add.w	r4, r4, #20
 810053c:	f1c4 0220 	rsb	r2, r4, #32
 8100540:	fa20 f004 	lsr.w	r0, r0, r4
 8100544:	fa01 f302 	lsl.w	r3, r1, r2
 8100548:	ea40 0003 	orr.w	r0, r0, r3
 810054c:	fa21 f304 	lsr.w	r3, r1, r4
 8100550:	ea45 0103 	orr.w	r1, r5, r3
 8100554:	bd30      	pop	{r4, r5, pc}
 8100556:	f1c4 040c 	rsb	r4, r4, #12
 810055a:	f1c4 0220 	rsb	r2, r4, #32
 810055e:	fa20 f002 	lsr.w	r0, r0, r2
 8100562:	fa01 f304 	lsl.w	r3, r1, r4
 8100566:	ea40 0003 	orr.w	r0, r0, r3
 810056a:	4629      	mov	r1, r5
 810056c:	bd30      	pop	{r4, r5, pc}
 810056e:	fa21 f004 	lsr.w	r0, r1, r4
 8100572:	4629      	mov	r1, r5
 8100574:	bd30      	pop	{r4, r5, pc}
 8100576:	f094 0f00 	teq	r4, #0
 810057a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 810057e:	bf06      	itte	eq
 8100580:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8100584:	3401      	addeq	r4, #1
 8100586:	3d01      	subne	r5, #1
 8100588:	e74e      	b.n	8100428 <__adddf3+0x8c>
 810058a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 810058e:	bf18      	it	ne
 8100590:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8100594:	d029      	beq.n	81005ea <__adddf3+0x24e>
 8100596:	ea94 0f05 	teq	r4, r5
 810059a:	bf08      	it	eq
 810059c:	ea90 0f02 	teqeq	r0, r2
 81005a0:	d005      	beq.n	81005ae <__adddf3+0x212>
 81005a2:	ea54 0c00 	orrs.w	ip, r4, r0
 81005a6:	bf04      	itt	eq
 81005a8:	4619      	moveq	r1, r3
 81005aa:	4610      	moveq	r0, r2
 81005ac:	bd30      	pop	{r4, r5, pc}
 81005ae:	ea91 0f03 	teq	r1, r3
 81005b2:	bf1e      	ittt	ne
 81005b4:	2100      	movne	r1, #0
 81005b6:	2000      	movne	r0, #0
 81005b8:	bd30      	popne	{r4, r5, pc}
 81005ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 81005be:	d105      	bne.n	81005cc <__adddf3+0x230>
 81005c0:	0040      	lsls	r0, r0, #1
 81005c2:	4149      	adcs	r1, r1
 81005c4:	bf28      	it	cs
 81005c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 81005ca:	bd30      	pop	{r4, r5, pc}
 81005cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 81005d0:	bf3c      	itt	cc
 81005d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 81005d6:	bd30      	popcc	{r4, r5, pc}
 81005d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 81005dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 81005e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 81005e4:	f04f 0000 	mov.w	r0, #0
 81005e8:	bd30      	pop	{r4, r5, pc}
 81005ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 81005ee:	bf1a      	itte	ne
 81005f0:	4619      	movne	r1, r3
 81005f2:	4610      	movne	r0, r2
 81005f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 81005f8:	bf1c      	itt	ne
 81005fa:	460b      	movne	r3, r1
 81005fc:	4602      	movne	r2, r0
 81005fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8100602:	bf06      	itte	eq
 8100604:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8100608:	ea91 0f03 	teqeq	r1, r3
 810060c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8100610:	bd30      	pop	{r4, r5, pc}
 8100612:	bf00      	nop

08100614 <__aeabi_ui2d>:
 8100614:	f090 0f00 	teq	r0, #0
 8100618:	bf04      	itt	eq
 810061a:	2100      	moveq	r1, #0
 810061c:	4770      	bxeq	lr
 810061e:	b530      	push	{r4, r5, lr}
 8100620:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8100624:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8100628:	f04f 0500 	mov.w	r5, #0
 810062c:	f04f 0100 	mov.w	r1, #0
 8100630:	e750      	b.n	81004d4 <__adddf3+0x138>
 8100632:	bf00      	nop

08100634 <__aeabi_i2d>:
 8100634:	f090 0f00 	teq	r0, #0
 8100638:	bf04      	itt	eq
 810063a:	2100      	moveq	r1, #0
 810063c:	4770      	bxeq	lr
 810063e:	b530      	push	{r4, r5, lr}
 8100640:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8100644:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8100648:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 810064c:	bf48      	it	mi
 810064e:	4240      	negmi	r0, r0
 8100650:	f04f 0100 	mov.w	r1, #0
 8100654:	e73e      	b.n	81004d4 <__adddf3+0x138>
 8100656:	bf00      	nop

08100658 <__aeabi_f2d>:
 8100658:	0042      	lsls	r2, r0, #1
 810065a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 810065e:	ea4f 0131 	mov.w	r1, r1, rrx
 8100662:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8100666:	bf1f      	itttt	ne
 8100668:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 810066c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8100670:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8100674:	4770      	bxne	lr
 8100676:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 810067a:	bf08      	it	eq
 810067c:	4770      	bxeq	lr
 810067e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8100682:	bf04      	itt	eq
 8100684:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8100688:	4770      	bxeq	lr
 810068a:	b530      	push	{r4, r5, lr}
 810068c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8100690:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8100694:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8100698:	e71c      	b.n	81004d4 <__adddf3+0x138>
 810069a:	bf00      	nop

0810069c <__aeabi_ul2d>:
 810069c:	ea50 0201 	orrs.w	r2, r0, r1
 81006a0:	bf08      	it	eq
 81006a2:	4770      	bxeq	lr
 81006a4:	b530      	push	{r4, r5, lr}
 81006a6:	f04f 0500 	mov.w	r5, #0
 81006aa:	e00a      	b.n	81006c2 <__aeabi_l2d+0x16>

081006ac <__aeabi_l2d>:
 81006ac:	ea50 0201 	orrs.w	r2, r0, r1
 81006b0:	bf08      	it	eq
 81006b2:	4770      	bxeq	lr
 81006b4:	b530      	push	{r4, r5, lr}
 81006b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 81006ba:	d502      	bpl.n	81006c2 <__aeabi_l2d+0x16>
 81006bc:	4240      	negs	r0, r0
 81006be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 81006c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 81006c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 81006ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 81006ce:	f43f aed8 	beq.w	8100482 <__adddf3+0xe6>
 81006d2:	f04f 0203 	mov.w	r2, #3
 81006d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 81006da:	bf18      	it	ne
 81006dc:	3203      	addne	r2, #3
 81006de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 81006e2:	bf18      	it	ne
 81006e4:	3203      	addne	r2, #3
 81006e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 81006ea:	f1c2 0320 	rsb	r3, r2, #32
 81006ee:	fa00 fc03 	lsl.w	ip, r0, r3
 81006f2:	fa20 f002 	lsr.w	r0, r0, r2
 81006f6:	fa01 fe03 	lsl.w	lr, r1, r3
 81006fa:	ea40 000e 	orr.w	r0, r0, lr
 81006fe:	fa21 f102 	lsr.w	r1, r1, r2
 8100702:	4414      	add	r4, r2
 8100704:	e6bd      	b.n	8100482 <__adddf3+0xe6>
 8100706:	bf00      	nop

08100708 <__aeabi_dmul>:
 8100708:	b570      	push	{r4, r5, r6, lr}
 810070a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 810070e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8100712:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8100716:	bf1d      	ittte	ne
 8100718:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 810071c:	ea94 0f0c 	teqne	r4, ip
 8100720:	ea95 0f0c 	teqne	r5, ip
 8100724:	f000 f8de 	bleq	81008e4 <__aeabi_dmul+0x1dc>
 8100728:	442c      	add	r4, r5
 810072a:	ea81 0603 	eor.w	r6, r1, r3
 810072e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8100732:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8100736:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 810073a:	bf18      	it	ne
 810073c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8100740:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8100744:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8100748:	d038      	beq.n	81007bc <__aeabi_dmul+0xb4>
 810074a:	fba0 ce02 	umull	ip, lr, r0, r2
 810074e:	f04f 0500 	mov.w	r5, #0
 8100752:	fbe1 e502 	umlal	lr, r5, r1, r2
 8100756:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 810075a:	fbe0 e503 	umlal	lr, r5, r0, r3
 810075e:	f04f 0600 	mov.w	r6, #0
 8100762:	fbe1 5603 	umlal	r5, r6, r1, r3
 8100766:	f09c 0f00 	teq	ip, #0
 810076a:	bf18      	it	ne
 810076c:	f04e 0e01 	orrne.w	lr, lr, #1
 8100770:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8100774:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8100778:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 810077c:	d204      	bcs.n	8100788 <__aeabi_dmul+0x80>
 810077e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8100782:	416d      	adcs	r5, r5
 8100784:	eb46 0606 	adc.w	r6, r6, r6
 8100788:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 810078c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8100790:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8100794:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8100798:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 810079c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 81007a0:	bf88      	it	hi
 81007a2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 81007a6:	d81e      	bhi.n	81007e6 <__aeabi_dmul+0xde>
 81007a8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 81007ac:	bf08      	it	eq
 81007ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 81007b2:	f150 0000 	adcs.w	r0, r0, #0
 81007b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 81007ba:	bd70      	pop	{r4, r5, r6, pc}
 81007bc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 81007c0:	ea46 0101 	orr.w	r1, r6, r1
 81007c4:	ea40 0002 	orr.w	r0, r0, r2
 81007c8:	ea81 0103 	eor.w	r1, r1, r3
 81007cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 81007d0:	bfc2      	ittt	gt
 81007d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 81007d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 81007da:	bd70      	popgt	{r4, r5, r6, pc}
 81007dc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 81007e0:	f04f 0e00 	mov.w	lr, #0
 81007e4:	3c01      	subs	r4, #1
 81007e6:	f300 80ab 	bgt.w	8100940 <__aeabi_dmul+0x238>
 81007ea:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 81007ee:	bfde      	ittt	le
 81007f0:	2000      	movle	r0, #0
 81007f2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 81007f6:	bd70      	pople	{r4, r5, r6, pc}
 81007f8:	f1c4 0400 	rsb	r4, r4, #0
 81007fc:	3c20      	subs	r4, #32
 81007fe:	da35      	bge.n	810086c <__aeabi_dmul+0x164>
 8100800:	340c      	adds	r4, #12
 8100802:	dc1b      	bgt.n	810083c <__aeabi_dmul+0x134>
 8100804:	f104 0414 	add.w	r4, r4, #20
 8100808:	f1c4 0520 	rsb	r5, r4, #32
 810080c:	fa00 f305 	lsl.w	r3, r0, r5
 8100810:	fa20 f004 	lsr.w	r0, r0, r4
 8100814:	fa01 f205 	lsl.w	r2, r1, r5
 8100818:	ea40 0002 	orr.w	r0, r0, r2
 810081c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8100820:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8100824:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8100828:	fa21 f604 	lsr.w	r6, r1, r4
 810082c:	eb42 0106 	adc.w	r1, r2, r6
 8100830:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8100834:	bf08      	it	eq
 8100836:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 810083a:	bd70      	pop	{r4, r5, r6, pc}
 810083c:	f1c4 040c 	rsb	r4, r4, #12
 8100840:	f1c4 0520 	rsb	r5, r4, #32
 8100844:	fa00 f304 	lsl.w	r3, r0, r4
 8100848:	fa20 f005 	lsr.w	r0, r0, r5
 810084c:	fa01 f204 	lsl.w	r2, r1, r4
 8100850:	ea40 0002 	orr.w	r0, r0, r2
 8100854:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8100858:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 810085c:	f141 0100 	adc.w	r1, r1, #0
 8100860:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8100864:	bf08      	it	eq
 8100866:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 810086a:	bd70      	pop	{r4, r5, r6, pc}
 810086c:	f1c4 0520 	rsb	r5, r4, #32
 8100870:	fa00 f205 	lsl.w	r2, r0, r5
 8100874:	ea4e 0e02 	orr.w	lr, lr, r2
 8100878:	fa20 f304 	lsr.w	r3, r0, r4
 810087c:	fa01 f205 	lsl.w	r2, r1, r5
 8100880:	ea43 0302 	orr.w	r3, r3, r2
 8100884:	fa21 f004 	lsr.w	r0, r1, r4
 8100888:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 810088c:	fa21 f204 	lsr.w	r2, r1, r4
 8100890:	ea20 0002 	bic.w	r0, r0, r2
 8100894:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8100898:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 810089c:	bf08      	it	eq
 810089e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 81008a2:	bd70      	pop	{r4, r5, r6, pc}
 81008a4:	f094 0f00 	teq	r4, #0
 81008a8:	d10f      	bne.n	81008ca <__aeabi_dmul+0x1c2>
 81008aa:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 81008ae:	0040      	lsls	r0, r0, #1
 81008b0:	eb41 0101 	adc.w	r1, r1, r1
 81008b4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 81008b8:	bf08      	it	eq
 81008ba:	3c01      	subeq	r4, #1
 81008bc:	d0f7      	beq.n	81008ae <__aeabi_dmul+0x1a6>
 81008be:	ea41 0106 	orr.w	r1, r1, r6
 81008c2:	f095 0f00 	teq	r5, #0
 81008c6:	bf18      	it	ne
 81008c8:	4770      	bxne	lr
 81008ca:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 81008ce:	0052      	lsls	r2, r2, #1
 81008d0:	eb43 0303 	adc.w	r3, r3, r3
 81008d4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 81008d8:	bf08      	it	eq
 81008da:	3d01      	subeq	r5, #1
 81008dc:	d0f7      	beq.n	81008ce <__aeabi_dmul+0x1c6>
 81008de:	ea43 0306 	orr.w	r3, r3, r6
 81008e2:	4770      	bx	lr
 81008e4:	ea94 0f0c 	teq	r4, ip
 81008e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 81008ec:	bf18      	it	ne
 81008ee:	ea95 0f0c 	teqne	r5, ip
 81008f2:	d00c      	beq.n	810090e <__aeabi_dmul+0x206>
 81008f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 81008f8:	bf18      	it	ne
 81008fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 81008fe:	d1d1      	bne.n	81008a4 <__aeabi_dmul+0x19c>
 8100900:	ea81 0103 	eor.w	r1, r1, r3
 8100904:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8100908:	f04f 0000 	mov.w	r0, #0
 810090c:	bd70      	pop	{r4, r5, r6, pc}
 810090e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8100912:	bf06      	itte	eq
 8100914:	4610      	moveq	r0, r2
 8100916:	4619      	moveq	r1, r3
 8100918:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 810091c:	d019      	beq.n	8100952 <__aeabi_dmul+0x24a>
 810091e:	ea94 0f0c 	teq	r4, ip
 8100922:	d102      	bne.n	810092a <__aeabi_dmul+0x222>
 8100924:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8100928:	d113      	bne.n	8100952 <__aeabi_dmul+0x24a>
 810092a:	ea95 0f0c 	teq	r5, ip
 810092e:	d105      	bne.n	810093c <__aeabi_dmul+0x234>
 8100930:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8100934:	bf1c      	itt	ne
 8100936:	4610      	movne	r0, r2
 8100938:	4619      	movne	r1, r3
 810093a:	d10a      	bne.n	8100952 <__aeabi_dmul+0x24a>
 810093c:	ea81 0103 	eor.w	r1, r1, r3
 8100940:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8100944:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8100948:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 810094c:	f04f 0000 	mov.w	r0, #0
 8100950:	bd70      	pop	{r4, r5, r6, pc}
 8100952:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8100956:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 810095a:	bd70      	pop	{r4, r5, r6, pc}

0810095c <__aeabi_ddiv>:
 810095c:	b570      	push	{r4, r5, r6, lr}
 810095e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8100962:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8100966:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 810096a:	bf1d      	ittte	ne
 810096c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8100970:	ea94 0f0c 	teqne	r4, ip
 8100974:	ea95 0f0c 	teqne	r5, ip
 8100978:	f000 f8a7 	bleq	8100aca <__aeabi_ddiv+0x16e>
 810097c:	eba4 0405 	sub.w	r4, r4, r5
 8100980:	ea81 0e03 	eor.w	lr, r1, r3
 8100984:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8100988:	ea4f 3101 	mov.w	r1, r1, lsl #12
 810098c:	f000 8088 	beq.w	8100aa0 <__aeabi_ddiv+0x144>
 8100990:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8100994:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8100998:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 810099c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 81009a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 81009a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 81009a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 81009ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 81009b0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 81009b4:	429d      	cmp	r5, r3
 81009b6:	bf08      	it	eq
 81009b8:	4296      	cmpeq	r6, r2
 81009ba:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 81009be:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 81009c2:	d202      	bcs.n	81009ca <__aeabi_ddiv+0x6e>
 81009c4:	085b      	lsrs	r3, r3, #1
 81009c6:	ea4f 0232 	mov.w	r2, r2, rrx
 81009ca:	1ab6      	subs	r6, r6, r2
 81009cc:	eb65 0503 	sbc.w	r5, r5, r3
 81009d0:	085b      	lsrs	r3, r3, #1
 81009d2:	ea4f 0232 	mov.w	r2, r2, rrx
 81009d6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 81009da:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 81009de:	ebb6 0e02 	subs.w	lr, r6, r2
 81009e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 81009e6:	bf22      	ittt	cs
 81009e8:	1ab6      	subcs	r6, r6, r2
 81009ea:	4675      	movcs	r5, lr
 81009ec:	ea40 000c 	orrcs.w	r0, r0, ip
 81009f0:	085b      	lsrs	r3, r3, #1
 81009f2:	ea4f 0232 	mov.w	r2, r2, rrx
 81009f6:	ebb6 0e02 	subs.w	lr, r6, r2
 81009fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 81009fe:	bf22      	ittt	cs
 8100a00:	1ab6      	subcs	r6, r6, r2
 8100a02:	4675      	movcs	r5, lr
 8100a04:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8100a08:	085b      	lsrs	r3, r3, #1
 8100a0a:	ea4f 0232 	mov.w	r2, r2, rrx
 8100a0e:	ebb6 0e02 	subs.w	lr, r6, r2
 8100a12:	eb75 0e03 	sbcs.w	lr, r5, r3
 8100a16:	bf22      	ittt	cs
 8100a18:	1ab6      	subcs	r6, r6, r2
 8100a1a:	4675      	movcs	r5, lr
 8100a1c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8100a20:	085b      	lsrs	r3, r3, #1
 8100a22:	ea4f 0232 	mov.w	r2, r2, rrx
 8100a26:	ebb6 0e02 	subs.w	lr, r6, r2
 8100a2a:	eb75 0e03 	sbcs.w	lr, r5, r3
 8100a2e:	bf22      	ittt	cs
 8100a30:	1ab6      	subcs	r6, r6, r2
 8100a32:	4675      	movcs	r5, lr
 8100a34:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8100a38:	ea55 0e06 	orrs.w	lr, r5, r6
 8100a3c:	d018      	beq.n	8100a70 <__aeabi_ddiv+0x114>
 8100a3e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8100a42:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8100a46:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8100a4a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8100a4e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8100a52:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8100a56:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8100a5a:	d1c0      	bne.n	81009de <__aeabi_ddiv+0x82>
 8100a5c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8100a60:	d10b      	bne.n	8100a7a <__aeabi_ddiv+0x11e>
 8100a62:	ea41 0100 	orr.w	r1, r1, r0
 8100a66:	f04f 0000 	mov.w	r0, #0
 8100a6a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 8100a6e:	e7b6      	b.n	81009de <__aeabi_ddiv+0x82>
 8100a70:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8100a74:	bf04      	itt	eq
 8100a76:	4301      	orreq	r1, r0
 8100a78:	2000      	moveq	r0, #0
 8100a7a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8100a7e:	bf88      	it	hi
 8100a80:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8100a84:	f63f aeaf 	bhi.w	81007e6 <__aeabi_dmul+0xde>
 8100a88:	ebb5 0c03 	subs.w	ip, r5, r3
 8100a8c:	bf04      	itt	eq
 8100a8e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8100a92:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8100a96:	f150 0000 	adcs.w	r0, r0, #0
 8100a9a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8100a9e:	bd70      	pop	{r4, r5, r6, pc}
 8100aa0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8100aa4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8100aa8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8100aac:	bfc2      	ittt	gt
 8100aae:	ebd4 050c 	rsbsgt	r5, r4, ip
 8100ab2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8100ab6:	bd70      	popgt	{r4, r5, r6, pc}
 8100ab8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8100abc:	f04f 0e00 	mov.w	lr, #0
 8100ac0:	3c01      	subs	r4, #1
 8100ac2:	e690      	b.n	81007e6 <__aeabi_dmul+0xde>
 8100ac4:	ea45 0e06 	orr.w	lr, r5, r6
 8100ac8:	e68d      	b.n	81007e6 <__aeabi_dmul+0xde>
 8100aca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8100ace:	ea94 0f0c 	teq	r4, ip
 8100ad2:	bf08      	it	eq
 8100ad4:	ea95 0f0c 	teqeq	r5, ip
 8100ad8:	f43f af3b 	beq.w	8100952 <__aeabi_dmul+0x24a>
 8100adc:	ea94 0f0c 	teq	r4, ip
 8100ae0:	d10a      	bne.n	8100af8 <__aeabi_ddiv+0x19c>
 8100ae2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8100ae6:	f47f af34 	bne.w	8100952 <__aeabi_dmul+0x24a>
 8100aea:	ea95 0f0c 	teq	r5, ip
 8100aee:	f47f af25 	bne.w	810093c <__aeabi_dmul+0x234>
 8100af2:	4610      	mov	r0, r2
 8100af4:	4619      	mov	r1, r3
 8100af6:	e72c      	b.n	8100952 <__aeabi_dmul+0x24a>
 8100af8:	ea95 0f0c 	teq	r5, ip
 8100afc:	d106      	bne.n	8100b0c <__aeabi_ddiv+0x1b0>
 8100afe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8100b02:	f43f aefd 	beq.w	8100900 <__aeabi_dmul+0x1f8>
 8100b06:	4610      	mov	r0, r2
 8100b08:	4619      	mov	r1, r3
 8100b0a:	e722      	b.n	8100952 <__aeabi_dmul+0x24a>
 8100b0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8100b10:	bf18      	it	ne
 8100b12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8100b16:	f47f aec5 	bne.w	81008a4 <__aeabi_dmul+0x19c>
 8100b1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8100b1e:	f47f af0d 	bne.w	810093c <__aeabi_dmul+0x234>
 8100b22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8100b26:	f47f aeeb 	bne.w	8100900 <__aeabi_dmul+0x1f8>
 8100b2a:	e712      	b.n	8100952 <__aeabi_dmul+0x24a>

08100b2c <__gedf2>:
 8100b2c:	f04f 3cff 	mov.w	ip, #4294967295
 8100b30:	e006      	b.n	8100b40 <__cmpdf2+0x4>
 8100b32:	bf00      	nop

08100b34 <__ledf2>:
 8100b34:	f04f 0c01 	mov.w	ip, #1
 8100b38:	e002      	b.n	8100b40 <__cmpdf2+0x4>
 8100b3a:	bf00      	nop

08100b3c <__cmpdf2>:
 8100b3c:	f04f 0c01 	mov.w	ip, #1
 8100b40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8100b44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8100b48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8100b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8100b50:	bf18      	it	ne
 8100b52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8100b56:	d01b      	beq.n	8100b90 <__cmpdf2+0x54>
 8100b58:	b001      	add	sp, #4
 8100b5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8100b5e:	bf0c      	ite	eq
 8100b60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8100b64:	ea91 0f03 	teqne	r1, r3
 8100b68:	bf02      	ittt	eq
 8100b6a:	ea90 0f02 	teqeq	r0, r2
 8100b6e:	2000      	moveq	r0, #0
 8100b70:	4770      	bxeq	lr
 8100b72:	f110 0f00 	cmn.w	r0, #0
 8100b76:	ea91 0f03 	teq	r1, r3
 8100b7a:	bf58      	it	pl
 8100b7c:	4299      	cmppl	r1, r3
 8100b7e:	bf08      	it	eq
 8100b80:	4290      	cmpeq	r0, r2
 8100b82:	bf2c      	ite	cs
 8100b84:	17d8      	asrcs	r0, r3, #31
 8100b86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8100b8a:	f040 0001 	orr.w	r0, r0, #1
 8100b8e:	4770      	bx	lr
 8100b90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8100b94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8100b98:	d102      	bne.n	8100ba0 <__cmpdf2+0x64>
 8100b9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8100b9e:	d107      	bne.n	8100bb0 <__cmpdf2+0x74>
 8100ba0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8100ba4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8100ba8:	d1d6      	bne.n	8100b58 <__cmpdf2+0x1c>
 8100baa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8100bae:	d0d3      	beq.n	8100b58 <__cmpdf2+0x1c>
 8100bb0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8100bb4:	4770      	bx	lr
 8100bb6:	bf00      	nop

08100bb8 <__aeabi_cdrcmple>:
 8100bb8:	4684      	mov	ip, r0
 8100bba:	4610      	mov	r0, r2
 8100bbc:	4662      	mov	r2, ip
 8100bbe:	468c      	mov	ip, r1
 8100bc0:	4619      	mov	r1, r3
 8100bc2:	4663      	mov	r3, ip
 8100bc4:	e000      	b.n	8100bc8 <__aeabi_cdcmpeq>
 8100bc6:	bf00      	nop

08100bc8 <__aeabi_cdcmpeq>:
 8100bc8:	b501      	push	{r0, lr}
 8100bca:	f7ff ffb7 	bl	8100b3c <__cmpdf2>
 8100bce:	2800      	cmp	r0, #0
 8100bd0:	bf48      	it	mi
 8100bd2:	f110 0f00 	cmnmi.w	r0, #0
 8100bd6:	bd01      	pop	{r0, pc}

08100bd8 <__aeabi_dcmpeq>:
 8100bd8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8100bdc:	f7ff fff4 	bl	8100bc8 <__aeabi_cdcmpeq>
 8100be0:	bf0c      	ite	eq
 8100be2:	2001      	moveq	r0, #1
 8100be4:	2000      	movne	r0, #0
 8100be6:	f85d fb08 	ldr.w	pc, [sp], #8
 8100bea:	bf00      	nop

08100bec <__aeabi_dcmplt>:
 8100bec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8100bf0:	f7ff ffea 	bl	8100bc8 <__aeabi_cdcmpeq>
 8100bf4:	bf34      	ite	cc
 8100bf6:	2001      	movcc	r0, #1
 8100bf8:	2000      	movcs	r0, #0
 8100bfa:	f85d fb08 	ldr.w	pc, [sp], #8
 8100bfe:	bf00      	nop

08100c00 <__aeabi_dcmple>:
 8100c00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8100c04:	f7ff ffe0 	bl	8100bc8 <__aeabi_cdcmpeq>
 8100c08:	bf94      	ite	ls
 8100c0a:	2001      	movls	r0, #1
 8100c0c:	2000      	movhi	r0, #0
 8100c0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8100c12:	bf00      	nop

08100c14 <__aeabi_dcmpge>:
 8100c14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8100c18:	f7ff ffce 	bl	8100bb8 <__aeabi_cdrcmple>
 8100c1c:	bf94      	ite	ls
 8100c1e:	2001      	movls	r0, #1
 8100c20:	2000      	movhi	r0, #0
 8100c22:	f85d fb08 	ldr.w	pc, [sp], #8
 8100c26:	bf00      	nop

08100c28 <__aeabi_dcmpgt>:
 8100c28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8100c2c:	f7ff ffc4 	bl	8100bb8 <__aeabi_cdrcmple>
 8100c30:	bf34      	ite	cc
 8100c32:	2001      	movcc	r0, #1
 8100c34:	2000      	movcs	r0, #0
 8100c36:	f85d fb08 	ldr.w	pc, [sp], #8
 8100c3a:	bf00      	nop

08100c3c <__aeabi_dcmpun>:
 8100c3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8100c40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8100c44:	d102      	bne.n	8100c4c <__aeabi_dcmpun+0x10>
 8100c46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8100c4a:	d10a      	bne.n	8100c62 <__aeabi_dcmpun+0x26>
 8100c4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8100c50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8100c54:	d102      	bne.n	8100c5c <__aeabi_dcmpun+0x20>
 8100c56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8100c5a:	d102      	bne.n	8100c62 <__aeabi_dcmpun+0x26>
 8100c5c:	f04f 0000 	mov.w	r0, #0
 8100c60:	4770      	bx	lr
 8100c62:	f04f 0001 	mov.w	r0, #1
 8100c66:	4770      	bx	lr

08100c68 <__aeabi_d2iz>:
 8100c68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8100c6c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8100c70:	d215      	bcs.n	8100c9e <__aeabi_d2iz+0x36>
 8100c72:	d511      	bpl.n	8100c98 <__aeabi_d2iz+0x30>
 8100c74:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8100c78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8100c7c:	d912      	bls.n	8100ca4 <__aeabi_d2iz+0x3c>
 8100c7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8100c82:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8100c86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8100c8a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8100c8e:	fa23 f002 	lsr.w	r0, r3, r2
 8100c92:	bf18      	it	ne
 8100c94:	4240      	negne	r0, r0
 8100c96:	4770      	bx	lr
 8100c98:	f04f 0000 	mov.w	r0, #0
 8100c9c:	4770      	bx	lr
 8100c9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8100ca2:	d105      	bne.n	8100cb0 <__aeabi_d2iz+0x48>
 8100ca4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8100ca8:	bf08      	it	eq
 8100caa:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8100cae:	4770      	bx	lr
 8100cb0:	f04f 0000 	mov.w	r0, #0
 8100cb4:	4770      	bx	lr
 8100cb6:	bf00      	nop

08100cb8 <__aeabi_uldivmod>:
 8100cb8:	b953      	cbnz	r3, 8100cd0 <__aeabi_uldivmod+0x18>
 8100cba:	b94a      	cbnz	r2, 8100cd0 <__aeabi_uldivmod+0x18>
 8100cbc:	2900      	cmp	r1, #0
 8100cbe:	bf08      	it	eq
 8100cc0:	2800      	cmpeq	r0, #0
 8100cc2:	bf1c      	itt	ne
 8100cc4:	f04f 31ff 	movne.w	r1, #4294967295
 8100cc8:	f04f 30ff 	movne.w	r0, #4294967295
 8100ccc:	f000 b988 	b.w	8100fe0 <__aeabi_idiv0>
 8100cd0:	f1ad 0c08 	sub.w	ip, sp, #8
 8100cd4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8100cd8:	f000 f806 	bl	8100ce8 <__udivmoddi4>
 8100cdc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8100ce0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8100ce4:	b004      	add	sp, #16
 8100ce6:	4770      	bx	lr

08100ce8 <__udivmoddi4>:
 8100ce8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8100cec:	9d08      	ldr	r5, [sp, #32]
 8100cee:	468e      	mov	lr, r1
 8100cf0:	4604      	mov	r4, r0
 8100cf2:	4688      	mov	r8, r1
 8100cf4:	2b00      	cmp	r3, #0
 8100cf6:	d14a      	bne.n	8100d8e <__udivmoddi4+0xa6>
 8100cf8:	428a      	cmp	r2, r1
 8100cfa:	4617      	mov	r7, r2
 8100cfc:	d962      	bls.n	8100dc4 <__udivmoddi4+0xdc>
 8100cfe:	fab2 f682 	clz	r6, r2
 8100d02:	b14e      	cbz	r6, 8100d18 <__udivmoddi4+0x30>
 8100d04:	f1c6 0320 	rsb	r3, r6, #32
 8100d08:	fa01 f806 	lsl.w	r8, r1, r6
 8100d0c:	fa20 f303 	lsr.w	r3, r0, r3
 8100d10:	40b7      	lsls	r7, r6
 8100d12:	ea43 0808 	orr.w	r8, r3, r8
 8100d16:	40b4      	lsls	r4, r6
 8100d18:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8100d1c:	fa1f fc87 	uxth.w	ip, r7
 8100d20:	fbb8 f1fe 	udiv	r1, r8, lr
 8100d24:	0c23      	lsrs	r3, r4, #16
 8100d26:	fb0e 8811 	mls	r8, lr, r1, r8
 8100d2a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8100d2e:	fb01 f20c 	mul.w	r2, r1, ip
 8100d32:	429a      	cmp	r2, r3
 8100d34:	d909      	bls.n	8100d4a <__udivmoddi4+0x62>
 8100d36:	18fb      	adds	r3, r7, r3
 8100d38:	f101 30ff 	add.w	r0, r1, #4294967295
 8100d3c:	f080 80ea 	bcs.w	8100f14 <__udivmoddi4+0x22c>
 8100d40:	429a      	cmp	r2, r3
 8100d42:	f240 80e7 	bls.w	8100f14 <__udivmoddi4+0x22c>
 8100d46:	3902      	subs	r1, #2
 8100d48:	443b      	add	r3, r7
 8100d4a:	1a9a      	subs	r2, r3, r2
 8100d4c:	b2a3      	uxth	r3, r4
 8100d4e:	fbb2 f0fe 	udiv	r0, r2, lr
 8100d52:	fb0e 2210 	mls	r2, lr, r0, r2
 8100d56:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8100d5a:	fb00 fc0c 	mul.w	ip, r0, ip
 8100d5e:	459c      	cmp	ip, r3
 8100d60:	d909      	bls.n	8100d76 <__udivmoddi4+0x8e>
 8100d62:	18fb      	adds	r3, r7, r3
 8100d64:	f100 32ff 	add.w	r2, r0, #4294967295
 8100d68:	f080 80d6 	bcs.w	8100f18 <__udivmoddi4+0x230>
 8100d6c:	459c      	cmp	ip, r3
 8100d6e:	f240 80d3 	bls.w	8100f18 <__udivmoddi4+0x230>
 8100d72:	443b      	add	r3, r7
 8100d74:	3802      	subs	r0, #2
 8100d76:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8100d7a:	eba3 030c 	sub.w	r3, r3, ip
 8100d7e:	2100      	movs	r1, #0
 8100d80:	b11d      	cbz	r5, 8100d8a <__udivmoddi4+0xa2>
 8100d82:	40f3      	lsrs	r3, r6
 8100d84:	2200      	movs	r2, #0
 8100d86:	e9c5 3200 	strd	r3, r2, [r5]
 8100d8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8100d8e:	428b      	cmp	r3, r1
 8100d90:	d905      	bls.n	8100d9e <__udivmoddi4+0xb6>
 8100d92:	b10d      	cbz	r5, 8100d98 <__udivmoddi4+0xb0>
 8100d94:	e9c5 0100 	strd	r0, r1, [r5]
 8100d98:	2100      	movs	r1, #0
 8100d9a:	4608      	mov	r0, r1
 8100d9c:	e7f5      	b.n	8100d8a <__udivmoddi4+0xa2>
 8100d9e:	fab3 f183 	clz	r1, r3
 8100da2:	2900      	cmp	r1, #0
 8100da4:	d146      	bne.n	8100e34 <__udivmoddi4+0x14c>
 8100da6:	4573      	cmp	r3, lr
 8100da8:	d302      	bcc.n	8100db0 <__udivmoddi4+0xc8>
 8100daa:	4282      	cmp	r2, r0
 8100dac:	f200 8105 	bhi.w	8100fba <__udivmoddi4+0x2d2>
 8100db0:	1a84      	subs	r4, r0, r2
 8100db2:	eb6e 0203 	sbc.w	r2, lr, r3
 8100db6:	2001      	movs	r0, #1
 8100db8:	4690      	mov	r8, r2
 8100dba:	2d00      	cmp	r5, #0
 8100dbc:	d0e5      	beq.n	8100d8a <__udivmoddi4+0xa2>
 8100dbe:	e9c5 4800 	strd	r4, r8, [r5]
 8100dc2:	e7e2      	b.n	8100d8a <__udivmoddi4+0xa2>
 8100dc4:	2a00      	cmp	r2, #0
 8100dc6:	f000 8090 	beq.w	8100eea <__udivmoddi4+0x202>
 8100dca:	fab2 f682 	clz	r6, r2
 8100dce:	2e00      	cmp	r6, #0
 8100dd0:	f040 80a4 	bne.w	8100f1c <__udivmoddi4+0x234>
 8100dd4:	1a8a      	subs	r2, r1, r2
 8100dd6:	0c03      	lsrs	r3, r0, #16
 8100dd8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8100ddc:	b280      	uxth	r0, r0
 8100dde:	b2bc      	uxth	r4, r7
 8100de0:	2101      	movs	r1, #1
 8100de2:	fbb2 fcfe 	udiv	ip, r2, lr
 8100de6:	fb0e 221c 	mls	r2, lr, ip, r2
 8100dea:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8100dee:	fb04 f20c 	mul.w	r2, r4, ip
 8100df2:	429a      	cmp	r2, r3
 8100df4:	d907      	bls.n	8100e06 <__udivmoddi4+0x11e>
 8100df6:	18fb      	adds	r3, r7, r3
 8100df8:	f10c 38ff 	add.w	r8, ip, #4294967295
 8100dfc:	d202      	bcs.n	8100e04 <__udivmoddi4+0x11c>
 8100dfe:	429a      	cmp	r2, r3
 8100e00:	f200 80e0 	bhi.w	8100fc4 <__udivmoddi4+0x2dc>
 8100e04:	46c4      	mov	ip, r8
 8100e06:	1a9b      	subs	r3, r3, r2
 8100e08:	fbb3 f2fe 	udiv	r2, r3, lr
 8100e0c:	fb0e 3312 	mls	r3, lr, r2, r3
 8100e10:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8100e14:	fb02 f404 	mul.w	r4, r2, r4
 8100e18:	429c      	cmp	r4, r3
 8100e1a:	d907      	bls.n	8100e2c <__udivmoddi4+0x144>
 8100e1c:	18fb      	adds	r3, r7, r3
 8100e1e:	f102 30ff 	add.w	r0, r2, #4294967295
 8100e22:	d202      	bcs.n	8100e2a <__udivmoddi4+0x142>
 8100e24:	429c      	cmp	r4, r3
 8100e26:	f200 80ca 	bhi.w	8100fbe <__udivmoddi4+0x2d6>
 8100e2a:	4602      	mov	r2, r0
 8100e2c:	1b1b      	subs	r3, r3, r4
 8100e2e:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8100e32:	e7a5      	b.n	8100d80 <__udivmoddi4+0x98>
 8100e34:	f1c1 0620 	rsb	r6, r1, #32
 8100e38:	408b      	lsls	r3, r1
 8100e3a:	fa22 f706 	lsr.w	r7, r2, r6
 8100e3e:	431f      	orrs	r7, r3
 8100e40:	fa0e f401 	lsl.w	r4, lr, r1
 8100e44:	fa20 f306 	lsr.w	r3, r0, r6
 8100e48:	fa2e fe06 	lsr.w	lr, lr, r6
 8100e4c:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8100e50:	4323      	orrs	r3, r4
 8100e52:	fa00 f801 	lsl.w	r8, r0, r1
 8100e56:	fa1f fc87 	uxth.w	ip, r7
 8100e5a:	fbbe f0f9 	udiv	r0, lr, r9
 8100e5e:	0c1c      	lsrs	r4, r3, #16
 8100e60:	fb09 ee10 	mls	lr, r9, r0, lr
 8100e64:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8100e68:	fb00 fe0c 	mul.w	lr, r0, ip
 8100e6c:	45a6      	cmp	lr, r4
 8100e6e:	fa02 f201 	lsl.w	r2, r2, r1
 8100e72:	d909      	bls.n	8100e88 <__udivmoddi4+0x1a0>
 8100e74:	193c      	adds	r4, r7, r4
 8100e76:	f100 3aff 	add.w	sl, r0, #4294967295
 8100e7a:	f080 809c 	bcs.w	8100fb6 <__udivmoddi4+0x2ce>
 8100e7e:	45a6      	cmp	lr, r4
 8100e80:	f240 8099 	bls.w	8100fb6 <__udivmoddi4+0x2ce>
 8100e84:	3802      	subs	r0, #2
 8100e86:	443c      	add	r4, r7
 8100e88:	eba4 040e 	sub.w	r4, r4, lr
 8100e8c:	fa1f fe83 	uxth.w	lr, r3
 8100e90:	fbb4 f3f9 	udiv	r3, r4, r9
 8100e94:	fb09 4413 	mls	r4, r9, r3, r4
 8100e98:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8100e9c:	fb03 fc0c 	mul.w	ip, r3, ip
 8100ea0:	45a4      	cmp	ip, r4
 8100ea2:	d908      	bls.n	8100eb6 <__udivmoddi4+0x1ce>
 8100ea4:	193c      	adds	r4, r7, r4
 8100ea6:	f103 3eff 	add.w	lr, r3, #4294967295
 8100eaa:	f080 8082 	bcs.w	8100fb2 <__udivmoddi4+0x2ca>
 8100eae:	45a4      	cmp	ip, r4
 8100eb0:	d97f      	bls.n	8100fb2 <__udivmoddi4+0x2ca>
 8100eb2:	3b02      	subs	r3, #2
 8100eb4:	443c      	add	r4, r7
 8100eb6:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8100eba:	eba4 040c 	sub.w	r4, r4, ip
 8100ebe:	fba0 ec02 	umull	lr, ip, r0, r2
 8100ec2:	4564      	cmp	r4, ip
 8100ec4:	4673      	mov	r3, lr
 8100ec6:	46e1      	mov	r9, ip
 8100ec8:	d362      	bcc.n	8100f90 <__udivmoddi4+0x2a8>
 8100eca:	d05f      	beq.n	8100f8c <__udivmoddi4+0x2a4>
 8100ecc:	b15d      	cbz	r5, 8100ee6 <__udivmoddi4+0x1fe>
 8100ece:	ebb8 0203 	subs.w	r2, r8, r3
 8100ed2:	eb64 0409 	sbc.w	r4, r4, r9
 8100ed6:	fa04 f606 	lsl.w	r6, r4, r6
 8100eda:	fa22 f301 	lsr.w	r3, r2, r1
 8100ede:	431e      	orrs	r6, r3
 8100ee0:	40cc      	lsrs	r4, r1
 8100ee2:	e9c5 6400 	strd	r6, r4, [r5]
 8100ee6:	2100      	movs	r1, #0
 8100ee8:	e74f      	b.n	8100d8a <__udivmoddi4+0xa2>
 8100eea:	fbb1 fcf2 	udiv	ip, r1, r2
 8100eee:	0c01      	lsrs	r1, r0, #16
 8100ef0:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8100ef4:	b280      	uxth	r0, r0
 8100ef6:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8100efa:	463b      	mov	r3, r7
 8100efc:	4638      	mov	r0, r7
 8100efe:	463c      	mov	r4, r7
 8100f00:	46b8      	mov	r8, r7
 8100f02:	46be      	mov	lr, r7
 8100f04:	2620      	movs	r6, #32
 8100f06:	fbb1 f1f7 	udiv	r1, r1, r7
 8100f0a:	eba2 0208 	sub.w	r2, r2, r8
 8100f0e:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8100f12:	e766      	b.n	8100de2 <__udivmoddi4+0xfa>
 8100f14:	4601      	mov	r1, r0
 8100f16:	e718      	b.n	8100d4a <__udivmoddi4+0x62>
 8100f18:	4610      	mov	r0, r2
 8100f1a:	e72c      	b.n	8100d76 <__udivmoddi4+0x8e>
 8100f1c:	f1c6 0220 	rsb	r2, r6, #32
 8100f20:	fa2e f302 	lsr.w	r3, lr, r2
 8100f24:	40b7      	lsls	r7, r6
 8100f26:	40b1      	lsls	r1, r6
 8100f28:	fa20 f202 	lsr.w	r2, r0, r2
 8100f2c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8100f30:	430a      	orrs	r2, r1
 8100f32:	fbb3 f8fe 	udiv	r8, r3, lr
 8100f36:	b2bc      	uxth	r4, r7
 8100f38:	fb0e 3318 	mls	r3, lr, r8, r3
 8100f3c:	0c11      	lsrs	r1, r2, #16
 8100f3e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8100f42:	fb08 f904 	mul.w	r9, r8, r4
 8100f46:	40b0      	lsls	r0, r6
 8100f48:	4589      	cmp	r9, r1
 8100f4a:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8100f4e:	b280      	uxth	r0, r0
 8100f50:	d93e      	bls.n	8100fd0 <__udivmoddi4+0x2e8>
 8100f52:	1879      	adds	r1, r7, r1
 8100f54:	f108 3cff 	add.w	ip, r8, #4294967295
 8100f58:	d201      	bcs.n	8100f5e <__udivmoddi4+0x276>
 8100f5a:	4589      	cmp	r9, r1
 8100f5c:	d81f      	bhi.n	8100f9e <__udivmoddi4+0x2b6>
 8100f5e:	eba1 0109 	sub.w	r1, r1, r9
 8100f62:	fbb1 f9fe 	udiv	r9, r1, lr
 8100f66:	fb09 f804 	mul.w	r8, r9, r4
 8100f6a:	fb0e 1119 	mls	r1, lr, r9, r1
 8100f6e:	b292      	uxth	r2, r2
 8100f70:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8100f74:	4542      	cmp	r2, r8
 8100f76:	d229      	bcs.n	8100fcc <__udivmoddi4+0x2e4>
 8100f78:	18ba      	adds	r2, r7, r2
 8100f7a:	f109 31ff 	add.w	r1, r9, #4294967295
 8100f7e:	d2c4      	bcs.n	8100f0a <__udivmoddi4+0x222>
 8100f80:	4542      	cmp	r2, r8
 8100f82:	d2c2      	bcs.n	8100f0a <__udivmoddi4+0x222>
 8100f84:	f1a9 0102 	sub.w	r1, r9, #2
 8100f88:	443a      	add	r2, r7
 8100f8a:	e7be      	b.n	8100f0a <__udivmoddi4+0x222>
 8100f8c:	45f0      	cmp	r8, lr
 8100f8e:	d29d      	bcs.n	8100ecc <__udivmoddi4+0x1e4>
 8100f90:	ebbe 0302 	subs.w	r3, lr, r2
 8100f94:	eb6c 0c07 	sbc.w	ip, ip, r7
 8100f98:	3801      	subs	r0, #1
 8100f9a:	46e1      	mov	r9, ip
 8100f9c:	e796      	b.n	8100ecc <__udivmoddi4+0x1e4>
 8100f9e:	eba7 0909 	sub.w	r9, r7, r9
 8100fa2:	4449      	add	r1, r9
 8100fa4:	f1a8 0c02 	sub.w	ip, r8, #2
 8100fa8:	fbb1 f9fe 	udiv	r9, r1, lr
 8100fac:	fb09 f804 	mul.w	r8, r9, r4
 8100fb0:	e7db      	b.n	8100f6a <__udivmoddi4+0x282>
 8100fb2:	4673      	mov	r3, lr
 8100fb4:	e77f      	b.n	8100eb6 <__udivmoddi4+0x1ce>
 8100fb6:	4650      	mov	r0, sl
 8100fb8:	e766      	b.n	8100e88 <__udivmoddi4+0x1a0>
 8100fba:	4608      	mov	r0, r1
 8100fbc:	e6fd      	b.n	8100dba <__udivmoddi4+0xd2>
 8100fbe:	443b      	add	r3, r7
 8100fc0:	3a02      	subs	r2, #2
 8100fc2:	e733      	b.n	8100e2c <__udivmoddi4+0x144>
 8100fc4:	f1ac 0c02 	sub.w	ip, ip, #2
 8100fc8:	443b      	add	r3, r7
 8100fca:	e71c      	b.n	8100e06 <__udivmoddi4+0x11e>
 8100fcc:	4649      	mov	r1, r9
 8100fce:	e79c      	b.n	8100f0a <__udivmoddi4+0x222>
 8100fd0:	eba1 0109 	sub.w	r1, r1, r9
 8100fd4:	46c4      	mov	ip, r8
 8100fd6:	fbb1 f9fe 	udiv	r9, r1, lr
 8100fda:	fb09 f804 	mul.w	r8, r9, r4
 8100fde:	e7c4      	b.n	8100f6a <__udivmoddi4+0x282>

08100fe0 <__aeabi_idiv0>:
 8100fe0:	4770      	bx	lr
 8100fe2:	bf00      	nop

08100fe4 <SystemInit>:
 8100fe4:	b480      	push	{r7}
 8100fe6:	af00      	add	r7, sp, #0
 8100fe8:	4b09      	ldr	r3, [pc, #36]	@ (8101010 <SystemInit+0x2c>)
 8100fea:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8100fee:	4a08      	ldr	r2, [pc, #32]	@ (8101010 <SystemInit+0x2c>)
 8100ff0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8100ff4:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8100ff8:	4b05      	ldr	r3, [pc, #20]	@ (8101010 <SystemInit+0x2c>)
 8100ffa:	691b      	ldr	r3, [r3, #16]
 8100ffc:	4a04      	ldr	r2, [pc, #16]	@ (8101010 <SystemInit+0x2c>)
 8100ffe:	f043 0310 	orr.w	r3, r3, #16
 8101002:	6113      	str	r3, [r2, #16]
 8101004:	bf00      	nop
 8101006:	46bd      	mov	sp, r7
 8101008:	f85d 7b04 	ldr.w	r7, [sp], #4
 810100c:	4770      	bx	lr
 810100e:	bf00      	nop
 8101010:	e000ed00 	.word	0xe000ed00

08101014 <ExitRun0Mode>:
 8101014:	b480      	push	{r7}
 8101016:	af00      	add	r7, sp, #0
 8101018:	4b09      	ldr	r3, [pc, #36]	@ (8101040 <ExitRun0Mode+0x2c>)
 810101a:	68db      	ldr	r3, [r3, #12]
 810101c:	4a08      	ldr	r2, [pc, #32]	@ (8101040 <ExitRun0Mode+0x2c>)
 810101e:	f023 0302 	bic.w	r3, r3, #2
 8101022:	60d3      	str	r3, [r2, #12]
 8101024:	bf00      	nop
 8101026:	4b06      	ldr	r3, [pc, #24]	@ (8101040 <ExitRun0Mode+0x2c>)
 8101028:	685b      	ldr	r3, [r3, #4]
 810102a:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 810102e:	2b00      	cmp	r3, #0
 8101030:	d0f9      	beq.n	8101026 <ExitRun0Mode+0x12>
 8101032:	bf00      	nop
 8101034:	bf00      	nop
 8101036:	46bd      	mov	sp, r7
 8101038:	f85d 7b04 	ldr.w	r7, [sp], #4
 810103c:	4770      	bx	lr
 810103e:	bf00      	nop
 8101040:	58024800 	.word	0x58024800

08101044 <_ZSt16__deque_buf_sizej>:
#define _GLIBCXX_DEQUE_BUF_SIZE 512
#endif

  _GLIBCXX_CONSTEXPR inline size_t
  __deque_buf_size(size_t __size)
  { return (__size < _GLIBCXX_DEQUE_BUF_SIZE
 8101044:	b480      	push	{r7}
 8101046:	b083      	sub	sp, #12
 8101048:	af00      	add	r7, sp, #0
 810104a:	6078      	str	r0, [r7, #4]
	    ? size_t(_GLIBCXX_DEQUE_BUF_SIZE / __size) : size_t(1)); }
 810104c:	687b      	ldr	r3, [r7, #4]
 810104e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8101052:	d205      	bcs.n	8101060 <_ZSt16__deque_buf_sizej+0x1c>
 8101054:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8101058:	687b      	ldr	r3, [r7, #4]
 810105a:	fbb2 f3f3 	udiv	r3, r2, r3
 810105e:	e000      	b.n	8101062 <_ZSt16__deque_buf_sizej+0x1e>
 8101060:	2301      	movs	r3, #1
 8101062:	4618      	mov	r0, r3
 8101064:	370c      	adds	r7, #12
 8101066:	46bd      	mov	sp, r7
 8101068:	f85d 7b04 	ldr.w	r7, [sp], #4
 810106c:	4770      	bx	lr

0810106e <_ZNSt5dequeIhSaIhEEC1Ev>:

      /**
       *  @brief  Creates a %deque with no elements.
       */
#if __cplusplus >= 201103L
      deque() = default;
 810106e:	b580      	push	{r7, lr}
 8101070:	b082      	sub	sp, #8
 8101072:	af00      	add	r7, sp, #0
 8101074:	6078      	str	r0, [r7, #4]
 8101076:	687b      	ldr	r3, [r7, #4]
 8101078:	4618      	mov	r0, r3
 810107a:	f000 fada 	bl	8101632 <_ZNSt11_Deque_baseIhSaIhEEC1Ev>
 810107e:	687b      	ldr	r3, [r7, #4]
 8101080:	4618      	mov	r0, r3
 8101082:	3708      	adds	r7, #8
 8101084:	46bd      	mov	sp, r7
 8101086:	bd80      	pop	{r7, pc}

08101088 <_ZN6ClientC1EP20__UART_HandleTypeDef>:
#include "task.h"
#include "DayCam.hpp"  // Include the actual DayCam class
#include "LRX20A.hpp"


Client::Client(UART_HandleTypeDef* huart)
 8101088:	b580      	push	{r7, lr}
 810108a:	b082      	sub	sp, #8
 810108c:	af00      	add	r7, sp, #0
 810108e:	6078      	str	r0, [r7, #4]
 8101090:	6039      	str	r1, [r7, #0]
    : UartEndpoint(huart) {}
 8101092:	687b      	ldr	r3, [r7, #4]
 8101094:	6839      	ldr	r1, [r7, #0]
 8101096:	4618      	mov	r0, r3
 8101098:	f002 f836 	bl	8103108 <_ZN12UartEndpointC1EP20__UART_HandleTypeDef>
 810109c:	4a16      	ldr	r2, [pc, #88]	@ (81010f8 <_ZN6ClientC1EP20__UART_HandleTypeDef+0x70>)
 810109e:	687b      	ldr	r3, [r7, #4]
 81010a0:	601a      	str	r2, [r3, #0]
 81010a2:	687b      	ldr	r3, [r7, #4]
 81010a4:	2200      	movs	r2, #0
 81010a6:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 81010aa:	687b      	ldr	r3, [r7, #4]
 81010ac:	333c      	adds	r3, #60	@ 0x3c
 81010ae:	4618      	mov	r0, r3
 81010b0:	f7ff ffdd 	bl	810106e <_ZNSt5dequeIhSaIhEEC1Ev>
 81010b4:	687b      	ldr	r3, [r7, #4]
 81010b6:	3364      	adds	r3, #100	@ 0x64
 81010b8:	4618      	mov	r0, r3
 81010ba:	f003 fc2c 	bl	8104916 <_ZN4comm7MessageC1Ev>
 81010be:	687b      	ldr	r3, [r7, #4]
 81010c0:	2200      	movs	r2, #0
 81010c2:	f8c3 217c 	str.w	r2, [r3, #380]	@ 0x17c
 81010c6:	687b      	ldr	r3, [r7, #4]
 81010c8:	2200      	movs	r2, #0
 81010ca:	f8c3 2180 	str.w	r2, [r3, #384]	@ 0x180
 81010ce:	687b      	ldr	r3, [r7, #4]
 81010d0:	2200      	movs	r2, #0
 81010d2:	f8c3 2184 	str.w	r2, [r3, #388]	@ 0x184
 81010d6:	687b      	ldr	r3, [r7, #4]
 81010d8:	2200      	movs	r2, #0
 81010da:	f8c3 2188 	str.w	r2, [r3, #392]	@ 0x188
 81010de:	687b      	ldr	r3, [r7, #4]
 81010e0:	2200      	movs	r2, #0
 81010e2:	f8c3 218c 	str.w	r2, [r3, #396]	@ 0x18c
 81010e6:	687b      	ldr	r3, [r7, #4]
 81010e8:	2200      	movs	r2, #0
 81010ea:	f8c3 2190 	str.w	r2, [r3, #400]	@ 0x190
 81010ee:	687b      	ldr	r3, [r7, #4]
 81010f0:	4618      	mov	r0, r3
 81010f2:	3708      	adds	r7, #8
 81010f4:	46bd      	mov	sp, r7
 81010f6:	bd80      	pop	{r7, pc}
 81010f8:	08111828 	.word	0x08111828

081010fc <_ZN6Client4InitEv>:


void Client::Init() {
 81010fc:	b580      	push	{r7, lr}
 81010fe:	b082      	sub	sp, #8
 8101100:	af00      	add	r7, sp, #0
 8101102:	6078      	str	r0, [r7, #4]
//    static uint8_t byte;



    if (!StartReceive(&byte_, 1)) {
 8101104:	6878      	ldr	r0, [r7, #4]
 8101106:	687b      	ldr	r3, [r7, #4]
 8101108:	3339      	adds	r3, #57	@ 0x39
 810110a:	2201      	movs	r2, #1
 810110c:	4619      	mov	r1, r3
 810110e:	f002 f81d 	bl	810314c <_ZN12UartEndpoint12StartReceiveEPhj>
 8101112:	4603      	mov	r3, r0
 8101114:	f083 0301 	eor.w	r3, r3, #1
 8101118:	b2db      	uxtb	r3, r3
 810111a:	2b00      	cmp	r3, #0
 810111c:	d003      	beq.n	8101126 <_ZN6Client4InitEv+0x2a>
        printf("StartReceive failed\n");
 810111e:	4807      	ldr	r0, [pc, #28]	@ (810113c <_ZN6Client4InitEv+0x40>)
 8101120:	f00e fab2 	bl	810f688 <puts>
    }
    else {
    	printf("StartReceive success\n");
        rxState_ = RxState::Ready;
    }
}
 8101124:	e006      	b.n	8101134 <_ZN6Client4InitEv+0x38>
    	printf("StartReceive success\n");
 8101126:	4806      	ldr	r0, [pc, #24]	@ (8101140 <_ZN6Client4InitEv+0x44>)
 8101128:	f00e faae 	bl	810f688 <puts>
        rxState_ = RxState::Ready;
 810112c:	687b      	ldr	r3, [r7, #4]
 810112e:	2201      	movs	r2, #1
 8101130:	f8c3 2190 	str.w	r2, [r3, #400]	@ 0x190
}
 8101134:	bf00      	nop
 8101136:	3708      	adds	r7, #8
 8101138:	46bd      	mov	sp, r7
 810113a:	bd80      	pop	{r7, pc}
 810113c:	08111568 	.word	0x08111568
 8101140:	0811157c 	.word	0x0811157c

08101144 <_ZN6Client13onReceiveByteEh>:



void Client::onReceiveByte(uint8_t byte) {
 8101144:	b580      	push	{r7, lr}
 8101146:	b084      	sub	sp, #16
 8101148:	af00      	add	r7, sp, #0
 810114a:	6078      	str	r0, [r7, #4]
 810114c:	460b      	mov	r3, r1
 810114e:	70fb      	strb	r3, [r7, #3]
	const TickType_t now = xTaskGetTickCount();
 8101150:	f00c fa36 	bl	810d5c0 <xTaskGetTickCount>
 8101154:	60f8      	str	r0, [r7, #12]

	switch (rxState_)
 8101156:	687b      	ldr	r3, [r7, #4]
 8101158:	f8d3 3190 	ldr.w	r3, [r3, #400]	@ 0x190
 810115c:	2b03      	cmp	r3, #3
 810115e:	d07f      	beq.n	8101260 <_ZN6Client13onReceiveByteEh+0x11c>
 8101160:	2b03      	cmp	r3, #3
 8101162:	f300 8082 	bgt.w	810126a <_ZN6Client13onReceiveByteEh+0x126>
 8101166:	2b01      	cmp	r3, #1
 8101168:	d002      	beq.n	8101170 <_ZN6Client13onReceiveByteEh+0x2c>
 810116a:	2b02      	cmp	r3, #2
 810116c:	d014      	beq.n	8101198 <_ZN6Client13onReceiveByteEh+0x54>

	// Ignore all incoming data
	break;
	}

}
 810116e:	e07c      	b.n	810126a <_ZN6Client13onReceiveByteEh+0x126>
        if (byte == 0xAA) { // Assume HEADER
 8101170:	78fb      	ldrb	r3, [r7, #3]
 8101172:	2baa      	cmp	r3, #170	@ 0xaa
 8101174:	d176      	bne.n	8101264 <_ZN6Client13onReceiveByteEh+0x120>
            buffer_[0] = byte;
 8101176:	687b      	ldr	r3, [r7, #4]
 8101178:	78fa      	ldrb	r2, [r7, #3]
 810117a:	f883 207c 	strb.w	r2, [r3, #124]	@ 0x7c
            bufferIndex_ = 1;
 810117e:	687b      	ldr	r3, [r7, #4]
 8101180:	2201      	movs	r2, #1
 8101182:	f8c3 217c 	str.w	r2, [r3, #380]	@ 0x17c
            firstByteTick_ = now;
 8101186:	687b      	ldr	r3, [r7, #4]
 8101188:	68fa      	ldr	r2, [r7, #12]
 810118a:	f8c3 2180 	str.w	r2, [r3, #384]	@ 0x180
            rxState_ = RxState::Receiving;
 810118e:	687b      	ldr	r3, [r7, #4]
 8101190:	2202      	movs	r2, #2
 8101192:	f8c3 2190 	str.w	r2, [r3, #400]	@ 0x190
     break;
 8101196:	e065      	b.n	8101264 <_ZN6Client13onReceiveByteEh+0x120>
		if ((now - firstByteTick_) > pdMS_TO_TICKS(500)) {
 8101198:	687b      	ldr	r3, [r7, #4]
 810119a:	f8d3 3180 	ldr.w	r3, [r3, #384]	@ 0x180
 810119e:	68fa      	ldr	r2, [r7, #12]
 81011a0:	1ad3      	subs	r3, r2, r3
 81011a2:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 81011a6:	d906      	bls.n	81011b6 <_ZN6Client13onReceiveByteEh+0x72>
			resetReception();  // Clear buffer, reset flags
 81011a8:	6878      	ldr	r0, [r7, #4]
 81011aa:	f000 f865 	bl	8101278 <_ZN6Client14resetReceptionEv>
			printf("Timeout/r/n");
 81011ae:	4831      	ldr	r0, [pc, #196]	@ (8101274 <_ZN6Client13onReceiveByteEh+0x130>)
 81011b0:	f00e f9fa 	bl	810f5a8 <iprintf>
			break;
 81011b4:	e059      	b.n	810126a <_ZN6Client13onReceiveByteEh+0x126>
    if (bufferIndex_ < sizeof(buffer_)) {
 81011b6:	687b      	ldr	r3, [r7, #4]
 81011b8:	f8d3 317c 	ldr.w	r3, [r3, #380]	@ 0x17c
 81011bc:	2bff      	cmp	r3, #255	@ 0xff
 81011be:	d811      	bhi.n	81011e4 <_ZN6Client13onReceiveByteEh+0xa0>
        buffer_[bufferIndex_++] = byte;
 81011c0:	687b      	ldr	r3, [r7, #4]
 81011c2:	f8d3 317c 	ldr.w	r3, [r3, #380]	@ 0x17c
 81011c6:	1c59      	adds	r1, r3, #1
 81011c8:	687a      	ldr	r2, [r7, #4]
 81011ca:	f8c2 117c 	str.w	r1, [r2, #380]	@ 0x17c
 81011ce:	687a      	ldr	r2, [r7, #4]
 81011d0:	4413      	add	r3, r2
 81011d2:	78fa      	ldrb	r2, [r7, #3]
 81011d4:	f883 207c 	strb.w	r2, [r3, #124]	@ 0x7c
    if (bufferIndex_ == 6) {
 81011d8:	687b      	ldr	r3, [r7, #4]
 81011da:	f8d3 317c 	ldr.w	r3, [r3, #380]	@ 0x17c
 81011de:	2b06      	cmp	r3, #6
 81011e0:	d10c      	bne.n	81011fc <_ZN6Client13onReceiveByteEh+0xb8>
 81011e2:	e003      	b.n	81011ec <_ZN6Client13onReceiveByteEh+0xa8>
        resetReception();
 81011e4:	6878      	ldr	r0, [r7, #4]
 81011e6:	f000 f847 	bl	8101278 <_ZN6Client14resetReceptionEv>
        break;
 81011ea:	e03e      	b.n	810126a <_ZN6Client13onReceiveByteEh+0x126>
        expectedLength_ = 6 + buffer_[5] + 2; // 6 header+meta + payload + CRC+FOOTER
 81011ec:	687b      	ldr	r3, [r7, #4]
 81011ee:	f893 3081 	ldrb.w	r3, [r3, #129]	@ 0x81
 81011f2:	3308      	adds	r3, #8
 81011f4:	461a      	mov	r2, r3
 81011f6:	687b      	ldr	r3, [r7, #4]
 81011f8:	f8c3 2184 	str.w	r2, [r3, #388]	@ 0x184
    if (bufferIndex_ >= 6 && bufferIndex_ == expectedLength_) {
 81011fc:	687b      	ldr	r3, [r7, #4]
 81011fe:	f8d3 317c 	ldr.w	r3, [r3, #380]	@ 0x17c
 8101202:	2b05      	cmp	r3, #5
 8101204:	d930      	bls.n	8101268 <_ZN6Client13onReceiveByteEh+0x124>
 8101206:	687b      	ldr	r3, [r7, #4]
 8101208:	f8d3 217c 	ldr.w	r2, [r3, #380]	@ 0x17c
 810120c:	687b      	ldr	r3, [r7, #4]
 810120e:	f8d3 3184 	ldr.w	r3, [r3, #388]	@ 0x184
 8101212:	429a      	cmp	r2, r3
 8101214:	d128      	bne.n	8101268 <_ZN6Client13onReceiveByteEh+0x124>
        if (buffer_[expectedLength_-1] == 0x55) { // FOOTER
 8101216:	687b      	ldr	r3, [r7, #4]
 8101218:	f8d3 3184 	ldr.w	r3, [r3, #388]	@ 0x184
 810121c:	3b01      	subs	r3, #1
 810121e:	687a      	ldr	r2, [r7, #4]
 8101220:	4413      	add	r3, r2
 8101222:	f893 307c 	ldrb.w	r3, [r3, #124]	@ 0x7c
 8101226:	2b55      	cmp	r3, #85	@ 0x55
 8101228:	d116      	bne.n	8101258 <_ZN6Client13onReceiveByteEh+0x114>
            if (verifyCRC(buffer_, expectedLength_)) {
 810122a:	687b      	ldr	r3, [r7, #4]
 810122c:	f103 017c 	add.w	r1, r3, #124	@ 0x7c
 8101230:	687b      	ldr	r3, [r7, #4]
 8101232:	f8d3 3184 	ldr.w	r3, [r3, #388]	@ 0x184
 8101236:	461a      	mov	r2, r3
 8101238:	6878      	ldr	r0, [r7, #4]
 810123a:	f000 f9b9 	bl	81015b0 <_ZN6Client9verifyCRCEPhj>
 810123e:	4603      	mov	r3, r0
 8101240:	2b00      	cmp	r3, #0
 8101242:	d009      	beq.n	8101258 <_ZN6Client13onReceiveByteEh+0x114>
                parseAndProcess(buffer_, expectedLength_);
 8101244:	687b      	ldr	r3, [r7, #4]
 8101246:	f103 017c 	add.w	r1, r3, #124	@ 0x7c
 810124a:	687b      	ldr	r3, [r7, #4]
 810124c:	f8d3 3184 	ldr.w	r3, [r3, #388]	@ 0x184
 8101250:	461a      	mov	r2, r3
 8101252:	6878      	ldr	r0, [r7, #4]
 8101254:	f000 f854 	bl	8101300 <_ZN6Client15parseAndProcessEPhj>
        resetReception();
 8101258:	6878      	ldr	r0, [r7, #4]
 810125a:	f000 f80d 	bl	8101278 <_ZN6Client14resetReceptionEv>
    break;
 810125e:	e003      	b.n	8101268 <_ZN6Client13onReceiveByteEh+0x124>
	break;
 8101260:	bf00      	nop
 8101262:	e002      	b.n	810126a <_ZN6Client13onReceiveByteEh+0x126>
     break;
 8101264:	bf00      	nop
 8101266:	e000      	b.n	810126a <_ZN6Client13onReceiveByteEh+0x126>
    break;
 8101268:	bf00      	nop
}
 810126a:	bf00      	nop
 810126c:	3710      	adds	r7, #16
 810126e:	46bd      	mov	sp, r7
 8101270:	bd80      	pop	{r7, pc}
 8101272:	bf00      	nop
 8101274:	08111594 	.word	0x08111594

08101278 <_ZN6Client14resetReceptionEv>:

void Client::resetReception() {
 8101278:	b480      	push	{r7}
 810127a:	b083      	sub	sp, #12
 810127c:	af00      	add	r7, sp, #0
 810127e:	6078      	str	r0, [r7, #4]
    bufferIndex_ = 0;
 8101280:	687b      	ldr	r3, [r7, #4]
 8101282:	2200      	movs	r2, #0
 8101284:	f8c3 217c 	str.w	r2, [r3, #380]	@ 0x17c
    receiving_ = false;
 8101288:	687b      	ldr	r3, [r7, #4]
 810128a:	2200      	movs	r2, #0
 810128c:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
    rxState_ = RxState::Ready;
 8101290:	687b      	ldr	r3, [r7, #4]
 8101292:	2201      	movs	r2, #1
 8101294:	f8c3 2190 	str.w	r2, [r3, #400]	@ 0x190
    firstByteTick_ = 0;
 8101298:	687b      	ldr	r3, [r7, #4]
 810129a:	2200      	movs	r2, #0
 810129c:	f8c3 2180 	str.w	r2, [r3, #384]	@ 0x180
}
 81012a0:	bf00      	nop
 81012a2:	370c      	adds	r7, #12
 81012a4:	46bd      	mov	sp, r7
 81012a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 81012aa:	4770      	bx	lr

081012ac <_ZN6Client15processIncomingEv>:

void Client::processIncoming() {
 81012ac:	b580      	push	{r7, lr}
 81012ae:	b084      	sub	sp, #16
 81012b0:	af00      	add	r7, sp, #0
 81012b2:	6078      	str	r0, [r7, #4]
    // Example logic (depending on your architecture)
    while (!rxQueue_.empty()) {
 81012b4:	e013      	b.n	81012de <_ZN6Client15processIncomingEv+0x32>
        auto msg = rxQueue_.front();
 81012b6:	687b      	ldr	r3, [r7, #4]
 81012b8:	3310      	adds	r3, #16
 81012ba:	4618      	mov	r0, r3
 81012bc:	f000 f9dc 	bl	8101678 <_ZNSt5dequeIhSaIhEE5frontEv>
 81012c0:	4603      	mov	r3, r0
 81012c2:	781b      	ldrb	r3, [r3, #0]
 81012c4:	73fb      	strb	r3, [r7, #15]
        rxQueue_.pop_front();
 81012c6:	687b      	ldr	r3, [r7, #4]
 81012c8:	3310      	adds	r3, #16
 81012ca:	4618      	mov	r0, r3
 81012cc:	f000 f9e8 	bl	81016a0 <_ZNSt5dequeIhSaIhEE9pop_frontEv>
        parseAndProcess(reinterpret_cast<uint8_t*>(&msg), sizeof(comm::Message));
 81012d0:	f107 030f 	add.w	r3, r7, #15
 81012d4:	2218      	movs	r2, #24
 81012d6:	4619      	mov	r1, r3
 81012d8:	6878      	ldr	r0, [r7, #4]
 81012da:	f000 f811 	bl	8101300 <_ZN6Client15parseAndProcessEPhj>
    while (!rxQueue_.empty()) {
 81012de:	687b      	ldr	r3, [r7, #4]
 81012e0:	3310      	adds	r3, #16
 81012e2:	4618      	mov	r0, r3
 81012e4:	f000 f9b6 	bl	8101654 <_ZNKSt5dequeIhSaIhEE5emptyEv>
 81012e8:	4603      	mov	r3, r0
 81012ea:	f083 0301 	eor.w	r3, r3, #1
 81012ee:	b2db      	uxtb	r3, r3
 81012f0:	2b00      	cmp	r3, #0
 81012f2:	d1e0      	bne.n	81012b6 <_ZN6Client15processIncomingEv+0xa>
    }
}
 81012f4:	bf00      	nop
 81012f6:	bf00      	nop
 81012f8:	3710      	adds	r7, #16
 81012fa:	46bd      	mov	sp, r7
 81012fc:	bd80      	pop	{r7, pc}
	...

08101300 <_ZN6Client15parseAndProcessEPhj>:

void Client::parseAndProcess(uint8_t* msg, size_t len) {
 8101300:	b580      	push	{r7, lr}
 8101302:	b088      	sub	sp, #32
 8101304:	af00      	add	r7, sp, #0
 8101306:	60f8      	str	r0, [r7, #12]
 8101308:	60b9      	str	r1, [r7, #8]
 810130a:	607a      	str	r2, [r7, #4]
 //   uint8_t srcID = msg[1];
//    uint8_t destID = msg[2];
    uint8_t opCode = msg[3];
 810130c:	68bb      	ldr	r3, [r7, #8]
 810130e:	78db      	ldrb	r3, [r3, #3]
 8101310:	77fb      	strb	r3, [r7, #31]
//    uint8_t addr   = msg[4];
    uint8_t length = msg[5];
 8101312:	68bb      	ldr	r3, [r7, #8]
 8101314:	795b      	ldrb	r3, [r3, #5]
 8101316:	77bb      	strb	r3, [r7, #30]
    uint8_t* payload = &msg[6];
 8101318:	68bb      	ldr	r3, [r7, #8]
 810131a:	3306      	adds	r3, #6
 810131c:	61bb      	str	r3, [r7, #24]

    // You can now switch based on opCode, etc.
    switch (opCode) {
 810131e:	7ffb      	ldrb	r3, [r7, #31]
 8101320:	3b01      	subs	r3, #1
 8101322:	2b54      	cmp	r3, #84	@ 0x54
 8101324:	f200 8132 	bhi.w	810158c <_ZN6Client15parseAndProcessEPhj+0x28c>
 8101328:	a201      	add	r2, pc, #4	@ (adr r2, 8101330 <_ZN6Client15parseAndProcessEPhj+0x30>)
 810132a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 810132e:	bf00      	nop
 8101330:	08101485 	.word	0x08101485
 8101334:	0810149f 	.word	0x0810149f
 8101338:	081014b7 	.word	0x081014b7
 810133c:	081014e7 	.word	0x081014e7
 8101340:	081014f5 	.word	0x081014f5
 8101344:	0810150d 	.word	0x0810150d
 8101348:	08101525 	.word	0x08101525
 810134c:	08101555 	.word	0x08101555
 8101350:	0810158d 	.word	0x0810158d
 8101354:	0810158d 	.word	0x0810158d
 8101358:	0810158d 	.word	0x0810158d
 810135c:	0810158d 	.word	0x0810158d
 8101360:	0810158d 	.word	0x0810158d
 8101364:	0810158d 	.word	0x0810158d
 8101368:	0810158d 	.word	0x0810158d
 810136c:	0810158d 	.word	0x0810158d
 8101370:	0810158d 	.word	0x0810158d
 8101374:	0810158d 	.word	0x0810158d
 8101378:	0810158d 	.word	0x0810158d
 810137c:	0810158d 	.word	0x0810158d
 8101380:	0810158d 	.word	0x0810158d
 8101384:	0810158d 	.word	0x0810158d
 8101388:	0810158d 	.word	0x0810158d
 810138c:	0810158d 	.word	0x0810158d
 8101390:	0810158d 	.word	0x0810158d
 8101394:	0810158d 	.word	0x0810158d
 8101398:	0810158d 	.word	0x0810158d
 810139c:	0810158d 	.word	0x0810158d
 81013a0:	0810158d 	.word	0x0810158d
 81013a4:	0810158d 	.word	0x0810158d
 81013a8:	0810158d 	.word	0x0810158d
 81013ac:	0810158d 	.word	0x0810158d
 81013b0:	0810158d 	.word	0x0810158d
 81013b4:	0810158d 	.word	0x0810158d
 81013b8:	0810158d 	.word	0x0810158d
 81013bc:	0810158d 	.word	0x0810158d
 81013c0:	0810158d 	.word	0x0810158d
 81013c4:	0810158d 	.word	0x0810158d
 81013c8:	0810158d 	.word	0x0810158d
 81013cc:	0810158d 	.word	0x0810158d
 81013d0:	0810158d 	.word	0x0810158d
 81013d4:	0810158d 	.word	0x0810158d
 81013d8:	0810158d 	.word	0x0810158d
 81013dc:	0810158d 	.word	0x0810158d
 81013e0:	0810158d 	.word	0x0810158d
 81013e4:	0810158d 	.word	0x0810158d
 81013e8:	0810158d 	.word	0x0810158d
 81013ec:	0810158d 	.word	0x0810158d
 81013f0:	0810158d 	.word	0x0810158d
 81013f4:	0810158d 	.word	0x0810158d
 81013f8:	0810158d 	.word	0x0810158d
 81013fc:	0810158d 	.word	0x0810158d
 8101400:	0810158d 	.word	0x0810158d
 8101404:	0810158d 	.word	0x0810158d
 8101408:	0810158d 	.word	0x0810158d
 810140c:	0810158d 	.word	0x0810158d
 8101410:	0810158d 	.word	0x0810158d
 8101414:	0810158d 	.word	0x0810158d
 8101418:	0810158d 	.word	0x0810158d
 810141c:	0810158d 	.word	0x0810158d
 8101420:	0810158d 	.word	0x0810158d
 8101424:	0810158d 	.word	0x0810158d
 8101428:	0810158d 	.word	0x0810158d
 810142c:	0810158d 	.word	0x0810158d
 8101430:	0810158d 	.word	0x0810158d
 8101434:	0810158d 	.word	0x0810158d
 8101438:	0810158d 	.word	0x0810158d
 810143c:	0810158d 	.word	0x0810158d
 8101440:	0810158d 	.word	0x0810158d
 8101444:	0810158d 	.word	0x0810158d
 8101448:	0810158d 	.word	0x0810158d
 810144c:	0810158d 	.word	0x0810158d
 8101450:	0810158d 	.word	0x0810158d
 8101454:	0810158d 	.word	0x0810158d
 8101458:	0810158d 	.word	0x0810158d
 810145c:	0810158d 	.word	0x0810158d
 8101460:	0810158d 	.word	0x0810158d
 8101464:	0810158d 	.word	0x0810158d
 8101468:	0810158d 	.word	0x0810158d
 810146c:	0810158d 	.word	0x0810158d
 8101470:	0810158d 	.word	0x0810158d
 8101474:	0810158d 	.word	0x0810158d
 8101478:	08101563 	.word	0x08101563
 810147c:	08101571 	.word	0x08101571
 8101480:	0810157f 	.word	0x0810157f
        case 0x01:
        	//dayCam_->SendCommand(dayCam_->zoom_teleVar, sizeof(dayCam_->zoom_teleVar));
        	if (payload != nullptr)
 8101484:	69bb      	ldr	r3, [r7, #24]
 8101486:	2b00      	cmp	r3, #0
 8101488:	f000 8082 	beq.w	8101590 <_ZN6Client15parseAndProcessEPhj+0x290>
        		dayCam_->handleZoomIn(payload, length);
 810148c:	68fb      	ldr	r3, [r7, #12]
 810148e:	f8d3 3188 	ldr.w	r3, [r3, #392]	@ 0x188
 8101492:	7fba      	ldrb	r2, [r7, #30]
 8101494:	69b9      	ldr	r1, [r7, #24]
 8101496:	4618      	mov	r0, r3
 8101498:	f000 fd9e 	bl	8101fd8 <_ZN6DayCam12handleZoomInEPhh>
            break;
 810149c:	e078      	b.n	8101590 <_ZN6Client15parseAndProcessEPhj+0x290>
        case 0x02:
        	if (payload != nullptr)
 810149e:	69bb      	ldr	r3, [r7, #24]
 81014a0:	2b00      	cmp	r3, #0
 81014a2:	d077      	beq.n	8101594 <_ZN6Client15parseAndProcessEPhj+0x294>
        		dayCam_->handleZoomOut(payload, length);
 81014a4:	68fb      	ldr	r3, [r7, #12]
 81014a6:	f8d3 3188 	ldr.w	r3, [r3, #392]	@ 0x188
 81014aa:	7fba      	ldrb	r2, [r7, #30]
 81014ac:	69b9      	ldr	r1, [r7, #24]
 81014ae:	4618      	mov	r0, r3
 81014b0:	f000 fdc5 	bl	810203e <_ZN6DayCam13handleZoomOutEPhh>
            break;
 81014b4:	e06e      	b.n	8101594 <_ZN6Client15parseAndProcessEPhj+0x294>
        case 0x03:
        	if (payload != nullptr){
 81014b6:	69bb      	ldr	r3, [r7, #24]
 81014b8:	2b00      	cmp	r3, #0
 81014ba:	d06d      	beq.n	8101598 <_ZN6Client15parseAndProcessEPhj+0x298>
        	    uint16_t position = (static_cast<uint16_t>(payload[0]) << 8) | payload[1];
 81014bc:	69bb      	ldr	r3, [r7, #24]
 81014be:	781b      	ldrb	r3, [r3, #0]
 81014c0:	b21b      	sxth	r3, r3
 81014c2:	021b      	lsls	r3, r3, #8
 81014c4:	b21a      	sxth	r2, r3
 81014c6:	69bb      	ldr	r3, [r7, #24]
 81014c8:	3301      	adds	r3, #1
 81014ca:	781b      	ldrb	r3, [r3, #0]
 81014cc:	b21b      	sxth	r3, r3
 81014ce:	4313      	orrs	r3, r2
 81014d0:	b21b      	sxth	r3, r3
 81014d2:	82bb      	strh	r3, [r7, #20]
        	    dayCam_->handleZoom2Position(position);
 81014d4:	68fb      	ldr	r3, [r7, #12]
 81014d6:	f8d3 3188 	ldr.w	r3, [r3, #392]	@ 0x188
 81014da:	8aba      	ldrh	r2, [r7, #20]
 81014dc:	4611      	mov	r1, r2
 81014de:	4618      	mov	r0, r3
 81014e0:	f000 fde0 	bl	81020a4 <_ZN6DayCam19handleZoom2PositionEt>
        	}
            break;
 81014e4:	e058      	b.n	8101598 <_ZN6Client15parseAndProcessEPhj+0x298>
        case 0x04:
        	dayCam_->handleZoomStop();
 81014e6:	68fb      	ldr	r3, [r7, #12]
 81014e8:	f8d3 3188 	ldr.w	r3, [r3, #392]	@ 0x188
 81014ec:	4618      	mov	r0, r3
 81014ee:	f000 fe1a 	bl	8102126 <_ZN6DayCam14handleZoomStopEv>
			break;
 81014f2:	e058      	b.n	81015a6 <_ZN6Client15parseAndProcessEPhj+0x2a6>
        case 0x05:
        	//dayCam_->SendCommand(dayCam_->zoom_teleVar, sizeof(dayCam_->zoom_teleVar));
        	if (payload != nullptr)
 81014f4:	69bb      	ldr	r3, [r7, #24]
 81014f6:	2b00      	cmp	r3, #0
 81014f8:	d050      	beq.n	810159c <_ZN6Client15parseAndProcessEPhj+0x29c>
        		dayCam_->handleFocusNear(payload, length);
 81014fa:	68fb      	ldr	r3, [r7, #12]
 81014fc:	f8d3 3188 	ldr.w	r3, [r3, #392]	@ 0x188
 8101500:	7fba      	ldrb	r2, [r7, #30]
 8101502:	69b9      	ldr	r1, [r7, #24]
 8101504:	4618      	mov	r0, r3
 8101506:	f000 fe50 	bl	81021aa <_ZN6DayCam15handleFocusNearEPhh>
            break;
 810150a:	e047      	b.n	810159c <_ZN6Client15parseAndProcessEPhj+0x29c>
        case 0x06:
        	if (payload != nullptr)
 810150c:	69bb      	ldr	r3, [r7, #24]
 810150e:	2b00      	cmp	r3, #0
 8101510:	d046      	beq.n	81015a0 <_ZN6Client15parseAndProcessEPhj+0x2a0>
        		dayCam_->handleFocusFar(payload, length);
 8101512:	68fb      	ldr	r3, [r7, #12]
 8101514:	f8d3 3188 	ldr.w	r3, [r3, #392]	@ 0x188
 8101518:	7fba      	ldrb	r2, [r7, #30]
 810151a:	69b9      	ldr	r1, [r7, #24]
 810151c:	4618      	mov	r0, r3
 810151e:	f000 fe11 	bl	8102144 <_ZN6DayCam14handleFocusFarEPhh>
            break;
 8101522:	e03d      	b.n	81015a0 <_ZN6Client15parseAndProcessEPhj+0x2a0>
        case 0x07:
        	if (payload != nullptr){
 8101524:	69bb      	ldr	r3, [r7, #24]
 8101526:	2b00      	cmp	r3, #0
 8101528:	d03c      	beq.n	81015a4 <_ZN6Client15parseAndProcessEPhj+0x2a4>
        	    uint16_t position = (static_cast<uint16_t>(payload[0]) << 8) | payload[1];
 810152a:	69bb      	ldr	r3, [r7, #24]
 810152c:	781b      	ldrb	r3, [r3, #0]
 810152e:	b21b      	sxth	r3, r3
 8101530:	021b      	lsls	r3, r3, #8
 8101532:	b21a      	sxth	r2, r3
 8101534:	69bb      	ldr	r3, [r7, #24]
 8101536:	3301      	adds	r3, #1
 8101538:	781b      	ldrb	r3, [r3, #0]
 810153a:	b21b      	sxth	r3, r3
 810153c:	4313      	orrs	r3, r2
 810153e:	b21b      	sxth	r3, r3
 8101540:	82fb      	strh	r3, [r7, #22]
        	    dayCam_->handleFocus2Position(position);
 8101542:	68fb      	ldr	r3, [r7, #12]
 8101544:	f8d3 3188 	ldr.w	r3, [r3, #392]	@ 0x188
 8101548:	8afa      	ldrh	r2, [r7, #22]
 810154a:	4611      	mov	r1, r2
 810154c:	4618      	mov	r0, r3
 810154e:	f000 fe5f 	bl	8102210 <_ZN6DayCam20handleFocus2PositionEt>
        	}
            break;
 8101552:	e027      	b.n	81015a4 <_ZN6Client15parseAndProcessEPhj+0x2a4>
        case 0x08:
        	dayCam_->handleFocusStop();
 8101554:	68fb      	ldr	r3, [r7, #12]
 8101556:	f8d3 3188 	ldr.w	r3, [r3, #392]	@ 0x188
 810155a:	4618      	mov	r0, r3
 810155c:	f000 fe99 	bl	8102292 <_ZN6DayCam15handleFocusStopEv>
			break;
 8101560:	e021      	b.n	81015a6 <_ZN6Client15parseAndProcessEPhj+0x2a6>
			break;
        case 0x52: //LRF Enable
        	//lrx20A_->RangesDataCommand();
			break;
        case 0x53: //LRF Enable Fire
        	lrx20A_->RangesDataCommand();
 8101562:	68fb      	ldr	r3, [r7, #12]
 8101564:	f8d3 318c 	ldr.w	r3, [r3, #396]	@ 0x18c
 8101568:	4618      	mov	r0, r3
 810156a:	f001 fd27 	bl	8102fbc <_ZN6LRX20A17RangesDataCommandEv>
			break;
 810156e:	e01a      	b.n	81015a6 <_ZN6Client15parseAndProcessEPhj+0x2a6>
        case 0x54: //LRF Set lower limit
        	lrx20A_->SetMinimumRangeCommand();
 8101570:	68fb      	ldr	r3, [r7, #12]
 8101572:	f8d3 318c 	ldr.w	r3, [r3, #396]	@ 0x18c
 8101576:	4618      	mov	r0, r3
 8101578:	f001 fced 	bl	8102f56 <_ZN6LRX20A22SetMinimumRangeCommandEv>
			break;
 810157c:	e013      	b.n	81015a6 <_ZN6Client15parseAndProcessEPhj+0x2a6>
        case 0x55: //LRF Set upper limit
        	lrx20A_->SetMaximumRangeCommand();
 810157e:	68fb      	ldr	r3, [r7, #12]
 8101580:	f8d3 318c 	ldr.w	r3, [r3, #396]	@ 0x18c
 8101584:	4618      	mov	r0, r3
 8101586:	f001 fcff 	bl	8102f88 <_ZN6LRX20A22SetMaximumRangeCommandEv>
			break;
 810158a:	e00c      	b.n	81015a6 <_ZN6Client15parseAndProcessEPhj+0x2a6>


        default:
            break;
 810158c:	bf00      	nop
 810158e:	e00a      	b.n	81015a6 <_ZN6Client15parseAndProcessEPhj+0x2a6>
            break;
 8101590:	bf00      	nop
 8101592:	e008      	b.n	81015a6 <_ZN6Client15parseAndProcessEPhj+0x2a6>
            break;
 8101594:	bf00      	nop
 8101596:	e006      	b.n	81015a6 <_ZN6Client15parseAndProcessEPhj+0x2a6>
            break;
 8101598:	bf00      	nop
 810159a:	e004      	b.n	81015a6 <_ZN6Client15parseAndProcessEPhj+0x2a6>
            break;
 810159c:	bf00      	nop
 810159e:	e002      	b.n	81015a6 <_ZN6Client15parseAndProcessEPhj+0x2a6>
            break;
 81015a0:	bf00      	nop
 81015a2:	e000      	b.n	81015a6 <_ZN6Client15parseAndProcessEPhj+0x2a6>
            break;
 81015a4:	bf00      	nop
    }
}
 81015a6:	bf00      	nop
 81015a8:	3720      	adds	r7, #32
 81015aa:	46bd      	mov	sp, r7
 81015ac:	bd80      	pop	{r7, pc}
 81015ae:	bf00      	nop

081015b0 <_ZN6Client9verifyCRCEPhj>:

bool Client::verifyCRC(uint8_t* msg, size_t len) {
 81015b0:	b480      	push	{r7}
 81015b2:	b089      	sub	sp, #36	@ 0x24
 81015b4:	af00      	add	r7, sp, #0
 81015b6:	60f8      	str	r0, [r7, #12]
 81015b8:	60b9      	str	r1, [r7, #8]
 81015ba:	607a      	str	r2, [r7, #4]
    if (len < 3) return false;  // Must have at least header + CRC + footer
 81015bc:	687b      	ldr	r3, [r7, #4]
 81015be:	2b02      	cmp	r3, #2
 81015c0:	d801      	bhi.n	81015c6 <_ZN6Client9verifyCRCEPhj+0x16>
 81015c2:	2300      	movs	r3, #0
 81015c4:	e020      	b.n	8101608 <_ZN6Client9verifyCRCEPhj+0x58>

    uint8_t crc = 0x00;  // or 0xFF depending on your protocol
 81015c6:	2300      	movs	r3, #0
 81015c8:	77fb      	strb	r3, [r7, #31]
    for (size_t i = 1; i < len - 2; ++i) { // exclude CRC and footer
 81015ca:	2301      	movs	r3, #1
 81015cc:	61bb      	str	r3, [r7, #24]
 81015ce:	e009      	b.n	81015e4 <_ZN6Client9verifyCRCEPhj+0x34>
        crc ^= msg[i];
 81015d0:	68ba      	ldr	r2, [r7, #8]
 81015d2:	69bb      	ldr	r3, [r7, #24]
 81015d4:	4413      	add	r3, r2
 81015d6:	781a      	ldrb	r2, [r3, #0]
 81015d8:	7ffb      	ldrb	r3, [r7, #31]
 81015da:	4053      	eors	r3, r2
 81015dc:	77fb      	strb	r3, [r7, #31]
    for (size_t i = 1; i < len - 2; ++i) { // exclude CRC and footer
 81015de:	69bb      	ldr	r3, [r7, #24]
 81015e0:	3301      	adds	r3, #1
 81015e2:	61bb      	str	r3, [r7, #24]
 81015e4:	687b      	ldr	r3, [r7, #4]
 81015e6:	3b02      	subs	r3, #2
 81015e8:	69ba      	ldr	r2, [r7, #24]
 81015ea:	429a      	cmp	r2, r3
 81015ec:	d3f0      	bcc.n	81015d0 <_ZN6Client9verifyCRCEPhj+0x20>

    }

    uint8_t receivedCRC = msg[len - 2];
 81015ee:	687b      	ldr	r3, [r7, #4]
 81015f0:	3b02      	subs	r3, #2
 81015f2:	68ba      	ldr	r2, [r7, #8]
 81015f4:	4413      	add	r3, r2
 81015f6:	781b      	ldrb	r3, [r3, #0]
 81015f8:	75fb      	strb	r3, [r7, #23]
    return crc == receivedCRC;
 81015fa:	7ffa      	ldrb	r2, [r7, #31]
 81015fc:	7dfb      	ldrb	r3, [r7, #23]
 81015fe:	429a      	cmp	r2, r3
 8101600:	bf0c      	ite	eq
 8101602:	2301      	moveq	r3, #1
 8101604:	2300      	movne	r3, #0
 8101606:	b2db      	uxtb	r3, r3
}
 8101608:	4618      	mov	r0, r3
 810160a:	3724      	adds	r7, #36	@ 0x24
 810160c:	46bd      	mov	sp, r7
 810160e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8101612:	4770      	bx	lr

08101614 <_ZN6Client9setDayCamEP6DayCam>:

void Client::setDayCam(DayCam* cam) {
 8101614:	b480      	push	{r7}
 8101616:	b083      	sub	sp, #12
 8101618:	af00      	add	r7, sp, #0
 810161a:	6078      	str	r0, [r7, #4]
 810161c:	6039      	str	r1, [r7, #0]
    dayCam_ = cam;
 810161e:	687b      	ldr	r3, [r7, #4]
 8101620:	683a      	ldr	r2, [r7, #0]
 8101622:	f8c3 2188 	str.w	r2, [r3, #392]	@ 0x188
}
 8101626:	bf00      	nop
 8101628:	370c      	adds	r7, #12
 810162a:	46bd      	mov	sp, r7
 810162c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8101630:	4770      	bx	lr

08101632 <_ZNSt11_Deque_baseIhSaIhEEC1Ev>:
      _Deque_base()
 8101632:	b580      	push	{r7, lr}
 8101634:	b082      	sub	sp, #8
 8101636:	af00      	add	r7, sp, #0
 8101638:	6078      	str	r0, [r7, #4]
      : _M_impl()
 810163a:	687b      	ldr	r3, [r7, #4]
 810163c:	4618      	mov	r0, r3
 810163e:	f000 f88c 	bl	810175a <_ZNSt11_Deque_baseIhSaIhEE11_Deque_implC1Ev>
      { _M_initialize_map(0); }
 8101642:	2100      	movs	r1, #0
 8101644:	6878      	ldr	r0, [r7, #4]
 8101646:	f000 f899 	bl	810177c <_ZNSt11_Deque_baseIhSaIhEE17_M_initialize_mapEj>
 810164a:	687b      	ldr	r3, [r7, #4]
 810164c:	4618      	mov	r0, r3
 810164e:	3708      	adds	r7, #8
 8101650:	46bd      	mov	sp, r7
 8101652:	bd80      	pop	{r7, pc}

08101654 <_ZNKSt5dequeIhSaIhEE5emptyEv>:
      /**
       *  Returns true if the %deque is empty.  (Thus begin() would
       *  equal end().)
       */
      _GLIBCXX_NODISCARD bool
      empty() const _GLIBCXX_NOEXCEPT
 8101654:	b580      	push	{r7, lr}
 8101656:	b082      	sub	sp, #8
 8101658:	af00      	add	r7, sp, #0
 810165a:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_finish == this->_M_impl._M_start; }
 810165c:	687b      	ldr	r3, [r7, #4]
 810165e:	f103 0218 	add.w	r2, r3, #24
 8101662:	687b      	ldr	r3, [r7, #4]
 8101664:	3308      	adds	r3, #8
 8101666:	4619      	mov	r1, r3
 8101668:	4610      	mov	r0, r2
 810166a:	f000 f8e9 	bl	8101840 <_ZSteqRKSt15_Deque_iteratorIhRhPhES4_>
 810166e:	4603      	mov	r3, r0
 8101670:	4618      	mov	r0, r3
 8101672:	3708      	adds	r7, #8
 8101674:	46bd      	mov	sp, r7
 8101676:	bd80      	pop	{r7, pc}

08101678 <_ZNSt5dequeIhSaIhEE5frontEv>:
       *  Returns a read/write reference to the data at the first
       *  element of the %deque.
       */
      _GLIBCXX_NODISCARD
      reference
      front() _GLIBCXX_NOEXCEPT
 8101678:	b580      	push	{r7, lr}
 810167a:	b086      	sub	sp, #24
 810167c:	af00      	add	r7, sp, #0
 810167e:	6078      	str	r0, [r7, #4]
      {
	__glibcxx_requires_nonempty();
	return *begin();
 8101680:	f107 0308 	add.w	r3, r7, #8
 8101684:	6879      	ldr	r1, [r7, #4]
 8101686:	4618      	mov	r0, r3
 8101688:	f000 f831 	bl	81016ee <_ZNSt5dequeIhSaIhEE5beginEv>
 810168c:	f107 0308 	add.w	r3, r7, #8
 8101690:	4618      	mov	r0, r3
 8101692:	f000 f8e9 	bl	8101868 <_ZNKSt15_Deque_iteratorIhRhPhEdeEv>
 8101696:	4603      	mov	r3, r0
      }
 8101698:	4618      	mov	r0, r3
 810169a:	3718      	adds	r7, #24
 810169c:	46bd      	mov	sp, r7
 810169e:	bd80      	pop	{r7, pc}

081016a0 <_ZNSt5dequeIhSaIhEE9pop_frontEv>:
       *
       *  Note that no data is returned, and if the first element's data is
       *  needed, it should be retrieved before pop_front() is called.
       */
      void
      pop_front() _GLIBCXX_NOEXCEPT
 81016a0:	b580      	push	{r7, lr}
 81016a2:	b086      	sub	sp, #24
 81016a4:	af00      	add	r7, sp, #0
 81016a6:	6078      	str	r0, [r7, #4]
      {
	__glibcxx_requires_nonempty();
	if (this->_M_impl._M_start._M_cur
 81016a8:	687b      	ldr	r3, [r7, #4]
 81016aa:	689a      	ldr	r2, [r3, #8]
	    != this->_M_impl._M_start._M_last - 1)
 81016ac:	687b      	ldr	r3, [r7, #4]
 81016ae:	691b      	ldr	r3, [r3, #16]
 81016b0:	3b01      	subs	r3, #1
	if (this->_M_impl._M_start._M_cur
 81016b2:	429a      	cmp	r2, r3
 81016b4:	d014      	beq.n	81016e0 <_ZNSt5dequeIhSaIhEE9pop_frontEv+0x40>
	  {
	    _Alloc_traits::destroy(_M_get_Tp_allocator(),
 81016b6:	687b      	ldr	r3, [r7, #4]
 81016b8:	4618      	mov	r0, r3
 81016ba:	f000 f827 	bl	810170c <_ZNSt11_Deque_baseIhSaIhEE19_M_get_Tp_allocatorEv>
 81016be:	4602      	mov	r2, r0
 81016c0:	687b      	ldr	r3, [r7, #4]
 81016c2:	689b      	ldr	r3, [r3, #8]
 81016c4:	617a      	str	r2, [r7, #20]
 81016c6:	613b      	str	r3, [r7, #16]
 81016c8:	697b      	ldr	r3, [r7, #20]
 81016ca:	60fb      	str	r3, [r7, #12]
 81016cc:	693b      	ldr	r3, [r7, #16]
 81016ce:	60bb      	str	r3, [r7, #8]
      template<typename _Up>
	__attribute__((__always_inline__))
	void
	destroy(_Up* __p)
	noexcept(std::is_nothrow_destructible<_Up>::value)
	{ __p->~_Up(); }
 81016d0:	bf00      	nop
#if __cplusplus <= 201703L
	  __a.destroy(__p);
#else
	  std::destroy_at(__p);
#endif
	}
 81016d2:	bf00      	nop
				   this->_M_impl._M_start._M_cur);
	    ++this->_M_impl._M_start._M_cur;
 81016d4:	687b      	ldr	r3, [r7, #4]
 81016d6:	689b      	ldr	r3, [r3, #8]
 81016d8:	1c5a      	adds	r2, r3, #1
 81016da:	687b      	ldr	r3, [r7, #4]
 81016dc:	609a      	str	r2, [r3, #8]
	  }
	else
	  _M_pop_front_aux();
      }
 81016de:	e002      	b.n	81016e6 <_ZNSt5dequeIhSaIhEE9pop_frontEv+0x46>
	  _M_pop_front_aux();
 81016e0:	6878      	ldr	r0, [r7, #4]
 81016e2:	f000 f8cd 	bl	8101880 <_ZNSt5dequeIhSaIhEE16_M_pop_front_auxEv>
      }
 81016e6:	bf00      	nop
 81016e8:	3718      	adds	r7, #24
 81016ea:	46bd      	mov	sp, r7
 81016ec:	bd80      	pop	{r7, pc}

081016ee <_ZNSt5dequeIhSaIhEE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 81016ee:	b580      	push	{r7, lr}
 81016f0:	b082      	sub	sp, #8
 81016f2:	af00      	add	r7, sp, #0
 81016f4:	6078      	str	r0, [r7, #4]
 81016f6:	6039      	str	r1, [r7, #0]
      { return this->_M_impl._M_start; }
 81016f8:	683b      	ldr	r3, [r7, #0]
 81016fa:	3308      	adds	r3, #8
 81016fc:	4619      	mov	r1, r3
 81016fe:	6878      	ldr	r0, [r7, #4]
 8101700:	f000 f80f 	bl	8101722 <_ZNSt15_Deque_iteratorIhRhPhEC1ERKS2_>
 8101704:	6878      	ldr	r0, [r7, #4]
 8101706:	3708      	adds	r7, #8
 8101708:	46bd      	mov	sp, r7
 810170a:	bd80      	pop	{r7, pc}

0810170c <_ZNSt11_Deque_baseIhSaIhEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 810170c:	b480      	push	{r7}
 810170e:	b083      	sub	sp, #12
 8101710:	af00      	add	r7, sp, #0
 8101712:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8101714:	687b      	ldr	r3, [r7, #4]
 8101716:	4618      	mov	r0, r3
 8101718:	370c      	adds	r7, #12
 810171a:	46bd      	mov	sp, r7
 810171c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8101720:	4770      	bx	lr

08101722 <_ZNSt15_Deque_iteratorIhRhPhEC1ERKS2_>:
      _Deque_iterator(const _Deque_iterator& __x) noexcept
 8101722:	b480      	push	{r7}
 8101724:	b083      	sub	sp, #12
 8101726:	af00      	add	r7, sp, #0
 8101728:	6078      	str	r0, [r7, #4]
 810172a:	6039      	str	r1, [r7, #0]
       : _M_cur(__x._M_cur), _M_first(__x._M_first),
 810172c:	683b      	ldr	r3, [r7, #0]
 810172e:	681a      	ldr	r2, [r3, #0]
 8101730:	687b      	ldr	r3, [r7, #4]
 8101732:	601a      	str	r2, [r3, #0]
 8101734:	683b      	ldr	r3, [r7, #0]
 8101736:	685a      	ldr	r2, [r3, #4]
 8101738:	687b      	ldr	r3, [r7, #4]
 810173a:	605a      	str	r2, [r3, #4]
	 _M_last(__x._M_last), _M_node(__x._M_node) { }
 810173c:	683b      	ldr	r3, [r7, #0]
 810173e:	689a      	ldr	r2, [r3, #8]
 8101740:	687b      	ldr	r3, [r7, #4]
 8101742:	609a      	str	r2, [r3, #8]
 8101744:	683b      	ldr	r3, [r7, #0]
 8101746:	68da      	ldr	r2, [r3, #12]
 8101748:	687b      	ldr	r3, [r7, #4]
 810174a:	60da      	str	r2, [r3, #12]
 810174c:	687b      	ldr	r3, [r7, #4]
 810174e:	4618      	mov	r0, r3
 8101750:	370c      	adds	r7, #12
 8101752:	46bd      	mov	sp, r7
 8101754:	f85d 7b04 	ldr.w	r7, [sp], #4
 8101758:	4770      	bx	lr

0810175a <_ZNSt11_Deque_baseIhSaIhEE11_Deque_implC1Ev>:
	_Deque_impl() _GLIBCXX_NOEXCEPT_IF(
 810175a:	b580      	push	{r7, lr}
 810175c:	b084      	sub	sp, #16
 810175e:	af00      	add	r7, sp, #0
 8101760:	6078      	str	r0, [r7, #4]
 8101762:	687b      	ldr	r3, [r7, #4]
 8101764:	60fb      	str	r3, [r7, #12]
 8101766:	68fb      	ldr	r3, [r7, #12]
 8101768:	60bb      	str	r3, [r7, #8]
	: _Tp_alloc_type()
 810176a:	687b      	ldr	r3, [r7, #4]
 810176c:	4618      	mov	r0, r3
 810176e:	f000 f8b3 	bl	81018d8 <_ZNSt11_Deque_baseIhSaIhEE16_Deque_impl_dataC1Ev>
	{ }
 8101772:	687b      	ldr	r3, [r7, #4]
 8101774:	4618      	mov	r0, r3
 8101776:	3710      	adds	r7, #16
 8101778:	46bd      	mov	sp, r7
 810177a:	bd80      	pop	{r7, pc}

0810177c <_ZNSt11_Deque_baseIhSaIhEE17_M_initialize_mapEj>:
    _Deque_base<_Tp, _Alloc>::
 810177c:	b590      	push	{r4, r7, lr}
 810177e:	b089      	sub	sp, #36	@ 0x24
 8101780:	af00      	add	r7, sp, #0
 8101782:	6078      	str	r0, [r7, #4]
 8101784:	6039      	str	r1, [r7, #0]
      const size_t __num_nodes = (__num_elements / __deque_buf_size(sizeof(_Tp))
 8101786:	2001      	movs	r0, #1
 8101788:	f7ff fc5c 	bl	8101044 <_ZSt16__deque_buf_sizej>
 810178c:	4602      	mov	r2, r0
 810178e:	683b      	ldr	r3, [r7, #0]
 8101790:	fbb3 f3f2 	udiv	r3, r3, r2
 8101794:	3301      	adds	r3, #1
 8101796:	61fb      	str	r3, [r7, #28]
      this->_M_impl._M_map_size = std::max((size_t) _S_initial_map_size,
 8101798:	2308      	movs	r3, #8
 810179a:	60fb      	str	r3, [r7, #12]
					   size_t(__num_nodes + 2));
 810179c:	69fb      	ldr	r3, [r7, #28]
 810179e:	3302      	adds	r3, #2
 81017a0:	613b      	str	r3, [r7, #16]
      this->_M_impl._M_map_size = std::max((size_t) _S_initial_map_size,
 81017a2:	f107 0210 	add.w	r2, r7, #16
 81017a6:	f107 030c 	add.w	r3, r7, #12
 81017aa:	4611      	mov	r1, r2
 81017ac:	4618      	mov	r0, r3
 81017ae:	f000 f8ac 	bl	810190a <_ZSt3maxIjERKT_S2_S2_>
 81017b2:	4603      	mov	r3, r0
 81017b4:	681a      	ldr	r2, [r3, #0]
 81017b6:	687b      	ldr	r3, [r7, #4]
 81017b8:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_map = _M_allocate_map(this->_M_impl._M_map_size);
 81017ba:	687b      	ldr	r3, [r7, #4]
 81017bc:	685b      	ldr	r3, [r3, #4]
 81017be:	4619      	mov	r1, r3
 81017c0:	6878      	ldr	r0, [r7, #4]
 81017c2:	f000 f8b6 	bl	8101932 <_ZNSt11_Deque_baseIhSaIhEE15_M_allocate_mapEj>
 81017c6:	4602      	mov	r2, r0
 81017c8:	687b      	ldr	r3, [r7, #4]
 81017ca:	601a      	str	r2, [r3, #0]
      _Map_pointer __nstart = (this->_M_impl._M_map
 81017cc:	687b      	ldr	r3, [r7, #4]
 81017ce:	681a      	ldr	r2, [r3, #0]
			       + (this->_M_impl._M_map_size - __num_nodes) / 2);
 81017d0:	687b      	ldr	r3, [r7, #4]
 81017d2:	6859      	ldr	r1, [r3, #4]
 81017d4:	69fb      	ldr	r3, [r7, #28]
 81017d6:	1acb      	subs	r3, r1, r3
 81017d8:	085b      	lsrs	r3, r3, #1
 81017da:	009b      	lsls	r3, r3, #2
      _Map_pointer __nstart = (this->_M_impl._M_map
 81017dc:	4413      	add	r3, r2
 81017de:	61bb      	str	r3, [r7, #24]
      _Map_pointer __nfinish = __nstart + __num_nodes;
 81017e0:	69fb      	ldr	r3, [r7, #28]
 81017e2:	009b      	lsls	r3, r3, #2
 81017e4:	69ba      	ldr	r2, [r7, #24]
 81017e6:	4413      	add	r3, r2
 81017e8:	617b      	str	r3, [r7, #20]
	{ _M_create_nodes(__nstart, __nfinish); }
 81017ea:	697a      	ldr	r2, [r7, #20]
 81017ec:	69b9      	ldr	r1, [r7, #24]
 81017ee:	6878      	ldr	r0, [r7, #4]
 81017f0:	f000 f8c0 	bl	8101974 <_ZNSt11_Deque_baseIhSaIhEE15_M_create_nodesEPPhS3_>
      this->_M_impl._M_start._M_set_node(__nstart);
 81017f4:	687b      	ldr	r3, [r7, #4]
 81017f6:	3308      	adds	r3, #8
 81017f8:	69b9      	ldr	r1, [r7, #24]
 81017fa:	4618      	mov	r0, r3
 81017fc:	f000 f8d5 	bl	81019aa <_ZNSt15_Deque_iteratorIhRhPhE11_M_set_nodeEPS1_>
      this->_M_impl._M_finish._M_set_node(__nfinish - 1);
 8101800:	687b      	ldr	r3, [r7, #4]
 8101802:	f103 0218 	add.w	r2, r3, #24
 8101806:	697b      	ldr	r3, [r7, #20]
 8101808:	3b04      	subs	r3, #4
 810180a:	4619      	mov	r1, r3
 810180c:	4610      	mov	r0, r2
 810180e:	f000 f8cc 	bl	81019aa <_ZNSt15_Deque_iteratorIhRhPhE11_M_set_nodeEPS1_>
      this->_M_impl._M_start._M_cur = _M_impl._M_start._M_first;
 8101812:	687b      	ldr	r3, [r7, #4]
 8101814:	68da      	ldr	r2, [r3, #12]
 8101816:	687b      	ldr	r3, [r7, #4]
 8101818:	609a      	str	r2, [r3, #8]
      this->_M_impl._M_finish._M_cur = (this->_M_impl._M_finish._M_first
 810181a:	687b      	ldr	r3, [r7, #4]
 810181c:	69dc      	ldr	r4, [r3, #28]
					% __deque_buf_size(sizeof(_Tp)));
 810181e:	2001      	movs	r0, #1
 8101820:	f7ff fc10 	bl	8101044 <_ZSt16__deque_buf_sizej>
 8101824:	4602      	mov	r2, r0
 8101826:	683b      	ldr	r3, [r7, #0]
 8101828:	fbb3 f1f2 	udiv	r1, r3, r2
 810182c:	fb01 f202 	mul.w	r2, r1, r2
 8101830:	1a9b      	subs	r3, r3, r2
					+ __num_elements
 8101832:	18e2      	adds	r2, r4, r3
      this->_M_impl._M_finish._M_cur = (this->_M_impl._M_finish._M_first
 8101834:	687b      	ldr	r3, [r7, #4]
 8101836:	619a      	str	r2, [r3, #24]
    }
 8101838:	bf00      	nop
 810183a:	3724      	adds	r7, #36	@ 0x24
 810183c:	46bd      	mov	sp, r7
 810183e:	bd90      	pop	{r4, r7, pc}

08101840 <_ZSteqRKSt15_Deque_iteratorIhRhPhES4_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8101840:	b480      	push	{r7}
 8101842:	b083      	sub	sp, #12
 8101844:	af00      	add	r7, sp, #0
 8101846:	6078      	str	r0, [r7, #4]
 8101848:	6039      	str	r1, [r7, #0]
      { return __x._M_cur == __y._M_cur; }
 810184a:	687b      	ldr	r3, [r7, #4]
 810184c:	681a      	ldr	r2, [r3, #0]
 810184e:	683b      	ldr	r3, [r7, #0]
 8101850:	681b      	ldr	r3, [r3, #0]
 8101852:	429a      	cmp	r2, r3
 8101854:	bf0c      	ite	eq
 8101856:	2301      	moveq	r3, #1
 8101858:	2300      	movne	r3, #0
 810185a:	b2db      	uxtb	r3, r3
 810185c:	4618      	mov	r0, r3
 810185e:	370c      	adds	r7, #12
 8101860:	46bd      	mov	sp, r7
 8101862:	f85d 7b04 	ldr.w	r7, [sp], #4
 8101866:	4770      	bx	lr

08101868 <_ZNKSt15_Deque_iteratorIhRhPhEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8101868:	b480      	push	{r7}
 810186a:	b083      	sub	sp, #12
 810186c:	af00      	add	r7, sp, #0
 810186e:	6078      	str	r0, [r7, #4]
      { return *_M_cur; }
 8101870:	687b      	ldr	r3, [r7, #4]
 8101872:	681b      	ldr	r3, [r3, #0]
 8101874:	4618      	mov	r0, r3
 8101876:	370c      	adds	r7, #12
 8101878:	46bd      	mov	sp, r7
 810187a:	f85d 7b04 	ldr.w	r7, [sp], #4
 810187e:	4770      	bx	lr

08101880 <_ZNSt5dequeIhSaIhEE16_M_pop_front_auxEv>:
  // Note that if the deque has at least one element (a precondition for this
  // member function), and if
  //   _M_impl._M_start._M_cur == _M_impl._M_start._M_last,
  // then the deque must have at least two nodes.
  template <typename _Tp, typename _Alloc>
    void deque<_Tp, _Alloc>::
 8101880:	b580      	push	{r7, lr}
 8101882:	b086      	sub	sp, #24
 8101884:	af00      	add	r7, sp, #0
 8101886:	6078      	str	r0, [r7, #4]
    _M_pop_front_aux()
    {
      _Alloc_traits::destroy(_M_get_Tp_allocator(),
 8101888:	687b      	ldr	r3, [r7, #4]
 810188a:	4618      	mov	r0, r3
 810188c:	f7ff ff3e 	bl	810170c <_ZNSt11_Deque_baseIhSaIhEE19_M_get_Tp_allocatorEv>
 8101890:	4602      	mov	r2, r0
 8101892:	687b      	ldr	r3, [r7, #4]
 8101894:	689b      	ldr	r3, [r3, #8]
 8101896:	617a      	str	r2, [r7, #20]
 8101898:	613b      	str	r3, [r7, #16]
 810189a:	697b      	ldr	r3, [r7, #20]
 810189c:	60fb      	str	r3, [r7, #12]
 810189e:	693b      	ldr	r3, [r7, #16]
 81018a0:	60bb      	str	r3, [r7, #8]
 81018a2:	bf00      	nop
 81018a4:	bf00      	nop
			     this->_M_impl._M_start._M_cur);
      _M_deallocate_node(this->_M_impl._M_start._M_first);
 81018a6:	687a      	ldr	r2, [r7, #4]
 81018a8:	687b      	ldr	r3, [r7, #4]
 81018aa:	68db      	ldr	r3, [r3, #12]
 81018ac:	4619      	mov	r1, r3
 81018ae:	4610      	mov	r0, r2
 81018b0:	f000 f893 	bl	81019da <_ZNSt11_Deque_baseIhSaIhEE18_M_deallocate_nodeEPh>
      this->_M_impl._M_start._M_set_node(this->_M_impl._M_start._M_node + 1);
 81018b4:	687b      	ldr	r3, [r7, #4]
 81018b6:	f103 0208 	add.w	r2, r3, #8
 81018ba:	687b      	ldr	r3, [r7, #4]
 81018bc:	695b      	ldr	r3, [r3, #20]
 81018be:	3304      	adds	r3, #4
 81018c0:	4619      	mov	r1, r3
 81018c2:	4610      	mov	r0, r2
 81018c4:	f000 f871 	bl	81019aa <_ZNSt15_Deque_iteratorIhRhPhE11_M_set_nodeEPS1_>
      this->_M_impl._M_start._M_cur = this->_M_impl._M_start._M_first;
 81018c8:	687b      	ldr	r3, [r7, #4]
 81018ca:	68da      	ldr	r2, [r3, #12]
 81018cc:	687b      	ldr	r3, [r7, #4]
 81018ce:	609a      	str	r2, [r3, #8]
    }
 81018d0:	bf00      	nop
 81018d2:	3718      	adds	r7, #24
 81018d4:	46bd      	mov	sp, r7
 81018d6:	bd80      	pop	{r7, pc}

081018d8 <_ZNSt11_Deque_baseIhSaIhEE16_Deque_impl_dataC1Ev>:
	_Deque_impl_data() _GLIBCXX_NOEXCEPT
 81018d8:	b580      	push	{r7, lr}
 81018da:	b082      	sub	sp, #8
 81018dc:	af00      	add	r7, sp, #0
 81018de:	6078      	str	r0, [r7, #4]
	: _M_map(), _M_map_size(), _M_start(), _M_finish()
 81018e0:	687b      	ldr	r3, [r7, #4]
 81018e2:	2200      	movs	r2, #0
 81018e4:	601a      	str	r2, [r3, #0]
 81018e6:	687b      	ldr	r3, [r7, #4]
 81018e8:	2200      	movs	r2, #0
 81018ea:	605a      	str	r2, [r3, #4]
 81018ec:	687b      	ldr	r3, [r7, #4]
 81018ee:	3308      	adds	r3, #8
 81018f0:	4618      	mov	r0, r3
 81018f2:	f000 f89d 	bl	8101a30 <_ZNSt15_Deque_iteratorIhRhPhEC1Ev>
 81018f6:	687b      	ldr	r3, [r7, #4]
 81018f8:	3318      	adds	r3, #24
 81018fa:	4618      	mov	r0, r3
 81018fc:	f000 f898 	bl	8101a30 <_ZNSt15_Deque_iteratorIhRhPhEC1Ev>
	{ }
 8101900:	687b      	ldr	r3, [r7, #4]
 8101902:	4618      	mov	r0, r3
 8101904:	3708      	adds	r7, #8
 8101906:	46bd      	mov	sp, r7
 8101908:	bd80      	pop	{r7, pc}

0810190a <_ZSt3maxIjERKT_S2_S2_>:
   *  preprocessor macro.
  */
  template<typename _Tp>
    _GLIBCXX14_CONSTEXPR
    inline const _Tp&
    max(const _Tp& __a, const _Tp& __b)
 810190a:	b480      	push	{r7}
 810190c:	b083      	sub	sp, #12
 810190e:	af00      	add	r7, sp, #0
 8101910:	6078      	str	r0, [r7, #4]
 8101912:	6039      	str	r1, [r7, #0]
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return  __a < __b ? __b : __a;
      if (__a < __b)
 8101914:	687b      	ldr	r3, [r7, #4]
 8101916:	681a      	ldr	r2, [r3, #0]
 8101918:	683b      	ldr	r3, [r7, #0]
 810191a:	681b      	ldr	r3, [r3, #0]
 810191c:	429a      	cmp	r2, r3
 810191e:	d201      	bcs.n	8101924 <_ZSt3maxIjERKT_S2_S2_+0x1a>
	return __b;
 8101920:	683b      	ldr	r3, [r7, #0]
 8101922:	e000      	b.n	8101926 <_ZSt3maxIjERKT_S2_S2_+0x1c>
      return __a;
 8101924:	687b      	ldr	r3, [r7, #4]
    }
 8101926:	4618      	mov	r0, r3
 8101928:	370c      	adds	r7, #12
 810192a:	46bd      	mov	sp, r7
 810192c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8101930:	4770      	bx	lr

08101932 <_ZNSt11_Deque_baseIhSaIhEE15_M_allocate_mapEj>:
      _M_allocate_map(size_t __n)
 8101932:	b590      	push	{r4, r7, lr}
 8101934:	b085      	sub	sp, #20
 8101936:	af00      	add	r7, sp, #0
 8101938:	6078      	str	r0, [r7, #4]
 810193a:	6039      	str	r1, [r7, #0]
	_Map_alloc_type __map_alloc = _M_get_map_allocator();
 810193c:	f107 0308 	add.w	r3, r7, #8
 8101940:	6879      	ldr	r1, [r7, #4]
 8101942:	4618      	mov	r0, r3
 8101944:	f000 f861 	bl	8101a0a <_ZNKSt11_Deque_baseIhSaIhEE20_M_get_map_allocatorEv>
 8101948:	683b      	ldr	r3, [r7, #0]
 810194a:	60fb      	str	r3, [r7, #12]
      { return __a.allocate(__n); }
 810194c:	f107 0308 	add.w	r3, r7, #8
 8101950:	2200      	movs	r2, #0
 8101952:	68f9      	ldr	r1, [r7, #12]
 8101954:	4618      	mov	r0, r3
 8101956:	f000 f8b6 	bl	8101ac6 <_ZNSt15__new_allocatorIPhE8allocateEjPKv>
 810195a:	4604      	mov	r4, r0
 810195c:	bf00      	nop
	return _Map_alloc_traits::allocate(__map_alloc, __n);
 810195e:	bf00      	nop

      __attribute__((__always_inline__))
#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
 8101960:	f107 0308 	add.w	r3, r7, #8
 8101964:	4618      	mov	r0, r3
 8101966:	f000 f8a3 	bl	8101ab0 <_ZNSt15__new_allocatorIPhED1Ev>
 810196a:	4623      	mov	r3, r4
      }
 810196c:	4618      	mov	r0, r3
 810196e:	3714      	adds	r7, #20
 8101970:	46bd      	mov	sp, r7
 8101972:	bd90      	pop	{r4, r7, pc}

08101974 <_ZNSt11_Deque_baseIhSaIhEE15_M_create_nodesEPPhS3_>:
    _Deque_base<_Tp, _Alloc>::
 8101974:	b580      	push	{r7, lr}
 8101976:	b086      	sub	sp, #24
 8101978:	af00      	add	r7, sp, #0
 810197a:	60f8      	str	r0, [r7, #12]
 810197c:	60b9      	str	r1, [r7, #8]
 810197e:	607a      	str	r2, [r7, #4]
	  for (__cur = __nstart; __cur < __nfinish; ++__cur)
 8101980:	68bb      	ldr	r3, [r7, #8]
 8101982:	617b      	str	r3, [r7, #20]
 8101984:	e008      	b.n	8101998 <_ZNSt11_Deque_baseIhSaIhEE15_M_create_nodesEPPhS3_+0x24>
	    *__cur = this->_M_allocate_node();
 8101986:	68f8      	ldr	r0, [r7, #12]
 8101988:	f000 f869 	bl	8101a5e <_ZNSt11_Deque_baseIhSaIhEE16_M_allocate_nodeEv>
 810198c:	4602      	mov	r2, r0
 810198e:	697b      	ldr	r3, [r7, #20]
 8101990:	601a      	str	r2, [r3, #0]
	  for (__cur = __nstart; __cur < __nfinish; ++__cur)
 8101992:	697b      	ldr	r3, [r7, #20]
 8101994:	3304      	adds	r3, #4
 8101996:	617b      	str	r3, [r7, #20]
 8101998:	697a      	ldr	r2, [r7, #20]
 810199a:	687b      	ldr	r3, [r7, #4]
 810199c:	429a      	cmp	r2, r3
 810199e:	d3f2      	bcc.n	8101986 <_ZNSt11_Deque_baseIhSaIhEE15_M_create_nodesEPPhS3_+0x12>
    }
 81019a0:	bf00      	nop
 81019a2:	bf00      	nop
 81019a4:	3718      	adds	r7, #24
 81019a6:	46bd      	mov	sp, r7
 81019a8:	bd80      	pop	{r7, pc}

081019aa <_ZNSt15_Deque_iteratorIhRhPhE11_M_set_nodeEPS1_>:
      _M_set_node(_Map_pointer __new_node) _GLIBCXX_NOEXCEPT
 81019aa:	b590      	push	{r4, r7, lr}
 81019ac:	b083      	sub	sp, #12
 81019ae:	af00      	add	r7, sp, #0
 81019b0:	6078      	str	r0, [r7, #4]
 81019b2:	6039      	str	r1, [r7, #0]
	_M_node = __new_node;
 81019b4:	687b      	ldr	r3, [r7, #4]
 81019b6:	683a      	ldr	r2, [r7, #0]
 81019b8:	60da      	str	r2, [r3, #12]
	_M_first = *__new_node;
 81019ba:	683b      	ldr	r3, [r7, #0]
 81019bc:	681a      	ldr	r2, [r3, #0]
 81019be:	687b      	ldr	r3, [r7, #4]
 81019c0:	605a      	str	r2, [r3, #4]
	_M_last = _M_first + difference_type(_S_buffer_size());
 81019c2:	687b      	ldr	r3, [r7, #4]
 81019c4:	685c      	ldr	r4, [r3, #4]
 81019c6:	f000 f860 	bl	8101a8a <_ZNSt15_Deque_iteratorIhRhPhE14_S_buffer_sizeEv>
 81019ca:	4603      	mov	r3, r0
 81019cc:	18e2      	adds	r2, r4, r3
 81019ce:	687b      	ldr	r3, [r7, #4]
 81019d0:	609a      	str	r2, [r3, #8]
      }
 81019d2:	bf00      	nop
 81019d4:	370c      	adds	r7, #12
 81019d6:	46bd      	mov	sp, r7
 81019d8:	bd90      	pop	{r4, r7, pc}

081019da <_ZNSt11_Deque_baseIhSaIhEE18_M_deallocate_nodeEPh>:
      _M_deallocate_node(_Ptr __p) _GLIBCXX_NOEXCEPT
 81019da:	b590      	push	{r4, r7, lr}
 81019dc:	b087      	sub	sp, #28
 81019de:	af00      	add	r7, sp, #0
 81019e0:	6078      	str	r0, [r7, #4]
 81019e2:	6039      	str	r1, [r7, #0]
	_Traits::deallocate(_M_impl, __p, __deque_buf_size(sizeof(_Tp)));
 81019e4:	687c      	ldr	r4, [r7, #4]
 81019e6:	2001      	movs	r0, #1
 81019e8:	f7ff fb2c 	bl	8101044 <_ZSt16__deque_buf_sizej>
 81019ec:	4602      	mov	r2, r0
 81019ee:	617c      	str	r4, [r7, #20]
 81019f0:	683b      	ldr	r3, [r7, #0]
 81019f2:	613b      	str	r3, [r7, #16]
 81019f4:	60fa      	str	r2, [r7, #12]
      { __a.deallocate(__p, __n); }
 81019f6:	68fa      	ldr	r2, [r7, #12]
 81019f8:	6939      	ldr	r1, [r7, #16]
 81019fa:	6978      	ldr	r0, [r7, #20]
 81019fc:	f000 f88c 	bl	8101b18 <_ZNSt15__new_allocatorIhE10deallocateEPhj>
 8101a00:	bf00      	nop
      }
 8101a02:	bf00      	nop
 8101a04:	371c      	adds	r7, #28
 8101a06:	46bd      	mov	sp, r7
 8101a08:	bd90      	pop	{r4, r7, pc}

08101a0a <_ZNKSt11_Deque_baseIhSaIhEE20_M_get_map_allocatorEv>:
      _M_get_map_allocator() const _GLIBCXX_NOEXCEPT
 8101a0a:	b580      	push	{r7, lr}
 8101a0c:	b086      	sub	sp, #24
 8101a0e:	af00      	add	r7, sp, #0
 8101a10:	6078      	str	r0, [r7, #4]
 8101a12:	6039      	str	r1, [r7, #0]
      { return _Map_alloc_type(_M_get_Tp_allocator()); }
 8101a14:	6838      	ldr	r0, [r7, #0]
 8101a16:	f000 f840 	bl	8101a9a <_ZNKSt11_Deque_baseIhSaIhEE19_M_get_Tp_allocatorEv>
 8101a1a:	4602      	mov	r2, r0
 8101a1c:	687b      	ldr	r3, [r7, #4]
 8101a1e:	617b      	str	r3, [r7, #20]
 8101a20:	613a      	str	r2, [r7, #16]
 8101a22:	697b      	ldr	r3, [r7, #20]
 8101a24:	60fb      	str	r3, [r7, #12]
 8101a26:	bf00      	nop
 8101a28:	6878      	ldr	r0, [r7, #4]
 8101a2a:	3718      	adds	r7, #24
 8101a2c:	46bd      	mov	sp, r7
 8101a2e:	bd80      	pop	{r7, pc}

08101a30 <_ZNSt15_Deque_iteratorIhRhPhEC1Ev>:
      _Deque_iterator() _GLIBCXX_NOEXCEPT
 8101a30:	b480      	push	{r7}
 8101a32:	b083      	sub	sp, #12
 8101a34:	af00      	add	r7, sp, #0
 8101a36:	6078      	str	r0, [r7, #4]
      : _M_cur(), _M_first(), _M_last(), _M_node() { }
 8101a38:	687b      	ldr	r3, [r7, #4]
 8101a3a:	2200      	movs	r2, #0
 8101a3c:	601a      	str	r2, [r3, #0]
 8101a3e:	687b      	ldr	r3, [r7, #4]
 8101a40:	2200      	movs	r2, #0
 8101a42:	605a      	str	r2, [r3, #4]
 8101a44:	687b      	ldr	r3, [r7, #4]
 8101a46:	2200      	movs	r2, #0
 8101a48:	609a      	str	r2, [r3, #8]
 8101a4a:	687b      	ldr	r3, [r7, #4]
 8101a4c:	2200      	movs	r2, #0
 8101a4e:	60da      	str	r2, [r3, #12]
 8101a50:	687b      	ldr	r3, [r7, #4]
 8101a52:	4618      	mov	r0, r3
 8101a54:	370c      	adds	r7, #12
 8101a56:	46bd      	mov	sp, r7
 8101a58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8101a5c:	4770      	bx	lr

08101a5e <_ZNSt11_Deque_baseIhSaIhEE16_M_allocate_nodeEv>:
      _M_allocate_node()
 8101a5e:	b590      	push	{r4, r7, lr}
 8101a60:	b085      	sub	sp, #20
 8101a62:	af00      	add	r7, sp, #0
 8101a64:	6078      	str	r0, [r7, #4]
	return _Traits::allocate(_M_impl, __deque_buf_size(sizeof(_Tp)));
 8101a66:	687c      	ldr	r4, [r7, #4]
 8101a68:	2001      	movs	r0, #1
 8101a6a:	f7ff faeb 	bl	8101044 <_ZSt16__deque_buf_sizej>
 8101a6e:	4603      	mov	r3, r0
 8101a70:	60fc      	str	r4, [r7, #12]
 8101a72:	60bb      	str	r3, [r7, #8]
      { return __a.allocate(__n); }
 8101a74:	2200      	movs	r2, #0
 8101a76:	68b9      	ldr	r1, [r7, #8]
 8101a78:	68f8      	ldr	r0, [r7, #12]
 8101a7a:	f000 f85b 	bl	8101b34 <_ZNSt15__new_allocatorIhE8allocateEjPKv>
 8101a7e:	4603      	mov	r3, r0
 8101a80:	bf00      	nop
      }
 8101a82:	4618      	mov	r0, r3
 8101a84:	3714      	adds	r7, #20
 8101a86:	46bd      	mov	sp, r7
 8101a88:	bd90      	pop	{r4, r7, pc}

08101a8a <_ZNSt15_Deque_iteratorIhRhPhE14_S_buffer_sizeEv>:
      static size_t _S_buffer_size() _GLIBCXX_NOEXCEPT
 8101a8a:	b580      	push	{r7, lr}
 8101a8c:	af00      	add	r7, sp, #0
      { return __deque_buf_size(sizeof(_Tp)); }
 8101a8e:	2001      	movs	r0, #1
 8101a90:	f7ff fad8 	bl	8101044 <_ZSt16__deque_buf_sizej>
 8101a94:	4603      	mov	r3, r0
 8101a96:	4618      	mov	r0, r3
 8101a98:	bd80      	pop	{r7, pc}

08101a9a <_ZNKSt11_Deque_baseIhSaIhEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 8101a9a:	b480      	push	{r7}
 8101a9c:	b083      	sub	sp, #12
 8101a9e:	af00      	add	r7, sp, #0
 8101aa0:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8101aa2:	687b      	ldr	r3, [r7, #4]
 8101aa4:	4618      	mov	r0, r3
 8101aa6:	370c      	adds	r7, #12
 8101aa8:	46bd      	mov	sp, r7
 8101aaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8101aae:	4770      	bx	lr

08101ab0 <_ZNSt15__new_allocatorIPhED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8101ab0:	b480      	push	{r7}
 8101ab2:	b083      	sub	sp, #12
 8101ab4:	af00      	add	r7, sp, #0
 8101ab6:	6078      	str	r0, [r7, #4]
 8101ab8:	687b      	ldr	r3, [r7, #4]
 8101aba:	4618      	mov	r0, r3
 8101abc:	370c      	adds	r7, #12
 8101abe:	46bd      	mov	sp, r7
 8101ac0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8101ac4:	4770      	bx	lr

08101ac6 <_ZNSt15__new_allocatorIPhE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8101ac6:	b580      	push	{r7, lr}
 8101ac8:	b086      	sub	sp, #24
 8101aca:	af00      	add	r7, sp, #0
 8101acc:	60f8      	str	r0, [r7, #12]
 8101ace:	60b9      	str	r1, [r7, #8]
 8101ad0:	607a      	str	r2, [r7, #4]
 8101ad2:	68fb      	ldr	r3, [r7, #12]
 8101ad4:	617b      	str	r3, [r7, #20]
      __attribute__((__always_inline__))
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8101ad6:	f06f 4260 	mvn.w	r2, #3758096384	@ 0xe0000000
	if (__builtin_expect(__n > this->_M_max_size(), false))
 8101ada:	68bb      	ldr	r3, [r7, #8]
 8101adc:	4293      	cmp	r3, r2
 8101ade:	bf8c      	ite	hi
 8101ae0:	2301      	movhi	r3, #1
 8101ae2:	2300      	movls	r3, #0
 8101ae4:	b2db      	uxtb	r3, r3
 8101ae6:	2b00      	cmp	r3, #0
 8101ae8:	bf14      	ite	ne
 8101aea:	2301      	movne	r3, #1
 8101aec:	2300      	moveq	r3, #0
 8101aee:	b2db      	uxtb	r3, r3
 8101af0:	2b00      	cmp	r3, #0
 8101af2:	d007      	beq.n	8101b04 <_ZNSt15__new_allocatorIPhE8allocateEjPKv+0x3e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
 8101af4:	68bb      	ldr	r3, [r7, #8]
 8101af6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8101afa:	d301      	bcc.n	8101b00 <_ZNSt15__new_allocatorIPhE8allocateEjPKv+0x3a>
	      std::__throw_bad_array_new_length();
 8101afc:	f00c ff66 	bl	810e9cc <_ZSt28__throw_bad_array_new_lengthv>
	    std::__throw_bad_alloc();
 8101b00:	f00c ff61 	bl	810e9c6 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
 8101b04:	68bb      	ldr	r3, [r7, #8]
 8101b06:	009b      	lsls	r3, r3, #2
 8101b08:	4618      	mov	r0, r3
 8101b0a:	f00c fe8d 	bl	810e828 <_Znwj>
 8101b0e:	4603      	mov	r3, r0
      }
 8101b10:	4618      	mov	r0, r3
 8101b12:	3718      	adds	r7, #24
 8101b14:	46bd      	mov	sp, r7
 8101b16:	bd80      	pop	{r7, pc}

08101b18 <_ZNSt15__new_allocatorIhE10deallocateEPhj>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
 8101b18:	b580      	push	{r7, lr}
 8101b1a:	b084      	sub	sp, #16
 8101b1c:	af00      	add	r7, sp, #0
 8101b1e:	60f8      	str	r0, [r7, #12]
 8101b20:	60b9      	str	r1, [r7, #8]
 8101b22:	607a      	str	r2, [r7, #4]
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
 8101b24:	6879      	ldr	r1, [r7, #4]
 8101b26:	68b8      	ldr	r0, [r7, #8]
 8101b28:	f00c fe7c 	bl	810e824 <_ZdlPvj>
      }
 8101b2c:	bf00      	nop
 8101b2e:	3710      	adds	r7, #16
 8101b30:	46bd      	mov	sp, r7
 8101b32:	bd80      	pop	{r7, pc}

08101b34 <_ZNSt15__new_allocatorIhE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8101b34:	b580      	push	{r7, lr}
 8101b36:	b086      	sub	sp, #24
 8101b38:	af00      	add	r7, sp, #0
 8101b3a:	60f8      	str	r0, [r7, #12]
 8101b3c:	60b9      	str	r1, [r7, #8]
 8101b3e:	607a      	str	r2, [r7, #4]
 8101b40:	68fb      	ldr	r3, [r7, #12]
 8101b42:	617b      	str	r3, [r7, #20]
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8101b44:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
	if (__builtin_expect(__n > this->_M_max_size(), false))
 8101b48:	68bb      	ldr	r3, [r7, #8]
 8101b4a:	4293      	cmp	r3, r2
 8101b4c:	bf8c      	ite	hi
 8101b4e:	2301      	movhi	r3, #1
 8101b50:	2300      	movls	r3, #0
 8101b52:	b2db      	uxtb	r3, r3
 8101b54:	2b00      	cmp	r3, #0
 8101b56:	bf14      	ite	ne
 8101b58:	2301      	movne	r3, #1
 8101b5a:	2300      	moveq	r3, #0
 8101b5c:	b2db      	uxtb	r3, r3
 8101b5e:	2b00      	cmp	r3, #0
 8101b60:	d001      	beq.n	8101b66 <_ZNSt15__new_allocatorIhE8allocateEjPKv+0x32>
	    std::__throw_bad_alloc();
 8101b62:	f00c ff30 	bl	810e9c6 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
 8101b66:	68b8      	ldr	r0, [r7, #8]
 8101b68:	f00c fe5e 	bl	810e828 <_Znwj>
 8101b6c:	4603      	mov	r3, r0
      }
 8101b6e:	4618      	mov	r0, r3
 8101b70:	3718      	adds	r7, #24
 8101b72:	46bd      	mov	sp, r7
 8101b74:	bd80      	pop	{r7, pc}
	...

08101b78 <_ZN6DayCamC1EP20__UART_HandleTypeDef>:
#include <cstdio>
#include <iostream>
#include <cstring>
#include <queue>

DayCam::DayCam(UART_HandleTypeDef* huart)
 8101b78:	b580      	push	{r7, lr}
 8101b7a:	b082      	sub	sp, #8
 8101b7c:	af00      	add	r7, sp, #0
 8101b7e:	6078      	str	r0, [r7, #4]
 8101b80:	6039      	str	r1, [r7, #0]
    : UartEndpoint(huart) {}
 8101b82:	687b      	ldr	r3, [r7, #4]
 8101b84:	6839      	ldr	r1, [r7, #0]
 8101b86:	4618      	mov	r0, r3
 8101b88:	f001 fabe 	bl	8103108 <_ZN12UartEndpointC1EP20__UART_HandleTypeDef>
 8101b8c:	4a6e      	ldr	r2, [pc, #440]	@ (8101d48 <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x1d0>)
 8101b8e:	687b      	ldr	r3, [r7, #4]
 8101b90:	601a      	str	r2, [r3, #0]
 8101b92:	687b      	ldr	r3, [r7, #4]
 8101b94:	4a6d      	ldr	r2, [pc, #436]	@ (8101d4c <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x1d4>)
 8101b96:	3379      	adds	r3, #121	@ 0x79
 8101b98:	6810      	ldr	r0, [r2, #0]
 8101b9a:	6018      	str	r0, [r3, #0]
 8101b9c:	687b      	ldr	r3, [r7, #4]
 8101b9e:	4a6c      	ldr	r2, [pc, #432]	@ (8101d50 <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x1d8>)
 8101ba0:	337d      	adds	r3, #125	@ 0x7d
 8101ba2:	6810      	ldr	r0, [r2, #0]
 8101ba4:	6018      	str	r0, [r3, #0]
 8101ba6:	7912      	ldrb	r2, [r2, #4]
 8101ba8:	711a      	strb	r2, [r3, #4]
 8101baa:	687b      	ldr	r3, [r7, #4]
 8101bac:	4a69      	ldr	r2, [pc, #420]	@ (8101d54 <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x1dc>)
 8101bae:	3382      	adds	r3, #130	@ 0x82
 8101bb0:	8811      	ldrh	r1, [r2, #0]
 8101bb2:	7892      	ldrb	r2, [r2, #2]
 8101bb4:	8019      	strh	r1, [r3, #0]
 8101bb6:	709a      	strb	r2, [r3, #2]
 8101bb8:	687b      	ldr	r3, [r7, #4]
 8101bba:	22fa      	movs	r2, #250	@ 0xfa
 8101bbc:	f8a3 2086 	strh.w	r2, [r3, #134]	@ 0x86
 8101bc0:	687b      	ldr	r3, [r7, #4]
 8101bc2:	4a65      	ldr	r2, [pc, #404]	@ (8101d58 <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x1e0>)
 8101bc4:	3388      	adds	r3, #136	@ 0x88
 8101bc6:	e892 0003 	ldmia.w	r2, {r0, r1}
 8101bca:	6018      	str	r0, [r3, #0]
 8101bcc:	3304      	adds	r3, #4
 8101bce:	8019      	strh	r1, [r3, #0]
 8101bd0:	687b      	ldr	r3, [r7, #4]
 8101bd2:	4a62      	ldr	r2, [pc, #392]	@ (8101d5c <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x1e4>)
 8101bd4:	338e      	adds	r3, #142	@ 0x8e
 8101bd6:	6810      	ldr	r0, [r2, #0]
 8101bd8:	6018      	str	r0, [r3, #0]
 8101bda:	8892      	ldrh	r2, [r2, #4]
 8101bdc:	809a      	strh	r2, [r3, #4]
 8101bde:	687b      	ldr	r3, [r7, #4]
 8101be0:	4a5f      	ldr	r2, [pc, #380]	@ (8101d60 <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x1e8>)
 8101be2:	3394      	adds	r3, #148	@ 0x94
 8101be4:	e892 0003 	ldmia.w	r2, {r0, r1}
 8101be8:	6018      	str	r0, [r3, #0]
 8101bea:	3304      	adds	r3, #4
 8101bec:	8019      	strh	r1, [r3, #0]
 8101bee:	687b      	ldr	r3, [r7, #4]
 8101bf0:	4a5c      	ldr	r2, [pc, #368]	@ (8101d64 <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x1ec>)
 8101bf2:	339a      	adds	r3, #154	@ 0x9a
 8101bf4:	6810      	ldr	r0, [r2, #0]
 8101bf6:	6018      	str	r0, [r3, #0]
 8101bf8:	8892      	ldrh	r2, [r2, #4]
 8101bfa:	809a      	strh	r2, [r3, #4]
 8101bfc:	687b      	ldr	r3, [r7, #4]
 8101bfe:	4a5a      	ldr	r2, [pc, #360]	@ (8101d68 <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x1f0>)
 8101c00:	33a0      	adds	r3, #160	@ 0xa0
 8101c02:	e892 0003 	ldmia.w	r2, {r0, r1}
 8101c06:	6018      	str	r0, [r3, #0]
 8101c08:	3304      	adds	r3, #4
 8101c0a:	8019      	strh	r1, [r3, #0]
 8101c0c:	687b      	ldr	r3, [r7, #4]
 8101c0e:	4957      	ldr	r1, [pc, #348]	@ (8101d6c <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x1f4>)
 8101c10:	f103 02a6 	add.w	r2, r3, #166	@ 0xa6
 8101c14:	460b      	mov	r3, r1
 8101c16:	cb03      	ldmia	r3!, {r0, r1}
 8101c18:	6010      	str	r0, [r2, #0]
 8101c1a:	6051      	str	r1, [r2, #4]
 8101c1c:	781b      	ldrb	r3, [r3, #0]
 8101c1e:	7213      	strb	r3, [r2, #8]
 8101c20:	687b      	ldr	r3, [r7, #4]
 8101c22:	4a53      	ldr	r2, [pc, #332]	@ (8101d70 <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x1f8>)
 8101c24:	33af      	adds	r3, #175	@ 0xaf
 8101c26:	6810      	ldr	r0, [r2, #0]
 8101c28:	6018      	str	r0, [r3, #0]
 8101c2a:	8892      	ldrh	r2, [r2, #4]
 8101c2c:	809a      	strh	r2, [r3, #4]
 8101c2e:	687b      	ldr	r3, [r7, #4]
 8101c30:	4a49      	ldr	r2, [pc, #292]	@ (8101d58 <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x1e0>)
 8101c32:	33b5      	adds	r3, #181	@ 0xb5
 8101c34:	6810      	ldr	r0, [r2, #0]
 8101c36:	6018      	str	r0, [r3, #0]
 8101c38:	8892      	ldrh	r2, [r2, #4]
 8101c3a:	809a      	strh	r2, [r3, #4]
 8101c3c:	687b      	ldr	r3, [r7, #4]
 8101c3e:	4a47      	ldr	r2, [pc, #284]	@ (8101d5c <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x1e4>)
 8101c40:	33bb      	adds	r3, #187	@ 0xbb
 8101c42:	6810      	ldr	r0, [r2, #0]
 8101c44:	6018      	str	r0, [r3, #0]
 8101c46:	8892      	ldrh	r2, [r2, #4]
 8101c48:	809a      	strh	r2, [r3, #4]
 8101c4a:	687b      	ldr	r3, [r7, #4]
 8101c4c:	4a49      	ldr	r2, [pc, #292]	@ (8101d74 <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x1fc>)
 8101c4e:	33c1      	adds	r3, #193	@ 0xc1
 8101c50:	6810      	ldr	r0, [r2, #0]
 8101c52:	6018      	str	r0, [r3, #0]
 8101c54:	8892      	ldrh	r2, [r2, #4]
 8101c56:	809a      	strh	r2, [r3, #4]
 8101c58:	687b      	ldr	r3, [r7, #4]
 8101c5a:	4a47      	ldr	r2, [pc, #284]	@ (8101d78 <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x200>)
 8101c5c:	33c7      	adds	r3, #199	@ 0xc7
 8101c5e:	6810      	ldr	r0, [r2, #0]
 8101c60:	6018      	str	r0, [r3, #0]
 8101c62:	8892      	ldrh	r2, [r2, #4]
 8101c64:	809a      	strh	r2, [r3, #4]
 8101c66:	687b      	ldr	r3, [r7, #4]
 8101c68:	4a44      	ldr	r2, [pc, #272]	@ (8101d7c <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x204>)
 8101c6a:	33cd      	adds	r3, #205	@ 0xcd
 8101c6c:	6810      	ldr	r0, [r2, #0]
 8101c6e:	6018      	str	r0, [r3, #0]
 8101c70:	8892      	ldrh	r2, [r2, #4]
 8101c72:	809a      	strh	r2, [r3, #4]
 8101c74:	687b      	ldr	r3, [r7, #4]
 8101c76:	4a42      	ldr	r2, [pc, #264]	@ (8101d80 <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x208>)
 8101c78:	33d3      	adds	r3, #211	@ 0xd3
 8101c7a:	6810      	ldr	r0, [r2, #0]
 8101c7c:	6018      	str	r0, [r3, #0]
 8101c7e:	8892      	ldrh	r2, [r2, #4]
 8101c80:	809a      	strh	r2, [r3, #4]
 8101c82:	687b      	ldr	r3, [r7, #4]
 8101c84:	4a3f      	ldr	r2, [pc, #252]	@ (8101d84 <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x20c>)
 8101c86:	33d9      	adds	r3, #217	@ 0xd9
 8101c88:	6810      	ldr	r0, [r2, #0]
 8101c8a:	6018      	str	r0, [r3, #0]
 8101c8c:	8892      	ldrh	r2, [r2, #4]
 8101c8e:	809a      	strh	r2, [r3, #4]
 8101c90:	687b      	ldr	r3, [r7, #4]
 8101c92:	493d      	ldr	r1, [pc, #244]	@ (8101d88 <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x210>)
 8101c94:	f103 02df 	add.w	r2, r3, #223	@ 0xdf
 8101c98:	460b      	mov	r3, r1
 8101c9a:	cb03      	ldmia	r3!, {r0, r1}
 8101c9c:	6010      	str	r0, [r2, #0]
 8101c9e:	6051      	str	r1, [r2, #4]
 8101ca0:	781b      	ldrb	r3, [r3, #0]
 8101ca2:	7213      	strb	r3, [r2, #8]
 8101ca4:	687b      	ldr	r3, [r7, #4]
 8101ca6:	4a39      	ldr	r2, [pc, #228]	@ (8101d8c <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x214>)
 8101ca8:	33e8      	adds	r3, #232	@ 0xe8
 8101caa:	e892 0003 	ldmia.w	r2, {r0, r1}
 8101cae:	6018      	str	r0, [r3, #0]
 8101cb0:	3304      	adds	r3, #4
 8101cb2:	8019      	strh	r1, [r3, #0]
 8101cb4:	687b      	ldr	r3, [r7, #4]
 8101cb6:	4a36      	ldr	r2, [pc, #216]	@ (8101d90 <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x218>)
 8101cb8:	33ee      	adds	r3, #238	@ 0xee
 8101cba:	6810      	ldr	r0, [r2, #0]
 8101cbc:	6018      	str	r0, [r3, #0]
 8101cbe:	8892      	ldrh	r2, [r2, #4]
 8101cc0:	809a      	strh	r2, [r3, #4]
 8101cc2:	687b      	ldr	r3, [r7, #4]
 8101cc4:	4a33      	ldr	r2, [pc, #204]	@ (8101d94 <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x21c>)
 8101cc6:	33f4      	adds	r3, #244	@ 0xf4
 8101cc8:	e892 0003 	ldmia.w	r2, {r0, r1}
 8101ccc:	6018      	str	r0, [r3, #0]
 8101cce:	3304      	adds	r3, #4
 8101cd0:	8019      	strh	r1, [r3, #0]
 8101cd2:	687b      	ldr	r3, [r7, #4]
 8101cd4:	4a30      	ldr	r2, [pc, #192]	@ (8101d98 <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x220>)
 8101cd6:	33fa      	adds	r3, #250	@ 0xfa
 8101cd8:	6810      	ldr	r0, [r2, #0]
 8101cda:	6018      	str	r0, [r3, #0]
 8101cdc:	7912      	ldrb	r2, [r2, #4]
 8101cde:	711a      	strb	r2, [r3, #4]
 8101ce0:	687b      	ldr	r3, [r7, #4]
 8101ce2:	4a2e      	ldr	r2, [pc, #184]	@ (8101d9c <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x224>)
 8101ce4:	33ff      	adds	r3, #255	@ 0xff
 8101ce6:	6810      	ldr	r0, [r2, #0]
 8101ce8:	6018      	str	r0, [r3, #0]
 8101cea:	7912      	ldrb	r2, [r2, #4]
 8101cec:	711a      	strb	r2, [r3, #4]
 8101cee:	687b      	ldr	r3, [r7, #4]
 8101cf0:	4a2b      	ldr	r2, [pc, #172]	@ (8101da0 <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x228>)
 8101cf2:	f503 7382 	add.w	r3, r3, #260	@ 0x104
 8101cf6:	e892 0003 	ldmia.w	r2, {r0, r1}
 8101cfa:	6018      	str	r0, [r3, #0]
 8101cfc:	3304      	adds	r3, #4
 8101cfe:	7019      	strb	r1, [r3, #0]
 8101d00:	687b      	ldr	r3, [r7, #4]
 8101d02:	4a28      	ldr	r2, [pc, #160]	@ (8101da4 <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x22c>)
 8101d04:	f203 1309 	addw	r3, r3, #265	@ 0x109
 8101d08:	6810      	ldr	r0, [r2, #0]
 8101d0a:	6018      	str	r0, [r3, #0]
 8101d0c:	687b      	ldr	r3, [r7, #4]
 8101d0e:	4a26      	ldr	r2, [pc, #152]	@ (8101da8 <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x230>)
 8101d10:	f203 130d 	addw	r3, r3, #269	@ 0x10d
 8101d14:	6810      	ldr	r0, [r2, #0]
 8101d16:	6018      	str	r0, [r3, #0]
 8101d18:	8892      	ldrh	r2, [r2, #4]
 8101d1a:	809a      	strh	r2, [r3, #4]
 8101d1c:	687b      	ldr	r3, [r7, #4]
 8101d1e:	4a23      	ldr	r2, [pc, #140]	@ (8101dac <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x234>)
 8101d20:	f203 1313 	addw	r3, r3, #275	@ 0x113
 8101d24:	6810      	ldr	r0, [r2, #0]
 8101d26:	6018      	str	r0, [r3, #0]
 8101d28:	8892      	ldrh	r2, [r2, #4]
 8101d2a:	809a      	strh	r2, [r3, #4]
 8101d2c:	687b      	ldr	r3, [r7, #4]
 8101d2e:	4a20      	ldr	r2, [pc, #128]	@ (8101db0 <_ZN6DayCamC1EP20__UART_HandleTypeDef+0x238>)
 8101d30:	f203 1319 	addw	r3, r3, #281	@ 0x119
 8101d34:	6810      	ldr	r0, [r2, #0]
 8101d36:	6018      	str	r0, [r3, #0]
 8101d38:	8892      	ldrh	r2, [r2, #4]
 8101d3a:	809a      	strh	r2, [r3, #4]
 8101d3c:	687b      	ldr	r3, [r7, #4]
 8101d3e:	4618      	mov	r0, r3
 8101d40:	3708      	adds	r7, #8
 8101d42:	46bd      	mov	sp, r7
 8101d44:	bd80      	pop	{r7, pc}
 8101d46:	bf00      	nop
 8101d48:	08111838 	.word	0x08111838
 8101d4c:	081115a0 	.word	0x081115a0
 8101d50:	081115a4 	.word	0x081115a4
 8101d54:	081115ac 	.word	0x081115ac
 8101d58:	081115b0 	.word	0x081115b0
 8101d5c:	081115b8 	.word	0x081115b8
 8101d60:	081115c0 	.word	0x081115c0
 8101d64:	081115c8 	.word	0x081115c8
 8101d68:	081115d0 	.word	0x081115d0
 8101d6c:	081115d8 	.word	0x081115d8
 8101d70:	081115e4 	.word	0x081115e4
 8101d74:	081115ec 	.word	0x081115ec
 8101d78:	081115f4 	.word	0x081115f4
 8101d7c:	081115fc 	.word	0x081115fc
 8101d80:	08111604 	.word	0x08111604
 8101d84:	0811160c 	.word	0x0811160c
 8101d88:	08111614 	.word	0x08111614
 8101d8c:	08111620 	.word	0x08111620
 8101d90:	08111628 	.word	0x08111628
 8101d94:	08111630 	.word	0x08111630
 8101d98:	08111638 	.word	0x08111638
 8101d9c:	08111640 	.word	0x08111640
 8101da0:	08111648 	.word	0x08111648
 8101da4:	08111650 	.word	0x08111650
 8101da8:	08111654 	.word	0x08111654
 8101dac:	0811165c 	.word	0x0811165c
 8101db0:	08111664 	.word	0x08111664

08101db4 <_ZN6DayCam4InitEv>:

void DayCam::Init() {
 8101db4:	b580      	push	{r7, lr}
 8101db6:	b082      	sub	sp, #8
 8101db8:	af00      	add	r7, sp, #0
 8101dba:	6078      	str	r0, [r7, #4]
//    static uint8_t byte;

	setAddress();
 8101dbc:	6878      	ldr	r0, [r7, #4]
 8101dbe:	f000 f8ef 	bl	8101fa0 <_ZN6DayCam10setAddressEv>
    if (!StartReceive(&byte_, 1)) {
 8101dc2:	6878      	ldr	r0, [r7, #4]
 8101dc4:	687b      	ldr	r3, [r7, #4]
 8101dc6:	3378      	adds	r3, #120	@ 0x78
 8101dc8:	2201      	movs	r2, #1
 8101dca:	4619      	mov	r1, r3
 8101dcc:	f001 f9be 	bl	810314c <_ZN12UartEndpoint12StartReceiveEPhj>
 8101dd0:	4603      	mov	r3, r0
 8101dd2:	f083 0301 	eor.w	r3, r3, #1
 8101dd6:	b2db      	uxtb	r3, r3
 8101dd8:	2b00      	cmp	r3, #0
 8101dda:	d003      	beq.n	8101de4 <_ZN6DayCam4InitEv+0x30>
        printf("❌ StartReceive failed\n");
 8101ddc:	4805      	ldr	r0, [pc, #20]	@ (8101df4 <_ZN6DayCam4InitEv+0x40>)
 8101dde:	f00d fc53 	bl	810f688 <puts>
    }
    else printf("❌ StartReceive success\n");
}
 8101de2:	e002      	b.n	8101dea <_ZN6DayCam4InitEv+0x36>
    else printf("❌ StartReceive success\n");
 8101de4:	4804      	ldr	r0, [pc, #16]	@ (8101df8 <_ZN6DayCam4InitEv+0x44>)
 8101de6:	f00d fc4f 	bl	810f688 <puts>
}
 8101dea:	bf00      	nop
 8101dec:	3708      	adds	r7, #8
 8101dee:	46bd      	mov	sp, r7
 8101df0:	bd80      	pop	{r7, pc}
 8101df2:	bf00      	nop
 8101df4:	0811166c 	.word	0x0811166c
 8101df8:	08111684 	.word	0x08111684

08101dfc <_ZNSt5queueIhSt5dequeIhSaIhEEED1Ev>:
   *  Members not found in @a normal containers are @c container_type,
   *  which is a typedef for the second Sequence parameter, and @c push and
   *  @c pop, which are standard %queue/FIFO operations.
  */
  template<typename _Tp, typename _Sequence = deque<_Tp> >
    class queue
 8101dfc:	b580      	push	{r7, lr}
 8101dfe:	b082      	sub	sp, #8
 8101e00:	af00      	add	r7, sp, #0
 8101e02:	6078      	str	r0, [r7, #4]
 8101e04:	687b      	ldr	r3, [r7, #4]
 8101e06:	4618      	mov	r0, r3
 8101e08:	f000 fa52 	bl	81022b0 <_ZNSt5dequeIhSaIhEED1Ev>
 8101e0c:	687b      	ldr	r3, [r7, #4]
 8101e0e:	4618      	mov	r0, r3
 8101e10:	3708      	adds	r7, #8
 8101e12:	46bd      	mov	sp, r7
 8101e14:	bd80      	pop	{r7, pc}
	...

08101e18 <_ZN6DayCam13onReceiveByteEh>:



void DayCam::onReceiveByte(uint8_t byte) {
 8101e18:	b580      	push	{r7, lr}
 8101e1a:	b096      	sub	sp, #88	@ 0x58
 8101e1c:	af00      	add	r7, sp, #0
 8101e1e:	6078      	str	r0, [r7, #4]
 8101e20:	460b      	mov	r3, r1
 8101e22:	70fb      	strb	r3, [r7, #3]

	std::queue<uint8_t> tempQueue{std::deque<uint8_t>(rxQueue_)};
 8101e24:	687b      	ldr	r3, [r7, #4]
 8101e26:	f103 0210 	add.w	r2, r3, #16
 8101e2a:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8101e2e:	4611      	mov	r1, r2
 8101e30:	4618      	mov	r0, r3
 8101e32:	f000 fa62 	bl	81022fa <_ZNSt5dequeIhSaIhEEC1ERKS1_>
 8101e36:	f107 0230 	add.w	r2, r7, #48	@ 0x30
 8101e3a:	f107 0308 	add.w	r3, r7, #8
 8101e3e:	4611      	mov	r1, r2
 8101e40:	4618      	mov	r0, r3
 8101e42:	f000 fabc 	bl	81023be <_ZNSt5queueIhSt5dequeIhSaIhEEEC1EOS2_>
 8101e46:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8101e4a:	4618      	mov	r0, r3
 8101e4c:	f000 fa30 	bl	81022b0 <_ZNSt5dequeIhSaIhEED1Ev>

//    printf("📥 Received byte: 0x%02X\n", byte);
//    rxBuffer_[rxLength_] = byte_;

	if (rxQueue_.back() == 0xff){
 8101e50:	687b      	ldr	r3, [r7, #4]
 8101e52:	3310      	adds	r3, #16
 8101e54:	4618      	mov	r0, r3
 8101e56:	f000 fac5 	bl	81023e4 <_ZNSt5dequeIhSaIhEE4backEv>
 8101e5a:	4603      	mov	r3, r0
 8101e5c:	781b      	ldrb	r3, [r3, #0]
 8101e5e:	2bff      	cmp	r3, #255	@ 0xff
 8101e60:	bf0c      	ite	eq
 8101e62:	2301      	moveq	r3, #1
 8101e64:	2300      	movne	r3, #0
 8101e66:	b2db      	uxtb	r3, r3
 8101e68:	2b00      	cmp	r3, #0
 8101e6a:	d021      	beq.n	8101eb0 <_ZN6DayCam13onReceiveByteEh+0x98>
	    printf("rxQueue_: ");
 8101e6c:	4818      	ldr	r0, [pc, #96]	@ (8101ed0 <_ZN6DayCam13onReceiveByteEh+0xb8>)
 8101e6e:	f00d fb9b 	bl	810f5a8 <iprintf>
	    while (!rxQueue_.empty()) {
 8101e72:	e00f      	b.n	8101e94 <_ZN6DayCam13onReceiveByteEh+0x7c>
	        printf("0x%02X ", rxQueue_.front());
 8101e74:	687b      	ldr	r3, [r7, #4]
 8101e76:	3310      	adds	r3, #16
 8101e78:	4618      	mov	r0, r3
 8101e7a:	f7ff fbfd 	bl	8101678 <_ZNSt5dequeIhSaIhEE5frontEv>
 8101e7e:	4603      	mov	r3, r0
 8101e80:	781b      	ldrb	r3, [r3, #0]
 8101e82:	4619      	mov	r1, r3
 8101e84:	4813      	ldr	r0, [pc, #76]	@ (8101ed4 <_ZN6DayCam13onReceiveByteEh+0xbc>)
 8101e86:	f00d fb8f 	bl	810f5a8 <iprintf>
	        rxQueue_.pop_front();
 8101e8a:	687b      	ldr	r3, [r7, #4]
 8101e8c:	3310      	adds	r3, #16
 8101e8e:	4618      	mov	r0, r3
 8101e90:	f7ff fc06 	bl	81016a0 <_ZNSt5dequeIhSaIhEE9pop_frontEv>
	    while (!rxQueue_.empty()) {
 8101e94:	687b      	ldr	r3, [r7, #4]
 8101e96:	3310      	adds	r3, #16
 8101e98:	4618      	mov	r0, r3
 8101e9a:	f7ff fbdb 	bl	8101654 <_ZNKSt5dequeIhSaIhEE5emptyEv>
 8101e9e:	4603      	mov	r3, r0
 8101ea0:	f083 0301 	eor.w	r3, r3, #1
 8101ea4:	b2db      	uxtb	r3, r3
 8101ea6:	2b00      	cmp	r3, #0
 8101ea8:	d1e4      	bne.n	8101e74 <_ZN6DayCam13onReceiveByteEh+0x5c>
	    }
	    printf("\n");
 8101eaa:	200a      	movs	r0, #10
 8101eac:	f00d fb8e 	bl	810f5cc <putchar>
	}


    StartReceive(&byte_, 1);  // Re-arm
 8101eb0:	6878      	ldr	r0, [r7, #4]
 8101eb2:	687b      	ldr	r3, [r7, #4]
 8101eb4:	3378      	adds	r3, #120	@ 0x78
 8101eb6:	2201      	movs	r2, #1
 8101eb8:	4619      	mov	r1, r3
 8101eba:	f001 f947 	bl	810314c <_ZN12UartEndpoint12StartReceiveEPhj>

}
 8101ebe:	f107 0308 	add.w	r3, r7, #8
 8101ec2:	4618      	mov	r0, r3
 8101ec4:	f7ff ff9a 	bl	8101dfc <_ZNSt5queueIhSt5dequeIhSaIhEEED1Ev>
 8101ec8:	3758      	adds	r7, #88	@ 0x58
 8101eca:	46bd      	mov	sp, r7
 8101ecc:	bd80      	pop	{r7, pc}
 8101ece:	bf00      	nop
 8101ed0:	081116a0 	.word	0x081116a0
 8101ed4:	081116ac 	.word	0x081116ac

08101ed8 <_ZN6DayCam15processIncomingEv>:

void DayCam::processIncoming() {
 8101ed8:	b580      	push	{r7, lr}
 8101eda:	b08e      	sub	sp, #56	@ 0x38
 8101edc:	af00      	add	r7, sp, #0
 8101ede:	6078      	str	r0, [r7, #4]
    while (!rxQueue_.empty()) {
 8101ee0:	e04a      	b.n	8101f78 <_ZN6DayCam15processIncomingEv+0xa0>
        uint8_t byte = rxQueue_.front();
 8101ee2:	687b      	ldr	r3, [r7, #4]
 8101ee4:	3310      	adds	r3, #16
 8101ee6:	4618      	mov	r0, r3
 8101ee8:	f7ff fbc6 	bl	8101678 <_ZNSt5dequeIhSaIhEE5frontEv>
 8101eec:	4603      	mov	r3, r0
 8101eee:	781b      	ldrb	r3, [r3, #0]
 8101ef0:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
        rxQueue_.pop_front();
 8101ef4:	687b      	ldr	r3, [r7, #4]
 8101ef6:	3310      	adds	r3, #16
 8101ef8:	4618      	mov	r0, r3
 8101efa:	f7ff fbd1 	bl	81016a0 <_ZNSt5dequeIhSaIhEE9pop_frontEv>
//        message_.push_back(byte);

        // Example: parse line-terminated message
        if (byte == '\n') {
 8101efe:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 8101f02:	2b0a      	cmp	r3, #10
 8101f04:	d138      	bne.n	8101f78 <_ZN6DayCam15processIncomingEv+0xa0>
            printf("Client received: ");
 8101f06:	4824      	ldr	r0, [pc, #144]	@ (8101f98 <_ZN6DayCam15processIncomingEv+0xc0>)
 8101f08:	f00d fb4e 	bl	810f5a8 <iprintf>
            for (uint8_t c : rxQueue_)
 8101f0c:	687b      	ldr	r3, [r7, #4]
 8101f0e:	3310      	adds	r3, #16
 8101f10:	633b      	str	r3, [r7, #48]	@ 0x30
 8101f12:	f107 031c 	add.w	r3, r7, #28
 8101f16:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8101f18:	4618      	mov	r0, r3
 8101f1a:	f7ff fbe8 	bl	81016ee <_ZNSt5dequeIhSaIhEE5beginEv>
 8101f1e:	f107 030c 	add.w	r3, r7, #12
 8101f22:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8101f24:	4618      	mov	r0, r3
 8101f26:	f000 fa76 	bl	8102416 <_ZNSt5dequeIhSaIhEE3endEv>
 8101f2a:	e012      	b.n	8101f52 <_ZN6DayCam15processIncomingEv+0x7a>
 8101f2c:	f107 031c 	add.w	r3, r7, #28
 8101f30:	4618      	mov	r0, r3
 8101f32:	f7ff fc99 	bl	8101868 <_ZNKSt15_Deque_iteratorIhRhPhEdeEv>
 8101f36:	4603      	mov	r3, r0
 8101f38:	781b      	ldrb	r3, [r3, #0]
 8101f3a:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
                printf("%c", c);
 8101f3e:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8101f42:	4618      	mov	r0, r3
 8101f44:	f00d fb42 	bl	810f5cc <putchar>
            for (uint8_t c : rxQueue_)
 8101f48:	f107 031c 	add.w	r3, r7, #28
 8101f4c:	4618      	mov	r0, r3
 8101f4e:	f000 fa82 	bl	8102456 <_ZNSt15_Deque_iteratorIhRhPhEppEv>
 8101f52:	f107 020c 	add.w	r2, r7, #12
 8101f56:	f107 031c 	add.w	r3, r7, #28
 8101f5a:	4611      	mov	r1, r2
 8101f5c:	4618      	mov	r0, r3
 8101f5e:	f000 fa69 	bl	8102434 <_ZStneRKSt15_Deque_iteratorIhRhPhES4_>
 8101f62:	4603      	mov	r3, r0
 8101f64:	2b00      	cmp	r3, #0
 8101f66:	d1e1      	bne.n	8101f2c <_ZN6DayCam15processIncomingEv+0x54>
            printf("\r\n");
 8101f68:	480c      	ldr	r0, [pc, #48]	@ (8101f9c <_ZN6DayCam15processIncomingEv+0xc4>)
 8101f6a:	f00d fb8d 	bl	810f688 <puts>

            rxQueue_.clear();  // ready for next message
 8101f6e:	687b      	ldr	r3, [r7, #4]
 8101f70:	3310      	adds	r3, #16
 8101f72:	4618      	mov	r0, r3
 8101f74:	f000 fa8e 	bl	8102494 <_ZNSt5dequeIhSaIhEE5clearEv>
    while (!rxQueue_.empty()) {
 8101f78:	687b      	ldr	r3, [r7, #4]
 8101f7a:	3310      	adds	r3, #16
 8101f7c:	4618      	mov	r0, r3
 8101f7e:	f7ff fb69 	bl	8101654 <_ZNKSt5dequeIhSaIhEE5emptyEv>
 8101f82:	4603      	mov	r3, r0
 8101f84:	f083 0301 	eor.w	r3, r3, #1
 8101f88:	b2db      	uxtb	r3, r3
 8101f8a:	2b00      	cmp	r3, #0
 8101f8c:	d1a9      	bne.n	8101ee2 <_ZN6DayCam15processIncomingEv+0xa>
        }
    }
}
 8101f8e:	bf00      	nop
 8101f90:	bf00      	nop
 8101f92:	3738      	adds	r7, #56	@ 0x38
 8101f94:	46bd      	mov	sp, r7
 8101f96:	bd80      	pop	{r7, pc}
 8101f98:	081116b4 	.word	0x081116b4
 8101f9c:	081116c8 	.word	0x081116c8

08101fa0 <_ZN6DayCam10setAddressEv>:

void DayCam::setAddress() {
 8101fa0:	b580      	push	{r7, lr}
 8101fa2:	b084      	sub	sp, #16
 8101fa4:	af00      	add	r7, sp, #0
 8101fa6:	6078      	str	r0, [r7, #4]
    for (int i = 0; i < 4; i++) {
 8101fa8:	2300      	movs	r3, #0
 8101faa:	60fb      	str	r3, [r7, #12]
 8101fac:	e00c      	b.n	8101fc8 <_ZN6DayCam10setAddressEv+0x28>
    	SendCommand(&address_command[i],4);
 8101fae:	6878      	ldr	r0, [r7, #4]
 8101fb0:	68fb      	ldr	r3, [r7, #12]
 8101fb2:	3378      	adds	r3, #120	@ 0x78
 8101fb4:	687a      	ldr	r2, [r7, #4]
 8101fb6:	4413      	add	r3, r2
 8101fb8:	3301      	adds	r3, #1
 8101fba:	2204      	movs	r2, #4
 8101fbc:	4619      	mov	r1, r3
 8101fbe:	f001 f8e5 	bl	810318c <_ZN12UartEndpoint11SendCommandEPKhj>
    for (int i = 0; i < 4; i++) {
 8101fc2:	68fb      	ldr	r3, [r7, #12]
 8101fc4:	3301      	adds	r3, #1
 8101fc6:	60fb      	str	r3, [r7, #12]
 8101fc8:	68fb      	ldr	r3, [r7, #12]
 8101fca:	2b03      	cmp	r3, #3
 8101fcc:	ddef      	ble.n	8101fae <_ZN6DayCam10setAddressEv+0xe>
    }
}
 8101fce:	bf00      	nop
 8101fd0:	bf00      	nop
 8101fd2:	3710      	adds	r7, #16
 8101fd4:	46bd      	mov	sp, r7
 8101fd6:	bd80      	pop	{r7, pc}

08101fd8 <_ZN6DayCam12handleZoomInEPhh>:

void DayCam::handleZoomIn(uint8_t* speed, uint8_t length){
 8101fd8:	b580      	push	{r7, lr}
 8101fda:	b086      	sub	sp, #24
 8101fdc:	af00      	add	r7, sp, #0
 8101fde:	60f8      	str	r0, [r7, #12]
 8101fe0:	60b9      	str	r1, [r7, #8]
 8101fe2:	4613      	mov	r3, r2
 8101fe4:	71fb      	strb	r3, [r7, #7]

	uint8_t temp_buff[sizeof(zoom_teleVar)] = {0};
 8101fe6:	f107 0310 	add.w	r3, r7, #16
 8101fea:	2200      	movs	r2, #0
 8101fec:	601a      	str	r2, [r3, #0]
 8101fee:	809a      	strh	r2, [r3, #4]

	memcpy(temp_buff,zoom_teleVar,sizeof(zoom_teleVar));
 8101ff0:	68fb      	ldr	r3, [r7, #12]
 8101ff2:	f103 0294 	add.w	r2, r3, #148	@ 0x94
 8101ff6:	f107 0310 	add.w	r3, r7, #16
 8101ffa:	6810      	ldr	r0, [r2, #0]
 8101ffc:	6018      	str	r0, [r3, #0]
 8101ffe:	8892      	ldrh	r2, [r2, #4]
 8102000:	809a      	strh	r2, [r3, #4]

	if (speed[0] > 0 && speed[0] < 8)
 8102002:	68bb      	ldr	r3, [r7, #8]
 8102004:	781b      	ldrb	r3, [r3, #0]
 8102006:	2b00      	cmp	r3, #0
 8102008:	d016      	beq.n	8102038 <_ZN6DayCam12handleZoomInEPhh+0x60>
 810200a:	68bb      	ldr	r3, [r7, #8]
 810200c:	781b      	ldrb	r3, [r3, #0]
 810200e:	2b07      	cmp	r3, #7
 8102010:	d812      	bhi.n	8102038 <_ZN6DayCam12handleZoomInEPhh+0x60>
		temp_buff [4] = ((temp_buff [4] & 0xF0) | (speed[0] & 0x0f));
 8102012:	7d3b      	ldrb	r3, [r7, #20]
 8102014:	f023 030f 	bic.w	r3, r3, #15
 8102018:	b2da      	uxtb	r2, r3
 810201a:	68bb      	ldr	r3, [r7, #8]
 810201c:	781b      	ldrb	r3, [r3, #0]
 810201e:	f003 030f 	and.w	r3, r3, #15
 8102022:	b2db      	uxtb	r3, r3
 8102024:	4313      	orrs	r3, r2
 8102026:	b2db      	uxtb	r3, r3
 8102028:	753b      	strb	r3, [r7, #20]
	else
		return;

	SendCommand(temp_buff, sizeof(temp_buff));
 810202a:	68fb      	ldr	r3, [r7, #12]
 810202c:	f107 0110 	add.w	r1, r7, #16
 8102030:	2206      	movs	r2, #6
 8102032:	4618      	mov	r0, r3
 8102034:	f001 f8aa 	bl	810318c <_ZN12UartEndpoint11SendCommandEPKhj>

}
 8102038:	3718      	adds	r7, #24
 810203a:	46bd      	mov	sp, r7
 810203c:	bd80      	pop	{r7, pc}

0810203e <_ZN6DayCam13handleZoomOutEPhh>:

void DayCam::handleZoomOut(uint8_t* speed, uint8_t length){
 810203e:	b580      	push	{r7, lr}
 8102040:	b086      	sub	sp, #24
 8102042:	af00      	add	r7, sp, #0
 8102044:	60f8      	str	r0, [r7, #12]
 8102046:	60b9      	str	r1, [r7, #8]
 8102048:	4613      	mov	r3, r2
 810204a:	71fb      	strb	r3, [r7, #7]

	uint8_t temp_buff[sizeof(zoom_teleVar)] = {0};
 810204c:	f107 0310 	add.w	r3, r7, #16
 8102050:	2200      	movs	r2, #0
 8102052:	601a      	str	r2, [r3, #0]
 8102054:	809a      	strh	r2, [r3, #4]

	memcpy(temp_buff,zoom_wideVar,sizeof(zoom_teleVar));
 8102056:	68fb      	ldr	r3, [r7, #12]
 8102058:	f103 029a 	add.w	r2, r3, #154	@ 0x9a
 810205c:	f107 0310 	add.w	r3, r7, #16
 8102060:	6810      	ldr	r0, [r2, #0]
 8102062:	6018      	str	r0, [r3, #0]
 8102064:	8892      	ldrh	r2, [r2, #4]
 8102066:	809a      	strh	r2, [r3, #4]

	if (speed[0] > 0 && speed[0] < 8)
 8102068:	68bb      	ldr	r3, [r7, #8]
 810206a:	781b      	ldrb	r3, [r3, #0]
 810206c:	2b00      	cmp	r3, #0
 810206e:	d016      	beq.n	810209e <_ZN6DayCam13handleZoomOutEPhh+0x60>
 8102070:	68bb      	ldr	r3, [r7, #8]
 8102072:	781b      	ldrb	r3, [r3, #0]
 8102074:	2b07      	cmp	r3, #7
 8102076:	d812      	bhi.n	810209e <_ZN6DayCam13handleZoomOutEPhh+0x60>
		temp_buff [4] = ((temp_buff [4] & 0xF0) | (speed[0] & 0x0f));
 8102078:	7d3b      	ldrb	r3, [r7, #20]
 810207a:	f023 030f 	bic.w	r3, r3, #15
 810207e:	b2da      	uxtb	r2, r3
 8102080:	68bb      	ldr	r3, [r7, #8]
 8102082:	781b      	ldrb	r3, [r3, #0]
 8102084:	f003 030f 	and.w	r3, r3, #15
 8102088:	b2db      	uxtb	r3, r3
 810208a:	4313      	orrs	r3, r2
 810208c:	b2db      	uxtb	r3, r3
 810208e:	753b      	strb	r3, [r7, #20]
	else
		return;

	SendCommand(temp_buff, sizeof(temp_buff));
 8102090:	68fb      	ldr	r3, [r7, #12]
 8102092:	f107 0110 	add.w	r1, r7, #16
 8102096:	2206      	movs	r2, #6
 8102098:	4618      	mov	r0, r3
 810209a:	f001 f877 	bl	810318c <_ZN12UartEndpoint11SendCommandEPKhj>

}
 810209e:	3718      	adds	r7, #24
 81020a0:	46bd      	mov	sp, r7
 81020a2:	bd80      	pop	{r7, pc}

081020a4 <_ZN6DayCam19handleZoom2PositionEt>:

void DayCam::handleZoom2Position(uint16_t position){
 81020a4:	b580      	push	{r7, lr}
 81020a6:	b086      	sub	sp, #24
 81020a8:	af00      	add	r7, sp, #0
 81020aa:	6078      	str	r0, [r7, #4]
 81020ac:	460b      	mov	r3, r1
 81020ae:	807b      	strh	r3, [r7, #2]

	uint8_t temp_buff[sizeof(zoom2Position)] = {0};
 81020b0:	f107 030c 	add.w	r3, r7, #12
 81020b4:	2200      	movs	r2, #0
 81020b6:	601a      	str	r2, [r3, #0]
 81020b8:	605a      	str	r2, [r3, #4]
 81020ba:	721a      	strb	r2, [r3, #8]

	memcpy(temp_buff,zoom2Position,sizeof(zoom2Position));
 81020bc:	687b      	ldr	r3, [r7, #4]
 81020be:	f103 02a6 	add.w	r2, r3, #166	@ 0xa6
 81020c2:	f107 030c 	add.w	r3, r7, #12
 81020c6:	6810      	ldr	r0, [r2, #0]
 81020c8:	6851      	ldr	r1, [r2, #4]
 81020ca:	c303      	stmia	r3!, {r0, r1}
 81020cc:	7a12      	ldrb	r2, [r2, #8]
 81020ce:	701a      	strb	r2, [r3, #0]

	if (position <= 0x4000){
 81020d0:	887b      	ldrh	r3, [r7, #2]
 81020d2:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 81020d6:	d822      	bhi.n	810211e <_ZN6DayCam19handleZoom2PositionEt+0x7a>
		temp_buff[4] = (position & 0xF000) >> 12;
 81020d8:	887b      	ldrh	r3, [r7, #2]
 81020da:	0b1b      	lsrs	r3, r3, #12
 81020dc:	b29b      	uxth	r3, r3
 81020de:	b2db      	uxtb	r3, r3
 81020e0:	743b      	strb	r3, [r7, #16]
		temp_buff[5] = (position & 0x0F00) >> 8;
 81020e2:	887b      	ldrh	r3, [r7, #2]
 81020e4:	0a1b      	lsrs	r3, r3, #8
 81020e6:	b29b      	uxth	r3, r3
 81020e8:	b2db      	uxtb	r3, r3
 81020ea:	f003 030f 	and.w	r3, r3, #15
 81020ee:	b2db      	uxtb	r3, r3
 81020f0:	747b      	strb	r3, [r7, #17]
		temp_buff[6] = (position & 0x00F0) >> 4;
 81020f2:	887b      	ldrh	r3, [r7, #2]
 81020f4:	091b      	lsrs	r3, r3, #4
 81020f6:	b29b      	uxth	r3, r3
 81020f8:	b2db      	uxtb	r3, r3
 81020fa:	f003 030f 	and.w	r3, r3, #15
 81020fe:	b2db      	uxtb	r3, r3
 8102100:	74bb      	strb	r3, [r7, #18]
		temp_buff[7] = (position & 0x000F) ;
 8102102:	887b      	ldrh	r3, [r7, #2]
 8102104:	b2db      	uxtb	r3, r3
 8102106:	f003 030f 	and.w	r3, r3, #15
 810210a:	b2db      	uxtb	r3, r3
 810210c:	74fb      	strb	r3, [r7, #19]
	}
	else
		return;
	SendCommand(temp_buff, sizeof(temp_buff));
 810210e:	687b      	ldr	r3, [r7, #4]
 8102110:	f107 010c 	add.w	r1, r7, #12
 8102114:	2209      	movs	r2, #9
 8102116:	4618      	mov	r0, r3
 8102118:	f001 f838 	bl	810318c <_ZN12UartEndpoint11SendCommandEPKhj>
 810211c:	e000      	b.n	8102120 <_ZN6DayCam19handleZoom2PositionEt+0x7c>
		return;
 810211e:	bf00      	nop

}
 8102120:	3718      	adds	r7, #24
 8102122:	46bd      	mov	sp, r7
 8102124:	bd80      	pop	{r7, pc}

08102126 <_ZN6DayCam14handleZoomStopEv>:

void DayCam::handleZoomStop(){
 8102126:	b580      	push	{r7, lr}
 8102128:	b082      	sub	sp, #8
 810212a:	af00      	add	r7, sp, #0
 810212c:	6078      	str	r0, [r7, #4]
	SendCommand(zoom_stop, sizeof(zoom_stop));
 810212e:	6878      	ldr	r0, [r7, #4]
 8102130:	687b      	ldr	r3, [r7, #4]
 8102132:	33a0      	adds	r3, #160	@ 0xa0
 8102134:	2206      	movs	r2, #6
 8102136:	4619      	mov	r1, r3
 8102138:	f001 f828 	bl	810318c <_ZN12UartEndpoint11SendCommandEPKhj>

}
 810213c:	bf00      	nop
 810213e:	3708      	adds	r7, #8
 8102140:	46bd      	mov	sp, r7
 8102142:	bd80      	pop	{r7, pc}

08102144 <_ZN6DayCam14handleFocusFarEPhh>:

void DayCam::handleFocusFar(uint8_t* speed, uint8_t length){
 8102144:	b580      	push	{r7, lr}
 8102146:	b086      	sub	sp, #24
 8102148:	af00      	add	r7, sp, #0
 810214a:	60f8      	str	r0, [r7, #12]
 810214c:	60b9      	str	r1, [r7, #8]
 810214e:	4613      	mov	r3, r2
 8102150:	71fb      	strb	r3, [r7, #7]

	uint8_t temp_buff[sizeof(focus_farVar)] = {0};
 8102152:	f107 0310 	add.w	r3, r7, #16
 8102156:	2200      	movs	r2, #0
 8102158:	601a      	str	r2, [r3, #0]
 810215a:	809a      	strh	r2, [r3, #4]

	memcpy(temp_buff,focus_farVar,sizeof(focus_farVar));
 810215c:	68fb      	ldr	r3, [r7, #12]
 810215e:	f103 02cd 	add.w	r2, r3, #205	@ 0xcd
 8102162:	f107 0310 	add.w	r3, r7, #16
 8102166:	6810      	ldr	r0, [r2, #0]
 8102168:	6018      	str	r0, [r3, #0]
 810216a:	8892      	ldrh	r2, [r2, #4]
 810216c:	809a      	strh	r2, [r3, #4]

	if (speed[0] > 0 && speed[0] < 8)
 810216e:	68bb      	ldr	r3, [r7, #8]
 8102170:	781b      	ldrb	r3, [r3, #0]
 8102172:	2b00      	cmp	r3, #0
 8102174:	d016      	beq.n	81021a4 <_ZN6DayCam14handleFocusFarEPhh+0x60>
 8102176:	68bb      	ldr	r3, [r7, #8]
 8102178:	781b      	ldrb	r3, [r3, #0]
 810217a:	2b07      	cmp	r3, #7
 810217c:	d812      	bhi.n	81021a4 <_ZN6DayCam14handleFocusFarEPhh+0x60>
		temp_buff [4] = ((temp_buff [4] & 0xF0) | (speed[0] & 0x0f));
 810217e:	7d3b      	ldrb	r3, [r7, #20]
 8102180:	f023 030f 	bic.w	r3, r3, #15
 8102184:	b2da      	uxtb	r2, r3
 8102186:	68bb      	ldr	r3, [r7, #8]
 8102188:	781b      	ldrb	r3, [r3, #0]
 810218a:	f003 030f 	and.w	r3, r3, #15
 810218e:	b2db      	uxtb	r3, r3
 8102190:	4313      	orrs	r3, r2
 8102192:	b2db      	uxtb	r3, r3
 8102194:	753b      	strb	r3, [r7, #20]
	else
		return;

	SendCommand(temp_buff, sizeof(temp_buff));
 8102196:	68fb      	ldr	r3, [r7, #12]
 8102198:	f107 0110 	add.w	r1, r7, #16
 810219c:	2206      	movs	r2, #6
 810219e:	4618      	mov	r0, r3
 81021a0:	f000 fff4 	bl	810318c <_ZN12UartEndpoint11SendCommandEPKhj>

}
 81021a4:	3718      	adds	r7, #24
 81021a6:	46bd      	mov	sp, r7
 81021a8:	bd80      	pop	{r7, pc}

081021aa <_ZN6DayCam15handleFocusNearEPhh>:

void DayCam::handleFocusNear(uint8_t* speed, uint8_t length){
 81021aa:	b580      	push	{r7, lr}
 81021ac:	b086      	sub	sp, #24
 81021ae:	af00      	add	r7, sp, #0
 81021b0:	60f8      	str	r0, [r7, #12]
 81021b2:	60b9      	str	r1, [r7, #8]
 81021b4:	4613      	mov	r3, r2
 81021b6:	71fb      	strb	r3, [r7, #7]

	uint8_t temp_buff[sizeof(focus_nearVar)] = {0};
 81021b8:	f107 0310 	add.w	r3, r7, #16
 81021bc:	2200      	movs	r2, #0
 81021be:	601a      	str	r2, [r3, #0]
 81021c0:	809a      	strh	r2, [r3, #4]

	memcpy(temp_buff,focus_nearVar,sizeof(focus_nearVar));
 81021c2:	68fb      	ldr	r3, [r7, #12]
 81021c4:	f103 02d3 	add.w	r2, r3, #211	@ 0xd3
 81021c8:	f107 0310 	add.w	r3, r7, #16
 81021cc:	6810      	ldr	r0, [r2, #0]
 81021ce:	6018      	str	r0, [r3, #0]
 81021d0:	8892      	ldrh	r2, [r2, #4]
 81021d2:	809a      	strh	r2, [r3, #4]

	if (speed[0] > 0 && speed[0] < 8)
 81021d4:	68bb      	ldr	r3, [r7, #8]
 81021d6:	781b      	ldrb	r3, [r3, #0]
 81021d8:	2b00      	cmp	r3, #0
 81021da:	d016      	beq.n	810220a <_ZN6DayCam15handleFocusNearEPhh+0x60>
 81021dc:	68bb      	ldr	r3, [r7, #8]
 81021de:	781b      	ldrb	r3, [r3, #0]
 81021e0:	2b07      	cmp	r3, #7
 81021e2:	d812      	bhi.n	810220a <_ZN6DayCam15handleFocusNearEPhh+0x60>
		temp_buff [4] = ((temp_buff [4] & 0xF0) | (speed[0] & 0x0f));
 81021e4:	7d3b      	ldrb	r3, [r7, #20]
 81021e6:	f023 030f 	bic.w	r3, r3, #15
 81021ea:	b2da      	uxtb	r2, r3
 81021ec:	68bb      	ldr	r3, [r7, #8]
 81021ee:	781b      	ldrb	r3, [r3, #0]
 81021f0:	f003 030f 	and.w	r3, r3, #15
 81021f4:	b2db      	uxtb	r3, r3
 81021f6:	4313      	orrs	r3, r2
 81021f8:	b2db      	uxtb	r3, r3
 81021fa:	753b      	strb	r3, [r7, #20]
	else
		return;

	SendCommand(temp_buff, sizeof(temp_buff));
 81021fc:	68fb      	ldr	r3, [r7, #12]
 81021fe:	f107 0110 	add.w	r1, r7, #16
 8102202:	2206      	movs	r2, #6
 8102204:	4618      	mov	r0, r3
 8102206:	f000 ffc1 	bl	810318c <_ZN12UartEndpoint11SendCommandEPKhj>

}
 810220a:	3718      	adds	r7, #24
 810220c:	46bd      	mov	sp, r7
 810220e:	bd80      	pop	{r7, pc}

08102210 <_ZN6DayCam20handleFocus2PositionEt>:

void DayCam::handleFocus2Position(uint16_t position){
 8102210:	b580      	push	{r7, lr}
 8102212:	b086      	sub	sp, #24
 8102214:	af00      	add	r7, sp, #0
 8102216:	6078      	str	r0, [r7, #4]
 8102218:	460b      	mov	r3, r1
 810221a:	807b      	strh	r3, [r7, #2]

	uint8_t temp_buff[sizeof(focus2Position)] = {0};
 810221c:	f107 030c 	add.w	r3, r7, #12
 8102220:	2200      	movs	r2, #0
 8102222:	601a      	str	r2, [r3, #0]
 8102224:	605a      	str	r2, [r3, #4]
 8102226:	721a      	strb	r2, [r3, #8]

	memcpy(temp_buff,focus2Position,sizeof(focus2Position));
 8102228:	687b      	ldr	r3, [r7, #4]
 810222a:	f103 02df 	add.w	r2, r3, #223	@ 0xdf
 810222e:	f107 030c 	add.w	r3, r7, #12
 8102232:	6810      	ldr	r0, [r2, #0]
 8102234:	6851      	ldr	r1, [r2, #4]
 8102236:	c303      	stmia	r3!, {r0, r1}
 8102238:	7a12      	ldrb	r2, [r2, #8]
 810223a:	701a      	strb	r2, [r3, #0]

	if (position <= 0x4000){
 810223c:	887b      	ldrh	r3, [r7, #2]
 810223e:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8102242:	d822      	bhi.n	810228a <_ZN6DayCam20handleFocus2PositionEt+0x7a>
		temp_buff[4] = (position & 0xF000) >> 12;
 8102244:	887b      	ldrh	r3, [r7, #2]
 8102246:	0b1b      	lsrs	r3, r3, #12
 8102248:	b29b      	uxth	r3, r3
 810224a:	b2db      	uxtb	r3, r3
 810224c:	743b      	strb	r3, [r7, #16]
		temp_buff[5] = (position & 0x0F00) >> 8;
 810224e:	887b      	ldrh	r3, [r7, #2]
 8102250:	0a1b      	lsrs	r3, r3, #8
 8102252:	b29b      	uxth	r3, r3
 8102254:	b2db      	uxtb	r3, r3
 8102256:	f003 030f 	and.w	r3, r3, #15
 810225a:	b2db      	uxtb	r3, r3
 810225c:	747b      	strb	r3, [r7, #17]
		temp_buff[6] = (position & 0x00F0) >> 4;
 810225e:	887b      	ldrh	r3, [r7, #2]
 8102260:	091b      	lsrs	r3, r3, #4
 8102262:	b29b      	uxth	r3, r3
 8102264:	b2db      	uxtb	r3, r3
 8102266:	f003 030f 	and.w	r3, r3, #15
 810226a:	b2db      	uxtb	r3, r3
 810226c:	74bb      	strb	r3, [r7, #18]
		temp_buff[7] = (position & 0x000F) ;
 810226e:	887b      	ldrh	r3, [r7, #2]
 8102270:	b2db      	uxtb	r3, r3
 8102272:	f003 030f 	and.w	r3, r3, #15
 8102276:	b2db      	uxtb	r3, r3
 8102278:	74fb      	strb	r3, [r7, #19]
	}
	else
		return;
	SendCommand(temp_buff, sizeof(temp_buff));
 810227a:	687b      	ldr	r3, [r7, #4]
 810227c:	f107 010c 	add.w	r1, r7, #12
 8102280:	2209      	movs	r2, #9
 8102282:	4618      	mov	r0, r3
 8102284:	f000 ff82 	bl	810318c <_ZN12UartEndpoint11SendCommandEPKhj>
 8102288:	e000      	b.n	810228c <_ZN6DayCam20handleFocus2PositionEt+0x7c>
		return;
 810228a:	bf00      	nop

}
 810228c:	3718      	adds	r7, #24
 810228e:	46bd      	mov	sp, r7
 8102290:	bd80      	pop	{r7, pc}

08102292 <_ZN6DayCam15handleFocusStopEv>:

void DayCam::handleFocusStop(){
 8102292:	b580      	push	{r7, lr}
 8102294:	b082      	sub	sp, #8
 8102296:	af00      	add	r7, sp, #0
 8102298:	6078      	str	r0, [r7, #4]
	SendCommand(focus_stop, sizeof(focus_stop));
 810229a:	6878      	ldr	r0, [r7, #4]
 810229c:	687b      	ldr	r3, [r7, #4]
 810229e:	33d9      	adds	r3, #217	@ 0xd9
 81022a0:	2206      	movs	r2, #6
 81022a2:	4619      	mov	r1, r3
 81022a4:	f000 ff72 	bl	810318c <_ZN12UartEndpoint11SendCommandEPKhj>

}
 81022a8:	bf00      	nop
 81022aa:	3708      	adds	r7, #8
 81022ac:	46bd      	mov	sp, r7
 81022ae:	bd80      	pop	{r7, pc}

081022b0 <_ZNSt5dequeIhSaIhEED1Ev>:
      ~deque()
 81022b0:	b580      	push	{r7, lr}
 81022b2:	b08a      	sub	sp, #40	@ 0x28
 81022b4:	af00      	add	r7, sp, #0
 81022b6:	6078      	str	r0, [r7, #4]
      { _M_destroy_data(begin(), end(), _M_get_Tp_allocator()); }
 81022b8:	f107 0308 	add.w	r3, r7, #8
 81022bc:	6879      	ldr	r1, [r7, #4]
 81022be:	4618      	mov	r0, r3
 81022c0:	f7ff fa15 	bl	81016ee <_ZNSt5dequeIhSaIhEE5beginEv>
 81022c4:	f107 0318 	add.w	r3, r7, #24
 81022c8:	6879      	ldr	r1, [r7, #4]
 81022ca:	4618      	mov	r0, r3
 81022cc:	f000 f8a3 	bl	8102416 <_ZNSt5dequeIhSaIhEE3endEv>
 81022d0:	687b      	ldr	r3, [r7, #4]
 81022d2:	4618      	mov	r0, r3
 81022d4:	f7ff fa1a 	bl	810170c <_ZNSt11_Deque_baseIhSaIhEE19_M_get_Tp_allocatorEv>
 81022d8:	4603      	mov	r3, r0
 81022da:	f107 0218 	add.w	r2, r7, #24
 81022de:	f107 0108 	add.w	r1, r7, #8
 81022e2:	6878      	ldr	r0, [r7, #4]
 81022e4:	f000 f91a 	bl	810251c <_ZNSt5dequeIhSaIhEE15_M_destroy_dataESt15_Deque_iteratorIhRhPhES5_RKS0_>
 81022e8:	687b      	ldr	r3, [r7, #4]
 81022ea:	4618      	mov	r0, r3
 81022ec:	f000 f8f4 	bl	81024d8 <_ZNSt11_Deque_baseIhSaIhEED1Ev>
 81022f0:	687b      	ldr	r3, [r7, #4]
 81022f2:	4618      	mov	r0, r3
 81022f4:	3728      	adds	r7, #40	@ 0x28
 81022f6:	46bd      	mov	sp, r7
 81022f8:	bd80      	pop	{r7, pc}

081022fa <_ZNSt5dequeIhSaIhEEC1ERKS1_>:
      deque(const deque& __x)
 81022fa:	b590      	push	{r4, r7, lr}
 81022fc:	b09d      	sub	sp, #116	@ 0x74
 81022fe:	af02      	add	r7, sp, #8
 8102300:	6078      	str	r0, [r7, #4]
 8102302:	6039      	str	r1, [r7, #0]
	      __x.size())
 8102304:	687c      	ldr	r4, [r7, #4]
      : _Base(_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()),
 8102306:	683b      	ldr	r3, [r7, #0]
 8102308:	4618      	mov	r0, r3
 810230a:	f7ff fbc6 	bl	8101a9a <_ZNKSt11_Deque_baseIhSaIhEE19_M_get_Tp_allocatorEv>
 810230e:	4603      	mov	r3, r0
 8102310:	667b      	str	r3, [r7, #100]	@ 0x64
 8102312:	f107 030c 	add.w	r3, r7, #12
 8102316:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 8102318:	663a      	str	r2, [r7, #96]	@ 0x60
 810231a:	65fb      	str	r3, [r7, #92]	@ 0x5c
 810231c:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 810231e:	65bb      	str	r3, [r7, #88]	@ 0x58
 8102320:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8102322:	657b      	str	r3, [r7, #84]	@ 0x54
 8102324:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8102326:	653b      	str	r3, [r7, #80]	@ 0x50
       *  @return @c __rhs
      */
      [[__gnu__::__always_inline__]]
      static _GLIBCXX20_CONSTEXPR allocator_type
      select_on_container_copy_construction(const allocator_type& __rhs)
      { return __rhs; }
 8102328:	bf00      	nop
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    [[__gnu__::__always_inline__]]
    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
    { return _Base_type::select_on_container_copy_construction(__a); }
 810232a:	bf00      	nop
	      __x.size())
 810232c:	6838      	ldr	r0, [r7, #0]
 810232e:	f000 f902 	bl	8102536 <_ZNKSt5dequeIhSaIhEE4sizeEv>
 8102332:	4602      	mov	r2, r0
 8102334:	f107 030c 	add.w	r3, r7, #12
 8102338:	4619      	mov	r1, r3
 810233a:	4620      	mov	r0, r4
 810233c:	f000 f90d 	bl	810255a <_ZNSt11_Deque_baseIhSaIhEEC1ERKS0_j>
 8102340:	f107 030c 	add.w	r3, r7, #12
 8102344:	4618      	mov	r0, r3
 8102346:	f000 fa3a 	bl	81027be <_ZNSt15__new_allocatorIhED1Ev>
      { std::__uninitialized_copy_a(__x.begin(), __x.end(),
 810234a:	f107 0320 	add.w	r3, r7, #32
 810234e:	6839      	ldr	r1, [r7, #0]
 8102350:	4618      	mov	r0, r3
 8102352:	f000 f916 	bl	8102582 <_ZNKSt5dequeIhSaIhEE5beginEv>
 8102356:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 810235a:	6839      	ldr	r1, [r7, #0]
 810235c:	4618      	mov	r0, r3
 810235e:	f000 f91f 	bl	81025a0 <_ZNKSt5dequeIhSaIhEE3endEv>
				    this->_M_impl._M_start,
 8102362:	687b      	ldr	r3, [r7, #4]
 8102364:	f103 0208 	add.w	r2, r3, #8
      { std::__uninitialized_copy_a(__x.begin(), __x.end(),
 8102368:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 810236c:	4611      	mov	r1, r2
 810236e:	4618      	mov	r0, r3
 8102370:	f7ff f9d7 	bl	8101722 <_ZNSt15_Deque_iteratorIhRhPhEC1ERKS2_>
				    _M_get_Tp_allocator()); }
 8102374:	687b      	ldr	r3, [r7, #4]
 8102376:	4618      	mov	r0, r3
 8102378:	f7ff f9c8 	bl	810170c <_ZNSt11_Deque_baseIhSaIhEE19_M_get_Tp_allocatorEv>
 810237c:	4604      	mov	r4, r0
      { std::__uninitialized_copy_a(__x.begin(), __x.end(),
 810237e:	f107 0010 	add.w	r0, r7, #16
 8102382:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8102386:	f107 0230 	add.w	r2, r7, #48	@ 0x30
 810238a:	f107 0120 	add.w	r1, r7, #32
 810238e:	9400      	str	r4, [sp, #0]
 8102390:	f000 f931 	bl	81025f6 <_ZSt22__uninitialized_copy_aISt15_Deque_iteratorIhRKhPS1_ES0_IhRhPhEhET0_T_S9_S8_RSaIT1_E>
				    _M_get_Tp_allocator()); }
 8102394:	687b      	ldr	r3, [r7, #4]
 8102396:	4618      	mov	r0, r3
 8102398:	376c      	adds	r7, #108	@ 0x6c
 810239a:	46bd      	mov	sp, r7
 810239c:	bd90      	pop	{r4, r7, pc}

0810239e <_ZNSt5dequeIhSaIhEEC1EOS1_>:
      deque(deque&&) = default;
 810239e:	b580      	push	{r7, lr}
 81023a0:	b082      	sub	sp, #8
 81023a2:	af00      	add	r7, sp, #0
 81023a4:	6078      	str	r0, [r7, #4]
 81023a6:	6039      	str	r1, [r7, #0]
 81023a8:	687b      	ldr	r3, [r7, #4]
 81023aa:	683a      	ldr	r2, [r7, #0]
 81023ac:	4611      	mov	r1, r2
 81023ae:	4618      	mov	r0, r3
 81023b0:	f000 f952 	bl	8102658 <_ZNSt11_Deque_baseIhSaIhEEC1EOS1_>
 81023b4:	687b      	ldr	r3, [r7, #4]
 81023b6:	4618      	mov	r0, r3
 81023b8:	3708      	adds	r7, #8
 81023ba:	46bd      	mov	sp, r7
 81023bc:	bd80      	pop	{r7, pc}

081023be <_ZNSt5queueIhSt5dequeIhSaIhEEEC1EOS2_>:
      explicit
      queue(const _Sequence& __c)
      : c(__c) { }

      explicit
      queue(_Sequence&& __c)
 81023be:	b590      	push	{r4, r7, lr}
 81023c0:	b083      	sub	sp, #12
 81023c2:	af00      	add	r7, sp, #0
 81023c4:	6078      	str	r0, [r7, #4]
 81023c6:	6039      	str	r1, [r7, #0]
      : c(std::move(__c)) { }
 81023c8:	687c      	ldr	r4, [r7, #4]
 81023ca:	6838      	ldr	r0, [r7, #0]
 81023cc:	f000 f939 	bl	8102642 <_ZSt4moveIRSt5dequeIhSaIhEEEONSt16remove_referenceIT_E4typeEOS5_>
 81023d0:	4603      	mov	r3, r0
 81023d2:	4619      	mov	r1, r3
 81023d4:	4620      	mov	r0, r4
 81023d6:	f7ff ffe2 	bl	810239e <_ZNSt5dequeIhSaIhEEC1EOS1_>
 81023da:	687b      	ldr	r3, [r7, #4]
 81023dc:	4618      	mov	r0, r3
 81023de:	370c      	adds	r7, #12
 81023e0:	46bd      	mov	sp, r7
 81023e2:	bd90      	pop	{r4, r7, pc}

081023e4 <_ZNSt5dequeIhSaIhEE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 81023e4:	b580      	push	{r7, lr}
 81023e6:	b086      	sub	sp, #24
 81023e8:	af00      	add	r7, sp, #0
 81023ea:	6078      	str	r0, [r7, #4]
	iterator __tmp = end();
 81023ec:	f107 0308 	add.w	r3, r7, #8
 81023f0:	6879      	ldr	r1, [r7, #4]
 81023f2:	4618      	mov	r0, r3
 81023f4:	f000 f80f 	bl	8102416 <_ZNSt5dequeIhSaIhEE3endEv>
	--__tmp;
 81023f8:	f107 0308 	add.w	r3, r7, #8
 81023fc:	4618      	mov	r0, r3
 81023fe:	f000 f950 	bl	81026a2 <_ZNSt15_Deque_iteratorIhRhPhEmmEv>
	return *__tmp;
 8102402:	f107 0308 	add.w	r3, r7, #8
 8102406:	4618      	mov	r0, r3
 8102408:	f7ff fa2e 	bl	8101868 <_ZNKSt15_Deque_iteratorIhRhPhEdeEv>
 810240c:	4603      	mov	r3, r0
      }
 810240e:	4618      	mov	r0, r3
 8102410:	3718      	adds	r7, #24
 8102412:	46bd      	mov	sp, r7
 8102414:	bd80      	pop	{r7, pc}

08102416 <_ZNSt5dequeIhSaIhEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8102416:	b580      	push	{r7, lr}
 8102418:	b082      	sub	sp, #8
 810241a:	af00      	add	r7, sp, #0
 810241c:	6078      	str	r0, [r7, #4]
 810241e:	6039      	str	r1, [r7, #0]
      { return this->_M_impl._M_finish; }
 8102420:	683b      	ldr	r3, [r7, #0]
 8102422:	3318      	adds	r3, #24
 8102424:	4619      	mov	r1, r3
 8102426:	6878      	ldr	r0, [r7, #4]
 8102428:	f7ff f97b 	bl	8101722 <_ZNSt15_Deque_iteratorIhRhPhEC1ERKS2_>
 810242c:	6878      	ldr	r0, [r7, #4]
 810242e:	3708      	adds	r7, #8
 8102430:	46bd      	mov	sp, r7
 8102432:	bd80      	pop	{r7, pc}

08102434 <_ZStneRKSt15_Deque_iteratorIhRhPhES4_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8102434:	b580      	push	{r7, lr}
 8102436:	b082      	sub	sp, #8
 8102438:	af00      	add	r7, sp, #0
 810243a:	6078      	str	r0, [r7, #4]
 810243c:	6039      	str	r1, [r7, #0]
      { return !(__x == __y); }
 810243e:	6839      	ldr	r1, [r7, #0]
 8102440:	6878      	ldr	r0, [r7, #4]
 8102442:	f7ff f9fd 	bl	8101840 <_ZSteqRKSt15_Deque_iteratorIhRhPhES4_>
 8102446:	4603      	mov	r3, r0
 8102448:	f083 0301 	eor.w	r3, r3, #1
 810244c:	b2db      	uxtb	r3, r3
 810244e:	4618      	mov	r0, r3
 8102450:	3708      	adds	r7, #8
 8102452:	46bd      	mov	sp, r7
 8102454:	bd80      	pop	{r7, pc}

08102456 <_ZNSt15_Deque_iteratorIhRhPhEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8102456:	b580      	push	{r7, lr}
 8102458:	b082      	sub	sp, #8
 810245a:	af00      	add	r7, sp, #0
 810245c:	6078      	str	r0, [r7, #4]
	++_M_cur;
 810245e:	687b      	ldr	r3, [r7, #4]
 8102460:	681b      	ldr	r3, [r3, #0]
 8102462:	1c5a      	adds	r2, r3, #1
 8102464:	687b      	ldr	r3, [r7, #4]
 8102466:	601a      	str	r2, [r3, #0]
	if (_M_cur == _M_last)
 8102468:	687b      	ldr	r3, [r7, #4]
 810246a:	681a      	ldr	r2, [r3, #0]
 810246c:	687b      	ldr	r3, [r7, #4]
 810246e:	689b      	ldr	r3, [r3, #8]
 8102470:	429a      	cmp	r2, r3
 8102472:	d10a      	bne.n	810248a <_ZNSt15_Deque_iteratorIhRhPhEppEv+0x34>
	    _M_set_node(_M_node + 1);
 8102474:	687b      	ldr	r3, [r7, #4]
 8102476:	68db      	ldr	r3, [r3, #12]
 8102478:	3304      	adds	r3, #4
 810247a:	4619      	mov	r1, r3
 810247c:	6878      	ldr	r0, [r7, #4]
 810247e:	f7ff fa94 	bl	81019aa <_ZNSt15_Deque_iteratorIhRhPhE11_M_set_nodeEPS1_>
	    _M_cur = _M_first;
 8102482:	687b      	ldr	r3, [r7, #4]
 8102484:	685a      	ldr	r2, [r3, #4]
 8102486:	687b      	ldr	r3, [r7, #4]
 8102488:	601a      	str	r2, [r3, #0]
	return *this;
 810248a:	687b      	ldr	r3, [r7, #4]
      }
 810248c:	4618      	mov	r0, r3
 810248e:	3708      	adds	r7, #8
 8102490:	46bd      	mov	sp, r7
 8102492:	bd80      	pop	{r7, pc}

08102494 <_ZNSt5dequeIhSaIhEE5clearEv>:
       *  elements, and that if the elements themselves are pointers, the
       *  pointed-to memory is not touched in any way.  Managing the pointer is
       *  the user's responsibility.
       */
      void
      clear() _GLIBCXX_NOEXCEPT
 8102494:	b580      	push	{r7, lr}
 8102496:	b086      	sub	sp, #24
 8102498:	af00      	add	r7, sp, #0
 810249a:	6078      	str	r0, [r7, #4]
      { _M_erase_at_end(begin()); }
 810249c:	f107 0308 	add.w	r3, r7, #8
 81024a0:	6879      	ldr	r1, [r7, #4]
 81024a2:	4618      	mov	r0, r3
 81024a4:	f7ff f923 	bl	81016ee <_ZNSt5dequeIhSaIhEE5beginEv>
 81024a8:	f107 0308 	add.w	r3, r7, #8
 81024ac:	4619      	mov	r1, r3
 81024ae:	6878      	ldr	r0, [r7, #4]
 81024b0:	f000 f916 	bl	81026e0 <_ZNSt5dequeIhSaIhEE15_M_erase_at_endESt15_Deque_iteratorIhRhPhE>
 81024b4:	bf00      	nop
 81024b6:	3718      	adds	r7, #24
 81024b8:	46bd      	mov	sp, r7
 81024ba:	bd80      	pop	{r7, pc}

081024bc <_ZNSt11_Deque_baseIhSaIhEE11_Deque_implD1Ev>:
      struct _Deque_impl
 81024bc:	b580      	push	{r7, lr}
 81024be:	b084      	sub	sp, #16
 81024c0:	af00      	add	r7, sp, #0
 81024c2:	6078      	str	r0, [r7, #4]
 81024c4:	687b      	ldr	r3, [r7, #4]
 81024c6:	60fb      	str	r3, [r7, #12]
 81024c8:	68f8      	ldr	r0, [r7, #12]
 81024ca:	f000 f978 	bl	81027be <_ZNSt15__new_allocatorIhED1Ev>
 81024ce:	687b      	ldr	r3, [r7, #4]
 81024d0:	4618      	mov	r0, r3
 81024d2:	3710      	adds	r7, #16
 81024d4:	46bd      	mov	sp, r7
 81024d6:	bd80      	pop	{r7, pc}

081024d8 <_ZNSt11_Deque_baseIhSaIhEED1Ev>:
    _Deque_base<_Tp, _Alloc>::
 81024d8:	b580      	push	{r7, lr}
 81024da:	b082      	sub	sp, #8
 81024dc:	af00      	add	r7, sp, #0
 81024de:	6078      	str	r0, [r7, #4]
      if (this->_M_impl._M_map)
 81024e0:	687b      	ldr	r3, [r7, #4]
 81024e2:	681b      	ldr	r3, [r3, #0]
 81024e4:	2b00      	cmp	r3, #0
 81024e6:	d010      	beq.n	810250a <_ZNSt11_Deque_baseIhSaIhEED1Ev+0x32>
	  _M_destroy_nodes(this->_M_impl._M_start._M_node,
 81024e8:	687b      	ldr	r3, [r7, #4]
 81024ea:	6959      	ldr	r1, [r3, #20]
			   this->_M_impl._M_finish._M_node + 1);
 81024ec:	687b      	ldr	r3, [r7, #4]
 81024ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
	  _M_destroy_nodes(this->_M_impl._M_start._M_node,
 81024f0:	3304      	adds	r3, #4
 81024f2:	461a      	mov	r2, r3
 81024f4:	6878      	ldr	r0, [r7, #4]
 81024f6:	f000 f926 	bl	8102746 <_ZNSt11_Deque_baseIhSaIhEE16_M_destroy_nodesEPPhS3_>
	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
 81024fa:	687b      	ldr	r3, [r7, #4]
 81024fc:	6819      	ldr	r1, [r3, #0]
 81024fe:	687b      	ldr	r3, [r7, #4]
 8102500:	685b      	ldr	r3, [r3, #4]
 8102502:	461a      	mov	r2, r3
 8102504:	6878      	ldr	r0, [r7, #4]
 8102506:	f000 f939 	bl	810277c <_ZNSt11_Deque_baseIhSaIhEE17_M_deallocate_mapEPPhj>
    }
 810250a:	687b      	ldr	r3, [r7, #4]
 810250c:	4618      	mov	r0, r3
 810250e:	f7ff ffd5 	bl	81024bc <_ZNSt11_Deque_baseIhSaIhEE11_Deque_implD1Ev>
 8102512:	687b      	ldr	r3, [r7, #4]
 8102514:	4618      	mov	r0, r3
 8102516:	3708      	adds	r7, #8
 8102518:	46bd      	mov	sp, r7
 810251a:	bd80      	pop	{r7, pc}

0810251c <_ZNSt5dequeIhSaIhEE15_M_destroy_dataESt15_Deque_iteratorIhRhPhES5_RKS0_>:
	void
	_M_destroy_data(iterator __first, iterator __last, const _Alloc1&)
	{ _M_destroy_data_aux(__first, __last); }

      void
      _M_destroy_data(iterator __first, iterator __last,
 810251c:	b480      	push	{r7}
 810251e:	b08d      	sub	sp, #52	@ 0x34
 8102520:	af00      	add	r7, sp, #0
 8102522:	60f8      	str	r0, [r7, #12]
 8102524:	60b9      	str	r1, [r7, #8]
 8102526:	607a      	str	r2, [r7, #4]
 8102528:	603b      	str	r3, [r7, #0]
		      const std::allocator<_Tp>&)
      {
	if (!__has_trivial_destructor(value_type))
	  _M_destroy_data_aux(__first, __last);
      }
 810252a:	bf00      	nop
 810252c:	3734      	adds	r7, #52	@ 0x34
 810252e:	46bd      	mov	sp, r7
 8102530:	f85d 7b04 	ldr.w	r7, [sp], #4
 8102534:	4770      	bx	lr

08102536 <_ZNKSt5dequeIhSaIhEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8102536:	b580      	push	{r7, lr}
 8102538:	b082      	sub	sp, #8
 810253a:	af00      	add	r7, sp, #0
 810253c:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_finish - this->_M_impl._M_start; }
 810253e:	687b      	ldr	r3, [r7, #4]
 8102540:	f103 0218 	add.w	r2, r3, #24
 8102544:	687b      	ldr	r3, [r7, #4]
 8102546:	3308      	adds	r3, #8
 8102548:	4619      	mov	r1, r3
 810254a:	4610      	mov	r0, r2
 810254c:	f000 f942 	bl	81027d4 <_ZStmiRKSt15_Deque_iteratorIhRhPhES4_>
 8102550:	4603      	mov	r3, r0
 8102552:	4618      	mov	r0, r3
 8102554:	3708      	adds	r7, #8
 8102556:	46bd      	mov	sp, r7
 8102558:	bd80      	pop	{r7, pc}

0810255a <_ZNSt11_Deque_baseIhSaIhEEC1ERKS0_j>:
      _Deque_base(const allocator_type& __a, size_t __num_elements)
 810255a:	b580      	push	{r7, lr}
 810255c:	b084      	sub	sp, #16
 810255e:	af00      	add	r7, sp, #0
 8102560:	60f8      	str	r0, [r7, #12]
 8102562:	60b9      	str	r1, [r7, #8]
 8102564:	607a      	str	r2, [r7, #4]
      : _M_impl(__a)
 8102566:	68fb      	ldr	r3, [r7, #12]
 8102568:	68b9      	ldr	r1, [r7, #8]
 810256a:	4618      	mov	r0, r3
 810256c:	f000 f95c 	bl	8102828 <_ZNSt11_Deque_baseIhSaIhEE11_Deque_implC1ERKS0_>
      { _M_initialize_map(__num_elements); }
 8102570:	6879      	ldr	r1, [r7, #4]
 8102572:	68f8      	ldr	r0, [r7, #12]
 8102574:	f7ff f902 	bl	810177c <_ZNSt11_Deque_baseIhSaIhEE17_M_initialize_mapEj>
 8102578:	68fb      	ldr	r3, [r7, #12]
 810257a:	4618      	mov	r0, r3
 810257c:	3710      	adds	r7, #16
 810257e:	46bd      	mov	sp, r7
 8102580:	bd80      	pop	{r7, pc}

08102582 <_ZNKSt5dequeIhSaIhEE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
 8102582:	b580      	push	{r7, lr}
 8102584:	b082      	sub	sp, #8
 8102586:	af00      	add	r7, sp, #0
 8102588:	6078      	str	r0, [r7, #4]
 810258a:	6039      	str	r1, [r7, #0]
      { return this->_M_impl._M_start; }
 810258c:	683b      	ldr	r3, [r7, #0]
 810258e:	3308      	adds	r3, #8
 8102590:	4619      	mov	r1, r3
 8102592:	6878      	ldr	r0, [r7, #4]
 8102594:	f000 f95e 	bl	8102854 <_ZNSt15_Deque_iteratorIhRKhPS0_EC1IS_IhRhPhEvEERKT_>
 8102598:	6878      	ldr	r0, [r7, #4]
 810259a:	3708      	adds	r7, #8
 810259c:	46bd      	mov	sp, r7
 810259e:	bd80      	pop	{r7, pc}

081025a0 <_ZNKSt5dequeIhSaIhEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 81025a0:	b580      	push	{r7, lr}
 81025a2:	b082      	sub	sp, #8
 81025a4:	af00      	add	r7, sp, #0
 81025a6:	6078      	str	r0, [r7, #4]
 81025a8:	6039      	str	r1, [r7, #0]
      { return this->_M_impl._M_finish; }
 81025aa:	683b      	ldr	r3, [r7, #0]
 81025ac:	3318      	adds	r3, #24
 81025ae:	4619      	mov	r1, r3
 81025b0:	6878      	ldr	r0, [r7, #4]
 81025b2:	f000 f94f 	bl	8102854 <_ZNSt15_Deque_iteratorIhRKhPS0_EC1IS_IhRhPhEvEERKT_>
 81025b6:	6878      	ldr	r0, [r7, #4]
 81025b8:	3708      	adds	r7, #8
 81025ba:	46bd      	mov	sp, r7
 81025bc:	bd80      	pop	{r7, pc}

081025be <_ZNSt15_Deque_iteratorIhRKhPS0_EC1ERKS3_>:
      _Deque_iterator(const _Deque_iterator& __x) noexcept
 81025be:	b480      	push	{r7}
 81025c0:	b083      	sub	sp, #12
 81025c2:	af00      	add	r7, sp, #0
 81025c4:	6078      	str	r0, [r7, #4]
 81025c6:	6039      	str	r1, [r7, #0]
       : _M_cur(__x._M_cur), _M_first(__x._M_first),
 81025c8:	683b      	ldr	r3, [r7, #0]
 81025ca:	681a      	ldr	r2, [r3, #0]
 81025cc:	687b      	ldr	r3, [r7, #4]
 81025ce:	601a      	str	r2, [r3, #0]
 81025d0:	683b      	ldr	r3, [r7, #0]
 81025d2:	685a      	ldr	r2, [r3, #4]
 81025d4:	687b      	ldr	r3, [r7, #4]
 81025d6:	605a      	str	r2, [r3, #4]
	 _M_last(__x._M_last), _M_node(__x._M_node) { }
 81025d8:	683b      	ldr	r3, [r7, #0]
 81025da:	689a      	ldr	r2, [r3, #8]
 81025dc:	687b      	ldr	r3, [r7, #4]
 81025de:	609a      	str	r2, [r3, #8]
 81025e0:	683b      	ldr	r3, [r7, #0]
 81025e2:	68da      	ldr	r2, [r3, #12]
 81025e4:	687b      	ldr	r3, [r7, #4]
 81025e6:	60da      	str	r2, [r3, #12]
 81025e8:	687b      	ldr	r3, [r7, #4]
 81025ea:	4618      	mov	r0, r3
 81025ec:	370c      	adds	r7, #12
 81025ee:	46bd      	mov	sp, r7
 81025f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 81025f4:	4770      	bx	lr

081025f6 <_ZSt22__uninitialized_copy_aISt15_Deque_iteratorIhRKhPS1_ES0_IhRhPhEhET0_T_S9_S8_RSaIT1_E>:

#if _GLIBCXX_HOSTED
  template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 81025f6:	b580      	push	{r7, lr}
 81025f8:	b090      	sub	sp, #64	@ 0x40
 81025fa:	af00      	add	r7, sp, #0
 81025fc:	60f8      	str	r0, [r7, #12]
 81025fe:	60b9      	str	r1, [r7, #8]
 8102600:	607a      	str	r2, [r7, #4]
 8102602:	603b      	str	r3, [r7, #0]
    {
#ifdef __cpp_lib_is_constant_evaluated
      if (std::is_constant_evaluated())
	return std::__do_uninit_copy(__first, __last, __result);
#endif
      return std::uninitialized_copy(__first, __last, __result);
 8102604:	f107 0310 	add.w	r3, r7, #16
 8102608:	68b9      	ldr	r1, [r7, #8]
 810260a:	4618      	mov	r0, r3
 810260c:	f7ff ffd7 	bl	81025be <_ZNSt15_Deque_iteratorIhRKhPS0_EC1ERKS3_>
 8102610:	f107 0320 	add.w	r3, r7, #32
 8102614:	6879      	ldr	r1, [r7, #4]
 8102616:	4618      	mov	r0, r3
 8102618:	f7ff ffd1 	bl	81025be <_ZNSt15_Deque_iteratorIhRKhPS0_EC1ERKS3_>
 810261c:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8102620:	6839      	ldr	r1, [r7, #0]
 8102622:	4618      	mov	r0, r3
 8102624:	f7ff f87d 	bl	8101722 <_ZNSt15_Deque_iteratorIhRhPhEC1ERKS2_>
 8102628:	68f8      	ldr	r0, [r7, #12]
 810262a:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 810262e:	f107 0220 	add.w	r2, r7, #32
 8102632:	f107 0110 	add.w	r1, r7, #16
 8102636:	f000 f929 	bl	810288c <_ZSt18uninitialized_copyISt15_Deque_iteratorIhRKhPS1_ES0_IhRhPhEET0_T_S9_S8_>
    }
 810263a:	68f8      	ldr	r0, [r7, #12]
 810263c:	3740      	adds	r7, #64	@ 0x40
 810263e:	46bd      	mov	sp, r7
 8102640:	bd80      	pop	{r7, pc}

08102642 <_ZSt4moveIRSt5dequeIhSaIhEEEONSt16remove_referenceIT_E4typeEOS5_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
 8102642:	b480      	push	{r7}
 8102644:	b083      	sub	sp, #12
 8102646:	af00      	add	r7, sp, #0
 8102648:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 810264a:	687b      	ldr	r3, [r7, #4]
 810264c:	4618      	mov	r0, r3
 810264e:	370c      	adds	r7, #12
 8102650:	46bd      	mov	sp, r7
 8102652:	f85d 7b04 	ldr.w	r7, [sp], #4
 8102656:	4770      	bx	lr

08102658 <_ZNSt11_Deque_baseIhSaIhEEC1EOS1_>:
      _Deque_base(_Deque_base&& __x)
 8102658:	b590      	push	{r4, r7, lr}
 810265a:	b083      	sub	sp, #12
 810265c:	af00      	add	r7, sp, #0
 810265e:	6078      	str	r0, [r7, #4]
 8102660:	6039      	str	r1, [r7, #0]
      : _M_impl(std::move(__x._M_get_Tp_allocator()))
 8102662:	687c      	ldr	r4, [r7, #4]
 8102664:	6838      	ldr	r0, [r7, #0]
 8102666:	f7ff f851 	bl	810170c <_ZNSt11_Deque_baseIhSaIhEE19_M_get_Tp_allocatorEv>
 810266a:	4603      	mov	r3, r0
 810266c:	4618      	mov	r0, r3
 810266e:	f000 f939 	bl	81028e4 <_ZSt4moveIRSaIhEEONSt16remove_referenceIT_E4typeEOS3_>
 8102672:	4603      	mov	r3, r0
 8102674:	4619      	mov	r1, r3
 8102676:	4620      	mov	r0, r4
 8102678:	f000 f93f 	bl	81028fa <_ZNSt11_Deque_baseIhSaIhEE11_Deque_implC1EOS0_>
	_M_initialize_map(0);
 810267c:	2100      	movs	r1, #0
 810267e:	6878      	ldr	r0, [r7, #4]
 8102680:	f7ff f87c 	bl	810177c <_ZNSt11_Deque_baseIhSaIhEE17_M_initialize_mapEj>
	if (__x._M_impl._M_map)
 8102684:	683b      	ldr	r3, [r7, #0]
 8102686:	681b      	ldr	r3, [r3, #0]
 8102688:	2b00      	cmp	r3, #0
 810268a:	d005      	beq.n	8102698 <_ZNSt11_Deque_baseIhSaIhEEC1EOS1_+0x40>
	  this->_M_impl._M_swap_data(__x._M_impl);
 810268c:	687b      	ldr	r3, [r7, #4]
 810268e:	683a      	ldr	r2, [r7, #0]
 8102690:	4611      	mov	r1, r2
 8102692:	4618      	mov	r0, r3
 8102694:	f000 f94a 	bl	810292c <_ZNSt11_Deque_baseIhSaIhEE16_Deque_impl_data12_M_swap_dataERS2_>
      }
 8102698:	687b      	ldr	r3, [r7, #4]
 810269a:	4618      	mov	r0, r3
 810269c:	370c      	adds	r7, #12
 810269e:	46bd      	mov	sp, r7
 81026a0:	bd90      	pop	{r4, r7, pc}

081026a2 <_ZNSt15_Deque_iteratorIhRhPhEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 81026a2:	b580      	push	{r7, lr}
 81026a4:	b082      	sub	sp, #8
 81026a6:	af00      	add	r7, sp, #0
 81026a8:	6078      	str	r0, [r7, #4]
	if (_M_cur == _M_first)
 81026aa:	687b      	ldr	r3, [r7, #4]
 81026ac:	681a      	ldr	r2, [r3, #0]
 81026ae:	687b      	ldr	r3, [r7, #4]
 81026b0:	685b      	ldr	r3, [r3, #4]
 81026b2:	429a      	cmp	r2, r3
 81026b4:	d10a      	bne.n	81026cc <_ZNSt15_Deque_iteratorIhRhPhEmmEv+0x2a>
	    _M_set_node(_M_node - 1);
 81026b6:	687b      	ldr	r3, [r7, #4]
 81026b8:	68db      	ldr	r3, [r3, #12]
 81026ba:	3b04      	subs	r3, #4
 81026bc:	4619      	mov	r1, r3
 81026be:	6878      	ldr	r0, [r7, #4]
 81026c0:	f7ff f973 	bl	81019aa <_ZNSt15_Deque_iteratorIhRhPhE11_M_set_nodeEPS1_>
	    _M_cur = _M_last;
 81026c4:	687b      	ldr	r3, [r7, #4]
 81026c6:	689a      	ldr	r2, [r3, #8]
 81026c8:	687b      	ldr	r3, [r7, #4]
 81026ca:	601a      	str	r2, [r3, #0]
	--_M_cur;
 81026cc:	687b      	ldr	r3, [r7, #4]
 81026ce:	681b      	ldr	r3, [r3, #0]
 81026d0:	1e5a      	subs	r2, r3, #1
 81026d2:	687b      	ldr	r3, [r7, #4]
 81026d4:	601a      	str	r2, [r3, #0]
	return *this;
 81026d6:	687b      	ldr	r3, [r7, #4]
      }
 81026d8:	4618      	mov	r0, r3
 81026da:	3708      	adds	r7, #8
 81026dc:	46bd      	mov	sp, r7
 81026de:	bd80      	pop	{r7, pc}

081026e0 <_ZNSt5dequeIhSaIhEE15_M_erase_at_endESt15_Deque_iteratorIhRhPhE>:
      }

      // Called by erase(q1, q2), resize(), clear(), _M_assign_aux,
      // _M_fill_assign, operator=.
      void
      _M_erase_at_end(iterator __pos)
 81026e0:	b590      	push	{r4, r7, lr}
 81026e2:	b08b      	sub	sp, #44	@ 0x2c
 81026e4:	af00      	add	r7, sp, #0
 81026e6:	6078      	str	r0, [r7, #4]
 81026e8:	6039      	str	r1, [r7, #0]
      {
	_M_destroy_data(__pos, end(), _M_get_Tp_allocator());
 81026ea:	f107 0308 	add.w	r3, r7, #8
 81026ee:	6839      	ldr	r1, [r7, #0]
 81026f0:	4618      	mov	r0, r3
 81026f2:	f7ff f816 	bl	8101722 <_ZNSt15_Deque_iteratorIhRhPhEC1ERKS2_>
 81026f6:	f107 0318 	add.w	r3, r7, #24
 81026fa:	6879      	ldr	r1, [r7, #4]
 81026fc:	4618      	mov	r0, r3
 81026fe:	f7ff fe8a 	bl	8102416 <_ZNSt5dequeIhSaIhEE3endEv>
 8102702:	687b      	ldr	r3, [r7, #4]
 8102704:	4618      	mov	r0, r3
 8102706:	f7ff f801 	bl	810170c <_ZNSt11_Deque_baseIhSaIhEE19_M_get_Tp_allocatorEv>
 810270a:	4603      	mov	r3, r0
 810270c:	f107 0218 	add.w	r2, r7, #24
 8102710:	f107 0108 	add.w	r1, r7, #8
 8102714:	6878      	ldr	r0, [r7, #4]
 8102716:	f7ff ff01 	bl	810251c <_ZNSt5dequeIhSaIhEE15_M_destroy_dataESt15_Deque_iteratorIhRhPhES5_RKS0_>
	_M_destroy_nodes(__pos._M_node + 1,
 810271a:	6878      	ldr	r0, [r7, #4]
 810271c:	683b      	ldr	r3, [r7, #0]
 810271e:	68db      	ldr	r3, [r3, #12]
 8102720:	1d19      	adds	r1, r3, #4
			 this->_M_impl._M_finish._M_node + 1);
 8102722:	687b      	ldr	r3, [r7, #4]
 8102724:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
	_M_destroy_nodes(__pos._M_node + 1,
 8102726:	3304      	adds	r3, #4
 8102728:	461a      	mov	r2, r3
 810272a:	f000 f80c 	bl	8102746 <_ZNSt11_Deque_baseIhSaIhEE16_M_destroy_nodesEPPhS3_>
	this->_M_impl._M_finish = __pos;
 810272e:	687b      	ldr	r3, [r7, #4]
 8102730:	683a      	ldr	r2, [r7, #0]
 8102732:	f103 0418 	add.w	r4, r3, #24
 8102736:	4613      	mov	r3, r2
 8102738:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 810273a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
      }
 810273e:	bf00      	nop
 8102740:	372c      	adds	r7, #44	@ 0x2c
 8102742:	46bd      	mov	sp, r7
 8102744:	bd90      	pop	{r4, r7, pc}

08102746 <_ZNSt11_Deque_baseIhSaIhEE16_M_destroy_nodesEPPhS3_>:
    _Deque_base<_Tp, _Alloc>::
 8102746:	b580      	push	{r7, lr}
 8102748:	b086      	sub	sp, #24
 810274a:	af00      	add	r7, sp, #0
 810274c:	60f8      	str	r0, [r7, #12]
 810274e:	60b9      	str	r1, [r7, #8]
 8102750:	607a      	str	r2, [r7, #4]
      for (_Map_pointer __n = __nstart; __n < __nfinish; ++__n)
 8102752:	68bb      	ldr	r3, [r7, #8]
 8102754:	617b      	str	r3, [r7, #20]
 8102756:	e008      	b.n	810276a <_ZNSt11_Deque_baseIhSaIhEE16_M_destroy_nodesEPPhS3_+0x24>
	_M_deallocate_node(*__n);
 8102758:	697b      	ldr	r3, [r7, #20]
 810275a:	681b      	ldr	r3, [r3, #0]
 810275c:	4619      	mov	r1, r3
 810275e:	68f8      	ldr	r0, [r7, #12]
 8102760:	f7ff f93b 	bl	81019da <_ZNSt11_Deque_baseIhSaIhEE18_M_deallocate_nodeEPh>
      for (_Map_pointer __n = __nstart; __n < __nfinish; ++__n)
 8102764:	697b      	ldr	r3, [r7, #20]
 8102766:	3304      	adds	r3, #4
 8102768:	617b      	str	r3, [r7, #20]
 810276a:	697a      	ldr	r2, [r7, #20]
 810276c:	687b      	ldr	r3, [r7, #4]
 810276e:	429a      	cmp	r2, r3
 8102770:	d3f2      	bcc.n	8102758 <_ZNSt11_Deque_baseIhSaIhEE16_M_destroy_nodesEPPhS3_+0x12>
    }
 8102772:	bf00      	nop
 8102774:	bf00      	nop
 8102776:	3718      	adds	r7, #24
 8102778:	46bd      	mov	sp, r7
 810277a:	bd80      	pop	{r7, pc}

0810277c <_ZNSt11_Deque_baseIhSaIhEE17_M_deallocate_mapEPPhj>:
      _M_deallocate_map(_Map_pointer __p, size_t __n) _GLIBCXX_NOEXCEPT
 810277c:	b580      	push	{r7, lr}
 810277e:	b088      	sub	sp, #32
 8102780:	af00      	add	r7, sp, #0
 8102782:	60f8      	str	r0, [r7, #12]
 8102784:	60b9      	str	r1, [r7, #8]
 8102786:	607a      	str	r2, [r7, #4]
	_Map_alloc_type __map_alloc = _M_get_map_allocator();
 8102788:	f107 0314 	add.w	r3, r7, #20
 810278c:	68f9      	ldr	r1, [r7, #12]
 810278e:	4618      	mov	r0, r3
 8102790:	f7ff f93b 	bl	8101a0a <_ZNKSt11_Deque_baseIhSaIhEE20_M_get_map_allocatorEv>
 8102794:	68bb      	ldr	r3, [r7, #8]
 8102796:	61fb      	str	r3, [r7, #28]
 8102798:	687b      	ldr	r3, [r7, #4]
 810279a:	61bb      	str	r3, [r7, #24]
      { __a.deallocate(__p, __n); }
 810279c:	f107 0314 	add.w	r3, r7, #20
 81027a0:	69ba      	ldr	r2, [r7, #24]
 81027a2:	69f9      	ldr	r1, [r7, #28]
 81027a4:	4618      	mov	r0, r3
 81027a6:	f000 f927 	bl	81029f8 <_ZNSt15__new_allocatorIPhE10deallocateEPS0_j>
 81027aa:	bf00      	nop
 81027ac:	f107 0314 	add.w	r3, r7, #20
 81027b0:	4618      	mov	r0, r3
 81027b2:	f7ff f97d 	bl	8101ab0 <_ZNSt15__new_allocatorIPhED1Ev>
      }
 81027b6:	bf00      	nop
 81027b8:	3720      	adds	r7, #32
 81027ba:	46bd      	mov	sp, r7
 81027bc:	bd80      	pop	{r7, pc}

081027be <_ZNSt15__new_allocatorIhED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 81027be:	b480      	push	{r7}
 81027c0:	b083      	sub	sp, #12
 81027c2:	af00      	add	r7, sp, #0
 81027c4:	6078      	str	r0, [r7, #4]
 81027c6:	687b      	ldr	r3, [r7, #4]
 81027c8:	4618      	mov	r0, r3
 81027ca:	370c      	adds	r7, #12
 81027cc:	46bd      	mov	sp, r7
 81027ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 81027d2:	4770      	bx	lr

081027d4 <_ZStmiRKSt15_Deque_iteratorIhRhPhES4_>:
      operator-(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 81027d4:	b580      	push	{r7, lr}
 81027d6:	b082      	sub	sp, #8
 81027d8:	af00      	add	r7, sp, #0
 81027da:	6078      	str	r0, [r7, #4]
 81027dc:	6039      	str	r1, [r7, #0]
	return difference_type(_S_buffer_size())
 81027de:	f7ff f954 	bl	8101a8a <_ZNSt15_Deque_iteratorIhRhPhE14_S_buffer_sizeEv>
 81027e2:	4603      	mov	r3, r0
 81027e4:	4619      	mov	r1, r3
	  * (__x._M_node - __y._M_node - bool(__x._M_node))
 81027e6:	687b      	ldr	r3, [r7, #4]
 81027e8:	68da      	ldr	r2, [r3, #12]
 81027ea:	683b      	ldr	r3, [r7, #0]
 81027ec:	68db      	ldr	r3, [r3, #12]
 81027ee:	1ad3      	subs	r3, r2, r3
 81027f0:	109b      	asrs	r3, r3, #2
 81027f2:	461a      	mov	r2, r3
 81027f4:	687b      	ldr	r3, [r7, #4]
 81027f6:	68db      	ldr	r3, [r3, #12]
 81027f8:	2b00      	cmp	r3, #0
 81027fa:	bf14      	ite	ne
 81027fc:	2301      	movne	r3, #1
 81027fe:	2300      	moveq	r3, #0
 8102800:	b2db      	uxtb	r3, r3
 8102802:	1ad3      	subs	r3, r2, r3
 8102804:	fb03 f201 	mul.w	r2, r3, r1
	  + (__x._M_cur - __x._M_first)
 8102808:	687b      	ldr	r3, [r7, #4]
 810280a:	6819      	ldr	r1, [r3, #0]
 810280c:	687b      	ldr	r3, [r7, #4]
 810280e:	685b      	ldr	r3, [r3, #4]
 8102810:	1acb      	subs	r3, r1, r3
 8102812:	441a      	add	r2, r3
	  + (__y._M_last - __y._M_cur);
 8102814:	683b      	ldr	r3, [r7, #0]
 8102816:	6899      	ldr	r1, [r3, #8]
 8102818:	683b      	ldr	r3, [r7, #0]
 810281a:	681b      	ldr	r3, [r3, #0]
 810281c:	1acb      	subs	r3, r1, r3
 810281e:	4413      	add	r3, r2
      }
 8102820:	4618      	mov	r0, r3
 8102822:	3708      	adds	r7, #8
 8102824:	46bd      	mov	sp, r7
 8102826:	bd80      	pop	{r7, pc}

08102828 <_ZNSt11_Deque_baseIhSaIhEE11_Deque_implC1ERKS0_>:
	_Deque_impl(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 8102828:	b580      	push	{r7, lr}
 810282a:	b086      	sub	sp, #24
 810282c:	af00      	add	r7, sp, #0
 810282e:	6078      	str	r0, [r7, #4]
 8102830:	6039      	str	r1, [r7, #0]
 8102832:	687b      	ldr	r3, [r7, #4]
 8102834:	617b      	str	r3, [r7, #20]
 8102836:	683b      	ldr	r3, [r7, #0]
 8102838:	613b      	str	r3, [r7, #16]
 810283a:	697b      	ldr	r3, [r7, #20]
 810283c:	60fb      	str	r3, [r7, #12]
 810283e:	693b      	ldr	r3, [r7, #16]
 8102840:	60bb      	str	r3, [r7, #8]
	: _Tp_alloc_type(__a)
 8102842:	687b      	ldr	r3, [r7, #4]
 8102844:	4618      	mov	r0, r3
 8102846:	f7ff f847 	bl	81018d8 <_ZNSt11_Deque_baseIhSaIhEE16_Deque_impl_dataC1Ev>
	{ }
 810284a:	687b      	ldr	r3, [r7, #4]
 810284c:	4618      	mov	r0, r3
 810284e:	3718      	adds	r7, #24
 8102850:	46bd      	mov	sp, r7
 8102852:	bd80      	pop	{r7, pc}

08102854 <_ZNSt15_Deque_iteratorIhRKhPS0_EC1IS_IhRhPhEvEERKT_>:
       _Deque_iterator(const _Iter& __x) noexcept
 8102854:	b480      	push	{r7}
 8102856:	b083      	sub	sp, #12
 8102858:	af00      	add	r7, sp, #0
 810285a:	6078      	str	r0, [r7, #4]
 810285c:	6039      	str	r1, [r7, #0]
       : _M_cur(__x._M_cur), _M_first(__x._M_first),
 810285e:	683b      	ldr	r3, [r7, #0]
 8102860:	681a      	ldr	r2, [r3, #0]
 8102862:	687b      	ldr	r3, [r7, #4]
 8102864:	601a      	str	r2, [r3, #0]
 8102866:	683b      	ldr	r3, [r7, #0]
 8102868:	685a      	ldr	r2, [r3, #4]
 810286a:	687b      	ldr	r3, [r7, #4]
 810286c:	605a      	str	r2, [r3, #4]
	 _M_last(__x._M_last), _M_node(__x._M_node) { }
 810286e:	683b      	ldr	r3, [r7, #0]
 8102870:	689a      	ldr	r2, [r3, #8]
 8102872:	687b      	ldr	r3, [r7, #4]
 8102874:	609a      	str	r2, [r3, #8]
 8102876:	683b      	ldr	r3, [r7, #0]
 8102878:	68da      	ldr	r2, [r3, #12]
 810287a:	687b      	ldr	r3, [r7, #4]
 810287c:	60da      	str	r2, [r3, #12]
 810287e:	687b      	ldr	r3, [r7, #4]
 8102880:	4618      	mov	r0, r3
 8102882:	370c      	adds	r7, #12
 8102884:	46bd      	mov	sp, r7
 8102886:	f85d 7b04 	ldr.w	r7, [sp], #4
 810288a:	4770      	bx	lr

0810288c <_ZSt18uninitialized_copyISt15_Deque_iteratorIhRKhPS1_ES0_IhRhPhEET0_T_S9_S8_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 810288c:	b580      	push	{r7, lr}
 810288e:	b092      	sub	sp, #72	@ 0x48
 8102890:	af00      	add	r7, sp, #0
 8102892:	60f8      	str	r0, [r7, #12]
 8102894:	60b9      	str	r1, [r7, #8]
 8102896:	607a      	str	r2, [r7, #4]
 8102898:	603b      	str	r3, [r7, #0]
      const bool __can_memmove = __is_trivial(_ValueType1);
 810289a:	2301      	movs	r3, #1
 810289c:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
      const bool __assignable
 81028a0:	2301      	movs	r3, #1
 81028a2:	f887 3046 	strb.w	r3, [r7, #70]	@ 0x46
	__uninit_copy(__first, __last, __result);
 81028a6:	f107 0314 	add.w	r3, r7, #20
 81028aa:	68b9      	ldr	r1, [r7, #8]
 81028ac:	4618      	mov	r0, r3
 81028ae:	f7ff fe86 	bl	81025be <_ZNSt15_Deque_iteratorIhRKhPS0_EC1ERKS3_>
 81028b2:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 81028b6:	6879      	ldr	r1, [r7, #4]
 81028b8:	4618      	mov	r0, r3
 81028ba:	f7ff fe80 	bl	81025be <_ZNSt15_Deque_iteratorIhRKhPS0_EC1ERKS3_>
 81028be:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 81028c2:	6839      	ldr	r1, [r7, #0]
 81028c4:	4618      	mov	r0, r3
 81028c6:	f7fe ff2c 	bl	8101722 <_ZNSt15_Deque_iteratorIhRhPhEC1ERKS2_>
 81028ca:	68f8      	ldr	r0, [r7, #12]
 81028cc:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 81028d0:	f107 0224 	add.w	r2, r7, #36	@ 0x24
 81028d4:	f107 0114 	add.w	r1, r7, #20
 81028d8:	f000 f835 	bl	8102946 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt15_Deque_iteratorIhRKhPS3_ES2_IhRhPhEEET0_T_SB_SA_>
    }
 81028dc:	68f8      	ldr	r0, [r7, #12]
 81028de:	3748      	adds	r7, #72	@ 0x48
 81028e0:	46bd      	mov	sp, r7
 81028e2:	bd80      	pop	{r7, pc}

081028e4 <_ZSt4moveIRSaIhEEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
 81028e4:	b480      	push	{r7}
 81028e6:	b083      	sub	sp, #12
 81028e8:	af00      	add	r7, sp, #0
 81028ea:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 81028ec:	687b      	ldr	r3, [r7, #4]
 81028ee:	4618      	mov	r0, r3
 81028f0:	370c      	adds	r7, #12
 81028f2:	46bd      	mov	sp, r7
 81028f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 81028f8:	4770      	bx	lr

081028fa <_ZNSt11_Deque_baseIhSaIhEE11_Deque_implC1EOS0_>:
	_Deque_impl(_Tp_alloc_type&& __a) noexcept
 81028fa:	b580      	push	{r7, lr}
 81028fc:	b086      	sub	sp, #24
 81028fe:	af00      	add	r7, sp, #0
 8102900:	6078      	str	r0, [r7, #4]
 8102902:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(std::move(__a))
 8102904:	6838      	ldr	r0, [r7, #0]
 8102906:	f7ff ffed 	bl	81028e4 <_ZSt4moveIRSaIhEEONSt16remove_referenceIT_E4typeEOS3_>
 810290a:	4602      	mov	r2, r0
 810290c:	687b      	ldr	r3, [r7, #4]
 810290e:	617b      	str	r3, [r7, #20]
 8102910:	613a      	str	r2, [r7, #16]
 8102912:	697b      	ldr	r3, [r7, #20]
 8102914:	60fb      	str	r3, [r7, #12]
 8102916:	693b      	ldr	r3, [r7, #16]
 8102918:	60bb      	str	r3, [r7, #8]
 810291a:	687b      	ldr	r3, [r7, #4]
 810291c:	4618      	mov	r0, r3
 810291e:	f7fe ffdb 	bl	81018d8 <_ZNSt11_Deque_baseIhSaIhEE16_Deque_impl_dataC1Ev>
	{ }
 8102922:	687b      	ldr	r3, [r7, #4]
 8102924:	4618      	mov	r0, r3
 8102926:	3718      	adds	r7, #24
 8102928:	46bd      	mov	sp, r7
 810292a:	bd80      	pop	{r7, pc}

0810292c <_ZNSt11_Deque_baseIhSaIhEE16_Deque_impl_data12_M_swap_dataERS2_>:
	_M_swap_data(_Deque_impl_data& __x) _GLIBCXX_NOEXCEPT
 810292c:	b580      	push	{r7, lr}
 810292e:	b082      	sub	sp, #8
 8102930:	af00      	add	r7, sp, #0
 8102932:	6078      	str	r0, [r7, #4]
 8102934:	6039      	str	r1, [r7, #0]
	  std::swap(*this, __x);
 8102936:	6839      	ldr	r1, [r7, #0]
 8102938:	6878      	ldr	r0, [r7, #4]
 810293a:	f000 f82a 	bl	8102992 <_ZSt4swapINSt11_Deque_baseIhSaIhEE16_Deque_impl_dataEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SI_>
	}
 810293e:	bf00      	nop
 8102940:	3708      	adds	r7, #8
 8102942:	46bd      	mov	sp, r7
 8102944:	bd80      	pop	{r7, pc}

08102946 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt15_Deque_iteratorIhRKhPS3_ES2_IhRhPhEEET0_T_SB_SA_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 8102946:	b580      	push	{r7, lr}
 8102948:	b090      	sub	sp, #64	@ 0x40
 810294a:	af00      	add	r7, sp, #0
 810294c:	60f8      	str	r0, [r7, #12]
 810294e:	60b9      	str	r1, [r7, #8]
 8102950:	607a      	str	r2, [r7, #4]
 8102952:	603b      	str	r3, [r7, #0]
        { return std::copy(__first, __last, __result); }
 8102954:	f107 0310 	add.w	r3, r7, #16
 8102958:	68b9      	ldr	r1, [r7, #8]
 810295a:	4618      	mov	r0, r3
 810295c:	f7ff fe2f 	bl	81025be <_ZNSt15_Deque_iteratorIhRKhPS0_EC1ERKS3_>
 8102960:	f107 0320 	add.w	r3, r7, #32
 8102964:	6879      	ldr	r1, [r7, #4]
 8102966:	4618      	mov	r0, r3
 8102968:	f7ff fe29 	bl	81025be <_ZNSt15_Deque_iteratorIhRKhPS0_EC1ERKS3_>
 810296c:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8102970:	6839      	ldr	r1, [r7, #0]
 8102972:	4618      	mov	r0, r3
 8102974:	f7fe fed5 	bl	8101722 <_ZNSt15_Deque_iteratorIhRhPhEC1ERKS2_>
 8102978:	68f8      	ldr	r0, [r7, #12]
 810297a:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 810297e:	f107 0220 	add.w	r2, r7, #32
 8102982:	f107 0110 	add.w	r1, r7, #16
 8102986:	f000 f847 	bl	8102a18 <_ZSt4copyISt15_Deque_iteratorIhRKhPS1_ES0_IhRhPhEET0_T_S9_S8_>
 810298a:	68f8      	ldr	r0, [r7, #12]
 810298c:	3740      	adds	r7, #64	@ 0x40
 810298e:	46bd      	mov	sp, r7
 8102990:	bd80      	pop	{r7, pc}

08102992 <_ZSt4swapINSt11_Deque_baseIhSaIhEE16_Deque_impl_dataEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SI_>:
			      is_move_constructible<_Tp>,
			      is_move_assignable<_Tp>>::value>::type
#else
    void
#endif
    swap(_Tp& __a, _Tp& __b)
 8102992:	b5b0      	push	{r4, r5, r7, lr}
 8102994:	b08c      	sub	sp, #48	@ 0x30
 8102996:	af00      	add	r7, sp, #0
 8102998:	6078      	str	r0, [r7, #4]
 810299a:	6039      	str	r1, [r7, #0]
    {
#if __cplusplus < 201103L
      // concept requirements
      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
#endif
      _Tp __tmp = _GLIBCXX_MOVE(__a);
 810299c:	6878      	ldr	r0, [r7, #4]
 810299e:	f000 f871 	bl	8102a84 <_ZSt4moveIRNSt11_Deque_baseIhSaIhEE16_Deque_impl_dataEEONSt16remove_referenceIT_E4typeEOS6_>
 81029a2:	4602      	mov	r2, r0
 81029a4:	f107 0308 	add.w	r3, r7, #8
 81029a8:	4611      	mov	r1, r2
 81029aa:	4618      	mov	r0, r3
 81029ac:	f000 f899 	bl	8102ae2 <_ZNSt11_Deque_baseIhSaIhEE16_Deque_impl_dataC1EOS2_>
      __a = _GLIBCXX_MOVE(__b);
 81029b0:	6838      	ldr	r0, [r7, #0]
 81029b2:	f000 f867 	bl	8102a84 <_ZSt4moveIRNSt11_Deque_baseIhSaIhEE16_Deque_impl_dataEEONSt16remove_referenceIT_E4typeEOS6_>
 81029b6:	4602      	mov	r2, r0
 81029b8:	687b      	ldr	r3, [r7, #4]
 81029ba:	461c      	mov	r4, r3
 81029bc:	4615      	mov	r5, r2
 81029be:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 81029c0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 81029c2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 81029c4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 81029c6:	e895 0003 	ldmia.w	r5, {r0, r1}
 81029ca:	e884 0003 	stmia.w	r4, {r0, r1}
      __b = _GLIBCXX_MOVE(__tmp);
 81029ce:	f107 0308 	add.w	r3, r7, #8
 81029d2:	4618      	mov	r0, r3
 81029d4:	f000 f856 	bl	8102a84 <_ZSt4moveIRNSt11_Deque_baseIhSaIhEE16_Deque_impl_dataEEONSt16remove_referenceIT_E4typeEOS6_>
 81029d8:	4602      	mov	r2, r0
 81029da:	683b      	ldr	r3, [r7, #0]
 81029dc:	461c      	mov	r4, r3
 81029de:	4615      	mov	r5, r2
 81029e0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 81029e2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 81029e4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 81029e6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 81029e8:	e895 0003 	ldmia.w	r5, {r0, r1}
 81029ec:	e884 0003 	stmia.w	r4, {r0, r1}
    }
 81029f0:	bf00      	nop
 81029f2:	3730      	adds	r7, #48	@ 0x30
 81029f4:	46bd      	mov	sp, r7
 81029f6:	bdb0      	pop	{r4, r5, r7, pc}

081029f8 <_ZNSt15__new_allocatorIPhE10deallocateEPS0_j>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
 81029f8:	b580      	push	{r7, lr}
 81029fa:	b084      	sub	sp, #16
 81029fc:	af00      	add	r7, sp, #0
 81029fe:	60f8      	str	r0, [r7, #12]
 8102a00:	60b9      	str	r1, [r7, #8]
 8102a02:	607a      	str	r2, [r7, #4]
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
 8102a04:	687b      	ldr	r3, [r7, #4]
 8102a06:	009b      	lsls	r3, r3, #2
 8102a08:	4619      	mov	r1, r3
 8102a0a:	68b8      	ldr	r0, [r7, #8]
 8102a0c:	f00b ff0a 	bl	810e824 <_ZdlPvj>
      }
 8102a10:	bf00      	nop
 8102a12:	3710      	adds	r7, #16
 8102a14:	46bd      	mov	sp, r7
 8102a16:	bd80      	pop	{r7, pc}

08102a18 <_ZSt4copyISt15_Deque_iteratorIhRKhPS1_ES0_IhRhPhEET0_T_S9_S8_>:
   *  within [first,last).
  */
  template<typename _II, typename _OI>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    copy(_II __first, _II __last, _OI __result)
 8102a18:	b580      	push	{r7, lr}
 8102a1a:	b098      	sub	sp, #96	@ 0x60
 8102a1c:	af00      	add	r7, sp, #0
 8102a1e:	60f8      	str	r0, [r7, #12]
 8102a20:	60b9      	str	r1, [r7, #8]
 8102a22:	607a      	str	r2, [r7, #4]
 8102a24:	603b      	str	r3, [r7, #0]
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::reference>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 8102a26:	f107 0320 	add.w	r3, r7, #32
 8102a2a:	68b9      	ldr	r1, [r7, #8]
 8102a2c:	4618      	mov	r0, r3
 8102a2e:	f7ff fdc6 	bl	81025be <_ZNSt15_Deque_iteratorIhRKhPS0_EC1ERKS3_>
 8102a32:	f107 0310 	add.w	r3, r7, #16
 8102a36:	f107 0220 	add.w	r2, r7, #32
 8102a3a:	4611      	mov	r1, r2
 8102a3c:	4618      	mov	r0, r3
 8102a3e:	f000 f870 	bl	8102b22 <_ZSt12__miter_baseISt15_Deque_iteratorIhRKhPS1_EET_S5_>
 8102a42:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8102a46:	6879      	ldr	r1, [r7, #4]
 8102a48:	4618      	mov	r0, r3
 8102a4a:	f7ff fdb8 	bl	81025be <_ZNSt15_Deque_iteratorIhRKhPS0_EC1ERKS3_>
 8102a4e:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8102a52:	f107 0240 	add.w	r2, r7, #64	@ 0x40
 8102a56:	4611      	mov	r1, r2
 8102a58:	4618      	mov	r0, r3
 8102a5a:	f000 f862 	bl	8102b22 <_ZSt12__miter_baseISt15_Deque_iteratorIhRKhPS1_EET_S5_>
 8102a5e:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 8102a62:	6839      	ldr	r1, [r7, #0]
 8102a64:	4618      	mov	r0, r3
 8102a66:	f7fe fe5c 	bl	8101722 <_ZNSt15_Deque_iteratorIhRhPhEC1ERKS2_>
 8102a6a:	68f8      	ldr	r0, [r7, #12]
 8102a6c:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 8102a70:	f107 0230 	add.w	r2, r7, #48	@ 0x30
 8102a74:	f107 0110 	add.w	r1, r7, #16
 8102a78:	f000 f860 	bl	8102b3c <_ZSt13__copy_move_aILb0ESt15_Deque_iteratorIhRKhPS1_ES0_IhRhPhEET1_T0_S9_S8_>
    }
 8102a7c:	68f8      	ldr	r0, [r7, #12]
 8102a7e:	3760      	adds	r7, #96	@ 0x60
 8102a80:	46bd      	mov	sp, r7
 8102a82:	bd80      	pop	{r7, pc}

08102a84 <_ZSt4moveIRNSt11_Deque_baseIhSaIhEE16_Deque_impl_dataEEONSt16remove_referenceIT_E4typeEOS6_>:
    move(_Tp&& __t) noexcept
 8102a84:	b480      	push	{r7}
 8102a86:	b083      	sub	sp, #12
 8102a88:	af00      	add	r7, sp, #0
 8102a8a:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8102a8c:	687b      	ldr	r3, [r7, #4]
 8102a8e:	4618      	mov	r0, r3
 8102a90:	370c      	adds	r7, #12
 8102a92:	46bd      	mov	sp, r7
 8102a94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8102a98:	4770      	bx	lr

08102a9a <_ZNSt11_Deque_baseIhSaIhEE16_Deque_impl_dataC1ERKS2_>:
	_Deque_impl_data(const _Deque_impl_data&) = default;
 8102a9a:	b580      	push	{r7, lr}
 8102a9c:	b082      	sub	sp, #8
 8102a9e:	af00      	add	r7, sp, #0
 8102aa0:	6078      	str	r0, [r7, #4]
 8102aa2:	6039      	str	r1, [r7, #0]
 8102aa4:	683b      	ldr	r3, [r7, #0]
 8102aa6:	681a      	ldr	r2, [r3, #0]
 8102aa8:	687b      	ldr	r3, [r7, #4]
 8102aaa:	601a      	str	r2, [r3, #0]
 8102aac:	683b      	ldr	r3, [r7, #0]
 8102aae:	685a      	ldr	r2, [r3, #4]
 8102ab0:	687b      	ldr	r3, [r7, #4]
 8102ab2:	605a      	str	r2, [r3, #4]
 8102ab4:	687b      	ldr	r3, [r7, #4]
 8102ab6:	f103 0208 	add.w	r2, r3, #8
 8102aba:	683b      	ldr	r3, [r7, #0]
 8102abc:	3308      	adds	r3, #8
 8102abe:	4619      	mov	r1, r3
 8102ac0:	4610      	mov	r0, r2
 8102ac2:	f7fe fe2e 	bl	8101722 <_ZNSt15_Deque_iteratorIhRhPhEC1ERKS2_>
 8102ac6:	687b      	ldr	r3, [r7, #4]
 8102ac8:	f103 0218 	add.w	r2, r3, #24
 8102acc:	683b      	ldr	r3, [r7, #0]
 8102ace:	3318      	adds	r3, #24
 8102ad0:	4619      	mov	r1, r3
 8102ad2:	4610      	mov	r0, r2
 8102ad4:	f7fe fe25 	bl	8101722 <_ZNSt15_Deque_iteratorIhRhPhEC1ERKS2_>
 8102ad8:	687b      	ldr	r3, [r7, #4]
 8102ada:	4618      	mov	r0, r3
 8102adc:	3708      	adds	r7, #8
 8102ade:	46bd      	mov	sp, r7
 8102ae0:	bd80      	pop	{r7, pc}

08102ae2 <_ZNSt11_Deque_baseIhSaIhEE16_Deque_impl_dataC1EOS2_>:
	_Deque_impl_data(_Deque_impl_data&& __x) noexcept
 8102ae2:	b5b0      	push	{r4, r5, r7, lr}
 8102ae4:	b08c      	sub	sp, #48	@ 0x30
 8102ae6:	af00      	add	r7, sp, #0
 8102ae8:	6078      	str	r0, [r7, #4]
 8102aea:	6039      	str	r1, [r7, #0]
	: _Deque_impl_data(__x)
 8102aec:	6839      	ldr	r1, [r7, #0]
 8102aee:	6878      	ldr	r0, [r7, #4]
 8102af0:	f7ff ffd3 	bl	8102a9a <_ZNSt11_Deque_baseIhSaIhEE16_Deque_impl_dataC1ERKS2_>
	{ __x = _Deque_impl_data(); }
 8102af4:	f107 0308 	add.w	r3, r7, #8
 8102af8:	4618      	mov	r0, r3
 8102afa:	f7fe feed 	bl	81018d8 <_ZNSt11_Deque_baseIhSaIhEE16_Deque_impl_dataC1Ev>
 8102afe:	f107 0308 	add.w	r3, r7, #8
 8102b02:	683a      	ldr	r2, [r7, #0]
 8102b04:	4614      	mov	r4, r2
 8102b06:	461d      	mov	r5, r3
 8102b08:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8102b0a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8102b0c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8102b0e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8102b10:	e895 0003 	ldmia.w	r5, {r0, r1}
 8102b14:	e884 0003 	stmia.w	r4, {r0, r1}
 8102b18:	687b      	ldr	r3, [r7, #4]
 8102b1a:	4618      	mov	r0, r3
 8102b1c:	3730      	adds	r7, #48	@ 0x30
 8102b1e:	46bd      	mov	sp, r7
 8102b20:	bdb0      	pop	{r4, r5, r7, pc}

08102b22 <_ZSt12__miter_baseISt15_Deque_iteratorIhRKhPS1_EET_S5_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
 8102b22:	b580      	push	{r7, lr}
 8102b24:	b082      	sub	sp, #8
 8102b26:	af00      	add	r7, sp, #0
 8102b28:	6078      	str	r0, [r7, #4]
 8102b2a:	6039      	str	r1, [r7, #0]
    { return __it; }
 8102b2c:	6839      	ldr	r1, [r7, #0]
 8102b2e:	6878      	ldr	r0, [r7, #4]
 8102b30:	f7ff fd45 	bl	81025be <_ZNSt15_Deque_iteratorIhRKhPS0_EC1ERKS3_>
 8102b34:	6878      	ldr	r0, [r7, #4]
 8102b36:	3708      	adds	r7, #8
 8102b38:	46bd      	mov	sp, r7
 8102b3a:	bd80      	pop	{r7, pc}

08102b3c <_ZSt13__copy_move_aILb0ESt15_Deque_iteratorIhRKhPS1_ES0_IhRhPhEET1_T0_S9_S8_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 8102b3c:	b580      	push	{r7, lr}
 8102b3e:	b0a0      	sub	sp, #128	@ 0x80
 8102b40:	af00      	add	r7, sp, #0
 8102b42:	60f8      	str	r0, [r7, #12]
 8102b44:	60b9      	str	r1, [r7, #8]
 8102b46:	607a      	str	r2, [r7, #4]
 8102b48:	603b      	str	r3, [r7, #0]
					     std::__niter_base(__result)));
 8102b4a:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8102b4e:	68b9      	ldr	r1, [r7, #8]
 8102b50:	4618      	mov	r0, r3
 8102b52:	f7ff fd34 	bl	81025be <_ZNSt15_Deque_iteratorIhRKhPS0_EC1ERKS3_>
 8102b56:	f107 0320 	add.w	r3, r7, #32
 8102b5a:	f107 0230 	add.w	r2, r7, #48	@ 0x30
 8102b5e:	4611      	mov	r1, r2
 8102b60:	4618      	mov	r0, r3
 8102b62:	f000 f831 	bl	8102bc8 <_ZSt12__niter_baseISt15_Deque_iteratorIhRKhPS1_EET_S5_>
 8102b66:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 8102b6a:	6879      	ldr	r1, [r7, #4]
 8102b6c:	4618      	mov	r0, r3
 8102b6e:	f7ff fd26 	bl	81025be <_ZNSt15_Deque_iteratorIhRKhPS0_EC1ERKS3_>
 8102b72:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8102b76:	f107 0250 	add.w	r2, r7, #80	@ 0x50
 8102b7a:	4611      	mov	r1, r2
 8102b7c:	4618      	mov	r0, r3
 8102b7e:	f000 f823 	bl	8102bc8 <_ZSt12__niter_baseISt15_Deque_iteratorIhRKhPS1_EET_S5_>
 8102b82:	f107 0370 	add.w	r3, r7, #112	@ 0x70
 8102b86:	6839      	ldr	r1, [r7, #0]
 8102b88:	4618      	mov	r0, r3
 8102b8a:	f7fe fdca 	bl	8101722 <_ZNSt15_Deque_iteratorIhRhPhEC1ERKS2_>
 8102b8e:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 8102b92:	f107 0270 	add.w	r2, r7, #112	@ 0x70
 8102b96:	4611      	mov	r1, r2
 8102b98:	4618      	mov	r0, r3
 8102b9a:	f000 f822 	bl	8102be2 <_ZSt12__niter_baseISt15_Deque_iteratorIhRhPhEET_S4_>
 8102b9e:	f107 0010 	add.w	r0, r7, #16
 8102ba2:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 8102ba6:	f107 0240 	add.w	r2, r7, #64	@ 0x40
 8102baa:	f107 0120 	add.w	r1, r7, #32
 8102bae:	f000 f825 	bl	8102bfc <_ZSt14__copy_move_a1ILb0EhRKhPS0_hESt15_Deque_iteratorIT3_RS4_PS4_ES3_IT0_T1_T2_ESB_S7_>
 8102bb2:	68fb      	ldr	r3, [r7, #12]
 8102bb4:	f107 0210 	add.w	r2, r7, #16
 8102bb8:	6839      	ldr	r1, [r7, #0]
 8102bba:	4618      	mov	r0, r3
 8102bbc:	f000 f844 	bl	8102c48 <_ZSt12__niter_wrapISt15_Deque_iteratorIhRhPhEET_RKS4_S4_>
    }
 8102bc0:	68f8      	ldr	r0, [r7, #12]
 8102bc2:	3780      	adds	r7, #128	@ 0x80
 8102bc4:	46bd      	mov	sp, r7
 8102bc6:	bd80      	pop	{r7, pc}

08102bc8 <_ZSt12__niter_baseISt15_Deque_iteratorIhRKhPS1_EET_S5_>:
    __niter_base(_Iterator __it)
 8102bc8:	b580      	push	{r7, lr}
 8102bca:	b082      	sub	sp, #8
 8102bcc:	af00      	add	r7, sp, #0
 8102bce:	6078      	str	r0, [r7, #4]
 8102bd0:	6039      	str	r1, [r7, #0]
    { return __it; }
 8102bd2:	6839      	ldr	r1, [r7, #0]
 8102bd4:	6878      	ldr	r0, [r7, #4]
 8102bd6:	f7ff fcf2 	bl	81025be <_ZNSt15_Deque_iteratorIhRKhPS0_EC1ERKS3_>
 8102bda:	6878      	ldr	r0, [r7, #4]
 8102bdc:	3708      	adds	r7, #8
 8102bde:	46bd      	mov	sp, r7
 8102be0:	bd80      	pop	{r7, pc}

08102be2 <_ZSt12__niter_baseISt15_Deque_iteratorIhRhPhEET_S4_>:
    __niter_base(_Iterator __it)
 8102be2:	b580      	push	{r7, lr}
 8102be4:	b082      	sub	sp, #8
 8102be6:	af00      	add	r7, sp, #0
 8102be8:	6078      	str	r0, [r7, #4]
 8102bea:	6039      	str	r1, [r7, #0]
    { return __it; }
 8102bec:	6839      	ldr	r1, [r7, #0]
 8102bee:	6878      	ldr	r0, [r7, #4]
 8102bf0:	f7fe fd97 	bl	8101722 <_ZNSt15_Deque_iteratorIhRhPhEC1ERKS2_>
 8102bf4:	6878      	ldr	r0, [r7, #4]
 8102bf6:	3708      	adds	r7, #8
 8102bf8:	46bd      	mov	sp, r7
 8102bfa:	bd80      	pop	{r7, pc}

08102bfc <_ZSt14__copy_move_a1ILb0EhRKhPS0_hESt15_Deque_iteratorIT3_RS4_PS4_ES3_IT0_T1_T2_ESB_S7_>:
    { return __copy_move_dit<_IsMove>(__first, __last, __result); }

  template<bool _IsMove,
	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
    _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
    __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr> __first,
 8102bfc:	b580      	push	{r7, lr}
 8102bfe:	b090      	sub	sp, #64	@ 0x40
 8102c00:	af00      	add	r7, sp, #0
 8102c02:	60f8      	str	r0, [r7, #12]
 8102c04:	60b9      	str	r1, [r7, #8]
 8102c06:	607a      	str	r2, [r7, #4]
 8102c08:	603b      	str	r3, [r7, #0]
		   _GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr> __last,
		   _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*> __result)
    { return __copy_move_dit<_IsMove>(__first, __last, __result); }
 8102c0a:	f107 0310 	add.w	r3, r7, #16
 8102c0e:	68b9      	ldr	r1, [r7, #8]
 8102c10:	4618      	mov	r0, r3
 8102c12:	f7ff fcd4 	bl	81025be <_ZNSt15_Deque_iteratorIhRKhPS0_EC1ERKS3_>
 8102c16:	f107 0320 	add.w	r3, r7, #32
 8102c1a:	6879      	ldr	r1, [r7, #4]
 8102c1c:	4618      	mov	r0, r3
 8102c1e:	f7ff fcce 	bl	81025be <_ZNSt15_Deque_iteratorIhRKhPS0_EC1ERKS3_>
 8102c22:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8102c26:	6839      	ldr	r1, [r7, #0]
 8102c28:	4618      	mov	r0, r3
 8102c2a:	f7fe fd7a 	bl	8101722 <_ZNSt15_Deque_iteratorIhRhPhEC1ERKS2_>
 8102c2e:	68f8      	ldr	r0, [r7, #12]
 8102c30:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8102c34:	f107 0220 	add.w	r2, r7, #32
 8102c38:	f107 0110 	add.w	r1, r7, #16
 8102c3c:	f000 f812 	bl	8102c64 <_ZSt15__copy_move_ditILb0EhRKhPS0_St15_Deque_iteratorIhRhPhEET3_S3_IT0_T1_T2_ESB_S7_>
 8102c40:	68f8      	ldr	r0, [r7, #12]
 8102c42:	3740      	adds	r7, #64	@ 0x40
 8102c44:	46bd      	mov	sp, r7
 8102c46:	bd80      	pop	{r7, pc}

08102c48 <_ZSt12__niter_wrapISt15_Deque_iteratorIhRhPhEET_RKS4_S4_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
 8102c48:	b580      	push	{r7, lr}
 8102c4a:	b084      	sub	sp, #16
 8102c4c:	af00      	add	r7, sp, #0
 8102c4e:	60f8      	str	r0, [r7, #12]
 8102c50:	60b9      	str	r1, [r7, #8]
 8102c52:	607a      	str	r2, [r7, #4]
    { return __res; }
 8102c54:	6879      	ldr	r1, [r7, #4]
 8102c56:	68f8      	ldr	r0, [r7, #12]
 8102c58:	f7fe fd63 	bl	8101722 <_ZNSt15_Deque_iteratorIhRhPhEC1ERKS2_>
 8102c5c:	68f8      	ldr	r0, [r7, #12]
 8102c5e:	3710      	adds	r7, #16
 8102c60:	46bd      	mov	sp, r7
 8102c62:	bd80      	pop	{r7, pc}

08102c64 <_ZSt15__copy_move_ditILb0EhRKhPS0_St15_Deque_iteratorIhRhPhEET3_S3_IT0_T1_T2_ESB_S7_>:
    __copy_move_dit(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr> __first,
 8102c64:	b5b0      	push	{r4, r5, r7, lr}
 8102c66:	b09e      	sub	sp, #120	@ 0x78
 8102c68:	af00      	add	r7, sp, #0
 8102c6a:	60f8      	str	r0, [r7, #12]
 8102c6c:	60b9      	str	r1, [r7, #8]
 8102c6e:	607a      	str	r2, [r7, #4]
 8102c70:	603b      	str	r3, [r7, #0]
      if (__first._M_node != __last._M_node)
 8102c72:	68bb      	ldr	r3, [r7, #8]
 8102c74:	68da      	ldr	r2, [r3, #12]
 8102c76:	687b      	ldr	r3, [r7, #4]
 8102c78:	68db      	ldr	r3, [r3, #12]
 8102c7a:	429a      	cmp	r2, r3
 8102c7c:	d054      	beq.n	8102d28 <_ZSt15__copy_move_ditILb0EhRKhPS0_St15_Deque_iteratorIhRhPhEET3_S3_IT0_T1_T2_ESB_S7_+0xc4>
	  __result
 8102c7e:	68bb      	ldr	r3, [r7, #8]
 8102c80:	681c      	ldr	r4, [r3, #0]
 8102c82:	68bb      	ldr	r3, [r7, #8]
 8102c84:	689d      	ldr	r5, [r3, #8]
 8102c86:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8102c8a:	6839      	ldr	r1, [r7, #0]
 8102c8c:	4618      	mov	r0, r3
 8102c8e:	f7fe fd48 	bl	8101722 <_ZNSt15_Deque_iteratorIhRhPhEC1ERKS2_>
 8102c92:	f107 0014 	add.w	r0, r7, #20
 8102c96:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8102c9a:	462a      	mov	r2, r5
 8102c9c:	4621      	mov	r1, r4
 8102c9e:	f000 f86c 	bl	8102d7a <_ZSt14__copy_move_a1ILb0EPhhEN9__gnu_cxx11__enable_ifIXsrSt23__is_random_access_iterIT0_NSt15iterator_traitsIS4_E17iterator_categoryEE7__valueESt15_Deque_iteratorIT1_RSA_PSA_EE6__typeES4_S4_SD_>
 8102ca2:	f107 0314 	add.w	r3, r7, #20
 8102ca6:	683a      	ldr	r2, [r7, #0]
 8102ca8:	4614      	mov	r4, r2
 8102caa:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8102cac:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	  for (typename _Iter::_Map_pointer __node = __first._M_node + 1;
 8102cb0:	68bb      	ldr	r3, [r7, #8]
 8102cb2:	68db      	ldr	r3, [r3, #12]
 8102cb4:	3304      	adds	r3, #4
 8102cb6:	677b      	str	r3, [r7, #116]	@ 0x74
 8102cb8:	e01f      	b.n	8102cfa <_ZSt15__copy_move_ditILb0EhRKhPS0_St15_Deque_iteratorIhRhPhEET3_S3_IT0_T1_T2_ESB_S7_+0x96>
	    __result
 8102cba:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8102cbc:	681d      	ldr	r5, [r3, #0]
 8102cbe:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8102cc0:	681c      	ldr	r4, [r3, #0]
					     *__node + _Iter::_S_buffer_size(),
 8102cc2:	f000 f897 	bl	8102df4 <_ZNSt15_Deque_iteratorIhRKhPS0_E14_S_buffer_sizeEv>
 8102cc6:	4603      	mov	r3, r0
	    __result
 8102cc8:	441c      	add	r4, r3
 8102cca:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 8102cce:	6839      	ldr	r1, [r7, #0]
 8102cd0:	4618      	mov	r0, r3
 8102cd2:	f7fe fd26 	bl	8101722 <_ZNSt15_Deque_iteratorIhRhPhEC1ERKS2_>
 8102cd6:	f107 0034 	add.w	r0, r7, #52	@ 0x34
 8102cda:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 8102cde:	4622      	mov	r2, r4
 8102ce0:	4629      	mov	r1, r5
 8102ce2:	f000 f84a 	bl	8102d7a <_ZSt14__copy_move_a1ILb0EPhhEN9__gnu_cxx11__enable_ifIXsrSt23__is_random_access_iterIT0_NSt15iterator_traitsIS4_E17iterator_categoryEE7__valueESt15_Deque_iteratorIT1_RSA_PSA_EE6__typeES4_S4_SD_>
 8102ce6:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8102cea:	683a      	ldr	r2, [r7, #0]
 8102cec:	4614      	mov	r4, r2
 8102cee:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8102cf0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	  for (typename _Iter::_Map_pointer __node = __first._M_node + 1;
 8102cf4:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8102cf6:	3304      	adds	r3, #4
 8102cf8:	677b      	str	r3, [r7, #116]	@ 0x74
	       __node != __last._M_node; ++__node)
 8102cfa:	687b      	ldr	r3, [r7, #4]
 8102cfc:	68db      	ldr	r3, [r3, #12]
 8102cfe:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 8102d00:	429a      	cmp	r2, r3
 8102d02:	d1da      	bne.n	8102cba <_ZSt15__copy_move_ditILb0EhRKhPS0_St15_Deque_iteratorIhRhPhEET3_S3_IT0_T1_T2_ESB_S7_+0x56>
					      __result);
 8102d04:	687b      	ldr	r3, [r7, #4]
 8102d06:	685c      	ldr	r4, [r3, #4]
 8102d08:	687b      	ldr	r3, [r7, #4]
 8102d0a:	681d      	ldr	r5, [r3, #0]
 8102d0c:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8102d10:	6839      	ldr	r1, [r7, #0]
 8102d12:	4618      	mov	r0, r3
 8102d14:	f7fe fd05 	bl	8101722 <_ZNSt15_Deque_iteratorIhRhPhEC1ERKS2_>
 8102d18:	68f8      	ldr	r0, [r7, #12]
 8102d1a:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8102d1e:	462a      	mov	r2, r5
 8102d20:	4621      	mov	r1, r4
 8102d22:	f000 f82a 	bl	8102d7a <_ZSt14__copy_move_a1ILb0EPhhEN9__gnu_cxx11__enable_ifIXsrSt23__is_random_access_iterIT0_NSt15iterator_traitsIS4_E17iterator_categoryEE7__valueESt15_Deque_iteratorIT1_RSA_PSA_EE6__typeES4_S4_SD_>
 8102d26:	e010      	b.n	8102d4a <_ZSt15__copy_move_ditILb0EhRKhPS0_St15_Deque_iteratorIhRhPhEET3_S3_IT0_T1_T2_ESB_S7_+0xe6>
					  __result);
 8102d28:	68bb      	ldr	r3, [r7, #8]
 8102d2a:	681c      	ldr	r4, [r3, #0]
 8102d2c:	687b      	ldr	r3, [r7, #4]
 8102d2e:	681d      	ldr	r5, [r3, #0]
 8102d30:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 8102d34:	6839      	ldr	r1, [r7, #0]
 8102d36:	4618      	mov	r0, r3
 8102d38:	f7fe fcf3 	bl	8101722 <_ZNSt15_Deque_iteratorIhRhPhEC1ERKS2_>
 8102d3c:	68f8      	ldr	r0, [r7, #12]
 8102d3e:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 8102d42:	462a      	mov	r2, r5
 8102d44:	4621      	mov	r1, r4
 8102d46:	f000 f818 	bl	8102d7a <_ZSt14__copy_move_a1ILb0EPhhEN9__gnu_cxx11__enable_ifIXsrSt23__is_random_access_iterIT0_NSt15iterator_traitsIS4_E17iterator_categoryEE7__valueESt15_Deque_iteratorIT1_RSA_PSA_EE6__typeES4_S4_SD_>
    }
 8102d4a:	68f8      	ldr	r0, [r7, #12]
 8102d4c:	3778      	adds	r7, #120	@ 0x78
 8102d4e:	46bd      	mov	sp, r7
 8102d50:	bdb0      	pop	{r4, r5, r7, pc}

08102d52 <_ZSt3minIiERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
 8102d52:	b480      	push	{r7}
 8102d54:	b083      	sub	sp, #12
 8102d56:	af00      	add	r7, sp, #0
 8102d58:	6078      	str	r0, [r7, #4]
 8102d5a:	6039      	str	r1, [r7, #0]
      if (__b < __a)
 8102d5c:	683b      	ldr	r3, [r7, #0]
 8102d5e:	681a      	ldr	r2, [r3, #0]
 8102d60:	687b      	ldr	r3, [r7, #4]
 8102d62:	681b      	ldr	r3, [r3, #0]
 8102d64:	429a      	cmp	r2, r3
 8102d66:	da01      	bge.n	8102d6c <_ZSt3minIiERKT_S2_S2_+0x1a>
	return __b;
 8102d68:	683b      	ldr	r3, [r7, #0]
 8102d6a:	e000      	b.n	8102d6e <_ZSt3minIiERKT_S2_S2_+0x1c>
      return __a;
 8102d6c:	687b      	ldr	r3, [r7, #4]
    }
 8102d6e:	4618      	mov	r0, r3
 8102d70:	370c      	adds	r7, #12
 8102d72:	46bd      	mov	sp, r7
 8102d74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8102d78:	4770      	bx	lr

08102d7a <_ZSt14__copy_move_a1ILb0EPhhEN9__gnu_cxx11__enable_ifIXsrSt23__is_random_access_iterIT0_NSt15iterator_traitsIS4_E17iterator_categoryEE7__valueESt15_Deque_iteratorIT1_RSA_PSA_EE6__typeES4_S4_SD_>:

  template<bool _IsMove, typename _II, typename _Tp>
    typename __gnu_cxx::__enable_if<
      __is_random_access_iter<_II>::__value,
      _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
    __copy_move_a1(_II __first, _II __last,
 8102d7a:	b580      	push	{r7, lr}
 8102d7c:	b088      	sub	sp, #32
 8102d7e:	af00      	add	r7, sp, #0
 8102d80:	60f8      	str	r0, [r7, #12]
 8102d82:	60b9      	str	r1, [r7, #8]
 8102d84:	607a      	str	r2, [r7, #4]
 8102d86:	603b      	str	r3, [r7, #0]
		   _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> __result)
    {
      typedef _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> _Iter;
      typedef typename _Iter::difference_type difference_type;

      difference_type __len = __last - __first;
 8102d88:	687a      	ldr	r2, [r7, #4]
 8102d8a:	68bb      	ldr	r3, [r7, #8]
 8102d8c:	1ad3      	subs	r3, r2, r3
 8102d8e:	617b      	str	r3, [r7, #20]
      while (__len > 0)
 8102d90:	e025      	b.n	8102dde <_ZSt14__copy_move_a1ILb0EPhhEN9__gnu_cxx11__enable_ifIXsrSt23__is_random_access_iterIT0_NSt15iterator_traitsIS4_E17iterator_categoryEE7__valueESt15_Deque_iteratorIT1_RSA_PSA_EE6__typeES4_S4_SD_+0x64>
	{
	  const difference_type __clen
	    = std::min(__len, __result._M_last - __result._M_cur);
 8102d92:	683b      	ldr	r3, [r7, #0]
 8102d94:	689a      	ldr	r2, [r3, #8]
 8102d96:	683b      	ldr	r3, [r7, #0]
 8102d98:	681b      	ldr	r3, [r3, #0]
 8102d9a:	1ad3      	subs	r3, r2, r3
 8102d9c:	61bb      	str	r3, [r7, #24]
 8102d9e:	f107 0218 	add.w	r2, r7, #24
 8102da2:	f107 0314 	add.w	r3, r7, #20
 8102da6:	4611      	mov	r1, r2
 8102da8:	4618      	mov	r0, r3
 8102daa:	f7ff ffd2 	bl	8102d52 <_ZSt3minIiERKT_S2_S2_>
 8102dae:	4603      	mov	r3, r0
	  const difference_type __clen
 8102db0:	681b      	ldr	r3, [r3, #0]
 8102db2:	61fb      	str	r3, [r7, #28]
	  std::__copy_move_a1<_IsMove>(__first, __first + __clen,
 8102db4:	69fb      	ldr	r3, [r7, #28]
 8102db6:	68ba      	ldr	r2, [r7, #8]
 8102db8:	18d1      	adds	r1, r2, r3
 8102dba:	683b      	ldr	r3, [r7, #0]
 8102dbc:	681b      	ldr	r3, [r3, #0]
 8102dbe:	461a      	mov	r2, r3
 8102dc0:	68b8      	ldr	r0, [r7, #8]
 8102dc2:	f000 f81f 	bl	8102e04 <_ZSt14__copy_move_a1ILb0EPhS0_ET1_T0_S2_S1_>
				       __result._M_cur);

	  __first += __clen;
 8102dc6:	69fb      	ldr	r3, [r7, #28]
 8102dc8:	68ba      	ldr	r2, [r7, #8]
 8102dca:	4413      	add	r3, r2
 8102dcc:	60bb      	str	r3, [r7, #8]
	  __result += __clen;
 8102dce:	69f9      	ldr	r1, [r7, #28]
 8102dd0:	6838      	ldr	r0, [r7, #0]
 8102dd2:	f000 f827 	bl	8102e24 <_ZNSt15_Deque_iteratorIhRhPhEpLEi>
	  __len -= __clen;
 8102dd6:	697a      	ldr	r2, [r7, #20]
 8102dd8:	69fb      	ldr	r3, [r7, #28]
 8102dda:	1ad3      	subs	r3, r2, r3
 8102ddc:	617b      	str	r3, [r7, #20]
      while (__len > 0)
 8102dde:	697b      	ldr	r3, [r7, #20]
 8102de0:	2b00      	cmp	r3, #0
 8102de2:	dcd6      	bgt.n	8102d92 <_ZSt14__copy_move_a1ILb0EPhhEN9__gnu_cxx11__enable_ifIXsrSt23__is_random_access_iterIT0_NSt15iterator_traitsIS4_E17iterator_categoryEE7__valueESt15_Deque_iteratorIT1_RSA_PSA_EE6__typeES4_S4_SD_+0x18>
	}

      return __result;
 8102de4:	6839      	ldr	r1, [r7, #0]
 8102de6:	68f8      	ldr	r0, [r7, #12]
 8102de8:	f7fe fc9b 	bl	8101722 <_ZNSt15_Deque_iteratorIhRhPhEC1ERKS2_>
    }
 8102dec:	68f8      	ldr	r0, [r7, #12]
 8102dee:	3720      	adds	r7, #32
 8102df0:	46bd      	mov	sp, r7
 8102df2:	bd80      	pop	{r7, pc}

08102df4 <_ZNSt15_Deque_iteratorIhRKhPS0_E14_S_buffer_sizeEv>:
      static size_t _S_buffer_size() _GLIBCXX_NOEXCEPT
 8102df4:	b580      	push	{r7, lr}
 8102df6:	af00      	add	r7, sp, #0
      { return __deque_buf_size(sizeof(_Tp)); }
 8102df8:	2001      	movs	r0, #1
 8102dfa:	f7fe f923 	bl	8101044 <_ZSt16__deque_buf_sizej>
 8102dfe:	4603      	mov	r3, r0
 8102e00:	4618      	mov	r0, r3
 8102e02:	bd80      	pop	{r7, pc}

08102e04 <_ZSt14__copy_move_a1ILb0EPhS0_ET1_T0_S2_S1_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
 8102e04:	b580      	push	{r7, lr}
 8102e06:	b084      	sub	sp, #16
 8102e08:	af00      	add	r7, sp, #0
 8102e0a:	60f8      	str	r0, [r7, #12]
 8102e0c:	60b9      	str	r1, [r7, #8]
 8102e0e:	607a      	str	r2, [r7, #4]
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 8102e10:	687a      	ldr	r2, [r7, #4]
 8102e12:	68b9      	ldr	r1, [r7, #8]
 8102e14:	68f8      	ldr	r0, [r7, #12]
 8102e16:	f000 f858 	bl	8102eca <_ZSt14__copy_move_a2ILb0EPhS0_ET1_T0_S2_S1_>
 8102e1a:	4603      	mov	r3, r0
 8102e1c:	4618      	mov	r0, r3
 8102e1e:	3710      	adds	r7, #16
 8102e20:	46bd      	mov	sp, r7
 8102e22:	bd80      	pop	{r7, pc}

08102e24 <_ZNSt15_Deque_iteratorIhRhPhEpLEi>:
      operator+=(difference_type __n) _GLIBCXX_NOEXCEPT
 8102e24:	b590      	push	{r4, r7, lr}
 8102e26:	b085      	sub	sp, #20
 8102e28:	af00      	add	r7, sp, #0
 8102e2a:	6078      	str	r0, [r7, #4]
 8102e2c:	6039      	str	r1, [r7, #0]
	const difference_type __offset = __n + (_M_cur - _M_first);
 8102e2e:	687b      	ldr	r3, [r7, #4]
 8102e30:	681a      	ldr	r2, [r3, #0]
 8102e32:	687b      	ldr	r3, [r7, #4]
 8102e34:	685b      	ldr	r3, [r3, #4]
 8102e36:	1ad3      	subs	r3, r2, r3
 8102e38:	683a      	ldr	r2, [r7, #0]
 8102e3a:	4413      	add	r3, r2
 8102e3c:	60fb      	str	r3, [r7, #12]
	if (__offset >= 0 && __offset < difference_type(_S_buffer_size()))
 8102e3e:	68fb      	ldr	r3, [r7, #12]
 8102e40:	2b00      	cmp	r3, #0
 8102e42:	db08      	blt.n	8102e56 <_ZNSt15_Deque_iteratorIhRhPhEpLEi+0x32>
 8102e44:	f7fe fe21 	bl	8101a8a <_ZNSt15_Deque_iteratorIhRhPhE14_S_buffer_sizeEv>
 8102e48:	4603      	mov	r3, r0
 8102e4a:	461a      	mov	r2, r3
 8102e4c:	68fb      	ldr	r3, [r7, #12]
 8102e4e:	4293      	cmp	r3, r2
 8102e50:	da01      	bge.n	8102e56 <_ZNSt15_Deque_iteratorIhRhPhEpLEi+0x32>
 8102e52:	2301      	movs	r3, #1
 8102e54:	e000      	b.n	8102e58 <_ZNSt15_Deque_iteratorIhRhPhEpLEi+0x34>
 8102e56:	2300      	movs	r3, #0
 8102e58:	2b00      	cmp	r3, #0
 8102e5a:	d006      	beq.n	8102e6a <_ZNSt15_Deque_iteratorIhRhPhEpLEi+0x46>
	  _M_cur += __n;
 8102e5c:	687b      	ldr	r3, [r7, #4]
 8102e5e:	681a      	ldr	r2, [r3, #0]
 8102e60:	683b      	ldr	r3, [r7, #0]
 8102e62:	441a      	add	r2, r3
 8102e64:	687b      	ldr	r3, [r7, #4]
 8102e66:	601a      	str	r2, [r3, #0]
 8102e68:	e02a      	b.n	8102ec0 <_ZNSt15_Deque_iteratorIhRhPhEpLEi+0x9c>
	      __offset > 0 ? __offset / difference_type(_S_buffer_size())
 8102e6a:	68fb      	ldr	r3, [r7, #12]
 8102e6c:	2b00      	cmp	r3, #0
 8102e6e:	dd07      	ble.n	8102e80 <_ZNSt15_Deque_iteratorIhRhPhEpLEi+0x5c>
 8102e70:	f7fe fe0b 	bl	8101a8a <_ZNSt15_Deque_iteratorIhRhPhE14_S_buffer_sizeEv>
 8102e74:	4603      	mov	r3, r0
 8102e76:	461a      	mov	r2, r3
 8102e78:	68fb      	ldr	r3, [r7, #12]
 8102e7a:	fb93 f3f2 	sdiv	r3, r3, r2
 8102e7e:	e007      	b.n	8102e90 <_ZNSt15_Deque_iteratorIhRhPhEpLEi+0x6c>
			   : -difference_type((-__offset - 1)
 8102e80:	68fb      	ldr	r3, [r7, #12]
 8102e82:	43dc      	mvns	r4, r3
					      / _S_buffer_size()) - 1;
 8102e84:	f7fe fe01 	bl	8101a8a <_ZNSt15_Deque_iteratorIhRhPhE14_S_buffer_sizeEv>
 8102e88:	4603      	mov	r3, r0
 8102e8a:	fbb4 f3f3 	udiv	r3, r4, r3
	      __offset > 0 ? __offset / difference_type(_S_buffer_size())
 8102e8e:	43db      	mvns	r3, r3
	    const difference_type __node_offset =
 8102e90:	60bb      	str	r3, [r7, #8]
	    _M_set_node(_M_node + __node_offset);
 8102e92:	687b      	ldr	r3, [r7, #4]
 8102e94:	68da      	ldr	r2, [r3, #12]
 8102e96:	68bb      	ldr	r3, [r7, #8]
 8102e98:	009b      	lsls	r3, r3, #2
 8102e9a:	4413      	add	r3, r2
 8102e9c:	4619      	mov	r1, r3
 8102e9e:	6878      	ldr	r0, [r7, #4]
 8102ea0:	f7fe fd83 	bl	81019aa <_ZNSt15_Deque_iteratorIhRhPhE11_M_set_nodeEPS1_>
	    _M_cur = _M_first + (__offset - __node_offset
 8102ea4:	687b      	ldr	r3, [r7, #4]
 8102ea6:	685c      	ldr	r4, [r3, #4]
				 * difference_type(_S_buffer_size()));
 8102ea8:	f7fe fdef 	bl	8101a8a <_ZNSt15_Deque_iteratorIhRhPhE14_S_buffer_sizeEv>
 8102eac:	4603      	mov	r3, r0
 8102eae:	461a      	mov	r2, r3
 8102eb0:	68bb      	ldr	r3, [r7, #8]
 8102eb2:	fb02 f303 	mul.w	r3, r2, r3
	    _M_cur = _M_first + (__offset - __node_offset
 8102eb6:	68fa      	ldr	r2, [r7, #12]
 8102eb8:	1ad3      	subs	r3, r2, r3
 8102eba:	18e2      	adds	r2, r4, r3
 8102ebc:	687b      	ldr	r3, [r7, #4]
 8102ebe:	601a      	str	r2, [r3, #0]
	return *this;
 8102ec0:	687b      	ldr	r3, [r7, #4]
      }
 8102ec2:	4618      	mov	r0, r3
 8102ec4:	3714      	adds	r7, #20
 8102ec6:	46bd      	mov	sp, r7
 8102ec8:	bd90      	pop	{r4, r7, pc}

08102eca <_ZSt14__copy_move_a2ILb0EPhS0_ET1_T0_S2_S1_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 8102eca:	b580      	push	{r7, lr}
 8102ecc:	b084      	sub	sp, #16
 8102ece:	af00      	add	r7, sp, #0
 8102ed0:	60f8      	str	r0, [r7, #12]
 8102ed2:	60b9      	str	r1, [r7, #8]
 8102ed4:	607a      	str	r2, [r7, #4]
			      _Category>::__copy_m(__first, __last, __result);
 8102ed6:	687a      	ldr	r2, [r7, #4]
 8102ed8:	68b9      	ldr	r1, [r7, #8]
 8102eda:	68f8      	ldr	r0, [r7, #12]
 8102edc:	f000 f805 	bl	8102eea <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhhEEPT0_PT_S6_S4_>
 8102ee0:	4603      	mov	r3, r0
    }
 8102ee2:	4618      	mov	r0, r3
 8102ee4:	3710      	adds	r7, #16
 8102ee6:	46bd      	mov	sp, r7
 8102ee8:	bd80      	pop	{r7, pc}

08102eea <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhhEEPT0_PT_S6_S4_>:
	__copy_m(_Tp* __first, _Tp* __last, _Up* __result)
 8102eea:	b580      	push	{r7, lr}
 8102eec:	b086      	sub	sp, #24
 8102eee:	af00      	add	r7, sp, #0
 8102ef0:	60f8      	str	r0, [r7, #12]
 8102ef2:	60b9      	str	r1, [r7, #8]
 8102ef4:	607a      	str	r2, [r7, #4]
	  const ptrdiff_t _Num = __last - __first;
 8102ef6:	68ba      	ldr	r2, [r7, #8]
 8102ef8:	68fb      	ldr	r3, [r7, #12]
 8102efa:	1ad3      	subs	r3, r2, r3
 8102efc:	617b      	str	r3, [r7, #20]
	  if (__builtin_expect(_Num > 1, true))
 8102efe:	697b      	ldr	r3, [r7, #20]
 8102f00:	2b01      	cmp	r3, #1
 8102f02:	bfcc      	ite	gt
 8102f04:	2301      	movgt	r3, #1
 8102f06:	2300      	movle	r3, #0
 8102f08:	b2db      	uxtb	r3, r3
 8102f0a:	2b00      	cmp	r3, #0
 8102f0c:	d006      	beq.n	8102f1c <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhhEEPT0_PT_S6_S4_+0x32>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 8102f0e:	697b      	ldr	r3, [r7, #20]
 8102f10:	461a      	mov	r2, r3
 8102f12:	68f9      	ldr	r1, [r7, #12]
 8102f14:	6878      	ldr	r0, [r7, #4]
 8102f16:	f00c fc97 	bl	810f848 <memmove>
 8102f1a:	e006      	b.n	8102f2a <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhhEEPT0_PT_S6_S4_+0x40>
	  else if (_Num == 1)
 8102f1c:	697b      	ldr	r3, [r7, #20]
 8102f1e:	2b01      	cmp	r3, #1
 8102f20:	d103      	bne.n	8102f2a <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhhEEPT0_PT_S6_S4_+0x40>
	      __assign_one(__result, __first);
 8102f22:	68f9      	ldr	r1, [r7, #12]
 8102f24:	6878      	ldr	r0, [r7, #4]
 8102f26:	f000 f807 	bl	8102f38 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE12__assign_oneIhhEEvPT_PT0_>
	  return __result + _Num;
 8102f2a:	697b      	ldr	r3, [r7, #20]
 8102f2c:	687a      	ldr	r2, [r7, #4]
 8102f2e:	4413      	add	r3, r2
	}
 8102f30:	4618      	mov	r0, r3
 8102f32:	3718      	adds	r7, #24
 8102f34:	46bd      	mov	sp, r7
 8102f36:	bd80      	pop	{r7, pc}

08102f38 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE12__assign_oneIhhEEvPT_PT0_>:
	__assign_one(_Tp* __to, _Up* __from)
 8102f38:	b480      	push	{r7}
 8102f3a:	b083      	sub	sp, #12
 8102f3c:	af00      	add	r7, sp, #0
 8102f3e:	6078      	str	r0, [r7, #4]
 8102f40:	6039      	str	r1, [r7, #0]
	{ *__to = *__from; }
 8102f42:	683b      	ldr	r3, [r7, #0]
 8102f44:	781a      	ldrb	r2, [r3, #0]
 8102f46:	687b      	ldr	r3, [r7, #4]
 8102f48:	701a      	strb	r2, [r3, #0]
 8102f4a:	bf00      	nop
 8102f4c:	370c      	adds	r7, #12
 8102f4e:	46bd      	mov	sp, r7
 8102f50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8102f54:	4770      	bx	lr

08102f56 <_ZN6LRX20A22SetMinimumRangeCommandEv>:
	}
}
//============================================================================================
//  Minimum Range Command
void LRX20A::SetMinimumRangeCommand()
{
 8102f56:	b580      	push	{r7, lr}
 8102f58:	b084      	sub	sp, #16
 8102f5a:	af00      	add	r7, sp, #0
 8102f5c:	6078      	str	r0, [r7, #4]
	// Send "Get distance" command
	const char cmd[] = { (char)SET_MIN_RANGE_CMD, (char)MIN_RANGE, (char)0x00, (char)0x00 };
 8102f5e:	f641 1331 	movw	r3, #6449	@ 0x1931
 8102f62:	60fb      	str	r3, [r7, #12]
	UpdateCRC((char*)&cmd, (uint8_t)sizeof(cmd));
 8102f64:	f107 030c 	add.w	r3, r7, #12
 8102f68:	2204      	movs	r2, #4
 8102f6a:	4619      	mov	r1, r3
 8102f6c:	6878      	ldr	r0, [r7, #4]
 8102f6e:	f000 f843 	bl	8102ff8 <_ZN6LRX20A9UpdateCRCEPch>
	SendCommand((uint8_t*)&cmd, sizeof(cmd));
 8102f72:	687b      	ldr	r3, [r7, #4]
 8102f74:	f107 010c 	add.w	r1, r7, #12
 8102f78:	2204      	movs	r2, #4
 8102f7a:	4618      	mov	r0, r3
 8102f7c:	f000 f906 	bl	810318c <_ZN12UartEndpoint11SendCommandEPKhj>

}
 8102f80:	bf00      	nop
 8102f82:	3710      	adds	r7, #16
 8102f84:	46bd      	mov	sp, r7
 8102f86:	bd80      	pop	{r7, pc}

08102f88 <_ZN6LRX20A22SetMaximumRangeCommandEv>:
//============================================================================================
//  Maximum Range Command
void LRX20A::SetMaximumRangeCommand()
{
 8102f88:	b580      	push	{r7, lr}
 8102f8a:	b084      	sub	sp, #16
 8102f8c:	af00      	add	r7, sp, #0
 8102f8e:	6078      	str	r0, [r7, #4]
	// Send "Get distance" command
	const char cmd[] = { (char)SET_MAX_RANGE_CMD, (char)MAX_RANGE_LSB, (char)MAX_RANGE_MSB, (char)0x00 };
 8102f90:	4b09      	ldr	r3, [pc, #36]	@ (8102fb8 <_ZN6LRX20A22SetMaximumRangeCommandEv+0x30>)
 8102f92:	60fb      	str	r3, [r7, #12]
	UpdateCRC((char*)&cmd, (uint8_t)sizeof(cmd));
 8102f94:	f107 030c 	add.w	r3, r7, #12
 8102f98:	2204      	movs	r2, #4
 8102f9a:	4619      	mov	r1, r3
 8102f9c:	6878      	ldr	r0, [r7, #4]
 8102f9e:	f000 f82b 	bl	8102ff8 <_ZN6LRX20A9UpdateCRCEPch>
	SendCommand((uint8_t*)&cmd, sizeof(cmd));
 8102fa2:	687b      	ldr	r3, [r7, #4]
 8102fa4:	f107 010c 	add.w	r1, r7, #12
 8102fa8:	2204      	movs	r2, #4
 8102faa:	4618      	mov	r0, r3
 8102fac:	f000 f8ee 	bl	810318c <_ZN12UartEndpoint11SendCommandEPKhj>

}
 8102fb0:	bf00      	nop
 8102fb2:	3710      	adds	r7, #16
 8102fb4:	46bd      	mov	sp, r7
 8102fb6:	bd80      	pop	{r7, pc}
 8102fb8:	007d6432 	.word	0x007d6432

08102fbc <_ZN6LRX20A17RangesDataCommandEv>:
}
//------------------------------------------------------------------------------
//================================================================================
// Ranges Command
bool LRX20A::RangesDataCommand()
{
 8102fbc:	b580      	push	{r7, lr}
 8102fbe:	b084      	sub	sp, #16
 8102fc0:	af00      	add	r7, sp, #0
 8102fc2:	6078      	str	r0, [r7, #4]
	eRangesState = ERangesState::eRangesUpdating;
 8102fc4:	687b      	ldr	r3, [r7, #4]
 8102fc6:	2201      	movs	r2, #1
 8102fc8:	f883 203a 	strb.w	r2, [r3, #58]	@ 0x3a
	const uint8_t getDistanceCmd[] = { (char)EXEC_RANGE_MEASURE, (char)MEASURE_MODE_SSM, (char)BIT_RESERVED, (char)BIT_RESERVED, (char)0x9C };
 8102fcc:	4a09      	ldr	r2, [pc, #36]	@ (8102ff4 <_ZN6LRX20A17RangesDataCommandEv+0x38>)
 8102fce:	f107 0308 	add.w	r3, r7, #8
 8102fd2:	e892 0003 	ldmia.w	r2, {r0, r1}
 8102fd6:	6018      	str	r0, [r3, #0]
 8102fd8:	3304      	adds	r3, #4
 8102fda:	7019      	strb	r1, [r3, #0]
	SendCommand(getDistanceCmd, sizeof(getDistanceCmd));
 8102fdc:	687b      	ldr	r3, [r7, #4]
 8102fde:	f107 0108 	add.w	r1, r7, #8
 8102fe2:	2205      	movs	r2, #5
 8102fe4:	4618      	mov	r0, r3
 8102fe6:	f000 f8d1 	bl	810318c <_ZN12UartEndpoint11SendCommandEPKhj>
	return 0;
 8102fea:	2300      	movs	r3, #0
}
 8102fec:	4618      	mov	r0, r3
 8102fee:	3710      	adds	r7, #16
 8102ff0:	46bd      	mov	sp, r7
 8102ff2:	bd80      	pop	{r7, pc}
 8102ff4:	081116d0 	.word	0x081116d0

08102ff8 <_ZN6LRX20A9UpdateCRCEPch>:
	return true;
}

//------------------------------------------------------------------------------
void LRX20A::UpdateCRC(char* pbyBuff, uint8_t size)
{
 8102ff8:	b480      	push	{r7}
 8102ffa:	b087      	sub	sp, #28
 8102ffc:	af00      	add	r7, sp, #0
 8102ffe:	60f8      	str	r0, [r7, #12]
 8103000:	60b9      	str	r1, [r7, #8]
 8103002:	4613      	mov	r3, r2
 8103004:	71fb      	strb	r3, [r7, #7]
	long ii;
	char byXorSum;
	byXorSum = 0;
 8103006:	2300      	movs	r3, #0
 8103008:	74fb      	strb	r3, [r7, #19]
	for (ii = 0; ii < size - 1; ++ii) {
 810300a:	2300      	movs	r3, #0
 810300c:	617b      	str	r3, [r7, #20]
 810300e:	e009      	b.n	8103024 <_ZN6LRX20A9UpdateCRCEPch+0x2c>
		byXorSum = byXorSum ^ pbyBuff[ii];
 8103010:	697b      	ldr	r3, [r7, #20]
 8103012:	68ba      	ldr	r2, [r7, #8]
 8103014:	4413      	add	r3, r2
 8103016:	781a      	ldrb	r2, [r3, #0]
 8103018:	7cfb      	ldrb	r3, [r7, #19]
 810301a:	4053      	eors	r3, r2
 810301c:	74fb      	strb	r3, [r7, #19]
	for (ii = 0; ii < size - 1; ++ii) {
 810301e:	697b      	ldr	r3, [r7, #20]
 8103020:	3301      	adds	r3, #1
 8103022:	617b      	str	r3, [r7, #20]
 8103024:	79fb      	ldrb	r3, [r7, #7]
 8103026:	3b01      	subs	r3, #1
 8103028:	697a      	ldr	r2, [r7, #20]
 810302a:	429a      	cmp	r2, r3
 810302c:	dbf0      	blt.n	8103010 <_ZN6LRX20A9UpdateCRCEPch+0x18>
	}
	pbyBuff[size - 1] = byXorSum;
 810302e:	79fb      	ldrb	r3, [r7, #7]
 8103030:	3b01      	subs	r3, #1
 8103032:	68ba      	ldr	r2, [r7, #8]
 8103034:	4413      	add	r3, r2
 8103036:	7cfa      	ldrb	r2, [r7, #19]
 8103038:	701a      	strb	r2, [r3, #0]
}
 810303a:	bf00      	nop
 810303c:	371c      	adds	r7, #28
 810303e:	46bd      	mov	sp, r7
 8103040:	f85d 7b04 	ldr.w	r7, [sp], #4
 8103044:	4770      	bx	lr

08103046 <__is_constant_evaluated>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
 8103046:	b480      	push	{r7}
 8103048:	af00      	add	r7, sp, #0
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
 810304a:	2300      	movs	r3, #0
#else
    return false;
#endif
  }
 810304c:	4618      	mov	r0, r3
 810304e:	46bd      	mov	sp, r7
 8103050:	f85d 7b04 	ldr.w	r7, [sp], #4
 8103054:	4770      	bx	lr

08103056 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 8103056:	b480      	push	{r7}
 8103058:	b083      	sub	sp, #12
 810305a:	af00      	add	r7, sp, #0
 810305c:	6078      	str	r0, [r7, #4]
 810305e:	6039      	str	r1, [r7, #0]
 8103060:	683b      	ldr	r3, [r7, #0]
 8103062:	4618      	mov	r0, r3
 8103064:	370c      	adds	r7, #12
 8103066:	46bd      	mov	sp, r7
 8103068:	f85d 7b04 	ldr.w	r7, [sp], #4
 810306c:	4770      	bx	lr

0810306e <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
 810306e:	b580      	push	{r7, lr}
 8103070:	b082      	sub	sp, #8
 8103072:	af00      	add	r7, sp, #0
 8103074:	6078      	str	r0, [r7, #4]
    {
      _M_header._M_color = _S_red;
 8103076:	687b      	ldr	r3, [r7, #4]
 8103078:	2200      	movs	r2, #0
 810307a:	701a      	strb	r2, [r3, #0]
      _M_reset();
 810307c:	6878      	ldr	r0, [r7, #4]
 810307e:	f000 f805 	bl	810308c <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
 8103082:	687b      	ldr	r3, [r7, #4]
 8103084:	4618      	mov	r0, r3
 8103086:	3708      	adds	r7, #8
 8103088:	46bd      	mov	sp, r7
 810308a:	bd80      	pop	{r7, pc}

0810308c <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
 810308c:	b480      	push	{r7}
 810308e:	b083      	sub	sp, #12
 8103090:	af00      	add	r7, sp, #0
 8103092:	6078      	str	r0, [r7, #4]
    {
      _M_header._M_parent = 0;
 8103094:	687b      	ldr	r3, [r7, #4]
 8103096:	2200      	movs	r2, #0
 8103098:	605a      	str	r2, [r3, #4]
      _M_header._M_left = &_M_header;
 810309a:	687a      	ldr	r2, [r7, #4]
 810309c:	687b      	ldr	r3, [r7, #4]
 810309e:	609a      	str	r2, [r3, #8]
      _M_header._M_right = &_M_header;
 81030a0:	687a      	ldr	r2, [r7, #4]
 81030a2:	687b      	ldr	r3, [r7, #4]
 81030a4:	60da      	str	r2, [r3, #12]
      _M_node_count = 0;
 81030a6:	687b      	ldr	r3, [r7, #4]
 81030a8:	2200      	movs	r2, #0
 81030aa:	611a      	str	r2, [r3, #16]
    }
 81030ac:	bf00      	nop
 81030ae:	370c      	adds	r7, #12
 81030b0:	46bd      	mov	sp, r7
 81030b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 81030b6:	4770      	bx	lr

081030b8 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE13_Rb_tree_implISA_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
 81030b8:	b580      	push	{r7, lr}
 81030ba:	b084      	sub	sp, #16
 81030bc:	af00      	add	r7, sp, #0
 81030be:	6078      	str	r0, [r7, #4]
 81030c0:	687b      	ldr	r3, [r7, #4]
 81030c2:	60fb      	str	r3, [r7, #12]
 81030c4:	68f8      	ldr	r0, [r7, #12]
 81030c6:	f000 f9ee 	bl	81034a6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEED1Ev>
 81030ca:	687b      	ldr	r3, [r7, #4]
 81030cc:	4618      	mov	r0, r3
 81030ce:	3710      	adds	r7, #16
 81030d0:	46bd      	mov	sp, r7
 81030d2:	bd80      	pop	{r7, pc}

081030d4 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
 81030d4:	b580      	push	{r7, lr}
 81030d6:	b082      	sub	sp, #8
 81030d8:	af00      	add	r7, sp, #0
 81030da:	6078      	str	r0, [r7, #4]
 81030dc:	687b      	ldr	r3, [r7, #4]
 81030de:	4618      	mov	r0, r3
 81030e0:	f000 f8d7 	bl	8103292 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE13_Rb_tree_implISA_Lb1EEC1Ev>
 81030e4:	687b      	ldr	r3, [r7, #4]
 81030e6:	4618      	mov	r0, r3
 81030e8:	3708      	adds	r7, #8
 81030ea:	46bd      	mov	sp, r7
 81030ec:	bd80      	pop	{r7, pc}

081030ee <_ZNSt3mapIP20__UART_HandleTypeDefP12UartEndpointSt4lessIS1_ESaISt4pairIKS1_S3_EEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
 81030ee:	b580      	push	{r7, lr}
 81030f0:	b082      	sub	sp, #8
 81030f2:	af00      	add	r7, sp, #0
 81030f4:	6078      	str	r0, [r7, #4]
 81030f6:	687b      	ldr	r3, [r7, #4]
 81030f8:	4618      	mov	r0, r3
 81030fa:	f7ff ffeb 	bl	81030d4 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EEC1Ev>
 81030fe:	687b      	ldr	r3, [r7, #4]
 8103100:	4618      	mov	r0, r3
 8103102:	3708      	adds	r7, #8
 8103104:	46bd      	mov	sp, r7
 8103106:	bd80      	pop	{r7, pc}

08103108 <_ZN12UartEndpointC1EP20__UART_HandleTypeDef>:
#include "UartEndpoint.hpp"
#include <map>

std::map<UART_HandleTypeDef*, UartEndpoint*> UartEndpoint::instanceMap;

UartEndpoint::UartEndpoint(UART_HandleTypeDef* huart) : huart_(huart) {
 8103108:	b580      	push	{r7, lr}
 810310a:	b082      	sub	sp, #8
 810310c:	af00      	add	r7, sp, #0
 810310e:	6078      	str	r0, [r7, #4]
 8103110:	6039      	str	r1, [r7, #0]
 8103112:	4a0c      	ldr	r2, [pc, #48]	@ (8103144 <_ZN12UartEndpointC1EP20__UART_HandleTypeDef+0x3c>)
 8103114:	687b      	ldr	r3, [r7, #4]
 8103116:	601a      	str	r2, [r3, #0]
 8103118:	683a      	ldr	r2, [r7, #0]
 810311a:	687b      	ldr	r3, [r7, #4]
 810311c:	605a      	str	r2, [r3, #4]
 810311e:	687b      	ldr	r3, [r7, #4]
 8103120:	3310      	adds	r3, #16
 8103122:	4618      	mov	r0, r3
 8103124:	f7fd ffa3 	bl	810106e <_ZNSt5dequeIhSaIhEEC1Ev>
    instanceMap[huart] = this;
 8103128:	463b      	mov	r3, r7
 810312a:	4619      	mov	r1, r3
 810312c:	4806      	ldr	r0, [pc, #24]	@ (8103148 <_ZN12UartEndpointC1EP20__UART_HandleTypeDef+0x40>)
 810312e:	f000 f8db 	bl	81032e8 <_ZNSt3mapIP20__UART_HandleTypeDefP12UartEndpointSt4lessIS1_ESaISt4pairIKS1_S3_EEEixERS7_>
 8103132:	4602      	mov	r2, r0
 8103134:	687b      	ldr	r3, [r7, #4]
 8103136:	6013      	str	r3, [r2, #0]
}
 8103138:	687b      	ldr	r3, [r7, #4]
 810313a:	4618      	mov	r0, r3
 810313c:	3708      	adds	r7, #8
 810313e:	46bd      	mov	sp, r7
 8103140:	bd80      	pop	{r7, pc}
 8103142:	bf00      	nop
 8103144:	0811184c 	.word	0x0811184c
 8103148:	100003c4 	.word	0x100003c4

0810314c <_ZN12UartEndpoint12StartReceiveEPhj>:

bool UartEndpoint::StartReceive(uint8_t* buffer, size_t len) {
 810314c:	b580      	push	{r7, lr}
 810314e:	b084      	sub	sp, #16
 8103150:	af00      	add	r7, sp, #0
 8103152:	60f8      	str	r0, [r7, #12]
 8103154:	60b9      	str	r1, [r7, #8]
 8103156:	607a      	str	r2, [r7, #4]
    rxBuffer_ = buffer;
 8103158:	68fb      	ldr	r3, [r7, #12]
 810315a:	68ba      	ldr	r2, [r7, #8]
 810315c:	609a      	str	r2, [r3, #8]
    rxLength_ = len;
 810315e:	68fb      	ldr	r3, [r7, #12]
 8103160:	687a      	ldr	r2, [r7, #4]
 8103162:	60da      	str	r2, [r3, #12]
    return HAL_UART_Receive_IT(huart_, rxBuffer_, rxLength_) == HAL_OK;
 8103164:	68fb      	ldr	r3, [r7, #12]
 8103166:	6858      	ldr	r0, [r3, #4]
 8103168:	68fb      	ldr	r3, [r7, #12]
 810316a:	6899      	ldr	r1, [r3, #8]
 810316c:	68fb      	ldr	r3, [r7, #12]
 810316e:	68db      	ldr	r3, [r3, #12]
 8103170:	b29b      	uxth	r3, r3
 8103172:	461a      	mov	r2, r3
 8103174:	f006 f83e 	bl	81091f4 <HAL_UART_Receive_IT>
 8103178:	4603      	mov	r3, r0
 810317a:	2b00      	cmp	r3, #0
 810317c:	bf0c      	ite	eq
 810317e:	2301      	moveq	r3, #1
 8103180:	2300      	movne	r3, #0
 8103182:	b2db      	uxtb	r3, r3
}
 8103184:	4618      	mov	r0, r3
 8103186:	3710      	adds	r7, #16
 8103188:	46bd      	mov	sp, r7
 810318a:	bd80      	pop	{r7, pc}

0810318c <_ZN12UartEndpoint11SendCommandEPKhj>:

uint16_t UartEndpoint::SendCommand(const uint8_t* command, size_t length)
{
 810318c:	b580      	push	{r7, lr}
 810318e:	b084      	sub	sp, #16
 8103190:	af00      	add	r7, sp, #0
 8103192:	60f8      	str	r0, [r7, #12]
 8103194:	60b9      	str	r1, [r7, #8]
 8103196:	607a      	str	r2, [r7, #4]
	if (HAL_UART_Transmit(huart_, command, length,500) == HAL_OK)
 8103198:	68fb      	ldr	r3, [r7, #12]
 810319a:	6858      	ldr	r0, [r3, #4]
 810319c:	687b      	ldr	r3, [r7, #4]
 810319e:	b29a      	uxth	r2, r3
 81031a0:	f44f 73fa 	mov.w	r3, #500	@ 0x1f4
 81031a4:	68b9      	ldr	r1, [r7, #8]
 81031a6:	f005 ff97 	bl	81090d8 <HAL_UART_Transmit>
 81031aa:	4603      	mov	r3, r0
 81031ac:	2b00      	cmp	r3, #0
 81031ae:	bf0c      	ite	eq
 81031b0:	2301      	moveq	r3, #1
 81031b2:	2300      	movne	r3, #0
 81031b4:	b2db      	uxtb	r3, r3
 81031b6:	2b00      	cmp	r3, #0
 81031b8:	d002      	beq.n	81031c0 <_ZN12UartEndpoint11SendCommandEPKhj+0x34>
		return length;
 81031ba:	687b      	ldr	r3, [r7, #4]
 81031bc:	b29b      	uxth	r3, r3
 81031be:	e000      	b.n	81031c2 <_ZN12UartEndpoint11SendCommandEPKhj+0x36>
	else
		return 0;
 81031c0:	2300      	movs	r3, #0
}
 81031c2:	4618      	mov	r0, r3
 81031c4:	3710      	adds	r7, #16
 81031c6:	46bd      	mov	sp, r7
 81031c8:	bd80      	pop	{r7, pc}
	...

081031cc <_ZN12UartEndpoint18DispatchRxCompleteEP20__UART_HandleTypeDef>:

void UartEndpoint::DispatchRxComplete(UART_HandleTypeDef* huart) {
 81031cc:	b580      	push	{r7, lr}
 81031ce:	b086      	sub	sp, #24
 81031d0:	af00      	add	r7, sp, #0
 81031d2:	6078      	str	r0, [r7, #4]
    auto it = instanceMap.find(huart);
 81031d4:	1d3b      	adds	r3, r7, #4
 81031d6:	4619      	mov	r1, r3
 81031d8:	4822      	ldr	r0, [pc, #136]	@ (8103264 <_ZN12UartEndpoint18DispatchRxCompleteEP20__UART_HandleTypeDef+0x98>)
 81031da:	f000 f8e3 	bl	81033a4 <_ZNSt3mapIP20__UART_HandleTypeDefP12UartEndpointSt4lessIS1_ESaISt4pairIKS1_S3_EEE4findERS7_>
 81031de:	4603      	mov	r3, r0
 81031e0:	60fb      	str	r3, [r7, #12]
    if (it != instanceMap.end()) {
 81031e2:	4820      	ldr	r0, [pc, #128]	@ (8103264 <_ZN12UartEndpoint18DispatchRxCompleteEP20__UART_HandleTypeDef+0x98>)
 81031e4:	f000 f8ed 	bl	81033c2 <_ZNSt3mapIP20__UART_HandleTypeDefP12UartEndpointSt4lessIS1_ESaISt4pairIKS1_S3_EEE3endEv>
 81031e8:	4603      	mov	r3, r0
 81031ea:	613b      	str	r3, [r7, #16]
 81031ec:	f107 0210 	add.w	r2, r7, #16
 81031f0:	f107 030c 	add.w	r3, r7, #12
 81031f4:	4611      	mov	r1, r2
 81031f6:	4618      	mov	r0, r3
 81031f8:	f000 f8f0 	bl	81033dc <_ZStneRKSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEES9_>
 81031fc:	4603      	mov	r3, r0
 81031fe:	2b00      	cmp	r3, #0
 8103200:	d02b      	beq.n	810325a <_ZN12UartEndpoint18DispatchRxCompleteEP20__UART_HandleTypeDef+0x8e>
        UartEndpoint* instance = it->second;
 8103202:	f107 030c 	add.w	r3, r7, #12
 8103206:	4618      	mov	r0, r3
 8103208:	f000 f8fc 	bl	8103404 <_ZNKSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEptEv>
 810320c:	4603      	mov	r3, r0
 810320e:	685b      	ldr	r3, [r3, #4]
 8103210:	617b      	str	r3, [r7, #20]
        if (instance && instance->rxBuffer_) {
 8103212:	697b      	ldr	r3, [r7, #20]
 8103214:	2b00      	cmp	r3, #0
 8103216:	d020      	beq.n	810325a <_ZN12UartEndpoint18DispatchRxCompleteEP20__UART_HandleTypeDef+0x8e>
 8103218:	697b      	ldr	r3, [r7, #20]
 810321a:	689b      	ldr	r3, [r3, #8]
 810321c:	2b00      	cmp	r3, #0
 810321e:	d01c      	beq.n	810325a <_ZN12UartEndpoint18DispatchRxCompleteEP20__UART_HandleTypeDef+0x8e>
            uint8_t byte = instance->rxBuffer_[0];
 8103220:	697b      	ldr	r3, [r7, #20]
 8103222:	689b      	ldr	r3, [r3, #8]
 8103224:	781b      	ldrb	r3, [r3, #0]
 8103226:	72fb      	strb	r3, [r7, #11]

            // ✅ Push byte into the queue immediately
            instance->rxQueue_.push_back(byte);
 8103228:	697b      	ldr	r3, [r7, #20]
 810322a:	3310      	adds	r3, #16
 810322c:	f107 020b 	add.w	r2, r7, #11
 8103230:	4611      	mov	r1, r2
 8103232:	4618      	mov	r0, r3
 8103234:	f000 f8f4 	bl	8103420 <_ZNSt5dequeIhSaIhEE9push_backERKh>

            // Re-arm UART receive
            HAL_UART_Receive_IT(instance->huart_, instance->rxBuffer_, instance->rxLength_);
 8103238:	697b      	ldr	r3, [r7, #20]
 810323a:	6858      	ldr	r0, [r3, #4]
 810323c:	697b      	ldr	r3, [r7, #20]
 810323e:	6899      	ldr	r1, [r3, #8]
 8103240:	697b      	ldr	r3, [r7, #20]
 8103242:	68db      	ldr	r3, [r3, #12]
 8103244:	b29b      	uxth	r3, r3
 8103246:	461a      	mov	r2, r3
 8103248:	f005 ffd4 	bl	81091f4 <HAL_UART_Receive_IT>

            // Let derived class process the queue
            instance->onReceiveByte(byte);
 810324c:	697b      	ldr	r3, [r7, #20]
 810324e:	681b      	ldr	r3, [r3, #0]
 8103250:	681b      	ldr	r3, [r3, #0]
 8103252:	7afa      	ldrb	r2, [r7, #11]
 8103254:	4611      	mov	r1, r2
 8103256:	6978      	ldr	r0, [r7, #20]
 8103258:	4798      	blx	r3
        }
    }
}
 810325a:	bf00      	nop
 810325c:	3718      	adds	r7, #24
 810325e:	46bd      	mov	sp, r7
 8103260:	bd80      	pop	{r7, pc}
 8103262:	bf00      	nop
 8103264:	100003c4 	.word	0x100003c4

08103268 <_ZN12UartEndpoint15processIncomingEv>:

void UartEndpoint::onReceiveByte(uint8_t byte) {
    // no longer queues here
}

void UartEndpoint::processIncoming() {
 8103268:	b480      	push	{r7}
 810326a:	b083      	sub	sp, #12
 810326c:	af00      	add	r7, sp, #0
 810326e:	6078      	str	r0, [r7, #4]
    // Base class: do nothing
}
 8103270:	bf00      	nop
 8103272:	370c      	adds	r7, #12
 8103274:	46bd      	mov	sp, r7
 8103276:	f85d 7b04 	ldr.w	r7, [sp], #4
 810327a:	4770      	bx	lr

0810327c <HAL_UART_RxCpltCallback>:

extern "C" void HAL_UART_RxCpltCallback(UART_HandleTypeDef* huart) {
 810327c:	b580      	push	{r7, lr}
 810327e:	b082      	sub	sp, #8
 8103280:	af00      	add	r7, sp, #0
 8103282:	6078      	str	r0, [r7, #4]
    UartEndpoint::DispatchRxComplete(huart);
 8103284:	6878      	ldr	r0, [r7, #4]
 8103286:	f7ff ffa1 	bl	81031cc <_ZN12UartEndpoint18DispatchRxCompleteEP20__UART_HandleTypeDef>
}
 810328a:	bf00      	nop
 810328c:	3708      	adds	r7, #8
 810328e:	46bd      	mov	sp, r7
 8103290:	bd80      	pop	{r7, pc}

08103292 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE13_Rb_tree_implISA_Lb1EEC1Ev>:
	  _Rb_tree_impl()
 8103292:	b580      	push	{r7, lr}
 8103294:	b084      	sub	sp, #16
 8103296:	af00      	add	r7, sp, #0
 8103298:	6078      	str	r0, [r7, #4]
 810329a:	687b      	ldr	r3, [r7, #4]
 810329c:	60fb      	str	r3, [r7, #12]
 810329e:	68fb      	ldr	r3, [r7, #12]
 81032a0:	60bb      	str	r3, [r7, #8]
	  : _Node_allocator()
 81032a2:	687b      	ldr	r3, [r7, #4]
 81032a4:	4618      	mov	r0, r3
 81032a6:	f000 f8f3 	bl	8103490 <_ZNSt20_Rb_tree_key_compareISt4lessIP20__UART_HandleTypeDefEEC1Ev>
 81032aa:	687b      	ldr	r3, [r7, #4]
 81032ac:	3304      	adds	r3, #4
 81032ae:	4618      	mov	r0, r3
 81032b0:	f7ff fedd 	bl	810306e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 81032b4:	687b      	ldr	r3, [r7, #4]
 81032b6:	4618      	mov	r0, r3
 81032b8:	3710      	adds	r7, #16
 81032ba:	46bd      	mov	sp, r7
 81032bc:	bd80      	pop	{r7, pc}

081032be <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 81032be:	b580      	push	{r7, lr}
 81032c0:	b082      	sub	sp, #8
 81032c2:	af00      	add	r7, sp, #0
 81032c4:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 81032c6:	6878      	ldr	r0, [r7, #4]
 81032c8:	f000 f918 	bl	81034fc <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE8_M_beginEv>
 81032cc:	4603      	mov	r3, r0
 81032ce:	4619      	mov	r1, r3
 81032d0:	6878      	ldr	r0, [r7, #4]
 81032d2:	f000 f8f3 	bl	81034bc <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>
 81032d6:	687b      	ldr	r3, [r7, #4]
 81032d8:	4618      	mov	r0, r3
 81032da:	f7ff feed 	bl	81030b8 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE13_Rb_tree_implISA_Lb1EED1Ev>
 81032de:	687b      	ldr	r3, [r7, #4]
 81032e0:	4618      	mov	r0, r3
 81032e2:	3708      	adds	r7, #8
 81032e4:	46bd      	mov	sp, r7
 81032e6:	bd80      	pop	{r7, pc}

081032e8 <_ZNSt3mapIP20__UART_HandleTypeDefP12UartEndpointSt4lessIS1_ESaISt4pairIKS1_S3_EEEixERS7_>:
       *  is created using default values, which is then returned.
       *
       *  Lookup requires logarithmic time.
       */
      mapped_type&
      operator[](const key_type& __k)
 81032e8:	b590      	push	{r4, r7, lr}
 81032ea:	b08b      	sub	sp, #44	@ 0x2c
 81032ec:	af02      	add	r7, sp, #8
 81032ee:	6078      	str	r0, [r7, #4]
 81032f0:	6039      	str	r1, [r7, #0]
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
 81032f2:	6839      	ldr	r1, [r7, #0]
 81032f4:	6878      	ldr	r0, [r7, #4]
 81032f6:	f000 f90d 	bl	8103514 <_ZNSt3mapIP20__UART_HandleTypeDefP12UartEndpointSt4lessIS1_ESaISt4pairIKS1_S3_EEE11lower_boundERS7_>
 81032fa:	4603      	mov	r3, r0
 81032fc:	60bb      	str	r3, [r7, #8]
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
 81032fe:	6878      	ldr	r0, [r7, #4]
 8103300:	f000 f85f 	bl	81033c2 <_ZNSt3mapIP20__UART_HandleTypeDefP12UartEndpointSt4lessIS1_ESaISt4pairIKS1_S3_EEE3endEv>
 8103304:	4603      	mov	r3, r0
 8103306:	60fb      	str	r3, [r7, #12]
 8103308:	f107 020c 	add.w	r2, r7, #12
 810330c:	f107 0308 	add.w	r3, r7, #8
 8103310:	4611      	mov	r1, r2
 8103312:	4618      	mov	r0, r3
 8103314:	f000 f90d 	bl	8103532 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEES9_>
 8103318:	4603      	mov	r3, r0
 810331a:	2b00      	cmp	r3, #0
 810331c:	d114      	bne.n	8103348 <_ZNSt3mapIP20__UART_HandleTypeDefP12UartEndpointSt4lessIS1_ESaISt4pairIKS1_S3_EEEixERS7_+0x60>
 810331e:	6878      	ldr	r0, [r7, #4]
 8103320:	f000 f91b 	bl	810355a <_ZNKSt3mapIP20__UART_HandleTypeDefP12UartEndpointSt4lessIS1_ESaISt4pairIKS1_S3_EEE8key_compEv>
 8103324:	683b      	ldr	r3, [r7, #0]
 8103326:	681c      	ldr	r4, [r3, #0]
 8103328:	f107 0308 	add.w	r3, r7, #8
 810332c:	4618      	mov	r0, r3
 810332e:	f000 f921 	bl	8103574 <_ZNKSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEdeEv>
 8103332:	4603      	mov	r3, r0
 8103334:	681a      	ldr	r2, [r3, #0]
 8103336:	f107 0310 	add.w	r3, r7, #16
 810333a:	4621      	mov	r1, r4
 810333c:	4618      	mov	r0, r3
 810333e:	f000 f927 	bl	8103590 <_ZNKSt4lessIP20__UART_HandleTypeDefEclES1_S1_>
 8103342:	4603      	mov	r3, r0
 8103344:	2b00      	cmp	r3, #0
 8103346:	d001      	beq.n	810334c <_ZNSt3mapIP20__UART_HandleTypeDefP12UartEndpointSt4lessIS1_ESaISt4pairIKS1_S3_EEEixERS7_+0x64>
 8103348:	2301      	movs	r3, #1
 810334a:	e000      	b.n	810334e <_ZNSt3mapIP20__UART_HandleTypeDefP12UartEndpointSt4lessIS1_ESaISt4pairIKS1_S3_EEEixERS7_+0x66>
 810334c:	2300      	movs	r3, #0
 810334e:	2b00      	cmp	r3, #0
 8103350:	d01b      	beq.n	810338a <_ZNSt3mapIP20__UART_HandleTypeDefP12UartEndpointSt4lessIS1_ESaISt4pairIKS1_S3_EEEixERS7_+0xa2>
#if __cplusplus >= 201103L
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
 8103352:	687c      	ldr	r4, [r7, #4]
 8103354:	f107 0208 	add.w	r2, r7, #8
 8103358:	f107 0314 	add.w	r3, r7, #20
 810335c:	4611      	mov	r1, r2
 810335e:	4618      	mov	r0, r3
 8103360:	f000 f943 	bl	81035ea <_ZNSt23_Rb_tree_const_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEC1ERKSt17_Rb_tree_iteratorIS6_E>
					    std::tuple<const key_type&>(__k),
 8103364:	f107 0318 	add.w	r3, r7, #24
 8103368:	6839      	ldr	r1, [r7, #0]
 810336a:	4618      	mov	r0, r3
 810336c:	f000 f92e 	bl	81035cc <_ZNSt5tupleIJRKP20__UART_HandleTypeDefEEC1ILb1ELb1EEES3_>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
 8103370:	f107 0218 	add.w	r2, r7, #24
 8103374:	f107 031c 	add.w	r3, r7, #28
 8103378:	9300      	str	r3, [sp, #0]
 810337a:	4613      	mov	r3, r2
 810337c:	4a08      	ldr	r2, [pc, #32]	@ (81033a0 <_ZNSt3mapIP20__UART_HandleTypeDefP12UartEndpointSt4lessIS1_ESaISt4pairIKS1_S3_EEEixERS7_+0xb8>)
 810337e:	6979      	ldr	r1, [r7, #20]
 8103380:	4620      	mov	r0, r4
 8103382:	f000 f942 	bl	810360a <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS3_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_>
 8103386:	4603      	mov	r3, r0
 8103388:	60bb      	str	r3, [r7, #8]
					    std::tuple<>());
#else
	  __i = insert(__i, value_type(__k, mapped_type()));
#endif
	return (*__i).second;
 810338a:	f107 0308 	add.w	r3, r7, #8
 810338e:	4618      	mov	r0, r3
 8103390:	f000 f8f0 	bl	8103574 <_ZNKSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEdeEv>
 8103394:	4603      	mov	r3, r0
 8103396:	3304      	adds	r3, #4
      }
 8103398:	4618      	mov	r0, r3
 810339a:	3724      	adds	r7, #36	@ 0x24
 810339c:	46bd      	mov	sp, r7
 810339e:	bd90      	pop	{r4, r7, pc}
 81033a0:	08111840 	.word	0x08111840

081033a4 <_ZNSt3mapIP20__UART_HandleTypeDefP12UartEndpointSt4lessIS1_ESaISt4pairIKS1_S3_EEE4findERS7_>:
       *  pointing to the sought after %pair.  If unsuccessful it returns the
       *  past-the-end ( @c end() ) iterator.
       */

      iterator
      find(const key_type& __x)
 81033a4:	b580      	push	{r7, lr}
 81033a6:	b082      	sub	sp, #8
 81033a8:	af00      	add	r7, sp, #0
 81033aa:	6078      	str	r0, [r7, #4]
 81033ac:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 81033ae:	687b      	ldr	r3, [r7, #4]
 81033b0:	6839      	ldr	r1, [r7, #0]
 81033b2:	4618      	mov	r0, r3
 81033b4:	f000 f96f 	bl	8103696 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE4findERS3_>
 81033b8:	4603      	mov	r3, r0
 81033ba:	4618      	mov	r0, r3
 81033bc:	3708      	adds	r7, #8
 81033be:	46bd      	mov	sp, r7
 81033c0:	bd80      	pop	{r7, pc}

081033c2 <_ZNSt3mapIP20__UART_HandleTypeDefP12UartEndpointSt4lessIS1_ESaISt4pairIKS1_S3_EEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 81033c2:	b580      	push	{r7, lr}
 81033c4:	b082      	sub	sp, #8
 81033c6:	af00      	add	r7, sp, #0
 81033c8:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 81033ca:	687b      	ldr	r3, [r7, #4]
 81033cc:	4618      	mov	r0, r3
 81033ce:	f000 f9a1 	bl	8103714 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE3endEv>
 81033d2:	4603      	mov	r3, r0
 81033d4:	4618      	mov	r0, r3
 81033d6:	3708      	adds	r7, #8
 81033d8:	46bd      	mov	sp, r7
 81033da:	bd80      	pop	{r7, pc}

081033dc <_ZStneRKSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEES9_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 81033dc:	b480      	push	{r7}
 81033de:	b083      	sub	sp, #12
 81033e0:	af00      	add	r7, sp, #0
 81033e2:	6078      	str	r0, [r7, #4]
 81033e4:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 81033e6:	687b      	ldr	r3, [r7, #4]
 81033e8:	681a      	ldr	r2, [r3, #0]
 81033ea:	683b      	ldr	r3, [r7, #0]
 81033ec:	681b      	ldr	r3, [r3, #0]
 81033ee:	429a      	cmp	r2, r3
 81033f0:	bf14      	ite	ne
 81033f2:	2301      	movne	r3, #1
 81033f4:	2300      	moveq	r3, #0
 81033f6:	b2db      	uxtb	r3, r3
 81033f8:	4618      	mov	r0, r3
 81033fa:	370c      	adds	r7, #12
 81033fc:	46bd      	mov	sp, r7
 81033fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8103402:	4770      	bx	lr

08103404 <_ZNKSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 8103404:	b580      	push	{r7, lr}
 8103406:	b082      	sub	sp, #8
 8103408:	af00      	add	r7, sp, #0
 810340a:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
 810340c:	687b      	ldr	r3, [r7, #4]
 810340e:	681b      	ldr	r3, [r3, #0]
 8103410:	4618      	mov	r0, r3
 8103412:	f000 f990 	bl	8103736 <_ZNSt13_Rb_tree_nodeISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEE9_M_valptrEv>
 8103416:	4603      	mov	r3, r0
 8103418:	4618      	mov	r0, r3
 810341a:	3708      	adds	r7, #8
 810341c:	46bd      	mov	sp, r7
 810341e:	bd80      	pop	{r7, pc}

08103420 <_ZNSt5dequeIhSaIhEE9push_backERKh>:
      push_back(const value_type& __x)
 8103420:	b590      	push	{r4, r7, lr}
 8103422:	b089      	sub	sp, #36	@ 0x24
 8103424:	af00      	add	r7, sp, #0
 8103426:	6078      	str	r0, [r7, #4]
 8103428:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish._M_cur
 810342a:	687b      	ldr	r3, [r7, #4]
 810342c:	699a      	ldr	r2, [r3, #24]
	    != this->_M_impl._M_finish._M_last - 1)
 810342e:	687b      	ldr	r3, [r7, #4]
 8103430:	6a1b      	ldr	r3, [r3, #32]
 8103432:	3b01      	subs	r3, #1
	if (this->_M_impl._M_finish._M_cur
 8103434:	429a      	cmp	r2, r3
 8103436:	d023      	beq.n	8103480 <_ZNSt5dequeIhSaIhEE9push_backERKh+0x60>
	    _Alloc_traits::construct(this->_M_impl,
 8103438:	687a      	ldr	r2, [r7, #4]
 810343a:	687b      	ldr	r3, [r7, #4]
 810343c:	699b      	ldr	r3, [r3, #24]
 810343e:	61fa      	str	r2, [r7, #28]
 8103440:	61bb      	str	r3, [r7, #24]
 8103442:	683b      	ldr	r3, [r7, #0]
 8103444:	617b      	str	r3, [r7, #20]
	  __a.construct(__p, std::forward<_Args>(__args)...);
 8103446:	6978      	ldr	r0, [r7, #20]
 8103448:	f000 fc59 	bl	8103cfe <_ZSt7forwardIRKhEOT_RNSt16remove_referenceIS2_E4typeE>
 810344c:	4602      	mov	r2, r0
 810344e:	69fb      	ldr	r3, [r7, #28]
 8103450:	613b      	str	r3, [r7, #16]
 8103452:	69bb      	ldr	r3, [r7, #24]
 8103454:	60fb      	str	r3, [r7, #12]
 8103456:	60ba      	str	r2, [r7, #8]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8103458:	68fb      	ldr	r3, [r7, #12]
 810345a:	4619      	mov	r1, r3
 810345c:	2001      	movs	r0, #1
 810345e:	f7ff fdfa 	bl	8103056 <_ZnwjPv>
 8103462:	4604      	mov	r4, r0
 8103464:	68b8      	ldr	r0, [r7, #8]
 8103466:	f000 fc4a 	bl	8103cfe <_ZSt7forwardIRKhEOT_RNSt16remove_referenceIS2_E4typeE>
 810346a:	4603      	mov	r3, r0
 810346c:	781b      	ldrb	r3, [r3, #0]
 810346e:	7023      	strb	r3, [r4, #0]
 8103470:	bf00      	nop
	}
 8103472:	bf00      	nop
	    ++this->_M_impl._M_finish._M_cur;
 8103474:	687b      	ldr	r3, [r7, #4]
 8103476:	699b      	ldr	r3, [r3, #24]
 8103478:	1c5a      	adds	r2, r3, #1
 810347a:	687b      	ldr	r3, [r7, #4]
 810347c:	619a      	str	r2, [r3, #24]
      }
 810347e:	e003      	b.n	8103488 <_ZNSt5dequeIhSaIhEE9push_backERKh+0x68>
	  _M_push_back_aux(__x);
 8103480:	6839      	ldr	r1, [r7, #0]
 8103482:	6878      	ldr	r0, [r7, #4]
 8103484:	f000 f966 	bl	8103754 <_ZNSt5dequeIhSaIhEE16_M_push_back_auxIJRKhEEEvDpOT_>
      }
 8103488:	bf00      	nop
 810348a:	3724      	adds	r7, #36	@ 0x24
 810348c:	46bd      	mov	sp, r7
 810348e:	bd90      	pop	{r4, r7, pc}

08103490 <_ZNSt20_Rb_tree_key_compareISt4lessIP20__UART_HandleTypeDefEEC1Ev>:
      _Rb_tree_key_compare()
 8103490:	b480      	push	{r7}
 8103492:	b083      	sub	sp, #12
 8103494:	af00      	add	r7, sp, #0
 8103496:	6078      	str	r0, [r7, #4]
      { }
 8103498:	687b      	ldr	r3, [r7, #4]
 810349a:	4618      	mov	r0, r3
 810349c:	370c      	adds	r7, #12
 810349e:	46bd      	mov	sp, r7
 81034a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 81034a4:	4770      	bx	lr

081034a6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 81034a6:	b480      	push	{r7}
 81034a8:	b083      	sub	sp, #12
 81034aa:	af00      	add	r7, sp, #0
 81034ac:	6078      	str	r0, [r7, #4]
 81034ae:	687b      	ldr	r3, [r7, #4]
 81034b0:	4618      	mov	r0, r3
 81034b2:	370c      	adds	r7, #12
 81034b4:	46bd      	mov	sp, r7
 81034b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 81034ba:	4770      	bx	lr

081034bc <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 81034bc:	b580      	push	{r7, lr}
 81034be:	b084      	sub	sp, #16
 81034c0:	af00      	add	r7, sp, #0
 81034c2:	6078      	str	r0, [r7, #4]
 81034c4:	6039      	str	r1, [r7, #0]
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
 81034c6:	e011      	b.n	81034ec <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x30>
	{
	  _M_erase(_S_right(__x));
 81034c8:	6838      	ldr	r0, [r7, #0]
 81034ca:	f000 f99d 	bl	8103808 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base>
 81034ce:	4603      	mov	r3, r0
 81034d0:	4619      	mov	r1, r3
 81034d2:	6878      	ldr	r0, [r7, #4]
 81034d4:	f7ff fff2 	bl	81034bc <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>
	  _Link_type __y = _S_left(__x);
 81034d8:	6838      	ldr	r0, [r7, #0]
 81034da:	f000 f9a1 	bl	8103820 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE7_S_leftEPSt18_Rb_tree_node_base>
 81034de:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 81034e0:	6839      	ldr	r1, [r7, #0]
 81034e2:	6878      	ldr	r0, [r7, #4]
 81034e4:	f000 f9a8 	bl	8103838 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS6_E>
	  __x = __y;
 81034e8:	68fb      	ldr	r3, [r7, #12]
 81034ea:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 81034ec:	683b      	ldr	r3, [r7, #0]
 81034ee:	2b00      	cmp	r3, #0
 81034f0:	d1ea      	bne.n	81034c8 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0xc>
	}
    }
 81034f2:	bf00      	nop
 81034f4:	bf00      	nop
 81034f6:	3710      	adds	r7, #16
 81034f8:	46bd      	mov	sp, r7
 81034fa:	bd80      	pop	{r7, pc}

081034fc <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 81034fc:	b580      	push	{r7, lr}
 81034fe:	b082      	sub	sp, #8
 8103500:	af00      	add	r7, sp, #0
 8103502:	6078      	str	r0, [r7, #4]
      { return _M_mbegin(); }
 8103504:	6878      	ldr	r0, [r7, #4]
 8103506:	f000 f9a8 	bl	810385a <_ZNKSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE9_M_mbeginEv>
 810350a:	4603      	mov	r3, r0
 810350c:	4618      	mov	r0, r3
 810350e:	3708      	adds	r7, #8
 8103510:	46bd      	mov	sp, r7
 8103512:	bd80      	pop	{r7, pc}

08103514 <_ZNSt3mapIP20__UART_HandleTypeDefP12UartEndpointSt4lessIS1_ESaISt4pairIKS1_S3_EEE11lower_boundERS7_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
 8103514:	b580      	push	{r7, lr}
 8103516:	b082      	sub	sp, #8
 8103518:	af00      	add	r7, sp, #0
 810351a:	6078      	str	r0, [r7, #4]
 810351c:	6039      	str	r1, [r7, #0]
      { return _M_t.lower_bound(__x); }
 810351e:	687b      	ldr	r3, [r7, #4]
 8103520:	6839      	ldr	r1, [r7, #0]
 8103522:	4618      	mov	r0, r3
 8103524:	f000 f9a5 	bl	8103872 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE11lower_boundERS3_>
 8103528:	4603      	mov	r3, r0
 810352a:	4618      	mov	r0, r3
 810352c:	3708      	adds	r7, #8
 810352e:	46bd      	mov	sp, r7
 8103530:	bd80      	pop	{r7, pc}

08103532 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEES9_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8103532:	b480      	push	{r7}
 8103534:	b083      	sub	sp, #12
 8103536:	af00      	add	r7, sp, #0
 8103538:	6078      	str	r0, [r7, #4]
 810353a:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 810353c:	687b      	ldr	r3, [r7, #4]
 810353e:	681a      	ldr	r2, [r3, #0]
 8103540:	683b      	ldr	r3, [r7, #0]
 8103542:	681b      	ldr	r3, [r3, #0]
 8103544:	429a      	cmp	r2, r3
 8103546:	bf0c      	ite	eq
 8103548:	2301      	moveq	r3, #1
 810354a:	2300      	movne	r3, #0
 810354c:	b2db      	uxtb	r3, r3
 810354e:	4618      	mov	r0, r3
 8103550:	370c      	adds	r7, #12
 8103552:	46bd      	mov	sp, r7
 8103554:	f85d 7b04 	ldr.w	r7, [sp], #4
 8103558:	4770      	bx	lr

0810355a <_ZNKSt3mapIP20__UART_HandleTypeDefP12UartEndpointSt4lessIS1_ESaISt4pairIKS1_S3_EEE8key_compEv>:
      key_comp() const
 810355a:	b590      	push	{r4, r7, lr}
 810355c:	b083      	sub	sp, #12
 810355e:	af00      	add	r7, sp, #0
 8103560:	6078      	str	r0, [r7, #4]
      { return _M_t.key_comp(); }
 8103562:	687b      	ldr	r3, [r7, #4]
 8103564:	4618      	mov	r0, r3
 8103566:	f000 f99b 	bl	81038a0 <_ZNKSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE8key_compEv>
 810356a:	bf00      	nop
 810356c:	4620      	mov	r0, r4
 810356e:	370c      	adds	r7, #12
 8103570:	46bd      	mov	sp, r7
 8103572:	bd90      	pop	{r4, r7, pc}

08103574 <_ZNKSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8103574:	b580      	push	{r7, lr}
 8103576:	b082      	sub	sp, #8
 8103578:	af00      	add	r7, sp, #0
 810357a:	6078      	str	r0, [r7, #4]
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 810357c:	687b      	ldr	r3, [r7, #4]
 810357e:	681b      	ldr	r3, [r3, #0]
 8103580:	4618      	mov	r0, r3
 8103582:	f000 f8d8 	bl	8103736 <_ZNSt13_Rb_tree_nodeISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEE9_M_valptrEv>
 8103586:	4603      	mov	r3, r0
 8103588:	4618      	mov	r0, r3
 810358a:	3708      	adds	r7, #8
 810358c:	46bd      	mov	sp, r7
 810358e:	bd80      	pop	{r7, pc}

08103590 <_ZNKSt4lessIP20__UART_HandleTypeDefEclES1_S1_>:
  // Partial specialization of std::less for pointers.
  template<typename _Tp>
    struct less<_Tp*> : public binary_function<_Tp*, _Tp*, bool>
    {
      _GLIBCXX14_CONSTEXPR bool
      operator()(_Tp* __x, _Tp* __y) const _GLIBCXX_NOTHROW
 8103590:	b580      	push	{r7, lr}
 8103592:	b084      	sub	sp, #16
 8103594:	af00      	add	r7, sp, #0
 8103596:	60f8      	str	r0, [r7, #12]
 8103598:	60b9      	str	r1, [r7, #8]
 810359a:	607a      	str	r2, [r7, #4]
      {
#if __cplusplus >= 201402L
	if (std::__is_constant_evaluated())
 810359c:	f7ff fd53 	bl	8103046 <__is_constant_evaluated>
 81035a0:	4603      	mov	r3, r0
 81035a2:	2b00      	cmp	r3, #0
 81035a4:	d007      	beq.n	81035b6 <_ZNKSt4lessIP20__UART_HandleTypeDefEclES1_S1_+0x26>
	  return __x < __y;
 81035a6:	68ba      	ldr	r2, [r7, #8]
 81035a8:	687b      	ldr	r3, [r7, #4]
 81035aa:	429a      	cmp	r2, r3
 81035ac:	bf34      	ite	cc
 81035ae:	2301      	movcc	r3, #1
 81035b0:	2300      	movcs	r3, #0
 81035b2:	b2db      	uxtb	r3, r3
 81035b4:	e006      	b.n	81035c4 <_ZNKSt4lessIP20__UART_HandleTypeDefEclES1_S1_+0x34>
#endif
	return (__UINTPTR_TYPE__)__x < (__UINTPTR_TYPE__)__y;
 81035b6:	68ba      	ldr	r2, [r7, #8]
 81035b8:	687b      	ldr	r3, [r7, #4]
 81035ba:	429a      	cmp	r2, r3
 81035bc:	bf34      	ite	cc
 81035be:	2301      	movcc	r3, #1
 81035c0:	2300      	movcs	r3, #0
 81035c2:	b2db      	uxtb	r3, r3
      }
 81035c4:	4618      	mov	r0, r3
 81035c6:	3710      	adds	r7, #16
 81035c8:	46bd      	mov	sp, r7
 81035ca:	bd80      	pop	{r7, pc}

081035cc <_ZNSt5tupleIJRKP20__UART_HandleTypeDefEEC1ILb1ELb1EEES3_>:
	: _Inherited() { }

      template<bool _NotEmpty = (sizeof...(_Elements) >= 1),
	       _ImplicitCtor<_NotEmpty, const _Elements&...> = true>
	constexpr
	tuple(const _Elements&... __elements)
 81035cc:	b580      	push	{r7, lr}
 81035ce:	b082      	sub	sp, #8
 81035d0:	af00      	add	r7, sp, #0
 81035d2:	6078      	str	r0, [r7, #4]
 81035d4:	6039      	str	r1, [r7, #0]
	noexcept(__nothrow_constructible<const _Elements&...>())
	: _Inherited(__elements...) { }
 81035d6:	687b      	ldr	r3, [r7, #4]
 81035d8:	6839      	ldr	r1, [r7, #0]
 81035da:	4618      	mov	r0, r3
 81035dc:	f000 f96b 	bl	81038b6 <_ZNSt11_Tuple_implILj0EJRKP20__UART_HandleTypeDefEEC1ES3_>
 81035e0:	687b      	ldr	r3, [r7, #4]
 81035e2:	4618      	mov	r0, r3
 81035e4:	3708      	adds	r7, #8
 81035e6:	46bd      	mov	sp, r7
 81035e8:	bd80      	pop	{r7, pc}

081035ea <_ZNSt23_Rb_tree_const_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEC1ERKSt17_Rb_tree_iteratorIS6_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 81035ea:	b480      	push	{r7}
 81035ec:	b083      	sub	sp, #12
 81035ee:	af00      	add	r7, sp, #0
 81035f0:	6078      	str	r0, [r7, #4]
 81035f2:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 81035f4:	683b      	ldr	r3, [r7, #0]
 81035f6:	681a      	ldr	r2, [r3, #0]
 81035f8:	687b      	ldr	r3, [r7, #4]
 81035fa:	601a      	str	r2, [r3, #0]
 81035fc:	687b      	ldr	r3, [r7, #4]
 81035fe:	4618      	mov	r0, r3
 8103600:	370c      	adds	r7, #12
 8103602:	46bd      	mov	sp, r7
 8103604:	f85d 7b04 	ldr.w	r7, [sp], #4
 8103608:	4770      	bx	lr

0810360a <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS3_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 810360a:	b5b0      	push	{r4, r5, r7, lr}
 810360c:	b08c      	sub	sp, #48	@ 0x30
 810360e:	af02      	add	r7, sp, #8
 8103610:	60f8      	str	r0, [r7, #12]
 8103612:	60b9      	str	r1, [r7, #8]
 8103614:	607a      	str	r2, [r7, #4]
 8103616:	603b      	str	r3, [r7, #0]
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
 8103618:	6878      	ldr	r0, [r7, #4]
 810361a:	f000 f95b 	bl	81038d4 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 810361e:	4604      	mov	r4, r0
 8103620:	6838      	ldr	r0, [r7, #0]
 8103622:	f000 f962 	bl	81038ea <_ZSt7forwardISt5tupleIJRKP20__UART_HandleTypeDefEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8103626:	4605      	mov	r5, r0
 8103628:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 810362a:	f000 f969 	bl	8103900 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 810362e:	4603      	mov	r3, r0
 8103630:	f107 001c 	add.w	r0, r7, #28
 8103634:	9300      	str	r3, [sp, #0]
 8103636:	462b      	mov	r3, r5
 8103638:	4622      	mov	r2, r4
 810363a:	68f9      	ldr	r1, [r7, #12]
 810363c:	f000 f96b 	bl	8103916 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJRS3_EESI_IJEEEEERSC_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
 8103640:	f107 031c 	add.w	r3, r7, #28
 8103644:	4618      	mov	r0, r3
 8103646:	f000 facd 	bl	8103be4 <_ZNKSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE10_Auto_node6_M_keyEv>
 810364a:	4603      	mov	r3, r0
 810364c:	f107 0014 	add.w	r0, r7, #20
 8103650:	68ba      	ldr	r2, [r7, #8]
 8103652:	68f9      	ldr	r1, [r7, #12]
 8103654:	f000 f997 	bl	8103986 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_>
	if (__res.second)
 8103658:	69bb      	ldr	r3, [r7, #24]
 810365a:	2b00      	cmp	r3, #0
 810365c:	d009      	beq.n	8103672 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS3_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x68>
	  return __z._M_insert(__res);
 810365e:	f107 001c 	add.w	r0, r7, #28
 8103662:	f107 0314 	add.w	r3, r7, #20
 8103666:	e893 0006 	ldmia.w	r3, {r1, r2}
 810366a:	f000 fac9 	bl	8103c00 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE10_Auto_node9_M_insertES2_IPSt18_Rb_tree_node_baseSF_E>
 810366e:	4604      	mov	r4, r0
 8103670:	e007      	b.n	8103682 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS3_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_+0x78>
	return iterator(__res.first);
 8103672:	697a      	ldr	r2, [r7, #20]
 8103674:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8103678:	4611      	mov	r1, r2
 810367a:	4618      	mov	r0, r3
 810367c:	f000 fad9 	bl	8103c32 <_ZNSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEC1EPSt18_Rb_tree_node_base>
 8103680:	6a7c      	ldr	r4, [r7, #36]	@ 0x24
      }
 8103682:	f107 031c 	add.w	r3, r7, #28
 8103686:	4618      	mov	r0, r3
 8103688:	f000 f968 	bl	810395c <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE10_Auto_nodeD1Ev>
 810368c:	4623      	mov	r3, r4
 810368e:	4618      	mov	r0, r3
 8103690:	3728      	adds	r7, #40	@ 0x28
 8103692:	46bd      	mov	sp, r7
 8103694:	bdb0      	pop	{r4, r5, r7, pc}

08103696 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE4findERS3_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue,
		      _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8103696:	b5b0      	push	{r4, r5, r7, lr}
 8103698:	b084      	sub	sp, #16
 810369a:	af00      	add	r7, sp, #0
 810369c:	6078      	str	r0, [r7, #4]
 810369e:	6039      	str	r1, [r7, #0]
    find(const _Key& __k)
    {
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 81036a0:	6878      	ldr	r0, [r7, #4]
 81036a2:	f7ff ff2b 	bl	81034fc <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE8_M_beginEv>
 81036a6:	4604      	mov	r4, r0
 81036a8:	6878      	ldr	r0, [r7, #4]
 81036aa:	f000 fad1 	bl	8103c50 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE6_M_endEv>
 81036ae:	4602      	mov	r2, r0
 81036b0:	683b      	ldr	r3, [r7, #0]
 81036b2:	4621      	mov	r1, r4
 81036b4:	6878      	ldr	r0, [r7, #4]
 81036b6:	f000 fad7 	bl	8103c68 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_EPSt18_Rb_tree_node_baseRS3_>
 81036ba:	4603      	mov	r3, r0
 81036bc:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 81036be:	6878      	ldr	r0, [r7, #4]
 81036c0:	f000 f828 	bl	8103714 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE3endEv>
 81036c4:	4603      	mov	r3, r0
 81036c6:	60fb      	str	r3, [r7, #12]
 81036c8:	f107 020c 	add.w	r2, r7, #12
 81036cc:	f107 0308 	add.w	r3, r7, #8
 81036d0:	4611      	mov	r1, r2
 81036d2:	4618      	mov	r0, r3
 81036d4:	f7ff ff2d 	bl	8103532 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEES9_>
 81036d8:	4603      	mov	r3, r0
	      || _M_impl._M_key_compare(__k,
					_S_key(__j._M_node))) ? end() : __j;
 81036da:	2b00      	cmp	r3, #0
 81036dc:	d110      	bne.n	8103700 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE4findERS3_+0x6a>
	      || _M_impl._M_key_compare(__k,
 81036de:	687c      	ldr	r4, [r7, #4]
 81036e0:	683b      	ldr	r3, [r7, #0]
 81036e2:	681d      	ldr	r5, [r3, #0]
					_S_key(__j._M_node))) ? end() : __j;
 81036e4:	68bb      	ldr	r3, [r7, #8]
 81036e6:	4618      	mov	r0, r3
 81036e8:	f000 faf1 	bl	8103cce <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base>
 81036ec:	4603      	mov	r3, r0
	      || _M_impl._M_key_compare(__k,
 81036ee:	681b      	ldr	r3, [r3, #0]
 81036f0:	461a      	mov	r2, r3
 81036f2:	4629      	mov	r1, r5
 81036f4:	4620      	mov	r0, r4
 81036f6:	f7ff ff4b 	bl	8103590 <_ZNKSt4lessIP20__UART_HandleTypeDefEclES1_S1_>
 81036fa:	4603      	mov	r3, r0
 81036fc:	2b00      	cmp	r3, #0
 81036fe:	d004      	beq.n	810370a <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE4findERS3_+0x74>
					_S_key(__j._M_node))) ? end() : __j;
 8103700:	6878      	ldr	r0, [r7, #4]
 8103702:	f000 f807 	bl	8103714 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE3endEv>
 8103706:	4603      	mov	r3, r0
 8103708:	e000      	b.n	810370c <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE4findERS3_+0x76>
 810370a:	68bb      	ldr	r3, [r7, #8]
    }
 810370c:	4618      	mov	r0, r3
 810370e:	3710      	adds	r7, #16
 8103710:	46bd      	mov	sp, r7
 8103712:	bdb0      	pop	{r4, r5, r7, pc}

08103714 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8103714:	b580      	push	{r7, lr}
 8103716:	b084      	sub	sp, #16
 8103718:	af00      	add	r7, sp, #0
 810371a:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 810371c:	687b      	ldr	r3, [r7, #4]
 810371e:	1d1a      	adds	r2, r3, #4
 8103720:	f107 030c 	add.w	r3, r7, #12
 8103724:	4611      	mov	r1, r2
 8103726:	4618      	mov	r0, r3
 8103728:	f000 fa83 	bl	8103c32 <_ZNSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEC1EPSt18_Rb_tree_node_base>
 810372c:	68fb      	ldr	r3, [r7, #12]
 810372e:	4618      	mov	r0, r3
 8103730:	3710      	adds	r7, #16
 8103732:	46bd      	mov	sp, r7
 8103734:	bd80      	pop	{r7, pc}

08103736 <_ZNSt13_Rb_tree_nodeISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEE9_M_valptrEv>:
      _M_valptr()
 8103736:	b580      	push	{r7, lr}
 8103738:	b082      	sub	sp, #8
 810373a:	af00      	add	r7, sp, #0
 810373c:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 810373e:	687b      	ldr	r3, [r7, #4]
 8103740:	3310      	adds	r3, #16
 8103742:	4618      	mov	r0, r3
 8103744:	f000 facf 	bl	8103ce6 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEE6_M_ptrEv>
 8103748:	4603      	mov	r3, r0
 810374a:	4618      	mov	r0, r3
 810374c:	3708      	adds	r7, #8
 810374e:	46bd      	mov	sp, r7
 8103750:	bd80      	pop	{r7, pc}
	...

08103754 <_ZNSt5dequeIhSaIhEE16_M_push_back_auxIJRKhEEEvDpOT_>:
      deque<_Tp, _Alloc>::
 8103754:	b5b0      	push	{r4, r5, r7, lr}
 8103756:	b088      	sub	sp, #32
 8103758:	af00      	add	r7, sp, #0
 810375a:	6078      	str	r0, [r7, #4]
 810375c:	6039      	str	r1, [r7, #0]
	if (size() == max_size())
 810375e:	6878      	ldr	r0, [r7, #4]
 8103760:	f7fe fee9 	bl	8102536 <_ZNKSt5dequeIhSaIhEE4sizeEv>
 8103764:	4604      	mov	r4, r0
 8103766:	6878      	ldr	r0, [r7, #4]
 8103768:	f000 fad4 	bl	8103d14 <_ZNKSt5dequeIhSaIhEE8max_sizeEv>
 810376c:	4603      	mov	r3, r0
 810376e:	429c      	cmp	r4, r3
 8103770:	bf0c      	ite	eq
 8103772:	2301      	moveq	r3, #1
 8103774:	2300      	movne	r3, #0
 8103776:	b2db      	uxtb	r3, r3
 8103778:	2b00      	cmp	r3, #0
 810377a:	d002      	beq.n	8103782 <_ZNSt5dequeIhSaIhEE16_M_push_back_auxIJRKhEEEvDpOT_+0x2e>
	  __throw_length_error(
 810377c:	4821      	ldr	r0, [pc, #132]	@ (8103804 <_ZNSt5dequeIhSaIhEE16_M_push_back_auxIJRKhEEEvDpOT_+0xb0>)
 810377e:	f00b f928 	bl	810e9d2 <_ZSt20__throw_length_errorPKc>
	_M_reserve_map_at_back();
 8103782:	2101      	movs	r1, #1
 8103784:	6878      	ldr	r0, [r7, #4]
 8103786:	f000 fad6 	bl	8103d36 <_ZNSt5dequeIhSaIhEE22_M_reserve_map_at_backEj>
	*(this->_M_impl._M_finish._M_node + 1) = this->_M_allocate_node();
 810378a:	687a      	ldr	r2, [r7, #4]
 810378c:	687b      	ldr	r3, [r7, #4]
 810378e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8103790:	1d1c      	adds	r4, r3, #4
 8103792:	4610      	mov	r0, r2
 8103794:	f7fe f963 	bl	8101a5e <_ZNSt11_Deque_baseIhSaIhEE16_M_allocate_nodeEv>
 8103798:	4603      	mov	r3, r0
 810379a:	6023      	str	r3, [r4, #0]
	    _Alloc_traits::construct(this->_M_impl,
 810379c:	687d      	ldr	r5, [r7, #4]
 810379e:	687b      	ldr	r3, [r7, #4]
 81037a0:	699c      	ldr	r4, [r3, #24]
 81037a2:	6838      	ldr	r0, [r7, #0]
 81037a4:	f000 faab 	bl	8103cfe <_ZSt7forwardIRKhEOT_RNSt16remove_referenceIS2_E4typeE>
 81037a8:	4603      	mov	r3, r0
 81037aa:	61fd      	str	r5, [r7, #28]
 81037ac:	61bc      	str	r4, [r7, #24]
 81037ae:	617b      	str	r3, [r7, #20]
	  __a.construct(__p, std::forward<_Args>(__args)...);
 81037b0:	6978      	ldr	r0, [r7, #20]
 81037b2:	f000 faa4 	bl	8103cfe <_ZSt7forwardIRKhEOT_RNSt16remove_referenceIS2_E4typeE>
 81037b6:	4602      	mov	r2, r0
 81037b8:	69fb      	ldr	r3, [r7, #28]
 81037ba:	613b      	str	r3, [r7, #16]
 81037bc:	69bb      	ldr	r3, [r7, #24]
 81037be:	60fb      	str	r3, [r7, #12]
 81037c0:	60ba      	str	r2, [r7, #8]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 81037c2:	68fb      	ldr	r3, [r7, #12]
 81037c4:	4619      	mov	r1, r3
 81037c6:	2001      	movs	r0, #1
 81037c8:	f7ff fc45 	bl	8103056 <_ZnwjPv>
 81037cc:	4604      	mov	r4, r0
 81037ce:	68b8      	ldr	r0, [r7, #8]
 81037d0:	f000 fa95 	bl	8103cfe <_ZSt7forwardIRKhEOT_RNSt16remove_referenceIS2_E4typeE>
 81037d4:	4603      	mov	r3, r0
 81037d6:	781b      	ldrb	r3, [r3, #0]
 81037d8:	7023      	strb	r3, [r4, #0]
 81037da:	bf00      	nop
	}
 81037dc:	bf00      	nop
	    this->_M_impl._M_finish._M_set_node(this->_M_impl._M_finish._M_node
 81037de:	687b      	ldr	r3, [r7, #4]
 81037e0:	f103 0218 	add.w	r2, r3, #24
 81037e4:	687b      	ldr	r3, [r7, #4]
 81037e6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 81037e8:	3304      	adds	r3, #4
 81037ea:	4619      	mov	r1, r3
 81037ec:	4610      	mov	r0, r2
 81037ee:	f7fe f8dc 	bl	81019aa <_ZNSt15_Deque_iteratorIhRhPhE11_M_set_nodeEPS1_>
	    this->_M_impl._M_finish._M_cur = this->_M_impl._M_finish._M_first;
 81037f2:	687b      	ldr	r3, [r7, #4]
 81037f4:	69da      	ldr	r2, [r3, #28]
 81037f6:	687b      	ldr	r3, [r7, #4]
 81037f8:	619a      	str	r2, [r3, #24]
      }
 81037fa:	bf00      	nop
 81037fc:	3720      	adds	r7, #32
 81037fe:	46bd      	mov	sp, r7
 8103800:	bdb0      	pop	{r4, r5, r7, pc}
 8103802:	bf00      	nop
 8103804:	081116f0 	.word	0x081116f0

08103808 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8103808:	b480      	push	{r7}
 810380a:	b083      	sub	sp, #12
 810380c:	af00      	add	r7, sp, #0
 810380e:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 8103810:	687b      	ldr	r3, [r7, #4]
 8103812:	68db      	ldr	r3, [r3, #12]
 8103814:	4618      	mov	r0, r3
 8103816:	370c      	adds	r7, #12
 8103818:	46bd      	mov	sp, r7
 810381a:	f85d 7b04 	ldr.w	r7, [sp], #4
 810381e:	4770      	bx	lr

08103820 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8103820:	b480      	push	{r7}
 8103822:	b083      	sub	sp, #12
 8103824:	af00      	add	r7, sp, #0
 8103826:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 8103828:	687b      	ldr	r3, [r7, #4]
 810382a:	689b      	ldr	r3, [r3, #8]
 810382c:	4618      	mov	r0, r3
 810382e:	370c      	adds	r7, #12
 8103830:	46bd      	mov	sp, r7
 8103832:	f85d 7b04 	ldr.w	r7, [sp], #4
 8103836:	4770      	bx	lr

08103838 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS6_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8103838:	b580      	push	{r7, lr}
 810383a:	b082      	sub	sp, #8
 810383c:	af00      	add	r7, sp, #0
 810383e:	6078      	str	r0, [r7, #4]
 8103840:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 8103842:	6839      	ldr	r1, [r7, #0]
 8103844:	6878      	ldr	r0, [r7, #4]
 8103846:	f000 fa91 	bl	8103d6c <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS6_E>
	_M_put_node(__p);
 810384a:	6839      	ldr	r1, [r7, #0]
 810384c:	6878      	ldr	r0, [r7, #4]
 810384e:	f000 faa6 	bl	8103d9e <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS6_E>
      }
 8103852:	bf00      	nop
 8103854:	3708      	adds	r7, #8
 8103856:	46bd      	mov	sp, r7
 8103858:	bd80      	pop	{r7, pc}

0810385a <_ZNKSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
 810385a:	b480      	push	{r7}
 810385c:	b083      	sub	sp, #12
 810385e:	af00      	add	r7, sp, #0
 8103860:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8103862:	687b      	ldr	r3, [r7, #4]
 8103864:	689b      	ldr	r3, [r3, #8]
 8103866:	4618      	mov	r0, r3
 8103868:	370c      	adds	r7, #12
 810386a:	46bd      	mov	sp, r7
 810386c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8103870:	4770      	bx	lr

08103872 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE11lower_boundERS3_>:
      lower_bound(const key_type& __k)
 8103872:	b590      	push	{r4, r7, lr}
 8103874:	b083      	sub	sp, #12
 8103876:	af00      	add	r7, sp, #0
 8103878:	6078      	str	r0, [r7, #4]
 810387a:	6039      	str	r1, [r7, #0]
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
 810387c:	6878      	ldr	r0, [r7, #4]
 810387e:	f7ff fe3d 	bl	81034fc <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE8_M_beginEv>
 8103882:	4604      	mov	r4, r0
 8103884:	6878      	ldr	r0, [r7, #4]
 8103886:	f000 f9e3 	bl	8103c50 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE6_M_endEv>
 810388a:	4602      	mov	r2, r0
 810388c:	683b      	ldr	r3, [r7, #0]
 810388e:	4621      	mov	r1, r4
 8103890:	6878      	ldr	r0, [r7, #4]
 8103892:	f000 f9e9 	bl	8103c68 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_EPSt18_Rb_tree_node_baseRS3_>
 8103896:	4603      	mov	r3, r0
 8103898:	4618      	mov	r0, r3
 810389a:	370c      	adds	r7, #12
 810389c:	46bd      	mov	sp, r7
 810389e:	bd90      	pop	{r4, r7, pc}

081038a0 <_ZNKSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE8key_compEv>:
      key_comp() const
 81038a0:	b480      	push	{r7}
 81038a2:	b083      	sub	sp, #12
 81038a4:	af00      	add	r7, sp, #0
 81038a6:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_key_compare; }
 81038a8:	bf00      	nop
 81038aa:	4618      	mov	r0, r3
 81038ac:	370c      	adds	r7, #12
 81038ae:	46bd      	mov	sp, r7
 81038b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 81038b4:	4770      	bx	lr

081038b6 <_ZNSt11_Tuple_implILj0EJRKP20__UART_HandleTypeDefEEC1ES3_>:
      _Tuple_impl(const _Head& __head)
 81038b6:	b580      	push	{r7, lr}
 81038b8:	b082      	sub	sp, #8
 81038ba:	af00      	add	r7, sp, #0
 81038bc:	6078      	str	r0, [r7, #4]
 81038be:	6039      	str	r1, [r7, #0]
      : _Base(__head)
 81038c0:	687b      	ldr	r3, [r7, #4]
 81038c2:	6839      	ldr	r1, [r7, #0]
 81038c4:	4618      	mov	r0, r3
 81038c6:	f000 fa82 	bl	8103dce <_ZNSt10_Head_baseILj0ERKP20__UART_HandleTypeDefLb0EEC1ES3_>
      { }
 81038ca:	687b      	ldr	r3, [r7, #4]
 81038cc:	4618      	mov	r0, r3
 81038ce:	3708      	adds	r7, #8
 81038d0:	46bd      	mov	sp, r7
 81038d2:	bd80      	pop	{r7, pc}

081038d4 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 81038d4:	b480      	push	{r7}
 81038d6:	b083      	sub	sp, #12
 81038d8:	af00      	add	r7, sp, #0
 81038da:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 81038dc:	687b      	ldr	r3, [r7, #4]
 81038de:	4618      	mov	r0, r3
 81038e0:	370c      	adds	r7, #12
 81038e2:	46bd      	mov	sp, r7
 81038e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 81038e8:	4770      	bx	lr

081038ea <_ZSt7forwardISt5tupleIJRKP20__UART_HandleTypeDefEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 81038ea:	b480      	push	{r7}
 81038ec:	b083      	sub	sp, #12
 81038ee:	af00      	add	r7, sp, #0
 81038f0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 81038f2:	687b      	ldr	r3, [r7, #4]
 81038f4:	4618      	mov	r0, r3
 81038f6:	370c      	adds	r7, #12
 81038f8:	46bd      	mov	sp, r7
 81038fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 81038fe:	4770      	bx	lr

08103900 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8103900:	b480      	push	{r7}
 8103902:	b083      	sub	sp, #12
 8103904:	af00      	add	r7, sp, #0
 8103906:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8103908:	687b      	ldr	r3, [r7, #4]
 810390a:	4618      	mov	r0, r3
 810390c:	370c      	adds	r7, #12
 810390e:	46bd      	mov	sp, r7
 8103910:	f85d 7b04 	ldr.w	r7, [sp], #4
 8103914:	4770      	bx	lr

08103916 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJRS3_EESI_IJEEEEERSC_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
 8103916:	b5b0      	push	{r4, r5, r7, lr}
 8103918:	b084      	sub	sp, #16
 810391a:	af00      	add	r7, sp, #0
 810391c:	60f8      	str	r0, [r7, #12]
 810391e:	60b9      	str	r1, [r7, #8]
 8103920:	607a      	str	r2, [r7, #4]
 8103922:	603b      	str	r3, [r7, #0]
	  : _M_t(__t),
 8103924:	68fb      	ldr	r3, [r7, #12]
 8103926:	68ba      	ldr	r2, [r7, #8]
 8103928:	601a      	str	r2, [r3, #0]
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
 810392a:	6878      	ldr	r0, [r7, #4]
 810392c:	f7ff ffd2 	bl	81038d4 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 8103930:	4604      	mov	r4, r0
 8103932:	6838      	ldr	r0, [r7, #0]
 8103934:	f7ff ffd9 	bl	81038ea <_ZSt7forwardISt5tupleIJRKP20__UART_HandleTypeDefEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8103938:	4605      	mov	r5, r0
 810393a:	6a38      	ldr	r0, [r7, #32]
 810393c:	f7ff ffe0 	bl	8103900 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 8103940:	4603      	mov	r3, r0
 8103942:	462a      	mov	r2, r5
 8103944:	4621      	mov	r1, r4
 8103946:	68b8      	ldr	r0, [r7, #8]
 8103948:	f000 fa50 	bl	8103dec <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS3_EESH_IJEEEEEPSt13_Rb_tree_nodeIS6_EDpOT_>
 810394c:	4602      	mov	r2, r0
 810394e:	68fb      	ldr	r3, [r7, #12]
 8103950:	605a      	str	r2, [r3, #4]
	  { }
 8103952:	68fb      	ldr	r3, [r7, #12]
 8103954:	4618      	mov	r0, r3
 8103956:	3710      	adds	r7, #16
 8103958:	46bd      	mov	sp, r7
 810395a:	bdb0      	pop	{r4, r5, r7, pc}

0810395c <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
 810395c:	b580      	push	{r7, lr}
 810395e:	b082      	sub	sp, #8
 8103960:	af00      	add	r7, sp, #0
 8103962:	6078      	str	r0, [r7, #4]
	  if (_M_node)
 8103964:	687b      	ldr	r3, [r7, #4]
 8103966:	685b      	ldr	r3, [r3, #4]
 8103968:	2b00      	cmp	r3, #0
 810396a:	d007      	beq.n	810397c <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE10_Auto_nodeD1Ev+0x20>
	    _M_t._M_drop_node(_M_node);
 810396c:	687b      	ldr	r3, [r7, #4]
 810396e:	681a      	ldr	r2, [r3, #0]
 8103970:	687b      	ldr	r3, [r7, #4]
 8103972:	685b      	ldr	r3, [r3, #4]
 8103974:	4619      	mov	r1, r3
 8103976:	4610      	mov	r0, r2
 8103978:	f7ff ff5e 	bl	8103838 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS6_E>
	}
 810397c:	687b      	ldr	r3, [r7, #4]
 810397e:	4618      	mov	r0, r3
 8103980:	3708      	adds	r7, #8
 8103982:	46bd      	mov	sp, r7
 8103984:	bd80      	pop	{r7, pc}

08103986 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8103986:	b5b0      	push	{r4, r5, r7, lr}
 8103988:	b08c      	sub	sp, #48	@ 0x30
 810398a:	af00      	add	r7, sp, #0
 810398c:	60f8      	str	r0, [r7, #12]
 810398e:	60b9      	str	r1, [r7, #8]
 8103990:	607a      	str	r2, [r7, #4]
 8103992:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 8103994:	1d3b      	adds	r3, r7, #4
 8103996:	4618      	mov	r0, r3
 8103998:	f000 fa4b 	bl	8103e32 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEE13_M_const_castEv>
 810399c:	4603      	mov	r3, r0
 810399e:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 81039a0:	69bc      	ldr	r4, [r7, #24]
 81039a2:	68b8      	ldr	r0, [r7, #8]
 81039a4:	f000 f954 	bl	8103c50 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE6_M_endEv>
 81039a8:	4603      	mov	r3, r0
 81039aa:	429c      	cmp	r4, r3
 81039ac:	bf0c      	ite	eq
 81039ae:	2301      	moveq	r3, #1
 81039b0:	2300      	movne	r3, #0
 81039b2:	b2db      	uxtb	r3, r3
 81039b4:	2b00      	cmp	r3, #0
 81039b6:	d032      	beq.n	8103a1e <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0x98>
	  if (size() > 0
 81039b8:	68b8      	ldr	r0, [r7, #8]
 81039ba:	f000 fa4b 	bl	8103e54 <_ZNKSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE4sizeEv>
 81039be:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 81039c0:	2b00      	cmp	r3, #0
 81039c2:	d015      	beq.n	81039f0 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0x6a>
 81039c4:	68bc      	ldr	r4, [r7, #8]
 81039c6:	68b8      	ldr	r0, [r7, #8]
 81039c8:	f000 fa50 	bl	8103e6c <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE12_M_rightmostEv>
 81039cc:	4603      	mov	r3, r0
 81039ce:	681b      	ldr	r3, [r3, #0]
 81039d0:	4618      	mov	r0, r3
 81039d2:	f000 f97c 	bl	8103cce <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base>
 81039d6:	4603      	mov	r3, r0
 81039d8:	6819      	ldr	r1, [r3, #0]
 81039da:	683b      	ldr	r3, [r7, #0]
 81039dc:	681b      	ldr	r3, [r3, #0]
 81039de:	461a      	mov	r2, r3
 81039e0:	4620      	mov	r0, r4
 81039e2:	f7ff fdd5 	bl	8103590 <_ZNKSt4lessIP20__UART_HandleTypeDefEclES1_S1_>
 81039e6:	4603      	mov	r3, r0
 81039e8:	2b00      	cmp	r3, #0
 81039ea:	d001      	beq.n	81039f0 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0x6a>
 81039ec:	2301      	movs	r3, #1
 81039ee:	e000      	b.n	81039f2 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0x6c>
 81039f0:	2300      	movs	r3, #0
	  if (size() > 0
 81039f2:	2b00      	cmp	r3, #0
 81039f4:	d00c      	beq.n	8103a10 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0x8a>
	    return _Res(0, _M_rightmost());
 81039f6:	2300      	movs	r3, #0
 81039f8:	61fb      	str	r3, [r7, #28]
 81039fa:	68b8      	ldr	r0, [r7, #8]
 81039fc:	f000 fa36 	bl	8103e6c <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE12_M_rightmostEv>
 8103a00:	4602      	mov	r2, r0
 8103a02:	f107 031c 	add.w	r3, r7, #28
 8103a06:	4619      	mov	r1, r3
 8103a08:	68f8      	ldr	r0, [r7, #12]
 8103a0a:	f000 fa3b 	bl	8103e84 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
 8103a0e:	e0e5      	b.n	8103bdc <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0x256>
	    return _M_get_insert_unique_pos(__k);
 8103a10:	68fb      	ldr	r3, [r7, #12]
 8103a12:	683a      	ldr	r2, [r7, #0]
 8103a14:	68b9      	ldr	r1, [r7, #8]
 8103a16:	4618      	mov	r0, r3
 8103a18:	f000 fa49 	bl	8103eae <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE24_M_get_insert_unique_posERS3_>
 8103a1c:	e0de      	b.n	8103bdc <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0x256>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 8103a1e:	68bc      	ldr	r4, [r7, #8]
 8103a20:	683b      	ldr	r3, [r7, #0]
 8103a22:	681d      	ldr	r5, [r3, #0]
 8103a24:	69bb      	ldr	r3, [r7, #24]
 8103a26:	4618      	mov	r0, r3
 8103a28:	f000 f951 	bl	8103cce <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8103a2c:	4603      	mov	r3, r0
 8103a2e:	681b      	ldr	r3, [r3, #0]
 8103a30:	461a      	mov	r2, r3
 8103a32:	4629      	mov	r1, r5
 8103a34:	4620      	mov	r0, r4
 8103a36:	f7ff fdab 	bl	8103590 <_ZNKSt4lessIP20__UART_HandleTypeDefEclES1_S1_>
 8103a3a:	4603      	mov	r3, r0
 8103a3c:	2b00      	cmp	r3, #0
 8103a3e:	d059      	beq.n	8103af4 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0x16e>
	  iterator __before = __pos;
 8103a40:	69bb      	ldr	r3, [r7, #24]
 8103a42:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 8103a44:	69bc      	ldr	r4, [r7, #24]
 8103a46:	68b8      	ldr	r0, [r7, #8]
 8103a48:	f000 fabb 	bl	8103fc2 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE11_M_leftmostEv>
 8103a4c:	4603      	mov	r3, r0
 8103a4e:	681b      	ldr	r3, [r3, #0]
 8103a50:	429c      	cmp	r4, r3
 8103a52:	bf0c      	ite	eq
 8103a54:	2301      	moveq	r3, #1
 8103a56:	2300      	movne	r3, #0
 8103a58:	b2db      	uxtb	r3, r3
 8103a5a:	2b00      	cmp	r3, #0
 8103a5c:	d00d      	beq.n	8103a7a <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0xf4>
	    return _Res(_M_leftmost(), _M_leftmost());
 8103a5e:	68b8      	ldr	r0, [r7, #8]
 8103a60:	f000 faaf 	bl	8103fc2 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE11_M_leftmostEv>
 8103a64:	4604      	mov	r4, r0
 8103a66:	68b8      	ldr	r0, [r7, #8]
 8103a68:	f000 faab 	bl	8103fc2 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE11_M_leftmostEv>
 8103a6c:	4603      	mov	r3, r0
 8103a6e:	461a      	mov	r2, r3
 8103a70:	4621      	mov	r1, r4
 8103a72:	68f8      	ldr	r0, [r7, #12]
 8103a74:	f000 fab1 	bl	8103fda <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8103a78:	e0b0      	b.n	8103bdc <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0x256>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 8103a7a:	68bc      	ldr	r4, [r7, #8]
 8103a7c:	f107 0314 	add.w	r3, r7, #20
 8103a80:	4618      	mov	r0, r3
 8103a82:	f000 fac3 	bl	810400c <_ZNSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEmmEv>
 8103a86:	4603      	mov	r3, r0
 8103a88:	681b      	ldr	r3, [r3, #0]
 8103a8a:	4618      	mov	r0, r3
 8103a8c:	f000 f91f 	bl	8103cce <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8103a90:	4603      	mov	r3, r0
 8103a92:	6819      	ldr	r1, [r3, #0]
 8103a94:	683b      	ldr	r3, [r7, #0]
 8103a96:	681b      	ldr	r3, [r3, #0]
 8103a98:	461a      	mov	r2, r3
 8103a9a:	4620      	mov	r0, r4
 8103a9c:	f7ff fd78 	bl	8103590 <_ZNKSt4lessIP20__UART_HandleTypeDefEclES1_S1_>
 8103aa0:	4603      	mov	r3, r0
 8103aa2:	2b00      	cmp	r3, #0
 8103aa4:	d01f      	beq.n	8103ae6 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0x160>
	      if (_S_right(__before._M_node) == 0)
 8103aa6:	697b      	ldr	r3, [r7, #20]
 8103aa8:	4618      	mov	r0, r3
 8103aaa:	f7ff fead 	bl	8103808 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base>
 8103aae:	4603      	mov	r3, r0
 8103ab0:	2b00      	cmp	r3, #0
 8103ab2:	bf0c      	ite	eq
 8103ab4:	2301      	moveq	r3, #1
 8103ab6:	2300      	movne	r3, #0
 8103ab8:	b2db      	uxtb	r3, r3
 8103aba:	2b00      	cmp	r3, #0
 8103abc:	d00a      	beq.n	8103ad4 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0x14e>
		return _Res(0, __before._M_node);
 8103abe:	2300      	movs	r3, #0
 8103ac0:	623b      	str	r3, [r7, #32]
 8103ac2:	f107 0214 	add.w	r2, r7, #20
 8103ac6:	f107 0320 	add.w	r3, r7, #32
 8103aca:	4619      	mov	r1, r3
 8103acc:	68f8      	ldr	r0, [r7, #12]
 8103ace:	f000 f9d9 	bl	8103e84 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    }
 8103ad2:	e083      	b.n	8103bdc <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0x256>
		return _Res(__pos._M_node, __pos._M_node);
 8103ad4:	f107 0218 	add.w	r2, r7, #24
 8103ad8:	f107 0318 	add.w	r3, r7, #24
 8103adc:	4619      	mov	r1, r3
 8103ade:	68f8      	ldr	r0, [r7, #12]
 8103ae0:	f000 fa7b 	bl	8103fda <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8103ae4:	e07a      	b.n	8103bdc <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0x256>
	    return _M_get_insert_unique_pos(__k);
 8103ae6:	68fb      	ldr	r3, [r7, #12]
 8103ae8:	683a      	ldr	r2, [r7, #0]
 8103aea:	68b9      	ldr	r1, [r7, #8]
 8103aec:	4618      	mov	r0, r3
 8103aee:	f000 f9de 	bl	8103eae <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE24_M_get_insert_unique_posERS3_>
 8103af2:	e073      	b.n	8103bdc <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0x256>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 8103af4:	68bc      	ldr	r4, [r7, #8]
 8103af6:	69bb      	ldr	r3, [r7, #24]
 8103af8:	4618      	mov	r0, r3
 8103afa:	f000 f8e8 	bl	8103cce <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8103afe:	4603      	mov	r3, r0
 8103b00:	6819      	ldr	r1, [r3, #0]
 8103b02:	683b      	ldr	r3, [r7, #0]
 8103b04:	681b      	ldr	r3, [r3, #0]
 8103b06:	461a      	mov	r2, r3
 8103b08:	4620      	mov	r0, r4
 8103b0a:	f7ff fd41 	bl	8103590 <_ZNKSt4lessIP20__UART_HandleTypeDefEclES1_S1_>
 8103b0e:	4603      	mov	r3, r0
 8103b10:	2b00      	cmp	r3, #0
 8103b12:	d059      	beq.n	8103bc8 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0x242>
	  iterator __after = __pos;
 8103b14:	69bb      	ldr	r3, [r7, #24]
 8103b16:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 8103b18:	69bc      	ldr	r4, [r7, #24]
 8103b1a:	68b8      	ldr	r0, [r7, #8]
 8103b1c:	f000 f9a6 	bl	8103e6c <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE12_M_rightmostEv>
 8103b20:	4603      	mov	r3, r0
 8103b22:	681b      	ldr	r3, [r3, #0]
 8103b24:	429c      	cmp	r4, r3
 8103b26:	bf0c      	ite	eq
 8103b28:	2301      	moveq	r3, #1
 8103b2a:	2300      	movne	r3, #0
 8103b2c:	b2db      	uxtb	r3, r3
 8103b2e:	2b00      	cmp	r3, #0
 8103b30:	d00c      	beq.n	8103b4c <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0x1c6>
	    return _Res(0, _M_rightmost());
 8103b32:	2300      	movs	r3, #0
 8103b34:	627b      	str	r3, [r7, #36]	@ 0x24
 8103b36:	68b8      	ldr	r0, [r7, #8]
 8103b38:	f000 f998 	bl	8103e6c <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE12_M_rightmostEv>
 8103b3c:	4602      	mov	r2, r0
 8103b3e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8103b42:	4619      	mov	r1, r3
 8103b44:	68f8      	ldr	r0, [r7, #12]
 8103b46:	f000 f99d 	bl	8103e84 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
 8103b4a:	e047      	b.n	8103bdc <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0x256>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 8103b4c:	68bc      	ldr	r4, [r7, #8]
 8103b4e:	683b      	ldr	r3, [r7, #0]
 8103b50:	681d      	ldr	r5, [r3, #0]
 8103b52:	f107 0310 	add.w	r3, r7, #16
 8103b56:	4618      	mov	r0, r3
 8103b58:	f000 fa69 	bl	810402e <_ZNSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEppEv>
 8103b5c:	4603      	mov	r3, r0
 8103b5e:	681b      	ldr	r3, [r3, #0]
 8103b60:	4618      	mov	r0, r3
 8103b62:	f000 f8b4 	bl	8103cce <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8103b66:	4603      	mov	r3, r0
 8103b68:	681b      	ldr	r3, [r3, #0]
 8103b6a:	461a      	mov	r2, r3
 8103b6c:	4629      	mov	r1, r5
 8103b6e:	4620      	mov	r0, r4
 8103b70:	f7ff fd0e 	bl	8103590 <_ZNKSt4lessIP20__UART_HandleTypeDefEclES1_S1_>
 8103b74:	4603      	mov	r3, r0
 8103b76:	2b00      	cmp	r3, #0
 8103b78:	d01f      	beq.n	8103bba <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0x234>
	      if (_S_right(__pos._M_node) == 0)
 8103b7a:	69bb      	ldr	r3, [r7, #24]
 8103b7c:	4618      	mov	r0, r3
 8103b7e:	f7ff fe43 	bl	8103808 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base>
 8103b82:	4603      	mov	r3, r0
 8103b84:	2b00      	cmp	r3, #0
 8103b86:	bf0c      	ite	eq
 8103b88:	2301      	moveq	r3, #1
 8103b8a:	2300      	movne	r3, #0
 8103b8c:	b2db      	uxtb	r3, r3
 8103b8e:	2b00      	cmp	r3, #0
 8103b90:	d00a      	beq.n	8103ba8 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0x222>
		return _Res(0, __pos._M_node);
 8103b92:	2300      	movs	r3, #0
 8103b94:	62bb      	str	r3, [r7, #40]	@ 0x28
 8103b96:	f107 0218 	add.w	r2, r7, #24
 8103b9a:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8103b9e:	4619      	mov	r1, r3
 8103ba0:	68f8      	ldr	r0, [r7, #12]
 8103ba2:	f000 f96f 	bl	8103e84 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    }
 8103ba6:	e019      	b.n	8103bdc <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0x256>
		return _Res(__after._M_node, __after._M_node);
 8103ba8:	f107 0210 	add.w	r2, r7, #16
 8103bac:	f107 0310 	add.w	r3, r7, #16
 8103bb0:	4619      	mov	r1, r3
 8103bb2:	68f8      	ldr	r0, [r7, #12]
 8103bb4:	f000 fa11 	bl	8103fda <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8103bb8:	e010      	b.n	8103bdc <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0x256>
	    return _M_get_insert_unique_pos(__k);
 8103bba:	68fb      	ldr	r3, [r7, #12]
 8103bbc:	683a      	ldr	r2, [r7, #0]
 8103bbe:	68b9      	ldr	r1, [r7, #8]
 8103bc0:	4618      	mov	r0, r3
 8103bc2:	f000 f974 	bl	8103eae <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE24_M_get_insert_unique_posERS3_>
 8103bc6:	e009      	b.n	8103bdc <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS3_+0x256>
	return _Res(__pos._M_node, 0);
 8103bc8:	2300      	movs	r3, #0
 8103bca:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8103bcc:	f107 022c 	add.w	r2, r7, #44	@ 0x2c
 8103bd0:	f107 0318 	add.w	r3, r7, #24
 8103bd4:	4619      	mov	r1, r3
 8103bd6:	68f8      	ldr	r0, [r7, #12]
 8103bd8:	f000 f954 	bl	8103e84 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    }
 8103bdc:	68f8      	ldr	r0, [r7, #12]
 8103bde:	3730      	adds	r7, #48	@ 0x30
 8103be0:	46bd      	mov	sp, r7
 8103be2:	bdb0      	pop	{r4, r5, r7, pc}

08103be4 <_ZNKSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE10_Auto_node6_M_keyEv>:
	_M_key() const
 8103be4:	b580      	push	{r7, lr}
 8103be6:	b082      	sub	sp, #8
 8103be8:	af00      	add	r7, sp, #0
 8103bea:	6078      	str	r0, [r7, #4]
	{ return _S_key(_M_node); }
 8103bec:	687b      	ldr	r3, [r7, #4]
 8103bee:	685b      	ldr	r3, [r3, #4]
 8103bf0:	4618      	mov	r0, r3
 8103bf2:	f000 fa2d 	bl	8104050 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE6_S_keyEPKSt13_Rb_tree_nodeIS6_E>
 8103bf6:	4603      	mov	r3, r0
 8103bf8:	4618      	mov	r0, r3
 8103bfa:	3708      	adds	r7, #8
 8103bfc:	46bd      	mov	sp, r7
 8103bfe:	bd80      	pop	{r7, pc}

08103c00 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE10_Auto_node9_M_insertES2_IPSt18_Rb_tree_node_baseSF_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
 8103c00:	b580      	push	{r7, lr}
 8103c02:	b086      	sub	sp, #24
 8103c04:	af00      	add	r7, sp, #0
 8103c06:	60f8      	str	r0, [r7, #12]
 8103c08:	1d3b      	adds	r3, r7, #4
 8103c0a:	e883 0006 	stmia.w	r3, {r1, r2}
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
 8103c0e:	68fb      	ldr	r3, [r7, #12]
 8103c10:	6818      	ldr	r0, [r3, #0]
 8103c12:	6879      	ldr	r1, [r7, #4]
 8103c14:	68ba      	ldr	r2, [r7, #8]
 8103c16:	68fb      	ldr	r3, [r7, #12]
 8103c18:	685b      	ldr	r3, [r3, #4]
 8103c1a:	f000 fa2c 	bl	8104076 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSE_PSt13_Rb_tree_nodeIS6_E>
 8103c1e:	4603      	mov	r3, r0
 8103c20:	617b      	str	r3, [r7, #20]
	  _M_node = nullptr;
 8103c22:	68fb      	ldr	r3, [r7, #12]
 8103c24:	2200      	movs	r2, #0
 8103c26:	605a      	str	r2, [r3, #4]
	  return __it;
 8103c28:	697b      	ldr	r3, [r7, #20]
	}
 8103c2a:	4618      	mov	r0, r3
 8103c2c:	3718      	adds	r7, #24
 8103c2e:	46bd      	mov	sp, r7
 8103c30:	bd80      	pop	{r7, pc}

08103c32 <_ZNSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8103c32:	b480      	push	{r7}
 8103c34:	b083      	sub	sp, #12
 8103c36:	af00      	add	r7, sp, #0
 8103c38:	6078      	str	r0, [r7, #4]
 8103c3a:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8103c3c:	687b      	ldr	r3, [r7, #4]
 8103c3e:	683a      	ldr	r2, [r7, #0]
 8103c40:	601a      	str	r2, [r3, #0]
 8103c42:	687b      	ldr	r3, [r7, #4]
 8103c44:	4618      	mov	r0, r3
 8103c46:	370c      	adds	r7, #12
 8103c48:	46bd      	mov	sp, r7
 8103c4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8103c4e:	4770      	bx	lr

08103c50 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 8103c50:	b480      	push	{r7}
 8103c52:	b083      	sub	sp, #12
 8103c54:	af00      	add	r7, sp, #0
 8103c56:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8103c58:	687b      	ldr	r3, [r7, #4]
 8103c5a:	3304      	adds	r3, #4
 8103c5c:	4618      	mov	r0, r3
 8103c5e:	370c      	adds	r7, #12
 8103c60:	46bd      	mov	sp, r7
 8103c62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8103c66:	4770      	bx	lr

08103c68 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_EPSt18_Rb_tree_node_baseRS3_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8103c68:	b590      	push	{r4, r7, lr}
 8103c6a:	b087      	sub	sp, #28
 8103c6c:	af00      	add	r7, sp, #0
 8103c6e:	60f8      	str	r0, [r7, #12]
 8103c70:	60b9      	str	r1, [r7, #8]
 8103c72:	607a      	str	r2, [r7, #4]
 8103c74:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8103c76:	e01c      	b.n	8103cb2 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_EPSt18_Rb_tree_node_baseRS3_+0x4a>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 8103c78:	68fc      	ldr	r4, [r7, #12]
 8103c7a:	68b8      	ldr	r0, [r7, #8]
 8103c7c:	f000 f9e8 	bl	8104050 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE6_S_keyEPKSt13_Rb_tree_nodeIS6_E>
 8103c80:	4603      	mov	r3, r0
 8103c82:	6819      	ldr	r1, [r3, #0]
 8103c84:	683b      	ldr	r3, [r7, #0]
 8103c86:	681b      	ldr	r3, [r3, #0]
 8103c88:	461a      	mov	r2, r3
 8103c8a:	4620      	mov	r0, r4
 8103c8c:	f7ff fc80 	bl	8103590 <_ZNKSt4lessIP20__UART_HandleTypeDefEclES1_S1_>
 8103c90:	4603      	mov	r3, r0
 8103c92:	f083 0301 	eor.w	r3, r3, #1
 8103c96:	b2db      	uxtb	r3, r3
 8103c98:	2b00      	cmp	r3, #0
 8103c9a:	d006      	beq.n	8103caa <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_EPSt18_Rb_tree_node_baseRS3_+0x42>
	  __y = __x, __x = _S_left(__x);
 8103c9c:	68bb      	ldr	r3, [r7, #8]
 8103c9e:	607b      	str	r3, [r7, #4]
 8103ca0:	68b8      	ldr	r0, [r7, #8]
 8103ca2:	f7ff fdbd 	bl	8103820 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE7_S_leftEPSt18_Rb_tree_node_base>
 8103ca6:	60b8      	str	r0, [r7, #8]
 8103ca8:	e003      	b.n	8103cb2 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_EPSt18_Rb_tree_node_baseRS3_+0x4a>
	  __x = _S_right(__x);
 8103caa:	68b8      	ldr	r0, [r7, #8]
 8103cac:	f7ff fdac 	bl	8103808 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base>
 8103cb0:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 8103cb2:	68bb      	ldr	r3, [r7, #8]
 8103cb4:	2b00      	cmp	r3, #0
 8103cb6:	d1df      	bne.n	8103c78 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS6_EPSt18_Rb_tree_node_baseRS3_+0x10>
      return iterator(__y);
 8103cb8:	f107 0314 	add.w	r3, r7, #20
 8103cbc:	6879      	ldr	r1, [r7, #4]
 8103cbe:	4618      	mov	r0, r3
 8103cc0:	f7ff ffb7 	bl	8103c32 <_ZNSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEC1EPSt18_Rb_tree_node_base>
 8103cc4:	697b      	ldr	r3, [r7, #20]
    }
 8103cc6:	4618      	mov	r0, r3
 8103cc8:	371c      	adds	r7, #28
 8103cca:	46bd      	mov	sp, r7
 8103ccc:	bd90      	pop	{r4, r7, pc}

08103cce <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 8103cce:	b580      	push	{r7, lr}
 8103cd0:	b082      	sub	sp, #8
 8103cd2:	af00      	add	r7, sp, #0
 8103cd4:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 8103cd6:	6878      	ldr	r0, [r7, #4]
 8103cd8:	f000 f9ba 	bl	8104050 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE6_S_keyEPKSt13_Rb_tree_nodeIS6_E>
 8103cdc:	4603      	mov	r3, r0
 8103cde:	4618      	mov	r0, r3
 8103ce0:	3708      	adds	r7, #8
 8103ce2:	46bd      	mov	sp, r7
 8103ce4:	bd80      	pop	{r7, pc}

08103ce6 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
 8103ce6:	b580      	push	{r7, lr}
 8103ce8:	b082      	sub	sp, #8
 8103cea:	af00      	add	r7, sp, #0
 8103cec:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8103cee:	6878      	ldr	r0, [r7, #4]
 8103cf0:	f000 fa00 	bl	81040f4 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEE7_M_addrEv>
 8103cf4:	4603      	mov	r3, r0
 8103cf6:	4618      	mov	r0, r3
 8103cf8:	3708      	adds	r7, #8
 8103cfa:	46bd      	mov	sp, r7
 8103cfc:	bd80      	pop	{r7, pc}

08103cfe <_ZSt7forwardIRKhEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8103cfe:	b480      	push	{r7}
 8103d00:	b083      	sub	sp, #12
 8103d02:	af00      	add	r7, sp, #0
 8103d04:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8103d06:	687b      	ldr	r3, [r7, #4]
 8103d08:	4618      	mov	r0, r3
 8103d0a:	370c      	adds	r7, #12
 8103d0c:	46bd      	mov	sp, r7
 8103d0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8103d12:	4770      	bx	lr

08103d14 <_ZNKSt5dequeIhSaIhEE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 8103d14:	b580      	push	{r7, lr}
 8103d16:	b082      	sub	sp, #8
 8103d18:	af00      	add	r7, sp, #0
 8103d1a:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 8103d1c:	687b      	ldr	r3, [r7, #4]
 8103d1e:	4618      	mov	r0, r3
 8103d20:	f7fd febb 	bl	8101a9a <_ZNKSt11_Deque_baseIhSaIhEE19_M_get_Tp_allocatorEv>
 8103d24:	4603      	mov	r3, r0
 8103d26:	4618      	mov	r0, r3
 8103d28:	f000 f9ef 	bl	810410a <_ZNSt5dequeIhSaIhEE11_S_max_sizeERKS0_>
 8103d2c:	4603      	mov	r3, r0
 8103d2e:	4618      	mov	r0, r3
 8103d30:	3708      	adds	r7, #8
 8103d32:	46bd      	mov	sp, r7
 8103d34:	bd80      	pop	{r7, pc}

08103d36 <_ZNSt5dequeIhSaIhEE22_M_reserve_map_at_backEj>:
       *  Makes sure the _M_map has space for new nodes.  Does not
       *  actually add the nodes.  Can invalidate _M_map pointers.
       *  (And consequently, %deque iterators.)
       */
      void
      _M_reserve_map_at_back(size_type __nodes_to_add = 1)
 8103d36:	b580      	push	{r7, lr}
 8103d38:	b082      	sub	sp, #8
 8103d3a:	af00      	add	r7, sp, #0
 8103d3c:	6078      	str	r0, [r7, #4]
 8103d3e:	6039      	str	r1, [r7, #0]
      {
	if (__nodes_to_add + 1 > this->_M_impl._M_map_size
 8103d40:	683b      	ldr	r3, [r7, #0]
 8103d42:	1c5a      	adds	r2, r3, #1
 8103d44:	687b      	ldr	r3, [r7, #4]
 8103d46:	685b      	ldr	r3, [r3, #4]
	    - (this->_M_impl._M_finish._M_node - this->_M_impl._M_map))
 8103d48:	6879      	ldr	r1, [r7, #4]
 8103d4a:	6a48      	ldr	r0, [r1, #36]	@ 0x24
 8103d4c:	6879      	ldr	r1, [r7, #4]
 8103d4e:	6809      	ldr	r1, [r1, #0]
 8103d50:	1a41      	subs	r1, r0, r1
 8103d52:	1089      	asrs	r1, r1, #2
 8103d54:	1a5b      	subs	r3, r3, r1
	if (__nodes_to_add + 1 > this->_M_impl._M_map_size
 8103d56:	429a      	cmp	r2, r3
 8103d58:	d904      	bls.n	8103d64 <_ZNSt5dequeIhSaIhEE22_M_reserve_map_at_backEj+0x2e>
	  _M_reallocate_map(__nodes_to_add, false);
 8103d5a:	2200      	movs	r2, #0
 8103d5c:	6839      	ldr	r1, [r7, #0]
 8103d5e:	6878      	ldr	r0, [r7, #4]
 8103d60:	f000 f9f3 	bl	810414a <_ZNSt5dequeIhSaIhEE17_M_reallocate_mapEjb>
      }
 8103d64:	bf00      	nop
 8103d66:	3708      	adds	r7, #8
 8103d68:	46bd      	mov	sp, r7
 8103d6a:	bd80      	pop	{r7, pc}

08103d6c <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS6_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8103d6c:	b590      	push	{r4, r7, lr}
 8103d6e:	b087      	sub	sp, #28
 8103d70:	af00      	add	r7, sp, #0
 8103d72:	6078      	str	r0, [r7, #4]
 8103d74:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 8103d76:	6878      	ldr	r0, [r7, #4]
 8103d78:	f000 fa81 	bl	810427e <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE21_M_get_Node_allocatorEv>
 8103d7c:	4604      	mov	r4, r0
 8103d7e:	6838      	ldr	r0, [r7, #0]
 8103d80:	f7ff fcd9 	bl	8103736 <_ZNSt13_Rb_tree_nodeISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEE9_M_valptrEv>
 8103d84:	4603      	mov	r3, r0
 8103d86:	617c      	str	r4, [r7, #20]
 8103d88:	613b      	str	r3, [r7, #16]
 8103d8a:	697b      	ldr	r3, [r7, #20]
 8103d8c:	60fb      	str	r3, [r7, #12]
 8103d8e:	693b      	ldr	r3, [r7, #16]
 8103d90:	60bb      	str	r3, [r7, #8]
	{ __p->~_Up(); }
 8103d92:	bf00      	nop
	}
 8103d94:	bf00      	nop
      }
 8103d96:	bf00      	nop
 8103d98:	371c      	adds	r7, #28
 8103d9a:	46bd      	mov	sp, r7
 8103d9c:	bd90      	pop	{r4, r7, pc}

08103d9e <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS6_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8103d9e:	b580      	push	{r7, lr}
 8103da0:	b086      	sub	sp, #24
 8103da2:	af00      	add	r7, sp, #0
 8103da4:	6078      	str	r0, [r7, #4]
 8103da6:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 8103da8:	6878      	ldr	r0, [r7, #4]
 8103daa:	f000 fa68 	bl	810427e <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE21_M_get_Node_allocatorEv>
 8103dae:	4603      	mov	r3, r0
 8103db0:	617b      	str	r3, [r7, #20]
 8103db2:	683b      	ldr	r3, [r7, #0]
 8103db4:	613b      	str	r3, [r7, #16]
 8103db6:	2301      	movs	r3, #1
 8103db8:	60fb      	str	r3, [r7, #12]
      { __a.deallocate(__p, __n); }
 8103dba:	68fa      	ldr	r2, [r7, #12]
 8103dbc:	6939      	ldr	r1, [r7, #16]
 8103dbe:	6978      	ldr	r0, [r7, #20]
 8103dc0:	f000 fb6f 	bl	81044a2 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEE10deallocateEPS8_j>
 8103dc4:	bf00      	nop
 8103dc6:	bf00      	nop
 8103dc8:	3718      	adds	r7, #24
 8103dca:	46bd      	mov	sp, r7
 8103dcc:	bd80      	pop	{r7, pc}

08103dce <_ZNSt10_Head_baseILj0ERKP20__UART_HandleTypeDefLb0EEC1ES3_>:
      constexpr _Head_base(const _Head& __h)
 8103dce:	b480      	push	{r7}
 8103dd0:	b083      	sub	sp, #12
 8103dd2:	af00      	add	r7, sp, #0
 8103dd4:	6078      	str	r0, [r7, #4]
 8103dd6:	6039      	str	r1, [r7, #0]
      : _M_head_impl(__h) { }
 8103dd8:	687b      	ldr	r3, [r7, #4]
 8103dda:	683a      	ldr	r2, [r7, #0]
 8103ddc:	601a      	str	r2, [r3, #0]
 8103dde:	687b      	ldr	r3, [r7, #4]
 8103de0:	4618      	mov	r0, r3
 8103de2:	370c      	adds	r7, #12
 8103de4:	46bd      	mov	sp, r7
 8103de6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8103dea:	4770      	bx	lr

08103dec <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS3_EESH_IJEEEEEPSt13_Rb_tree_nodeIS6_EDpOT_>:
	_M_create_node(_Args&&... __args)
 8103dec:	b5b0      	push	{r4, r5, r7, lr}
 8103dee:	b088      	sub	sp, #32
 8103df0:	af02      	add	r7, sp, #8
 8103df2:	60f8      	str	r0, [r7, #12]
 8103df4:	60b9      	str	r1, [r7, #8]
 8103df6:	607a      	str	r2, [r7, #4]
 8103df8:	603b      	str	r3, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 8103dfa:	68f8      	ldr	r0, [r7, #12]
 8103dfc:	f000 fa4a 	bl	8104294 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE11_M_get_nodeEv>
 8103e00:	6178      	str	r0, [r7, #20]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 8103e02:	68b8      	ldr	r0, [r7, #8]
 8103e04:	f7ff fd66 	bl	81038d4 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 8103e08:	4604      	mov	r4, r0
 8103e0a:	6878      	ldr	r0, [r7, #4]
 8103e0c:	f7ff fd6d 	bl	81038ea <_ZSt7forwardISt5tupleIJRKP20__UART_HandleTypeDefEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8103e10:	4605      	mov	r5, r0
 8103e12:	6838      	ldr	r0, [r7, #0]
 8103e14:	f7ff fd74 	bl	8103900 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 8103e18:	4603      	mov	r3, r0
 8103e1a:	9300      	str	r3, [sp, #0]
 8103e1c:	462b      	mov	r3, r5
 8103e1e:	4622      	mov	r2, r4
 8103e20:	6979      	ldr	r1, [r7, #20]
 8103e22:	68f8      	ldr	r0, [r7, #12]
 8103e24:	f000 fa4c 	bl	81042c0 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS3_EESH_IJEEEEEvPSt13_Rb_tree_nodeIS6_EDpOT_>
	  return __tmp;
 8103e28:	697b      	ldr	r3, [r7, #20]
	}
 8103e2a:	4618      	mov	r0, r3
 8103e2c:	3718      	adds	r7, #24
 8103e2e:	46bd      	mov	sp, r7
 8103e30:	bdb0      	pop	{r4, r5, r7, pc}

08103e32 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 8103e32:	b580      	push	{r7, lr}
 8103e34:	b084      	sub	sp, #16
 8103e36:	af00      	add	r7, sp, #0
 8103e38:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 8103e3a:	687b      	ldr	r3, [r7, #4]
 8103e3c:	681a      	ldr	r2, [r3, #0]
 8103e3e:	f107 030c 	add.w	r3, r7, #12
 8103e42:	4611      	mov	r1, r2
 8103e44:	4618      	mov	r0, r3
 8103e46:	f7ff fef4 	bl	8103c32 <_ZNSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEC1EPSt18_Rb_tree_node_base>
 8103e4a:	68fb      	ldr	r3, [r7, #12]
 8103e4c:	4618      	mov	r0, r3
 8103e4e:	3710      	adds	r7, #16
 8103e50:	46bd      	mov	sp, r7
 8103e52:	bd80      	pop	{r7, pc}

08103e54 <_ZNKSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8103e54:	b480      	push	{r7}
 8103e56:	b083      	sub	sp, #12
 8103e58:	af00      	add	r7, sp, #0
 8103e5a:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 8103e5c:	687b      	ldr	r3, [r7, #4]
 8103e5e:	695b      	ldr	r3, [r3, #20]
 8103e60:	4618      	mov	r0, r3
 8103e62:	370c      	adds	r7, #12
 8103e64:	46bd      	mov	sp, r7
 8103e66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8103e6a:	4770      	bx	lr

08103e6c <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 8103e6c:	b480      	push	{r7}
 8103e6e:	b083      	sub	sp, #12
 8103e70:	af00      	add	r7, sp, #0
 8103e72:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 8103e74:	687b      	ldr	r3, [r7, #4]
 8103e76:	3310      	adds	r3, #16
 8103e78:	4618      	mov	r0, r3
 8103e7a:	370c      	adds	r7, #12
 8103e7c:	46bd      	mov	sp, r7
 8103e7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8103e82:	4770      	bx	lr

08103e84 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
	       enable_if<_PCCP::template
			   _ConstructiblePair<_U1, _U2>()
	                 && _PCCP::template
			   _ImplicitlyConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
      constexpr pair(const _T1& __a, const _T2& __b)
 8103e84:	b480      	push	{r7}
 8103e86:	b085      	sub	sp, #20
 8103e88:	af00      	add	r7, sp, #0
 8103e8a:	60f8      	str	r0, [r7, #12]
 8103e8c:	60b9      	str	r1, [r7, #8]
 8103e8e:	607a      	str	r2, [r7, #4]
      : first(__a), second(__b) { }
 8103e90:	68bb      	ldr	r3, [r7, #8]
 8103e92:	681a      	ldr	r2, [r3, #0]
 8103e94:	68fb      	ldr	r3, [r7, #12]
 8103e96:	601a      	str	r2, [r3, #0]
 8103e98:	687b      	ldr	r3, [r7, #4]
 8103e9a:	681a      	ldr	r2, [r3, #0]
 8103e9c:	68fb      	ldr	r3, [r7, #12]
 8103e9e:	605a      	str	r2, [r3, #4]
 8103ea0:	68fb      	ldr	r3, [r7, #12]
 8103ea2:	4618      	mov	r0, r3
 8103ea4:	3714      	adds	r7, #20
 8103ea6:	46bd      	mov	sp, r7
 8103ea8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8103eac:	4770      	bx	lr

08103eae <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE24_M_get_insert_unique_posERS3_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8103eae:	b5b0      	push	{r4, r5, r7, lr}
 8103eb0:	b08a      	sub	sp, #40	@ 0x28
 8103eb2:	af00      	add	r7, sp, #0
 8103eb4:	60f8      	str	r0, [r7, #12]
 8103eb6:	60b9      	str	r1, [r7, #8]
 8103eb8:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 8103eba:	68b8      	ldr	r0, [r7, #8]
 8103ebc:	f7ff fb1e 	bl	81034fc <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE8_M_beginEv>
 8103ec0:	4603      	mov	r3, r0
 8103ec2:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 8103ec4:	68b8      	ldr	r0, [r7, #8]
 8103ec6:	f7ff fec3 	bl	8103c50 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE6_M_endEv>
 8103eca:	4603      	mov	r3, r0
 8103ecc:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 8103ece:	2301      	movs	r3, #1
 8103ed0:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
      while (__x != 0)
 8103ed4:	e022      	b.n	8103f1c <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE24_M_get_insert_unique_posERS3_+0x6e>
	  __y = __x;
 8103ed6:	69bb      	ldr	r3, [r7, #24]
 8103ed8:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 8103eda:	68bc      	ldr	r4, [r7, #8]
 8103edc:	687b      	ldr	r3, [r7, #4]
 8103ede:	681d      	ldr	r5, [r3, #0]
 8103ee0:	69bb      	ldr	r3, [r7, #24]
 8103ee2:	4618      	mov	r0, r3
 8103ee4:	f000 f8b4 	bl	8104050 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE6_S_keyEPKSt13_Rb_tree_nodeIS6_E>
 8103ee8:	4603      	mov	r3, r0
 8103eea:	681b      	ldr	r3, [r3, #0]
 8103eec:	461a      	mov	r2, r3
 8103eee:	4629      	mov	r1, r5
 8103ef0:	4620      	mov	r0, r4
 8103ef2:	f7ff fb4d 	bl	8103590 <_ZNKSt4lessIP20__UART_HandleTypeDefEclES1_S1_>
 8103ef6:	4603      	mov	r3, r0
 8103ef8:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 8103efc:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8103f00:	2b00      	cmp	r3, #0
 8103f02:	d005      	beq.n	8103f10 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE24_M_get_insert_unique_posERS3_+0x62>
 8103f04:	69bb      	ldr	r3, [r7, #24]
 8103f06:	4618      	mov	r0, r3
 8103f08:	f7ff fc8a 	bl	8103820 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE7_S_leftEPSt18_Rb_tree_node_base>
 8103f0c:	4603      	mov	r3, r0
 8103f0e:	e004      	b.n	8103f1a <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE24_M_get_insert_unique_posERS3_+0x6c>
 8103f10:	69bb      	ldr	r3, [r7, #24]
 8103f12:	4618      	mov	r0, r3
 8103f14:	f7ff fc78 	bl	8103808 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE8_S_rightEPSt18_Rb_tree_node_base>
 8103f18:	4603      	mov	r3, r0
 8103f1a:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8103f1c:	69bb      	ldr	r3, [r7, #24]
 8103f1e:	2b00      	cmp	r3, #0
 8103f20:	d1d9      	bne.n	8103ed6 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE24_M_get_insert_unique_posERS3_+0x28>
      iterator __j = iterator(__y);
 8103f22:	697a      	ldr	r2, [r7, #20]
 8103f24:	f107 0310 	add.w	r3, r7, #16
 8103f28:	4611      	mov	r1, r2
 8103f2a:	4618      	mov	r0, r3
 8103f2c:	f7ff fe81 	bl	8103c32 <_ZNSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 8103f30:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8103f34:	2b00      	cmp	r3, #0
 8103f36:	d01d      	beq.n	8103f74 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE24_M_get_insert_unique_posERS3_+0xc6>
	  if (__j == begin())
 8103f38:	68b8      	ldr	r0, [r7, #8]
 8103f3a:	f000 fa1f 	bl	810437c <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE5beginEv>
 8103f3e:	4603      	mov	r3, r0
 8103f40:	61fb      	str	r3, [r7, #28]
 8103f42:	f107 021c 	add.w	r2, r7, #28
 8103f46:	f107 0310 	add.w	r3, r7, #16
 8103f4a:	4611      	mov	r1, r2
 8103f4c:	4618      	mov	r0, r3
 8103f4e:	f7ff faf0 	bl	8103532 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEES9_>
 8103f52:	4603      	mov	r3, r0
 8103f54:	2b00      	cmp	r3, #0
 8103f56:	d008      	beq.n	8103f6a <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE24_M_get_insert_unique_posERS3_+0xbc>
	    return _Res(__x, __y);
 8103f58:	f107 0214 	add.w	r2, r7, #20
 8103f5c:	f107 0318 	add.w	r3, r7, #24
 8103f60:	4619      	mov	r1, r3
 8103f62:	68f8      	ldr	r0, [r7, #12]
 8103f64:	f000 fa1b 	bl	810439e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKP20__UART_HandleTypeDefP12UartEndpointEERS1_Lb1EEEOT_OT0_>
 8103f68:	e027      	b.n	8103fba <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE24_M_get_insert_unique_posERS3_+0x10c>
	    --__j;
 8103f6a:	f107 0310 	add.w	r3, r7, #16
 8103f6e:	4618      	mov	r0, r3
 8103f70:	f000 f84c 	bl	810400c <_ZNSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 8103f74:	68bc      	ldr	r4, [r7, #8]
 8103f76:	693b      	ldr	r3, [r7, #16]
 8103f78:	4618      	mov	r0, r3
 8103f7a:	f7ff fea8 	bl	8103cce <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8103f7e:	4603      	mov	r3, r0
 8103f80:	6819      	ldr	r1, [r3, #0]
 8103f82:	687b      	ldr	r3, [r7, #4]
 8103f84:	681b      	ldr	r3, [r3, #0]
 8103f86:	461a      	mov	r2, r3
 8103f88:	4620      	mov	r0, r4
 8103f8a:	f7ff fb01 	bl	8103590 <_ZNKSt4lessIP20__UART_HandleTypeDefEclES1_S1_>
 8103f8e:	4603      	mov	r3, r0
 8103f90:	2b00      	cmp	r3, #0
 8103f92:	d008      	beq.n	8103fa6 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE24_M_get_insert_unique_posERS3_+0xf8>
	return _Res(__x, __y);
 8103f94:	f107 0214 	add.w	r2, r7, #20
 8103f98:	f107 0318 	add.w	r3, r7, #24
 8103f9c:	4619      	mov	r1, r3
 8103f9e:	68f8      	ldr	r0, [r7, #12]
 8103fa0:	f000 f9fd 	bl	810439e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKP20__UART_HandleTypeDefP12UartEndpointEERS1_Lb1EEEOT_OT0_>
 8103fa4:	e009      	b.n	8103fba <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE24_M_get_insert_unique_posERS3_+0x10c>
      return _Res(__j._M_node, 0);
 8103fa6:	2300      	movs	r3, #0
 8103fa8:	623b      	str	r3, [r7, #32]
 8103faa:	f107 0220 	add.w	r2, r7, #32
 8103fae:	f107 0310 	add.w	r3, r7, #16
 8103fb2:	4619      	mov	r1, r3
 8103fb4:	68f8      	ldr	r0, [r7, #12]
 8103fb6:	f7ff ff65 	bl	8103e84 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    }
 8103fba:	68f8      	ldr	r0, [r7, #12]
 8103fbc:	3728      	adds	r7, #40	@ 0x28
 8103fbe:	46bd      	mov	sp, r7
 8103fc0:	bdb0      	pop	{r4, r5, r7, pc}

08103fc2 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 8103fc2:	b480      	push	{r7}
 8103fc4:	b083      	sub	sp, #12
 8103fc6:	af00      	add	r7, sp, #0
 8103fc8:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 8103fca:	687b      	ldr	r3, [r7, #4]
 8103fcc:	330c      	adds	r3, #12
 8103fce:	4618      	mov	r0, r3
 8103fd0:	370c      	adds	r7, #12
 8103fd2:	46bd      	mov	sp, r7
 8103fd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8103fd8:	4770      	bx	lr

08103fda <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
 8103fda:	b580      	push	{r7, lr}
 8103fdc:	b084      	sub	sp, #16
 8103fde:	af00      	add	r7, sp, #0
 8103fe0:	60f8      	str	r0, [r7, #12]
 8103fe2:	60b9      	str	r1, [r7, #8]
 8103fe4:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y))
 8103fe6:	68b8      	ldr	r0, [r7, #8]
 8103fe8:	f000 f9f2 	bl	81043d0 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8103fec:	4603      	mov	r3, r0
 8103fee:	681a      	ldr	r2, [r3, #0]
 8103ff0:	68fb      	ldr	r3, [r7, #12]
 8103ff2:	601a      	str	r2, [r3, #0]
 8103ff4:	6878      	ldr	r0, [r7, #4]
 8103ff6:	f000 f9eb 	bl	81043d0 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8103ffa:	4603      	mov	r3, r0
 8103ffc:	681a      	ldr	r2, [r3, #0]
 8103ffe:	68fb      	ldr	r3, [r7, #12]
 8104000:	605a      	str	r2, [r3, #4]
	{ __glibcxx_no_dangling_refs(_U1&&, _U2&&); }
 8104002:	68fb      	ldr	r3, [r7, #12]
 8104004:	4618      	mov	r0, r3
 8104006:	3710      	adds	r7, #16
 8104008:	46bd      	mov	sp, r7
 810400a:	bd80      	pop	{r7, pc}

0810400c <_ZNSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 810400c:	b580      	push	{r7, lr}
 810400e:	b082      	sub	sp, #8
 8104010:	af00      	add	r7, sp, #0
 8104012:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 8104014:	687b      	ldr	r3, [r7, #4]
 8104016:	681b      	ldr	r3, [r3, #0]
 8104018:	4618      	mov	r0, r3
 810401a:	f00a fc6e 	bl	810e8fa <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 810401e:	4602      	mov	r2, r0
 8104020:	687b      	ldr	r3, [r7, #4]
 8104022:	601a      	str	r2, [r3, #0]
	return *this;
 8104024:	687b      	ldr	r3, [r7, #4]
      }
 8104026:	4618      	mov	r0, r3
 8104028:	3708      	adds	r7, #8
 810402a:	46bd      	mov	sp, r7
 810402c:	bd80      	pop	{r7, pc}

0810402e <_ZNSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 810402e:	b580      	push	{r7, lr}
 8104030:	b082      	sub	sp, #8
 8104032:	af00      	add	r7, sp, #0
 8104034:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 8104036:	687b      	ldr	r3, [r7, #4]
 8104038:	681b      	ldr	r3, [r3, #0]
 810403a:	4618      	mov	r0, r3
 810403c:	f00a fc5b 	bl	810e8f6 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 8104040:	4602      	mov	r2, r0
 8104042:	687b      	ldr	r3, [r7, #4]
 8104044:	601a      	str	r2, [r3, #0]
	return *this;
 8104046:	687b      	ldr	r3, [r7, #4]
      }
 8104048:	4618      	mov	r0, r3
 810404a:	3708      	adds	r7, #8
 810404c:	46bd      	mov	sp, r7
 810404e:	bd80      	pop	{r7, pc}

08104050 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE6_S_keyEPKSt13_Rb_tree_nodeIS6_E>:
      _S_key(_Const_Link_type __x)
 8104050:	b580      	push	{r7, lr}
 8104052:	b084      	sub	sp, #16
 8104054:	af00      	add	r7, sp, #0
 8104056:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 8104058:	6878      	ldr	r0, [r7, #4]
 810405a:	f000 f9c4 	bl	81043e6 <_ZNKSt13_Rb_tree_nodeISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEE9_M_valptrEv>
 810405e:	4602      	mov	r2, r0
 8104060:	f107 030c 	add.w	r3, r7, #12
 8104064:	4611      	mov	r1, r2
 8104066:	4618      	mov	r0, r3
 8104068:	f000 f9cb 	bl	8104402 <_ZNKSt10_Select1stISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEclERKS6_>
 810406c:	4603      	mov	r3, r0
      }
 810406e:	4618      	mov	r0, r3
 8104070:	3710      	adds	r7, #16
 8104072:	46bd      	mov	sp, r7
 8104074:	bd80      	pop	{r7, pc}

08104076 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSE_PSt13_Rb_tree_nodeIS6_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8104076:	b5b0      	push	{r4, r5, r7, lr}
 8104078:	b086      	sub	sp, #24
 810407a:	af00      	add	r7, sp, #0
 810407c:	60f8      	str	r0, [r7, #12]
 810407e:	60b9      	str	r1, [r7, #8]
 8104080:	607a      	str	r2, [r7, #4]
 8104082:	603b      	str	r3, [r7, #0]
			    || _M_impl._M_key_compare(_S_key(__z),
 8104084:	68bb      	ldr	r3, [r7, #8]
 8104086:	2b00      	cmp	r3, #0
 8104088:	d119      	bne.n	81040be <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSE_PSt13_Rb_tree_nodeIS6_E+0x48>
      bool __insert_left = (__x != 0 || __p == _M_end()
 810408a:	68f8      	ldr	r0, [r7, #12]
 810408c:	f7ff fde0 	bl	8103c50 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE6_M_endEv>
 8104090:	4602      	mov	r2, r0
 8104092:	687b      	ldr	r3, [r7, #4]
 8104094:	4293      	cmp	r3, r2
 8104096:	d012      	beq.n	81040be <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSE_PSt13_Rb_tree_nodeIS6_E+0x48>
			    || _M_impl._M_key_compare(_S_key(__z),
 8104098:	68fc      	ldr	r4, [r7, #12]
 810409a:	6838      	ldr	r0, [r7, #0]
 810409c:	f7ff ffd8 	bl	8104050 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE6_S_keyEPKSt13_Rb_tree_nodeIS6_E>
 81040a0:	4603      	mov	r3, r0
 81040a2:	681d      	ldr	r5, [r3, #0]
						      _S_key(__p)));
 81040a4:	6878      	ldr	r0, [r7, #4]
 81040a6:	f7ff fe12 	bl	8103cce <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE6_S_keyEPKSt18_Rb_tree_node_base>
 81040aa:	4603      	mov	r3, r0
			    || _M_impl._M_key_compare(_S_key(__z),
 81040ac:	681b      	ldr	r3, [r3, #0]
 81040ae:	461a      	mov	r2, r3
 81040b0:	4629      	mov	r1, r5
 81040b2:	4620      	mov	r0, r4
 81040b4:	f7ff fa6c 	bl	8103590 <_ZNKSt4lessIP20__UART_HandleTypeDefEclES1_S1_>
 81040b8:	4603      	mov	r3, r0
 81040ba:	2b00      	cmp	r3, #0
 81040bc:	d001      	beq.n	81040c2 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSE_PSt13_Rb_tree_nodeIS6_E+0x4c>
 81040be:	2301      	movs	r3, #1
 81040c0:	e000      	b.n	81040c4 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSE_PSt13_Rb_tree_nodeIS6_E+0x4e>
 81040c2:	2300      	movs	r3, #0
      bool __insert_left = (__x != 0 || __p == _M_end()
 81040c4:	75fb      	strb	r3, [r7, #23]
				    this->_M_impl._M_header);
 81040c6:	68fb      	ldr	r3, [r7, #12]
 81040c8:	3304      	adds	r3, #4
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 81040ca:	7df8      	ldrb	r0, [r7, #23]
 81040cc:	687a      	ldr	r2, [r7, #4]
 81040ce:	6839      	ldr	r1, [r7, #0]
 81040d0:	f00a fc15 	bl	810e8fe <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
      ++_M_impl._M_node_count;
 81040d4:	68fb      	ldr	r3, [r7, #12]
 81040d6:	695b      	ldr	r3, [r3, #20]
 81040d8:	1c5a      	adds	r2, r3, #1
 81040da:	68fb      	ldr	r3, [r7, #12]
 81040dc:	615a      	str	r2, [r3, #20]
      return iterator(__z);
 81040de:	f107 0310 	add.w	r3, r7, #16
 81040e2:	6839      	ldr	r1, [r7, #0]
 81040e4:	4618      	mov	r0, r3
 81040e6:	f7ff fda4 	bl	8103c32 <_ZNSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEC1EPSt18_Rb_tree_node_base>
 81040ea:	693b      	ldr	r3, [r7, #16]
    }
 81040ec:	4618      	mov	r0, r3
 81040ee:	3718      	adds	r7, #24
 81040f0:	46bd      	mov	sp, r7
 81040f2:	bdb0      	pop	{r4, r5, r7, pc}

081040f4 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEE7_M_addrEv>:
      _M_addr() noexcept
 81040f4:	b480      	push	{r7}
 81040f6:	b083      	sub	sp, #12
 81040f8:	af00      	add	r7, sp, #0
 81040fa:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 81040fc:	687b      	ldr	r3, [r7, #4]
 81040fe:	4618      	mov	r0, r3
 8104100:	370c      	adds	r7, #12
 8104102:	46bd      	mov	sp, r7
 8104104:	f85d 7b04 	ldr.w	r7, [sp], #4
 8104108:	4770      	bx	lr

0810410a <_ZNSt5dequeIhSaIhEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 810410a:	b580      	push	{r7, lr}
 810410c:	b088      	sub	sp, #32
 810410e:	af00      	add	r7, sp, #0
 8104110:	6078      	str	r0, [r7, #4]
	const size_t __diffmax = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max;
 8104112:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 8104116:	613b      	str	r3, [r7, #16]
 8104118:	687b      	ldr	r3, [r7, #4]
 810411a:	61fb      	str	r3, [r7, #28]
 810411c:	69fb      	ldr	r3, [r7, #28]
 810411e:	61bb      	str	r3, [r7, #24]
 8104120:	69bb      	ldr	r3, [r7, #24]
 8104122:	617b      	str	r3, [r7, #20]
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8104124:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
      { return _M_max_size(); }
 8104128:	bf00      	nop
	return __a.max_size();
 810412a:	bf00      	nop
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 810412c:	60fb      	str	r3, [r7, #12]
	return (std::min)(__diffmax, __allocmax);
 810412e:	f107 020c 	add.w	r2, r7, #12
 8104132:	f107 0310 	add.w	r3, r7, #16
 8104136:	4611      	mov	r1, r2
 8104138:	4618      	mov	r0, r3
 810413a:	f000 f96e 	bl	810441a <_ZSt3minIjERKT_S2_S2_>
 810413e:	4603      	mov	r3, r0
 8104140:	681b      	ldr	r3, [r3, #0]
      }
 8104142:	4618      	mov	r0, r3
 8104144:	3720      	adds	r7, #32
 8104146:	46bd      	mov	sp, r7
 8104148:	bd80      	pop	{r7, pc}

0810414a <_ZNSt5dequeIhSaIhEE17_M_reallocate_mapEjb>:
    deque<_Tp, _Alloc>::
 810414a:	b590      	push	{r4, r7, lr}
 810414c:	b08b      	sub	sp, #44	@ 0x2c
 810414e:	af00      	add	r7, sp, #0
 8104150:	60f8      	str	r0, [r7, #12]
 8104152:	60b9      	str	r1, [r7, #8]
 8104154:	4613      	mov	r3, r2
 8104156:	71fb      	strb	r3, [r7, #7]
	= this->_M_impl._M_finish._M_node - this->_M_impl._M_start._M_node + 1;
 8104158:	68fb      	ldr	r3, [r7, #12]
 810415a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 810415c:	68fb      	ldr	r3, [r7, #12]
 810415e:	695b      	ldr	r3, [r3, #20]
 8104160:	1ad3      	subs	r3, r2, r3
 8104162:	109b      	asrs	r3, r3, #2
 8104164:	3301      	adds	r3, #1
      const size_type __old_num_nodes
 8104166:	623b      	str	r3, [r7, #32]
      const size_type __new_num_nodes = __old_num_nodes + __nodes_to_add;
 8104168:	68bb      	ldr	r3, [r7, #8]
 810416a:	6a3a      	ldr	r2, [r7, #32]
 810416c:	4413      	add	r3, r2
 810416e:	61fb      	str	r3, [r7, #28]
      if (this->_M_impl._M_map_size > 2 * __new_num_nodes)
 8104170:	68fb      	ldr	r3, [r7, #12]
 8104172:	685a      	ldr	r2, [r3, #4]
 8104174:	69fb      	ldr	r3, [r7, #28]
 8104176:	005b      	lsls	r3, r3, #1
 8104178:	429a      	cmp	r2, r3
 810417a:	d92d      	bls.n	81041d8 <_ZNSt5dequeIhSaIhEE17_M_reallocate_mapEjb+0x8e>
	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
 810417c:	68fb      	ldr	r3, [r7, #12]
 810417e:	681a      	ldr	r2, [r3, #0]
 8104180:	68fb      	ldr	r3, [r7, #12]
 8104182:	6859      	ldr	r1, [r3, #4]
					 - __new_num_nodes) / 2
 8104184:	69fb      	ldr	r3, [r7, #28]
 8104186:	1acb      	subs	r3, r1, r3
 8104188:	085b      	lsrs	r3, r3, #1
	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
 810418a:	0099      	lsls	r1, r3, #2
			 + (__add_at_front ? __nodes_to_add : 0);
 810418c:	79fb      	ldrb	r3, [r7, #7]
 810418e:	2b00      	cmp	r3, #0
 8104190:	d002      	beq.n	8104198 <_ZNSt5dequeIhSaIhEE17_M_reallocate_mapEjb+0x4e>
 8104192:	68bb      	ldr	r3, [r7, #8]
 8104194:	009b      	lsls	r3, r3, #2
 8104196:	e000      	b.n	810419a <_ZNSt5dequeIhSaIhEE17_M_reallocate_mapEjb+0x50>
 8104198:	2300      	movs	r3, #0
 810419a:	440b      	add	r3, r1
	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
 810419c:	4413      	add	r3, r2
 810419e:	627b      	str	r3, [r7, #36]	@ 0x24
	  if (__new_nstart < this->_M_impl._M_start._M_node)
 81041a0:	68fb      	ldr	r3, [r7, #12]
 81041a2:	695b      	ldr	r3, [r3, #20]
 81041a4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 81041a6:	429a      	cmp	r2, r3
 81041a8:	d209      	bcs.n	81041be <_ZNSt5dequeIhSaIhEE17_M_reallocate_mapEjb+0x74>
	    std::copy(this->_M_impl._M_start._M_node,
 81041aa:	68fb      	ldr	r3, [r7, #12]
 81041ac:	6958      	ldr	r0, [r3, #20]
		      this->_M_impl._M_finish._M_node + 1,
 81041ae:	68fb      	ldr	r3, [r7, #12]
 81041b0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
	    std::copy(this->_M_impl._M_start._M_node,
 81041b2:	3304      	adds	r3, #4
 81041b4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 81041b6:	4619      	mov	r1, r3
 81041b8:	f000 f943 	bl	8104442 <_ZSt4copyIPPhS1_ET0_T_S3_S2_>
 81041bc:	e048      	b.n	8104250 <_ZNSt5dequeIhSaIhEE17_M_reallocate_mapEjb+0x106>
	    std::copy_backward(this->_M_impl._M_start._M_node,
 81041be:	68fb      	ldr	r3, [r7, #12]
 81041c0:	6958      	ldr	r0, [r3, #20]
			       this->_M_impl._M_finish._M_node + 1,
 81041c2:	68fb      	ldr	r3, [r7, #12]
 81041c4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
	    std::copy_backward(this->_M_impl._M_start._M_node,
 81041c6:	1d19      	adds	r1, r3, #4
			       __new_nstart + __old_num_nodes);
 81041c8:	6a3b      	ldr	r3, [r7, #32]
 81041ca:	009b      	lsls	r3, r3, #2
	    std::copy_backward(this->_M_impl._M_start._M_node,
 81041cc:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 81041ce:	4413      	add	r3, r2
 81041d0:	461a      	mov	r2, r3
 81041d2:	f000 f94e 	bl	8104472 <_ZSt13copy_backwardIPPhS1_ET0_T_S3_S2_>
 81041d6:	e03b      	b.n	8104250 <_ZNSt5dequeIhSaIhEE17_M_reallocate_mapEjb+0x106>
	  size_type __new_map_size = this->_M_impl._M_map_size
 81041d8:	68fb      	ldr	r3, [r7, #12]
 81041da:	685c      	ldr	r4, [r3, #4]
				     + std::max(this->_M_impl._M_map_size,
 81041dc:	68fb      	ldr	r3, [r7, #12]
 81041de:	3304      	adds	r3, #4
 81041e0:	f107 0208 	add.w	r2, r7, #8
 81041e4:	4611      	mov	r1, r2
 81041e6:	4618      	mov	r0, r3
 81041e8:	f7fd fb8f 	bl	810190a <_ZSt3maxIjERKT_S2_S2_>
 81041ec:	4603      	mov	r3, r0
 81041ee:	681b      	ldr	r3, [r3, #0]
 81041f0:	4423      	add	r3, r4
	  size_type __new_map_size = this->_M_impl._M_map_size
 81041f2:	3302      	adds	r3, #2
 81041f4:	61bb      	str	r3, [r7, #24]
	  _Map_pointer __new_map = this->_M_allocate_map(__new_map_size);
 81041f6:	68fb      	ldr	r3, [r7, #12]
 81041f8:	69b9      	ldr	r1, [r7, #24]
 81041fa:	4618      	mov	r0, r3
 81041fc:	f7fd fb99 	bl	8101932 <_ZNSt11_Deque_baseIhSaIhEE15_M_allocate_mapEj>
 8104200:	6178      	str	r0, [r7, #20]
	  __new_nstart = __new_map + (__new_map_size - __new_num_nodes) / 2
 8104202:	69ba      	ldr	r2, [r7, #24]
 8104204:	69fb      	ldr	r3, [r7, #28]
 8104206:	1ad3      	subs	r3, r2, r3
 8104208:	085b      	lsrs	r3, r3, #1
 810420a:	009a      	lsls	r2, r3, #2
			 + (__add_at_front ? __nodes_to_add : 0);
 810420c:	79fb      	ldrb	r3, [r7, #7]
 810420e:	2b00      	cmp	r3, #0
 8104210:	d002      	beq.n	8104218 <_ZNSt5dequeIhSaIhEE17_M_reallocate_mapEjb+0xce>
 8104212:	68bb      	ldr	r3, [r7, #8]
 8104214:	009b      	lsls	r3, r3, #2
 8104216:	e000      	b.n	810421a <_ZNSt5dequeIhSaIhEE17_M_reallocate_mapEjb+0xd0>
 8104218:	2300      	movs	r3, #0
 810421a:	4413      	add	r3, r2
	  __new_nstart = __new_map + (__new_map_size - __new_num_nodes) / 2
 810421c:	697a      	ldr	r2, [r7, #20]
 810421e:	4413      	add	r3, r2
 8104220:	627b      	str	r3, [r7, #36]	@ 0x24
	  std::copy(this->_M_impl._M_start._M_node,
 8104222:	68fb      	ldr	r3, [r7, #12]
 8104224:	6958      	ldr	r0, [r3, #20]
		    this->_M_impl._M_finish._M_node + 1,
 8104226:	68fb      	ldr	r3, [r7, #12]
 8104228:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
	  std::copy(this->_M_impl._M_start._M_node,
 810422a:	3304      	adds	r3, #4
 810422c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 810422e:	4619      	mov	r1, r3
 8104230:	f000 f907 	bl	8104442 <_ZSt4copyIPPhS1_ET0_T_S3_S2_>
	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
 8104234:	68f8      	ldr	r0, [r7, #12]
 8104236:	68fb      	ldr	r3, [r7, #12]
 8104238:	6819      	ldr	r1, [r3, #0]
 810423a:	68fb      	ldr	r3, [r7, #12]
 810423c:	685b      	ldr	r3, [r3, #4]
 810423e:	461a      	mov	r2, r3
 8104240:	f7fe fa9c 	bl	810277c <_ZNSt11_Deque_baseIhSaIhEE17_M_deallocate_mapEPPhj>
	  this->_M_impl._M_map = __new_map;
 8104244:	68fb      	ldr	r3, [r7, #12]
 8104246:	697a      	ldr	r2, [r7, #20]
 8104248:	601a      	str	r2, [r3, #0]
	  this->_M_impl._M_map_size = __new_map_size;
 810424a:	68fb      	ldr	r3, [r7, #12]
 810424c:	69ba      	ldr	r2, [r7, #24]
 810424e:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_start._M_set_node(__new_nstart);
 8104250:	68fb      	ldr	r3, [r7, #12]
 8104252:	3308      	adds	r3, #8
 8104254:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8104256:	4618      	mov	r0, r3
 8104258:	f7fd fba7 	bl	81019aa <_ZNSt15_Deque_iteratorIhRhPhE11_M_set_nodeEPS1_>
      this->_M_impl._M_finish._M_set_node(__new_nstart + __old_num_nodes - 1);
 810425c:	68fb      	ldr	r3, [r7, #12]
 810425e:	f103 0018 	add.w	r0, r3, #24
 8104262:	6a3b      	ldr	r3, [r7, #32]
 8104264:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8104268:	3b01      	subs	r3, #1
 810426a:	009b      	lsls	r3, r3, #2
 810426c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 810426e:	4413      	add	r3, r2
 8104270:	4619      	mov	r1, r3
 8104272:	f7fd fb9a 	bl	81019aa <_ZNSt15_Deque_iteratorIhRhPhE11_M_set_nodeEPS1_>
    }
 8104276:	bf00      	nop
 8104278:	372c      	adds	r7, #44	@ 0x2c
 810427a:	46bd      	mov	sp, r7
 810427c:	bd90      	pop	{r4, r7, pc}

0810427e <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 810427e:	b480      	push	{r7}
 8104280:	b083      	sub	sp, #12
 8104282:	af00      	add	r7, sp, #0
 8104284:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8104286:	687b      	ldr	r3, [r7, #4]
 8104288:	4618      	mov	r0, r3
 810428a:	370c      	adds	r7, #12
 810428c:	46bd      	mov	sp, r7
 810428e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8104292:	4770      	bx	lr

08104294 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE11_M_get_nodeEv>:
      _M_get_node()
 8104294:	b580      	push	{r7, lr}
 8104296:	b084      	sub	sp, #16
 8104298:	af00      	add	r7, sp, #0
 810429a:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 810429c:	6878      	ldr	r0, [r7, #4]
 810429e:	f7ff ffee 	bl	810427e <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE21_M_get_Node_allocatorEv>
 81042a2:	4603      	mov	r3, r0
 81042a4:	60fb      	str	r3, [r7, #12]
 81042a6:	2301      	movs	r3, #1
 81042a8:	60bb      	str	r3, [r7, #8]
      { return __a.allocate(__n); }
 81042aa:	2200      	movs	r2, #0
 81042ac:	68b9      	ldr	r1, [r7, #8]
 81042ae:	68f8      	ldr	r0, [r7, #12]
 81042b0:	f000 f972 	bl	8104598 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEE8allocateEjPKv>
 81042b4:	4603      	mov	r3, r0
 81042b6:	bf00      	nop
 81042b8:	4618      	mov	r0, r3
 81042ba:	3710      	adds	r7, #16
 81042bc:	46bd      	mov	sp, r7
 81042be:	bd80      	pop	{r7, pc}

081042c0 <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS3_EESH_IJEEEEEvPSt13_Rb_tree_nodeIS6_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 81042c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 81042c4:	b093      	sub	sp, #76	@ 0x4c
 81042c6:	af00      	add	r7, sp, #0
 81042c8:	6178      	str	r0, [r7, #20]
 81042ca:	6139      	str	r1, [r7, #16]
 81042cc:	60fa      	str	r2, [r7, #12]
 81042ce:	60bb      	str	r3, [r7, #8]
	      ::new(__node) _Rb_tree_node<_Val>;
 81042d0:	693b      	ldr	r3, [r7, #16]
 81042d2:	4619      	mov	r1, r3
 81042d4:	2018      	movs	r0, #24
 81042d6:	f7fe febe 	bl	8103056 <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 81042da:	6978      	ldr	r0, [r7, #20]
 81042dc:	f7ff ffcf 	bl	810427e <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE21_M_get_Node_allocatorEv>
 81042e0:	6078      	str	r0, [r7, #4]
 81042e2:	6938      	ldr	r0, [r7, #16]
 81042e4:	f7ff fa27 	bl	8103736 <_ZNSt13_Rb_tree_nodeISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEE9_M_valptrEv>
 81042e8:	4606      	mov	r6, r0
 81042ea:	68f8      	ldr	r0, [r7, #12]
 81042ec:	f7ff faf2 	bl	81038d4 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 81042f0:	4605      	mov	r5, r0
 81042f2:	68b8      	ldr	r0, [r7, #8]
 81042f4:	f7ff faf9 	bl	81038ea <_ZSt7forwardISt5tupleIJRKP20__UART_HandleTypeDefEEEOT_RNSt16remove_referenceIS6_E4typeE>
 81042f8:	4604      	mov	r4, r0
 81042fa:	6eb8      	ldr	r0, [r7, #104]	@ 0x68
 81042fc:	f7ff fb00 	bl	8103900 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 8104300:	4603      	mov	r3, r0
 8104302:	687a      	ldr	r2, [r7, #4]
 8104304:	647a      	str	r2, [r7, #68]	@ 0x44
 8104306:	643e      	str	r6, [r7, #64]	@ 0x40
 8104308:	63fd      	str	r5, [r7, #60]	@ 0x3c
 810430a:	63bc      	str	r4, [r7, #56]	@ 0x38
 810430c:	637b      	str	r3, [r7, #52]	@ 0x34
	  __a.construct(__p, std::forward<_Args>(__args)...);
 810430e:	6bf8      	ldr	r0, [r7, #60]	@ 0x3c
 8104310:	f7ff fae0 	bl	81038d4 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 8104314:	4605      	mov	r5, r0
 8104316:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 8104318:	f7ff fae7 	bl	81038ea <_ZSt7forwardISt5tupleIJRKP20__UART_HandleTypeDefEEEOT_RNSt16remove_referenceIS6_E4typeE>
 810431c:	4604      	mov	r4, r0
 810431e:	6b78      	ldr	r0, [r7, #52]	@ 0x34
 8104320:	f7ff faee 	bl	8103900 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 8104324:	4602      	mov	r2, r0
 8104326:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8104328:	633b      	str	r3, [r7, #48]	@ 0x30
 810432a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 810432c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 810432e:	62bd      	str	r5, [r7, #40]	@ 0x28
 8104330:	627c      	str	r4, [r7, #36]	@ 0x24
 8104332:	623a      	str	r2, [r7, #32]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8104334:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8104336:	4619      	mov	r1, r3
 8104338:	2008      	movs	r0, #8
 810433a:	f7fe fe8c 	bl	8103056 <_ZnwjPv>
 810433e:	4604      	mov	r4, r0
 8104340:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8104342:	f7ff fac7 	bl	81038d4 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 8104346:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 8104348:	f7ff facf 	bl	81038ea <_ZSt7forwardISt5tupleIJRKP20__UART_HandleTypeDefEEEOT_RNSt16remove_referenceIS6_E4typeE>
 810434c:	4602      	mov	r2, r0
 810434e:	f107 031c 	add.w	r3, r7, #28
 8104352:	4611      	mov	r1, r2
 8104354:	4618      	mov	r0, r3
 8104356:	f000 f94f 	bl	81045f8 <_ZNSt5tupleIJRKP20__UART_HandleTypeDefEEC1EOS4_>
 810435a:	6a38      	ldr	r0, [r7, #32]
 810435c:	f7ff fad0 	bl	8103900 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 8104360:	f107 021c 	add.w	r2, r7, #28
 8104364:	464b      	mov	r3, r9
 8104366:	4641      	mov	r1, r8
 8104368:	4620      	mov	r0, r4
 810436a:	f000 f9a7 	bl	81046bc <_ZNSt4pairIKP20__UART_HandleTypeDefP12UartEndpointEC1IJRS2_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES9_IJDpT0_EE>
 810436e:	bf00      	nop
	}
 8104370:	bf00      	nop
	}
 8104372:	bf00      	nop
 8104374:	374c      	adds	r7, #76	@ 0x4c
 8104376:	46bd      	mov	sp, r7
 8104378:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0810437c <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 810437c:	b580      	push	{r7, lr}
 810437e:	b084      	sub	sp, #16
 8104380:	af00      	add	r7, sp, #0
 8104382:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 8104384:	687b      	ldr	r3, [r7, #4]
 8104386:	68da      	ldr	r2, [r3, #12]
 8104388:	f107 030c 	add.w	r3, r7, #12
 810438c:	4611      	mov	r1, r2
 810438e:	4618      	mov	r0, r3
 8104390:	f7ff fc4f 	bl	8103c32 <_ZNSt17_Rb_tree_iteratorISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEC1EPSt18_Rb_tree_node_base>
 8104394:	68fb      	ldr	r3, [r7, #12]
 8104396:	4618      	mov	r0, r3
 8104398:	3710      	adds	r7, #16
 810439a:	46bd      	mov	sp, r7
 810439c:	bd80      	pop	{r7, pc}

0810439e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKP20__UART_HandleTypeDefP12UartEndpointEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 810439e:	b580      	push	{r7, lr}
 81043a0:	b084      	sub	sp, #16
 81043a2:	af00      	add	r7, sp, #0
 81043a4:	60f8      	str	r0, [r7, #12]
 81043a6:	60b9      	str	r1, [r7, #8]
 81043a8:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y))
 81043aa:	68b8      	ldr	r0, [r7, #8]
 81043ac:	f000 f88c 	bl	81044c8 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEEOT_RNSt16remove_referenceISB_E4typeE>
 81043b0:	4603      	mov	r3, r0
 81043b2:	681a      	ldr	r2, [r3, #0]
 81043b4:	68fb      	ldr	r3, [r7, #12]
 81043b6:	601a      	str	r2, [r3, #0]
 81043b8:	6878      	ldr	r0, [r7, #4]
 81043ba:	f000 f809 	bl	81043d0 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 81043be:	4603      	mov	r3, r0
 81043c0:	681a      	ldr	r2, [r3, #0]
 81043c2:	68fb      	ldr	r3, [r7, #12]
 81043c4:	605a      	str	r2, [r3, #4]
	{ __glibcxx_no_dangling_refs(_U1&&, _U2&&); }
 81043c6:	68fb      	ldr	r3, [r7, #12]
 81043c8:	4618      	mov	r0, r3
 81043ca:	3710      	adds	r7, #16
 81043cc:	46bd      	mov	sp, r7
 81043ce:	bd80      	pop	{r7, pc}

081043d0 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 81043d0:	b480      	push	{r7}
 81043d2:	b083      	sub	sp, #12
 81043d4:	af00      	add	r7, sp, #0
 81043d6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 81043d8:	687b      	ldr	r3, [r7, #4]
 81043da:	4618      	mov	r0, r3
 81043dc:	370c      	adds	r7, #12
 81043de:	46bd      	mov	sp, r7
 81043e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 81043e4:	4770      	bx	lr

081043e6 <_ZNKSt13_Rb_tree_nodeISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEE9_M_valptrEv>:
      _M_valptr() const
 81043e6:	b580      	push	{r7, lr}
 81043e8:	b082      	sub	sp, #8
 81043ea:	af00      	add	r7, sp, #0
 81043ec:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 81043ee:	687b      	ldr	r3, [r7, #4]
 81043f0:	3310      	adds	r3, #16
 81043f2:	4618      	mov	r0, r3
 81043f4:	f000 f873 	bl	81044de <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEE6_M_ptrEv>
 81043f8:	4603      	mov	r3, r0
 81043fa:	4618      	mov	r0, r3
 81043fc:	3708      	adds	r7, #8
 81043fe:	46bd      	mov	sp, r7
 8104400:	bd80      	pop	{r7, pc}

08104402 <_ZNKSt10_Select1stISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEclERKS6_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
 8104402:	b480      	push	{r7}
 8104404:	b083      	sub	sp, #12
 8104406:	af00      	add	r7, sp, #0
 8104408:	6078      	str	r0, [r7, #4]
 810440a:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 810440c:	683b      	ldr	r3, [r7, #0]
 810440e:	4618      	mov	r0, r3
 8104410:	370c      	adds	r7, #12
 8104412:	46bd      	mov	sp, r7
 8104414:	f85d 7b04 	ldr.w	r7, [sp], #4
 8104418:	4770      	bx	lr

0810441a <_ZSt3minIjERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
 810441a:	b480      	push	{r7}
 810441c:	b083      	sub	sp, #12
 810441e:	af00      	add	r7, sp, #0
 8104420:	6078      	str	r0, [r7, #4]
 8104422:	6039      	str	r1, [r7, #0]
      if (__b < __a)
 8104424:	683b      	ldr	r3, [r7, #0]
 8104426:	681a      	ldr	r2, [r3, #0]
 8104428:	687b      	ldr	r3, [r7, #4]
 810442a:	681b      	ldr	r3, [r3, #0]
 810442c:	429a      	cmp	r2, r3
 810442e:	d201      	bcs.n	8104434 <_ZSt3minIjERKT_S2_S2_+0x1a>
	return __b;
 8104430:	683b      	ldr	r3, [r7, #0]
 8104432:	e000      	b.n	8104436 <_ZSt3minIjERKT_S2_S2_+0x1c>
      return __a;
 8104434:	687b      	ldr	r3, [r7, #4]
    }
 8104436:	4618      	mov	r0, r3
 8104438:	370c      	adds	r7, #12
 810443a:	46bd      	mov	sp, r7
 810443c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8104440:	4770      	bx	lr

08104442 <_ZSt4copyIPPhS1_ET0_T_S3_S2_>:
    copy(_II __first, _II __last, _OI __result)
 8104442:	b590      	push	{r4, r7, lr}
 8104444:	b085      	sub	sp, #20
 8104446:	af00      	add	r7, sp, #0
 8104448:	60f8      	str	r0, [r7, #12]
 810444a:	60b9      	str	r1, [r7, #8]
 810444c:	607a      	str	r2, [r7, #4]
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 810444e:	68f8      	ldr	r0, [r7, #12]
 8104450:	f000 f851 	bl	81044f6 <_ZSt12__miter_baseIPPhET_S2_>
 8104454:	4604      	mov	r4, r0
 8104456:	68b8      	ldr	r0, [r7, #8]
 8104458:	f000 f84d 	bl	81044f6 <_ZSt12__miter_baseIPPhET_S2_>
 810445c:	4603      	mov	r3, r0
 810445e:	687a      	ldr	r2, [r7, #4]
 8104460:	4619      	mov	r1, r3
 8104462:	4620      	mov	r0, r4
 8104464:	f000 f852 	bl	810450c <_ZSt13__copy_move_aILb0EPPhS1_ET1_T0_S3_S2_>
 8104468:	4603      	mov	r3, r0
    }
 810446a:	4618      	mov	r0, r3
 810446c:	3714      	adds	r7, #20
 810446e:	46bd      	mov	sp, r7
 8104470:	bd90      	pop	{r4, r7, pc}

08104472 <_ZSt13copy_backwardIPPhS1_ET0_T_S3_S2_>:
   *  that the start of the output range may overlap [first,last).
  */
  template<typename _BI1, typename _BI2>
    _GLIBCXX20_CONSTEXPR
    inline _BI2
    copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 8104472:	b590      	push	{r4, r7, lr}
 8104474:	b085      	sub	sp, #20
 8104476:	af00      	add	r7, sp, #0
 8104478:	60f8      	str	r0, [r7, #12]
 810447a:	60b9      	str	r1, [r7, #8]
 810447c:	607a      	str	r2, [r7, #4]
      __glibcxx_function_requires(_OutputIteratorConcept<_BI2,
	    typename iterator_traits<_BI1>::reference>)
      __glibcxx_requires_can_decrement_range(__first, __last, __result);

      return std::__copy_move_backward_a<__is_move_iterator<_BI1>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 810447e:	68f8      	ldr	r0, [r7, #12]
 8104480:	f000 f839 	bl	81044f6 <_ZSt12__miter_baseIPPhET_S2_>
 8104484:	4604      	mov	r4, r0
 8104486:	68b8      	ldr	r0, [r7, #8]
 8104488:	f000 f835 	bl	81044f6 <_ZSt12__miter_baseIPPhET_S2_>
 810448c:	4603      	mov	r3, r0
 810448e:	687a      	ldr	r2, [r7, #4]
 8104490:	4619      	mov	r1, r3
 8104492:	4620      	mov	r0, r4
 8104494:	f000 f85d 	bl	8104552 <_ZSt22__copy_move_backward_aILb0EPPhS1_ET1_T0_S3_S2_>
 8104498:	4603      	mov	r3, r0
    }
 810449a:	4618      	mov	r0, r3
 810449c:	3714      	adds	r7, #20
 810449e:	46bd      	mov	sp, r7
 81044a0:	bd90      	pop	{r4, r7, pc}

081044a2 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEE10deallocateEPS8_j>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
 81044a2:	b580      	push	{r7, lr}
 81044a4:	b084      	sub	sp, #16
 81044a6:	af00      	add	r7, sp, #0
 81044a8:	60f8      	str	r0, [r7, #12]
 81044aa:	60b9      	str	r1, [r7, #8]
 81044ac:	607a      	str	r2, [r7, #4]
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
 81044ae:	687a      	ldr	r2, [r7, #4]
 81044b0:	4613      	mov	r3, r2
 81044b2:	005b      	lsls	r3, r3, #1
 81044b4:	4413      	add	r3, r2
 81044b6:	00db      	lsls	r3, r3, #3
 81044b8:	4619      	mov	r1, r3
 81044ba:	68b8      	ldr	r0, [r7, #8]
 81044bc:	f00a f9b2 	bl	810e824 <_ZdlPvj>
      }
 81044c0:	bf00      	nop
 81044c2:	3710      	adds	r7, #16
 81044c4:	46bd      	mov	sp, r7
 81044c6:	bd80      	pop	{r7, pc}

081044c8 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 81044c8:	b480      	push	{r7}
 81044ca:	b083      	sub	sp, #12
 81044cc:	af00      	add	r7, sp, #0
 81044ce:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 81044d0:	687b      	ldr	r3, [r7, #4]
 81044d2:	4618      	mov	r0, r3
 81044d4:	370c      	adds	r7, #12
 81044d6:	46bd      	mov	sp, r7
 81044d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 81044dc:	4770      	bx	lr

081044de <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
 81044de:	b580      	push	{r7, lr}
 81044e0:	b082      	sub	sp, #8
 81044e2:	af00      	add	r7, sp, #0
 81044e4:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 81044e6:	6878      	ldr	r0, [r7, #4]
 81044e8:	f000 f896 	bl	8104618 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEE7_M_addrEv>
 81044ec:	4603      	mov	r3, r0
 81044ee:	4618      	mov	r0, r3
 81044f0:	3708      	adds	r7, #8
 81044f2:	46bd      	mov	sp, r7
 81044f4:	bd80      	pop	{r7, pc}

081044f6 <_ZSt12__miter_baseIPPhET_S2_>:
    __miter_base(_Iterator __it)
 81044f6:	b480      	push	{r7}
 81044f8:	b083      	sub	sp, #12
 81044fa:	af00      	add	r7, sp, #0
 81044fc:	6078      	str	r0, [r7, #4]
    { return __it; }
 81044fe:	687b      	ldr	r3, [r7, #4]
 8104500:	4618      	mov	r0, r3
 8104502:	370c      	adds	r7, #12
 8104504:	46bd      	mov	sp, r7
 8104506:	f85d 7b04 	ldr.w	r7, [sp], #4
 810450a:	4770      	bx	lr

0810450c <_ZSt13__copy_move_aILb0EPPhS1_ET1_T0_S3_S2_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 810450c:	b5b0      	push	{r4, r5, r7, lr}
 810450e:	b084      	sub	sp, #16
 8104510:	af00      	add	r7, sp, #0
 8104512:	60f8      	str	r0, [r7, #12]
 8104514:	60b9      	str	r1, [r7, #8]
 8104516:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 8104518:	68f8      	ldr	r0, [r7, #12]
 810451a:	f000 f888 	bl	810462e <_ZSt12__niter_baseIPPhET_S2_>
 810451e:	4604      	mov	r4, r0
 8104520:	68b8      	ldr	r0, [r7, #8]
 8104522:	f000 f884 	bl	810462e <_ZSt12__niter_baseIPPhET_S2_>
 8104526:	4605      	mov	r5, r0
 8104528:	687b      	ldr	r3, [r7, #4]
 810452a:	4618      	mov	r0, r3
 810452c:	f000 f87f 	bl	810462e <_ZSt12__niter_baseIPPhET_S2_>
 8104530:	4603      	mov	r3, r0
 8104532:	461a      	mov	r2, r3
 8104534:	4629      	mov	r1, r5
 8104536:	4620      	mov	r0, r4
 8104538:	f000 f884 	bl	8104644 <_ZSt14__copy_move_a1ILb0EPPhS1_ET1_T0_S3_S2_>
 810453c:	4602      	mov	r2, r0
 810453e:	1d3b      	adds	r3, r7, #4
 8104540:	4611      	mov	r1, r2
 8104542:	4618      	mov	r0, r3
 8104544:	f000 f88e 	bl	8104664 <_ZSt12__niter_wrapIPPhET_RKS2_S2_>
 8104548:	4603      	mov	r3, r0
    }
 810454a:	4618      	mov	r0, r3
 810454c:	3710      	adds	r7, #16
 810454e:	46bd      	mov	sp, r7
 8104550:	bdb0      	pop	{r4, r5, r7, pc}

08104552 <_ZSt22__copy_move_backward_aILb0EPPhS1_ET1_T0_S3_S2_>:
    __copy_move_backward_a(_II __first, _II __last, _OI __result)
 8104552:	b5b0      	push	{r4, r5, r7, lr}
 8104554:	b084      	sub	sp, #16
 8104556:	af00      	add	r7, sp, #0
 8104558:	60f8      	str	r0, [r7, #12]
 810455a:	60b9      	str	r1, [r7, #8]
 810455c:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 810455e:	68f8      	ldr	r0, [r7, #12]
 8104560:	f000 f865 	bl	810462e <_ZSt12__niter_baseIPPhET_S2_>
 8104564:	4604      	mov	r4, r0
 8104566:	68b8      	ldr	r0, [r7, #8]
 8104568:	f000 f861 	bl	810462e <_ZSt12__niter_baseIPPhET_S2_>
 810456c:	4605      	mov	r5, r0
 810456e:	687b      	ldr	r3, [r7, #4]
 8104570:	4618      	mov	r0, r3
 8104572:	f000 f85c 	bl	810462e <_ZSt12__niter_baseIPPhET_S2_>
 8104576:	4603      	mov	r3, r0
 8104578:	461a      	mov	r2, r3
 810457a:	4629      	mov	r1, r5
 810457c:	4620      	mov	r0, r4
 810457e:	f000 f87d 	bl	810467c <_ZSt23__copy_move_backward_a1ILb0EPPhS1_ET1_T0_S3_S2_>
 8104582:	4602      	mov	r2, r0
 8104584:	1d3b      	adds	r3, r7, #4
 8104586:	4611      	mov	r1, r2
 8104588:	4618      	mov	r0, r3
 810458a:	f000 f86b 	bl	8104664 <_ZSt12__niter_wrapIPPhET_RKS2_S2_>
 810458e:	4603      	mov	r3, r0
    }
 8104590:	4618      	mov	r0, r3
 8104592:	3710      	adds	r7, #16
 8104594:	46bd      	mov	sp, r7
 8104596:	bdb0      	pop	{r4, r5, r7, pc}

08104598 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8104598:	b580      	push	{r7, lr}
 810459a:	b086      	sub	sp, #24
 810459c:	af00      	add	r7, sp, #0
 810459e:	60f8      	str	r0, [r7, #12]
 81045a0:	60b9      	str	r1, [r7, #8]
 81045a2:	607a      	str	r2, [r7, #4]
 81045a4:	68fb      	ldr	r3, [r7, #12]
 81045a6:	617b      	str	r3, [r7, #20]
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 81045a8:	4a11      	ldr	r2, [pc, #68]	@ (81045f0 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEE8allocateEjPKv+0x58>)
	if (__builtin_expect(__n > this->_M_max_size(), false))
 81045aa:	68bb      	ldr	r3, [r7, #8]
 81045ac:	4293      	cmp	r3, r2
 81045ae:	bf8c      	ite	hi
 81045b0:	2301      	movhi	r3, #1
 81045b2:	2300      	movls	r3, #0
 81045b4:	b2db      	uxtb	r3, r3
 81045b6:	2b00      	cmp	r3, #0
 81045b8:	bf14      	ite	ne
 81045ba:	2301      	movne	r3, #1
 81045bc:	2300      	moveq	r3, #0
 81045be:	b2db      	uxtb	r3, r3
 81045c0:	2b00      	cmp	r3, #0
 81045c2:	d007      	beq.n	81045d4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEE8allocateEjPKv+0x3c>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
 81045c4:	68bb      	ldr	r3, [r7, #8]
 81045c6:	4a0b      	ldr	r2, [pc, #44]	@ (81045f4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEE8allocateEjPKv+0x5c>)
 81045c8:	4293      	cmp	r3, r2
 81045ca:	d901      	bls.n	81045d0 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEEE8allocateEjPKv+0x38>
	      std::__throw_bad_array_new_length();
 81045cc:	f00a f9fe 	bl	810e9cc <_ZSt28__throw_bad_array_new_lengthv>
	    std::__throw_bad_alloc();
 81045d0:	f00a f9f9 	bl	810e9c6 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
 81045d4:	68ba      	ldr	r2, [r7, #8]
 81045d6:	4613      	mov	r3, r2
 81045d8:	005b      	lsls	r3, r3, #1
 81045da:	4413      	add	r3, r2
 81045dc:	00db      	lsls	r3, r3, #3
 81045de:	4618      	mov	r0, r3
 81045e0:	f00a f922 	bl	810e828 <_Znwj>
 81045e4:	4603      	mov	r3, r0
      }
 81045e6:	4618      	mov	r0, r3
 81045e8:	3718      	adds	r7, #24
 81045ea:	46bd      	mov	sp, r7
 81045ec:	bd80      	pop	{r7, pc}
 81045ee:	bf00      	nop
 81045f0:	05555555 	.word	0x05555555
 81045f4:	0aaaaaaa 	.word	0x0aaaaaaa

081045f8 <_ZNSt5tupleIJRKP20__UART_HandleTypeDefEEC1EOS4_>:
	noexcept(__nothrow_constructible<_UElements...>())
	: _Inherited(std::forward<_UElements>(__elements)...) {	}

      constexpr tuple(const tuple&) = default;

      constexpr tuple(tuple&&) = default;
 81045f8:	b580      	push	{r7, lr}
 81045fa:	b082      	sub	sp, #8
 81045fc:	af00      	add	r7, sp, #0
 81045fe:	6078      	str	r0, [r7, #4]
 8104600:	6039      	str	r1, [r7, #0]
 8104602:	687b      	ldr	r3, [r7, #4]
 8104604:	683a      	ldr	r2, [r7, #0]
 8104606:	4611      	mov	r1, r2
 8104608:	4618      	mov	r0, r3
 810460a:	f000 f847 	bl	810469c <_ZNSt11_Tuple_implILj0EJRKP20__UART_HandleTypeDefEEC1EOS4_>
 810460e:	687b      	ldr	r3, [r7, #4]
 8104610:	4618      	mov	r0, r3
 8104612:	3708      	adds	r7, #8
 8104614:	46bd      	mov	sp, r7
 8104616:	bd80      	pop	{r7, pc}

08104618 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKP20__UART_HandleTypeDefP12UartEndpointEE7_M_addrEv>:
      _M_addr() const noexcept
 8104618:	b480      	push	{r7}
 810461a:	b083      	sub	sp, #12
 810461c:	af00      	add	r7, sp, #0
 810461e:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8104620:	687b      	ldr	r3, [r7, #4]
 8104622:	4618      	mov	r0, r3
 8104624:	370c      	adds	r7, #12
 8104626:	46bd      	mov	sp, r7
 8104628:	f85d 7b04 	ldr.w	r7, [sp], #4
 810462c:	4770      	bx	lr

0810462e <_ZSt12__niter_baseIPPhET_S2_>:
    __niter_base(_Iterator __it)
 810462e:	b480      	push	{r7}
 8104630:	b083      	sub	sp, #12
 8104632:	af00      	add	r7, sp, #0
 8104634:	6078      	str	r0, [r7, #4]
    { return __it; }
 8104636:	687b      	ldr	r3, [r7, #4]
 8104638:	4618      	mov	r0, r3
 810463a:	370c      	adds	r7, #12
 810463c:	46bd      	mov	sp, r7
 810463e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8104642:	4770      	bx	lr

08104644 <_ZSt14__copy_move_a1ILb0EPPhS1_ET1_T0_S3_S2_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
 8104644:	b580      	push	{r7, lr}
 8104646:	b084      	sub	sp, #16
 8104648:	af00      	add	r7, sp, #0
 810464a:	60f8      	str	r0, [r7, #12]
 810464c:	60b9      	str	r1, [r7, #8]
 810464e:	607a      	str	r2, [r7, #4]
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 8104650:	687a      	ldr	r2, [r7, #4]
 8104652:	68b9      	ldr	r1, [r7, #8]
 8104654:	68f8      	ldr	r0, [r7, #12]
 8104656:	f000 f845 	bl	81046e4 <_ZSt14__copy_move_a2ILb0EPPhS1_ET1_T0_S3_S2_>
 810465a:	4603      	mov	r3, r0
 810465c:	4618      	mov	r0, r3
 810465e:	3710      	adds	r7, #16
 8104660:	46bd      	mov	sp, r7
 8104662:	bd80      	pop	{r7, pc}

08104664 <_ZSt12__niter_wrapIPPhET_RKS2_S2_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
 8104664:	b480      	push	{r7}
 8104666:	b083      	sub	sp, #12
 8104668:	af00      	add	r7, sp, #0
 810466a:	6078      	str	r0, [r7, #4]
 810466c:	6039      	str	r1, [r7, #0]
    { return __res; }
 810466e:	683b      	ldr	r3, [r7, #0]
 8104670:	4618      	mov	r0, r3
 8104672:	370c      	adds	r7, #12
 8104674:	46bd      	mov	sp, r7
 8104676:	f85d 7b04 	ldr.w	r7, [sp], #4
 810467a:	4770      	bx	lr

0810467c <_ZSt23__copy_move_backward_a1ILb0EPPhS1_ET1_T0_S3_S2_>:
    __copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)
 810467c:	b580      	push	{r7, lr}
 810467e:	b084      	sub	sp, #16
 8104680:	af00      	add	r7, sp, #0
 8104682:	60f8      	str	r0, [r7, #12]
 8104684:	60b9      	str	r1, [r7, #8]
 8104686:	607a      	str	r2, [r7, #4]
    { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
 8104688:	687a      	ldr	r2, [r7, #4]
 810468a:	68b9      	ldr	r1, [r7, #8]
 810468c:	68f8      	ldr	r0, [r7, #12]
 810468e:	f000 f839 	bl	8104704 <_ZSt23__copy_move_backward_a2ILb0EPPhS1_ET1_T0_S3_S2_>
 8104692:	4603      	mov	r3, r0
 8104694:	4618      	mov	r0, r3
 8104696:	3710      	adds	r7, #16
 8104698:	46bd      	mov	sp, r7
 810469a:	bd80      	pop	{r7, pc}

0810469c <_ZNSt11_Tuple_implILj0EJRKP20__UART_HandleTypeDefEEC1EOS4_>:
      _Tuple_impl(_Tuple_impl&& __in)
 810469c:	b480      	push	{r7}
 810469e:	b083      	sub	sp, #12
 81046a0:	af00      	add	r7, sp, #0
 81046a2:	6078      	str	r0, [r7, #4]
 81046a4:	6039      	str	r1, [r7, #0]
      : _Base(static_cast<_Base&&>(__in))
 81046a6:	687b      	ldr	r3, [r7, #4]
 81046a8:	683a      	ldr	r2, [r7, #0]
 81046aa:	6812      	ldr	r2, [r2, #0]
 81046ac:	601a      	str	r2, [r3, #0]
      { }
 81046ae:	687b      	ldr	r3, [r7, #4]
 81046b0:	4618      	mov	r0, r3
 81046b2:	370c      	adds	r7, #12
 81046b4:	46bd      	mov	sp, r7
 81046b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 81046ba:	4770      	bx	lr

081046bc <_ZNSt4pairIKP20__UART_HandleTypeDefP12UartEndpointEC1IJRS2_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES9_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
 81046bc:	b5b0      	push	{r4, r5, r7, lr}
 81046be:	b086      	sub	sp, #24
 81046c0:	af02      	add	r7, sp, #8
 81046c2:	60f8      	str	r0, [r7, #12]
 81046c4:	7239      	strb	r1, [r7, #8]
 81046c6:	607a      	str	r2, [r7, #4]
 81046c8:	703b      	strb	r3, [r7, #0]
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
 81046ca:	463a      	mov	r2, r7
 81046cc:	f88d 4000 	strb.w	r4, [sp]
 81046d0:	462b      	mov	r3, r5
 81046d2:	6879      	ldr	r1, [r7, #4]
 81046d4:	68f8      	ldr	r0, [r7, #12]
 81046d6:	f000 f825 	bl	8104724 <_ZNSt4pairIKP20__UART_HandleTypeDefP12UartEndpointEC1IJRS2_EJLj0EEJEJEEERSt5tupleIJDpT_EERS8_IJDpT1_EESt12_Index_tupleIJXspT0_EEESH_IJXspT2_EEE>
      { }
 81046da:	68fb      	ldr	r3, [r7, #12]
 81046dc:	4618      	mov	r0, r3
 81046de:	3710      	adds	r7, #16
 81046e0:	46bd      	mov	sp, r7
 81046e2:	bdb0      	pop	{r4, r5, r7, pc}

081046e4 <_ZSt14__copy_move_a2ILb0EPPhS1_ET1_T0_S3_S2_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 81046e4:	b580      	push	{r7, lr}
 81046e6:	b084      	sub	sp, #16
 81046e8:	af00      	add	r7, sp, #0
 81046ea:	60f8      	str	r0, [r7, #12]
 81046ec:	60b9      	str	r1, [r7, #8]
 81046ee:	607a      	str	r2, [r7, #4]
			      _Category>::__copy_m(__first, __last, __result);
 81046f0:	687a      	ldr	r2, [r7, #4]
 81046f2:	68b9      	ldr	r1, [r7, #8]
 81046f4:	68f8      	ldr	r0, [r7, #12]
 81046f6:	f000 f82f 	bl	8104758 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPhS3_EEPT0_PT_S7_S5_>
 81046fa:	4603      	mov	r3, r0
    }
 81046fc:	4618      	mov	r0, r3
 81046fe:	3710      	adds	r7, #16
 8104700:	46bd      	mov	sp, r7
 8104702:	bd80      	pop	{r7, pc}

08104704 <_ZSt23__copy_move_backward_a2ILb0EPPhS1_ET1_T0_S3_S2_>:
    __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 8104704:	b580      	push	{r7, lr}
 8104706:	b084      	sub	sp, #16
 8104708:	af00      	add	r7, sp, #0
 810470a:	60f8      	str	r0, [r7, #12]
 810470c:	60b9      	str	r1, [r7, #8]
 810470e:	607a      	str	r2, [r7, #4]
				       _Category>::__copy_move_b(__first,
 8104710:	687a      	ldr	r2, [r7, #4]
 8104712:	68b9      	ldr	r1, [r7, #8]
 8104714:	68f8      	ldr	r0, [r7, #12]
 8104716:	f000 f849 	bl	81047ac <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPhS3_EEPT0_PT_S7_S5_>
 810471a:	4603      	mov	r3, r0
    }
 810471c:	4618      	mov	r0, r3
 810471e:	3710      	adds	r7, #16
 8104720:	46bd      	mov	sp, r7
 8104722:	bd80      	pop	{r7, pc}

08104724 <_ZNSt4pairIKP20__UART_HandleTypeDefP12UartEndpointEC1IJRS2_EJLj0EEJEJEEERSt5tupleIJDpT_EERS8_IJDpT1_EESt12_Index_tupleIJXspT0_EEESH_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
 8104724:	b580      	push	{r7, lr}
 8104726:	b084      	sub	sp, #16
 8104728:	af00      	add	r7, sp, #0
 810472a:	60f8      	str	r0, [r7, #12]
 810472c:	60b9      	str	r1, [r7, #8]
 810472e:	607a      	str	r2, [r7, #4]
 8104730:	703b      	strb	r3, [r7, #0]
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
 8104732:	68b8      	ldr	r0, [r7, #8]
 8104734:	f000 f86b 	bl	810480e <_ZSt3getILj0EJRKP20__UART_HandleTypeDefEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS8_>
 8104738:	4603      	mov	r3, r0
 810473a:	4618      	mov	r0, r3
 810473c:	f000 f874 	bl	8104828 <_ZSt7forwardIRKP20__UART_HandleTypeDefEOT_RNSt16remove_referenceIS4_E4typeE>
 8104740:	4603      	mov	r3, r0
 8104742:	681a      	ldr	r2, [r3, #0]
 8104744:	68fb      	ldr	r3, [r7, #12]
 8104746:	601a      	str	r2, [r3, #0]
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
 8104748:	68fb      	ldr	r3, [r7, #12]
 810474a:	2200      	movs	r2, #0
 810474c:	605a      	str	r2, [r3, #4]
      { }
 810474e:	68fb      	ldr	r3, [r7, #12]
 8104750:	4618      	mov	r0, r3
 8104752:	3710      	adds	r7, #16
 8104754:	46bd      	mov	sp, r7
 8104756:	bd80      	pop	{r7, pc}

08104758 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPhS3_EEPT0_PT_S7_S5_>:
	__copy_m(_Tp* __first, _Tp* __last, _Up* __result)
 8104758:	b580      	push	{r7, lr}
 810475a:	b086      	sub	sp, #24
 810475c:	af00      	add	r7, sp, #0
 810475e:	60f8      	str	r0, [r7, #12]
 8104760:	60b9      	str	r1, [r7, #8]
 8104762:	607a      	str	r2, [r7, #4]
	  const ptrdiff_t _Num = __last - __first;
 8104764:	68ba      	ldr	r2, [r7, #8]
 8104766:	68fb      	ldr	r3, [r7, #12]
 8104768:	1ad3      	subs	r3, r2, r3
 810476a:	109b      	asrs	r3, r3, #2
 810476c:	617b      	str	r3, [r7, #20]
	  if (__builtin_expect(_Num > 1, true))
 810476e:	697b      	ldr	r3, [r7, #20]
 8104770:	2b01      	cmp	r3, #1
 8104772:	bfcc      	ite	gt
 8104774:	2301      	movgt	r3, #1
 8104776:	2300      	movle	r3, #0
 8104778:	b2db      	uxtb	r3, r3
 810477a:	2b00      	cmp	r3, #0
 810477c:	d007      	beq.n	810478e <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPhS3_EEPT0_PT_S7_S5_+0x36>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 810477e:	697b      	ldr	r3, [r7, #20]
 8104780:	009b      	lsls	r3, r3, #2
 8104782:	461a      	mov	r2, r3
 8104784:	68f9      	ldr	r1, [r7, #12]
 8104786:	6878      	ldr	r0, [r7, #4]
 8104788:	f00b f85e 	bl	810f848 <memmove>
 810478c:	e006      	b.n	810479c <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPhS3_EEPT0_PT_S7_S5_+0x44>
	  else if (_Num == 1)
 810478e:	697b      	ldr	r3, [r7, #20]
 8104790:	2b01      	cmp	r3, #1
 8104792:	d103      	bne.n	810479c <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPhS3_EEPT0_PT_S7_S5_+0x44>
	      __assign_one(__result, __first);
 8104794:	68f9      	ldr	r1, [r7, #12]
 8104796:	6878      	ldr	r0, [r7, #4]
 8104798:	f000 f851 	bl	810483e <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE12__assign_oneIPhS3_EEvPT_PT0_>
	  return __result + _Num;
 810479c:	697b      	ldr	r3, [r7, #20]
 810479e:	009b      	lsls	r3, r3, #2
 81047a0:	687a      	ldr	r2, [r7, #4]
 81047a2:	4413      	add	r3, r2
	}
 81047a4:	4618      	mov	r0, r3
 81047a6:	3718      	adds	r7, #24
 81047a8:	46bd      	mov	sp, r7
 81047aa:	bd80      	pop	{r7, pc}

081047ac <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPhS3_EEPT0_PT_S7_S5_>:
	__copy_move_b(_Tp* __first, _Tp* __last, _Up* __result)
 81047ac:	b580      	push	{r7, lr}
 81047ae:	b086      	sub	sp, #24
 81047b0:	af00      	add	r7, sp, #0
 81047b2:	60f8      	str	r0, [r7, #12]
 81047b4:	60b9      	str	r1, [r7, #8]
 81047b6:	607a      	str	r2, [r7, #4]
	  const ptrdiff_t _Num = __last - __first;
 81047b8:	68ba      	ldr	r2, [r7, #8]
 81047ba:	68fb      	ldr	r3, [r7, #12]
 81047bc:	1ad3      	subs	r3, r2, r3
 81047be:	109b      	asrs	r3, r3, #2
 81047c0:	617b      	str	r3, [r7, #20]
	  if (__builtin_expect(_Num > 1, true))
 81047c2:	697b      	ldr	r3, [r7, #20]
 81047c4:	2b01      	cmp	r3, #1
 81047c6:	bfcc      	ite	gt
 81047c8:	2301      	movgt	r3, #1
 81047ca:	2300      	movle	r3, #0
 81047cc:	b2db      	uxtb	r3, r3
 81047ce:	2b00      	cmp	r3, #0
 81047d0:	d00b      	beq.n	81047ea <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPhS3_EEPT0_PT_S7_S5_+0x3e>
	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 81047d2:	697b      	ldr	r3, [r7, #20]
 81047d4:	009b      	lsls	r3, r3, #2
 81047d6:	425b      	negs	r3, r3
 81047d8:	687a      	ldr	r2, [r7, #4]
 81047da:	18d0      	adds	r0, r2, r3
 81047dc:	697b      	ldr	r3, [r7, #20]
 81047de:	009b      	lsls	r3, r3, #2
 81047e0:	461a      	mov	r2, r3
 81047e2:	68f9      	ldr	r1, [r7, #12]
 81047e4:	f00b f830 	bl	810f848 <memmove>
 81047e8:	e008      	b.n	81047fc <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPhS3_EEPT0_PT_S7_S5_+0x50>
	  else if (_Num == 1)
 81047ea:	697b      	ldr	r3, [r7, #20]
 81047ec:	2b01      	cmp	r3, #1
 81047ee:	d105      	bne.n	81047fc <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPhS3_EEPT0_PT_S7_S5_+0x50>
	      __assign_one(__result - 1, __first);
 81047f0:	687b      	ldr	r3, [r7, #4]
 81047f2:	3b04      	subs	r3, #4
 81047f4:	68f9      	ldr	r1, [r7, #12]
 81047f6:	4618      	mov	r0, r3
 81047f8:	f000 f821 	bl	810483e <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE12__assign_oneIPhS3_EEvPT_PT0_>
	  return __result - _Num;
 81047fc:	697b      	ldr	r3, [r7, #20]
 81047fe:	009b      	lsls	r3, r3, #2
 8104800:	425b      	negs	r3, r3
 8104802:	687a      	ldr	r2, [r7, #4]
 8104804:	4413      	add	r3, r2
	}
 8104806:	4618      	mov	r0, r3
 8104808:	3718      	adds	r7, #24
 810480a:	46bd      	mov	sp, r7
 810480c:	bd80      	pop	{r7, pc}

0810480e <_ZSt3getILj0EJRKP20__UART_HandleTypeDefEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS8_>:
    get(tuple<_Elements...>& __t) noexcept
 810480e:	b580      	push	{r7, lr}
 8104810:	b082      	sub	sp, #8
 8104812:	af00      	add	r7, sp, #0
 8104814:	6078      	str	r0, [r7, #4]
    { return std::__get_helper<__i>(__t); }
 8104816:	687b      	ldr	r3, [r7, #4]
 8104818:	4618      	mov	r0, r3
 810481a:	f000 f81f 	bl	810485c <_ZSt12__get_helperILj0ERKP20__UART_HandleTypeDefJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
 810481e:	4603      	mov	r3, r0
 8104820:	4618      	mov	r0, r3
 8104822:	3708      	adds	r7, #8
 8104824:	46bd      	mov	sp, r7
 8104826:	bd80      	pop	{r7, pc}

08104828 <_ZSt7forwardIRKP20__UART_HandleTypeDefEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8104828:	b480      	push	{r7}
 810482a:	b083      	sub	sp, #12
 810482c:	af00      	add	r7, sp, #0
 810482e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8104830:	687b      	ldr	r3, [r7, #4]
 8104832:	4618      	mov	r0, r3
 8104834:	370c      	adds	r7, #12
 8104836:	46bd      	mov	sp, r7
 8104838:	f85d 7b04 	ldr.w	r7, [sp], #4
 810483c:	4770      	bx	lr

0810483e <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE12__assign_oneIPhS3_EEvPT_PT0_>:
	__assign_one(_Tp* __to, _Up* __from)
 810483e:	b480      	push	{r7}
 8104840:	b083      	sub	sp, #12
 8104842:	af00      	add	r7, sp, #0
 8104844:	6078      	str	r0, [r7, #4]
 8104846:	6039      	str	r1, [r7, #0]
	{ *__to = *__from; }
 8104848:	683b      	ldr	r3, [r7, #0]
 810484a:	681a      	ldr	r2, [r3, #0]
 810484c:	687b      	ldr	r3, [r7, #4]
 810484e:	601a      	str	r2, [r3, #0]
 8104850:	bf00      	nop
 8104852:	370c      	adds	r7, #12
 8104854:	46bd      	mov	sp, r7
 8104856:	f85d 7b04 	ldr.w	r7, [sp], #4
 810485a:	4770      	bx	lr

0810485c <_ZSt12__get_helperILj0ERKP20__UART_HandleTypeDefJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
 810485c:	b580      	push	{r7, lr}
 810485e:	b082      	sub	sp, #8
 8104860:	af00      	add	r7, sp, #0
 8104862:	6078      	str	r0, [r7, #4]
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
 8104864:	6878      	ldr	r0, [r7, #4]
 8104866:	f000 f805 	bl	8104874 <_ZNSt11_Tuple_implILj0EJRKP20__UART_HandleTypeDefEE7_M_headERS4_>
 810486a:	4603      	mov	r3, r0
 810486c:	4618      	mov	r0, r3
 810486e:	3708      	adds	r7, #8
 8104870:	46bd      	mov	sp, r7
 8104872:	bd80      	pop	{r7, pc}

08104874 <_ZNSt11_Tuple_implILj0EJRKP20__UART_HandleTypeDefEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 8104874:	b580      	push	{r7, lr}
 8104876:	b082      	sub	sp, #8
 8104878:	af00      	add	r7, sp, #0
 810487a:	6078      	str	r0, [r7, #4]
 810487c:	687b      	ldr	r3, [r7, #4]
 810487e:	4618      	mov	r0, r3
 8104880:	f000 f805 	bl	810488e <_ZNSt10_Head_baseILj0ERKP20__UART_HandleTypeDefLb0EE7_M_headERS4_>
 8104884:	4603      	mov	r3, r0
 8104886:	4618      	mov	r0, r3
 8104888:	3708      	adds	r7, #8
 810488a:	46bd      	mov	sp, r7
 810488c:	bd80      	pop	{r7, pc}

0810488e <_ZNSt10_Head_baseILj0ERKP20__UART_HandleTypeDefLb0EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
 810488e:	b480      	push	{r7}
 8104890:	b083      	sub	sp, #12
 8104892:	af00      	add	r7, sp, #0
 8104894:	6078      	str	r0, [r7, #4]
 8104896:	687b      	ldr	r3, [r7, #4]
 8104898:	681b      	ldr	r3, [r3, #0]
 810489a:	4618      	mov	r0, r3
 810489c:	370c      	adds	r7, #12
 810489e:	46bd      	mov	sp, r7
 81048a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 81048a4:	4770      	bx	lr
	...

081048a8 <_Z41__static_initialization_and_destruction_0v>:
 81048a8:	b580      	push	{r7, lr}
 81048aa:	af00      	add	r7, sp, #0
std::map<UART_HandleTypeDef*, UartEndpoint*> UartEndpoint::instanceMap;
 81048ac:	4802      	ldr	r0, [pc, #8]	@ (81048b8 <_Z41__static_initialization_and_destruction_0v+0x10>)
 81048ae:	f7fe fc1e 	bl	81030ee <_ZNSt3mapIP20__UART_HandleTypeDefP12UartEndpointSt4lessIS1_ESaISt4pairIKS1_S3_EEEC1Ev>
}
 81048b2:	bf00      	nop
 81048b4:	bd80      	pop	{r7, pc}
 81048b6:	bf00      	nop
 81048b8:	100003c4 	.word	0x100003c4

081048bc <_ZNSt3mapIP20__UART_HandleTypeDefP12UartEndpointSt4lessIS1_ESaISt4pairIKS1_S3_EEED1Ev>:
      ~map() = default;
 81048bc:	b580      	push	{r7, lr}
 81048be:	b082      	sub	sp, #8
 81048c0:	af00      	add	r7, sp, #0
 81048c2:	6078      	str	r0, [r7, #4]
 81048c4:	687b      	ldr	r3, [r7, #4]
 81048c6:	4618      	mov	r0, r3
 81048c8:	f7fe fcf9 	bl	81032be <_ZNSt8_Rb_treeIP20__UART_HandleTypeDefSt4pairIKS1_P12UartEndpointESt10_Select1stIS6_ESt4lessIS1_ESaIS6_EED1Ev>
 81048cc:	687b      	ldr	r3, [r7, #4]
 81048ce:	4618      	mov	r0, r3
 81048d0:	3708      	adds	r7, #8
 81048d2:	46bd      	mov	sp, r7
 81048d4:	bd80      	pop	{r7, pc}
	...

081048d8 <_Z41__static_initialization_and_destruction_1v>:
 81048d8:	b580      	push	{r7, lr}
 81048da:	af00      	add	r7, sp, #0
std::map<UART_HandleTypeDef*, UartEndpoint*> UartEndpoint::instanceMap;
 81048dc:	4802      	ldr	r0, [pc, #8]	@ (81048e8 <_Z41__static_initialization_and_destruction_1v+0x10>)
 81048de:	f7ff ffed 	bl	81048bc <_ZNSt3mapIP20__UART_HandleTypeDefP12UartEndpointSt4lessIS1_ESaISt4pairIKS1_S3_EEED1Ev>
}
 81048e2:	bf00      	nop
 81048e4:	bd80      	pop	{r7, pc}
 81048e6:	bf00      	nop
 81048e8:	100003c4 	.word	0x100003c4

081048ec <_GLOBAL__sub_I__ZN12UartEndpoint11instanceMapE>:
 81048ec:	b580      	push	{r7, lr}
 81048ee:	af00      	add	r7, sp, #0
 81048f0:	f7ff ffda 	bl	81048a8 <_Z41__static_initialization_and_destruction_0v>
 81048f4:	bd80      	pop	{r7, pc}

081048f6 <_GLOBAL__sub_D__ZN12UartEndpoint11instanceMapE>:
 81048f6:	b580      	push	{r7, lr}
 81048f8:	af00      	add	r7, sp, #0
 81048fa:	f7ff ffed 	bl	81048d8 <_Z41__static_initialization_and_destruction_1v>
 81048fe:	bd80      	pop	{r7, pc}

08104900 <_ZSt17__size_to_integerj>:

  // Used by fill_n, generate_n, etc. to convert _Size to an integral type:
  inline _GLIBCXX_CONSTEXPR int
  __size_to_integer(int __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
 8104900:	b480      	push	{r7}
 8104902:	b083      	sub	sp, #12
 8104904:	af00      	add	r7, sp, #0
 8104906:	6078      	str	r0, [r7, #4]
 8104908:	687b      	ldr	r3, [r7, #4]
 810490a:	4618      	mov	r0, r3
 810490c:	370c      	adds	r7, #12
 810490e:	46bd      	mov	sp, r7
 8104910:	f85d 7b04 	ldr.w	r7, [sp], #4
 8104914:	4770      	bx	lr

08104916 <_ZN4comm7MessageC1Ev>:

namespace comm {

	//extern uint8_t MY_ID;// = 0x00;

	Message::Message()
 8104916:	b580      	push	{r7, lr}
 8104918:	b084      	sub	sp, #16
 810491a:	af00      	add	r7, sp, #0
 810491c:	6078      	str	r0, [r7, #4]
	:
		m_Header(0),
 810491e:	687b      	ldr	r3, [r7, #4]
 8104920:	2200      	movs	r2, #0
 8104922:	701a      	strb	r2, [r3, #0]
		m_srcID(0),
 8104924:	687b      	ldr	r3, [r7, #4]
 8104926:	2200      	movs	r2, #0
 8104928:	705a      	strb	r2, [r3, #1]
		m_destID(0),
 810492a:	687b      	ldr	r3, [r7, #4]
 810492c:	2200      	movs	r2, #0
 810492e:	709a      	strb	r2, [r3, #2]
		m_opCode(0),
 8104930:	687b      	ldr	r3, [r7, #4]
 8104932:	2200      	movs	r2, #0
 8104934:	70da      	strb	r2, [r3, #3]
		m_addr(0),
 8104936:	687b      	ldr	r3, [r7, #4]
 8104938:	2200      	movs	r2, #0
 810493a:	711a      	strb	r2, [r3, #4]
		m_length(0),
 810493c:	687b      	ldr	r3, [r7, #4]
 810493e:	2200      	movs	r2, #0
 8104940:	715a      	strb	r2, [r3, #5]
		m_payload(0),
 8104942:	687b      	ldr	r3, [r7, #4]
 8104944:	f103 0008 	add.w	r0, r3, #8
 8104948:	f107 0308 	add.w	r3, r7, #8
 810494c:	60fb      	str	r3, [r7, #12]
 810494e:	f107 0308 	add.w	r3, r7, #8
 8104952:	461a      	mov	r2, r3
 8104954:	2100      	movs	r1, #0
 8104956:	f000 f810 	bl	810497a <_ZNSt6vectorIhSaIhEEC1EjRKS0_>
 810495a:	f107 0308 	add.w	r3, r7, #8
 810495e:	4618      	mov	r0, r3
 8104960:	f7fd ff2d 	bl	81027be <_ZNSt15__new_allocatorIhED1Ev>
		m_dataCRC(0),
 8104964:	687b      	ldr	r3, [r7, #4]
 8104966:	2200      	movs	r2, #0
 8104968:	751a      	strb	r2, [r3, #20]
		m_Footer(0)
 810496a:	687b      	ldr	r3, [r7, #4]
 810496c:	2200      	movs	r2, #0
 810496e:	755a      	strb	r2, [r3, #21]
	{}
 8104970:	687b      	ldr	r3, [r7, #4]
 8104972:	4618      	mov	r0, r3
 8104974:	3710      	adds	r7, #16
 8104976:	46bd      	mov	sp, r7
 8104978:	bd80      	pop	{r7, pc}

0810497a <_ZNSt6vectorIhSaIhEEC1EjRKS0_>:
       *  This constructor fills the %vector with @a __n default
       *  constructed elements.
       */
      explicit
      _GLIBCXX20_CONSTEXPR
      vector(size_type __n, const allocator_type& __a = allocator_type())
 810497a:	b590      	push	{r4, r7, lr}
 810497c:	b085      	sub	sp, #20
 810497e:	af00      	add	r7, sp, #0
 8104980:	60f8      	str	r0, [r7, #12]
 8104982:	60b9      	str	r1, [r7, #8]
 8104984:	607a      	str	r2, [r7, #4]
      : _Base(_S_check_init_len(__n, __a), __a)
 8104986:	68fc      	ldr	r4, [r7, #12]
 8104988:	6879      	ldr	r1, [r7, #4]
 810498a:	68b8      	ldr	r0, [r7, #8]
 810498c:	f000 f810 	bl	81049b0 <_ZNSt6vectorIhSaIhEE17_S_check_init_lenEjRKS0_>
 8104990:	4603      	mov	r3, r0
 8104992:	687a      	ldr	r2, [r7, #4]
 8104994:	4619      	mov	r1, r3
 8104996:	4620      	mov	r0, r4
 8104998:	f000 f834 	bl	8104a04 <_ZNSt12_Vector_baseIhSaIhEEC1EjRKS0_>
      { _M_default_initialize(__n); }
 810499c:	68b9      	ldr	r1, [r7, #8]
 810499e:	68f8      	ldr	r0, [r7, #12]
 81049a0:	f000 f844 	bl	8104a2c <_ZNSt6vectorIhSaIhEE21_M_default_initializeEj>
 81049a4:	68fb      	ldr	r3, [r7, #12]
 81049a6:	4618      	mov	r0, r3
 81049a8:	3714      	adds	r7, #20
 81049aa:	46bd      	mov	sp, r7
 81049ac:	bd90      	pop	{r4, r7, pc}
	...

081049b0 <_ZNSt6vectorIhSaIhEE17_S_check_init_lenEjRKS0_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
 81049b0:	b590      	push	{r4, r7, lr}
 81049b2:	b087      	sub	sp, #28
 81049b4:	af00      	add	r7, sp, #0
 81049b6:	6078      	str	r0, [r7, #4]
 81049b8:	6039      	str	r1, [r7, #0]
 81049ba:	683b      	ldr	r3, [r7, #0]
 81049bc:	617b      	str	r3, [r7, #20]
 81049be:	f107 0308 	add.w	r3, r7, #8
 81049c2:	613b      	str	r3, [r7, #16]
 81049c4:	697b      	ldr	r3, [r7, #20]
 81049c6:	60fb      	str	r3, [r7, #12]
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
 81049c8:	f107 0308 	add.w	r3, r7, #8
 81049cc:	4618      	mov	r0, r3
 81049ce:	f000 f850 	bl	8104a72 <_ZNSt6vectorIhSaIhEE11_S_max_sizeERKS0_>
 81049d2:	4602      	mov	r2, r0
 81049d4:	687b      	ldr	r3, [r7, #4]
 81049d6:	4293      	cmp	r3, r2
 81049d8:	bf8c      	ite	hi
 81049da:	2301      	movhi	r3, #1
 81049dc:	2300      	movls	r3, #0
 81049de:	b2dc      	uxtb	r4, r3
 81049e0:	f107 0308 	add.w	r3, r7, #8
 81049e4:	4618      	mov	r0, r3
 81049e6:	f7fd feea 	bl	81027be <_ZNSt15__new_allocatorIhED1Ev>
 81049ea:	2c00      	cmp	r4, #0
 81049ec:	d002      	beq.n	81049f4 <_ZNSt6vectorIhSaIhEE17_S_check_init_lenEjRKS0_+0x44>
	  __throw_length_error(
 81049ee:	4804      	ldr	r0, [pc, #16]	@ (8104a00 <_ZNSt6vectorIhSaIhEE17_S_check_init_lenEjRKS0_+0x50>)
 81049f0:	f009 ffef 	bl	810e9d2 <_ZSt20__throw_length_errorPKc>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
 81049f4:	687b      	ldr	r3, [r7, #4]
      }
 81049f6:	4618      	mov	r0, r3
 81049f8:	371c      	adds	r7, #28
 81049fa:	46bd      	mov	sp, r7
 81049fc:	bd90      	pop	{r4, r7, pc}
 81049fe:	bf00      	nop
 8104a00:	08111720 	.word	0x08111720

08104a04 <_ZNSt12_Vector_baseIhSaIhEEC1EjRKS0_>:
      _Vector_base(size_t __n, const allocator_type& __a)
 8104a04:	b580      	push	{r7, lr}
 8104a06:	b084      	sub	sp, #16
 8104a08:	af00      	add	r7, sp, #0
 8104a0a:	60f8      	str	r0, [r7, #12]
 8104a0c:	60b9      	str	r1, [r7, #8]
 8104a0e:	607a      	str	r2, [r7, #4]
      : _M_impl(__a)
 8104a10:	68fb      	ldr	r3, [r7, #12]
 8104a12:	6879      	ldr	r1, [r7, #4]
 8104a14:	4618      	mov	r0, r3
 8104a16:	f000 f84c 	bl	8104ab2 <_ZNSt12_Vector_baseIhSaIhEE12_Vector_implC1ERKS0_>
      { _M_create_storage(__n); }
 8104a1a:	68b9      	ldr	r1, [r7, #8]
 8104a1c:	68f8      	ldr	r0, [r7, #12]
 8104a1e:	f000 f85e 	bl	8104ade <_ZNSt12_Vector_baseIhSaIhEE17_M_create_storageEj>
 8104a22:	68fb      	ldr	r3, [r7, #12]
 8104a24:	4618      	mov	r0, r3
 8104a26:	3710      	adds	r7, #16
 8104a28:	46bd      	mov	sp, r7
 8104a2a:	bd80      	pop	{r7, pc}

08104a2c <_ZNSt6vectorIhSaIhEE21_M_default_initializeEj>:
      _M_default_initialize(size_type __n)
 8104a2c:	b590      	push	{r4, r7, lr}
 8104a2e:	b083      	sub	sp, #12
 8104a30:	af00      	add	r7, sp, #0
 8104a32:	6078      	str	r0, [r7, #4]
 8104a34:	6039      	str	r1, [r7, #0]
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
 8104a36:	687b      	ldr	r3, [r7, #4]
 8104a38:	681c      	ldr	r4, [r3, #0]
					   _M_get_Tp_allocator());
 8104a3a:	687b      	ldr	r3, [r7, #4]
 8104a3c:	4618      	mov	r0, r3
 8104a3e:	f000 f80d 	bl	8104a5c <_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv>
 8104a42:	4603      	mov	r3, r0
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
 8104a44:	461a      	mov	r2, r3
 8104a46:	6839      	ldr	r1, [r7, #0]
 8104a48:	4620      	mov	r0, r4
 8104a4a:	f000 f862 	bl	8104b12 <_ZSt27__uninitialized_default_n_aIPhjhET_S1_T0_RSaIT1_E>
 8104a4e:	4602      	mov	r2, r0
	this->_M_impl._M_finish =
 8104a50:	687b      	ldr	r3, [r7, #4]
 8104a52:	605a      	str	r2, [r3, #4]
      }
 8104a54:	bf00      	nop
 8104a56:	370c      	adds	r7, #12
 8104a58:	46bd      	mov	sp, r7
 8104a5a:	bd90      	pop	{r4, r7, pc}

08104a5c <_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8104a5c:	b480      	push	{r7}
 8104a5e:	b083      	sub	sp, #12
 8104a60:	af00      	add	r7, sp, #0
 8104a62:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8104a64:	687b      	ldr	r3, [r7, #4]
 8104a66:	4618      	mov	r0, r3
 8104a68:	370c      	adds	r7, #12
 8104a6a:	46bd      	mov	sp, r7
 8104a6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8104a70:	4770      	bx	lr

08104a72 <_ZNSt6vectorIhSaIhEE11_S_max_sizeERKS0_>:

      static _GLIBCXX20_CONSTEXPR size_type
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 8104a72:	b580      	push	{r7, lr}
 8104a74:	b088      	sub	sp, #32
 8104a76:	af00      	add	r7, sp, #0
 8104a78:	6078      	str	r0, [r7, #4]
      {
	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
	// (even if std::allocator_traits::max_size says we can).
	const size_t __diffmax
 8104a7a:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 8104a7e:	613b      	str	r3, [r7, #16]
 8104a80:	687b      	ldr	r3, [r7, #4]
 8104a82:	61fb      	str	r3, [r7, #28]
 8104a84:	69fb      	ldr	r3, [r7, #28]
 8104a86:	61bb      	str	r3, [r7, #24]
 8104a88:	69bb      	ldr	r3, [r7, #24]
 8104a8a:	617b      	str	r3, [r7, #20]
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8104a8c:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
      { return _M_max_size(); }
 8104a90:	bf00      	nop
	return __a.max_size();
 8104a92:	bf00      	nop
	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 8104a94:	60fb      	str	r3, [r7, #12]
	return (std::min)(__diffmax, __allocmax);
 8104a96:	f107 020c 	add.w	r2, r7, #12
 8104a9a:	f107 0310 	add.w	r3, r7, #16
 8104a9e:	4611      	mov	r1, r2
 8104aa0:	4618      	mov	r0, r3
 8104aa2:	f7ff fcba 	bl	810441a <_ZSt3minIjERKT_S2_S2_>
 8104aa6:	4603      	mov	r3, r0
 8104aa8:	681b      	ldr	r3, [r3, #0]
      }
 8104aaa:	4618      	mov	r0, r3
 8104aac:	3720      	adds	r7, #32
 8104aae:	46bd      	mov	sp, r7
 8104ab0:	bd80      	pop	{r7, pc}

08104ab2 <_ZNSt12_Vector_baseIhSaIhEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 8104ab2:	b580      	push	{r7, lr}
 8104ab4:	b086      	sub	sp, #24
 8104ab6:	af00      	add	r7, sp, #0
 8104ab8:	6078      	str	r0, [r7, #4]
 8104aba:	6039      	str	r1, [r7, #0]
 8104abc:	687b      	ldr	r3, [r7, #4]
 8104abe:	617b      	str	r3, [r7, #20]
 8104ac0:	683b      	ldr	r3, [r7, #0]
 8104ac2:	613b      	str	r3, [r7, #16]
 8104ac4:	697b      	ldr	r3, [r7, #20]
 8104ac6:	60fb      	str	r3, [r7, #12]
 8104ac8:	693b      	ldr	r3, [r7, #16]
 8104aca:	60bb      	str	r3, [r7, #8]
	: _Tp_alloc_type(__a)
 8104acc:	687b      	ldr	r3, [r7, #4]
 8104ace:	4618      	mov	r0, r3
 8104ad0:	f000 f847 	bl	8104b62 <_ZNSt12_Vector_baseIhSaIhEE17_Vector_impl_dataC1Ev>
	{ }
 8104ad4:	687b      	ldr	r3, [r7, #4]
 8104ad6:	4618      	mov	r0, r3
 8104ad8:	3718      	adds	r7, #24
 8104ada:	46bd      	mov	sp, r7
 8104adc:	bd80      	pop	{r7, pc}

08104ade <_ZNSt12_Vector_baseIhSaIhEE17_M_create_storageEj>:
      _M_create_storage(size_t __n)
 8104ade:	b580      	push	{r7, lr}
 8104ae0:	b082      	sub	sp, #8
 8104ae2:	af00      	add	r7, sp, #0
 8104ae4:	6078      	str	r0, [r7, #4]
 8104ae6:	6039      	str	r1, [r7, #0]
	this->_M_impl._M_start = this->_M_allocate(__n);
 8104ae8:	6839      	ldr	r1, [r7, #0]
 8104aea:	6878      	ldr	r0, [r7, #4]
 8104aec:	f000 f820 	bl	8104b30 <_ZNSt12_Vector_baseIhSaIhEE11_M_allocateEj>
 8104af0:	4602      	mov	r2, r0
 8104af2:	687b      	ldr	r3, [r7, #4]
 8104af4:	601a      	str	r2, [r3, #0]
	this->_M_impl._M_finish = this->_M_impl._M_start;
 8104af6:	687b      	ldr	r3, [r7, #4]
 8104af8:	681a      	ldr	r2, [r3, #0]
 8104afa:	687b      	ldr	r3, [r7, #4]
 8104afc:	605a      	str	r2, [r3, #4]
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 8104afe:	687b      	ldr	r3, [r7, #4]
 8104b00:	681a      	ldr	r2, [r3, #0]
 8104b02:	683b      	ldr	r3, [r7, #0]
 8104b04:	441a      	add	r2, r3
 8104b06:	687b      	ldr	r3, [r7, #4]
 8104b08:	609a      	str	r2, [r3, #8]
      }
 8104b0a:	bf00      	nop
 8104b0c:	3708      	adds	r7, #8
 8104b0e:	46bd      	mov	sp, r7
 8104b10:	bd80      	pop	{r7, pc}

08104b12 <_ZSt27__uninitialized_default_n_aIPhjhET_S1_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
 8104b12:	b580      	push	{r7, lr}
 8104b14:	b084      	sub	sp, #16
 8104b16:	af00      	add	r7, sp, #0
 8104b18:	60f8      	str	r0, [r7, #12]
 8104b1a:	60b9      	str	r1, [r7, #8]
 8104b1c:	607a      	str	r2, [r7, #4]
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
 8104b1e:	68b9      	ldr	r1, [r7, #8]
 8104b20:	68f8      	ldr	r0, [r7, #12]
 8104b22:	f000 f832 	bl	8104b8a <_ZSt25__uninitialized_default_nIPhjET_S1_T0_>
 8104b26:	4603      	mov	r3, r0
 8104b28:	4618      	mov	r0, r3
 8104b2a:	3710      	adds	r7, #16
 8104b2c:	46bd      	mov	sp, r7
 8104b2e:	bd80      	pop	{r7, pc}

08104b30 <_ZNSt12_Vector_baseIhSaIhEE11_M_allocateEj>:
      _M_allocate(size_t __n)
 8104b30:	b580      	push	{r7, lr}
 8104b32:	b084      	sub	sp, #16
 8104b34:	af00      	add	r7, sp, #0
 8104b36:	6078      	str	r0, [r7, #4]
 8104b38:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 8104b3a:	683b      	ldr	r3, [r7, #0]
 8104b3c:	2b00      	cmp	r3, #0
 8104b3e:	d00b      	beq.n	8104b58 <_ZNSt12_Vector_baseIhSaIhEE11_M_allocateEj+0x28>
 8104b40:	687b      	ldr	r3, [r7, #4]
 8104b42:	60fb      	str	r3, [r7, #12]
 8104b44:	683b      	ldr	r3, [r7, #0]
 8104b46:	60bb      	str	r3, [r7, #8]
      { return __a.allocate(__n); }
 8104b48:	2200      	movs	r2, #0
 8104b4a:	68b9      	ldr	r1, [r7, #8]
 8104b4c:	68f8      	ldr	r0, [r7, #12]
 8104b4e:	f7fc fff1 	bl	8101b34 <_ZNSt15__new_allocatorIhE8allocateEjPKv>
 8104b52:	4603      	mov	r3, r0
 8104b54:	bf00      	nop
 8104b56:	e000      	b.n	8104b5a <_ZNSt12_Vector_baseIhSaIhEE11_M_allocateEj+0x2a>
 8104b58:	2300      	movs	r3, #0
      }
 8104b5a:	4618      	mov	r0, r3
 8104b5c:	3710      	adds	r7, #16
 8104b5e:	46bd      	mov	sp, r7
 8104b60:	bd80      	pop	{r7, pc}

08104b62 <_ZNSt12_Vector_baseIhSaIhEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 8104b62:	b480      	push	{r7}
 8104b64:	b083      	sub	sp, #12
 8104b66:	af00      	add	r7, sp, #0
 8104b68:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 8104b6a:	687b      	ldr	r3, [r7, #4]
 8104b6c:	2200      	movs	r2, #0
 8104b6e:	601a      	str	r2, [r3, #0]
 8104b70:	687b      	ldr	r3, [r7, #4]
 8104b72:	2200      	movs	r2, #0
 8104b74:	605a      	str	r2, [r3, #4]
 8104b76:	687b      	ldr	r3, [r7, #4]
 8104b78:	2200      	movs	r2, #0
 8104b7a:	609a      	str	r2, [r3, #8]
	{ }
 8104b7c:	687b      	ldr	r3, [r7, #4]
 8104b7e:	4618      	mov	r0, r3
 8104b80:	370c      	adds	r7, #12
 8104b82:	46bd      	mov	sp, r7
 8104b84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8104b88:	4770      	bx	lr

08104b8a <_ZSt25__uninitialized_default_nIPhjET_S1_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
 8104b8a:	b580      	push	{r7, lr}
 8104b8c:	b084      	sub	sp, #16
 8104b8e:	af00      	add	r7, sp, #0
 8104b90:	6078      	str	r0, [r7, #4]
 8104b92:	6039      	str	r1, [r7, #0]
      constexpr bool __can_fill
 8104b94:	2301      	movs	r3, #1
 8104b96:	73fb      	strb	r3, [r7, #15]
	__uninit_default_n(__first, __n);
 8104b98:	6839      	ldr	r1, [r7, #0]
 8104b9a:	6878      	ldr	r0, [r7, #4]
 8104b9c:	f000 f805 	bl	8104baa <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPhjEET_S3_T0_>
 8104ba0:	4603      	mov	r3, r0
    }
 8104ba2:	4618      	mov	r0, r3
 8104ba4:	3710      	adds	r7, #16
 8104ba6:	46bd      	mov	sp, r7
 8104ba8:	bd80      	pop	{r7, pc}

08104baa <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPhjEET_S3_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
 8104baa:	b580      	push	{r7, lr}
 8104bac:	b084      	sub	sp, #16
 8104bae:	af00      	add	r7, sp, #0
 8104bb0:	6078      	str	r0, [r7, #4]
 8104bb2:	6039      	str	r1, [r7, #0]
	  if (__n > 0)
 8104bb4:	683b      	ldr	r3, [r7, #0]
 8104bb6:	2b00      	cmp	r3, #0
 8104bb8:	d011      	beq.n	8104bde <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPhjEET_S3_T0_+0x34>
		= std::__addressof(*__first);
 8104bba:	6878      	ldr	r0, [r7, #4]
 8104bbc:	f000 f814 	bl	8104be8 <_ZSt11__addressofIhEPT_RS0_>
 8104bc0:	60f8      	str	r0, [r7, #12]
	      std::_Construct(__val);
 8104bc2:	68f8      	ldr	r0, [r7, #12]
 8104bc4:	f000 f81b 	bl	8104bfe <_ZSt10_ConstructIhJEEvPT_DpOT0_>
	      ++__first;
 8104bc8:	687b      	ldr	r3, [r7, #4]
 8104bca:	3301      	adds	r3, #1
 8104bcc:	607b      	str	r3, [r7, #4]
	      __first = std::fill_n(__first, __n - 1, *__val);
 8104bce:	683b      	ldr	r3, [r7, #0]
 8104bd0:	3b01      	subs	r3, #1
 8104bd2:	68fa      	ldr	r2, [r7, #12]
 8104bd4:	4619      	mov	r1, r3
 8104bd6:	6878      	ldr	r0, [r7, #4]
 8104bd8:	f000 f821 	bl	8104c1e <_ZSt6fill_nIPhjhET_S1_T0_RKT1_>
 8104bdc:	6078      	str	r0, [r7, #4]
	  return __first;
 8104bde:	687b      	ldr	r3, [r7, #4]
	}
 8104be0:	4618      	mov	r0, r3
 8104be2:	3710      	adds	r7, #16
 8104be4:	46bd      	mov	sp, r7
 8104be6:	bd80      	pop	{r7, pc}

08104be8 <_ZSt11__addressofIhEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8104be8:	b480      	push	{r7}
 8104bea:	b083      	sub	sp, #12
 8104bec:	af00      	add	r7, sp, #0
 8104bee:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8104bf0:	687b      	ldr	r3, [r7, #4]
 8104bf2:	4618      	mov	r0, r3
 8104bf4:	370c      	adds	r7, #12
 8104bf6:	46bd      	mov	sp, r7
 8104bf8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8104bfc:	4770      	bx	lr

08104bfe <_ZSt10_ConstructIhJEEvPT_DpOT0_>:
   */
#if __cplusplus >= 201103L
  template<typename _Tp, typename... _Args>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Construct(_Tp* __p, _Args&&... __args)
 8104bfe:	b580      	push	{r7, lr}
 8104c00:	b082      	sub	sp, #8
 8104c02:	af00      	add	r7, sp, #0
 8104c04:	6078      	str	r0, [r7, #4]
	  // Allow std::_Construct to be used in constant expressions.
	  std::construct_at(__p, std::forward<_Args>(__args)...);
	  return;
	}
#endif
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 8104c06:	687b      	ldr	r3, [r7, #4]
 8104c08:	4619      	mov	r1, r3
 8104c0a:	2001      	movs	r0, #1
 8104c0c:	f7fe fa23 	bl	8103056 <_ZnwjPv>
 8104c10:	4603      	mov	r3, r0
 8104c12:	2200      	movs	r2, #0
 8104c14:	701a      	strb	r2, [r3, #0]
    }
 8104c16:	bf00      	nop
 8104c18:	3708      	adds	r7, #8
 8104c1a:	46bd      	mov	sp, r7
 8104c1c:	bd80      	pop	{r7, pc}

08104c1e <_ZSt6fill_nIPhjhET_S1_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
 8104c1e:	b5b0      	push	{r4, r5, r7, lr}
 8104c20:	b084      	sub	sp, #16
 8104c22:	af00      	add	r7, sp, #0
 8104c24:	60f8      	str	r0, [r7, #12]
 8104c26:	60b9      	str	r1, [r7, #8]
 8104c28:	607a      	str	r2, [r7, #4]
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
 8104c2a:	68fc      	ldr	r4, [r7, #12]
 8104c2c:	68b8      	ldr	r0, [r7, #8]
 8104c2e:	f7ff fe67 	bl	8104900 <_ZSt17__size_to_integerj>
 8104c32:	4601      	mov	r1, r0
  template<typename _Iter>
    __attribute__((__always_inline__))
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    { return typename iterator_traits<_Iter>::iterator_category(); }
 8104c34:	bf00      	nop
 8104c36:	462b      	mov	r3, r5
 8104c38:	687a      	ldr	r2, [r7, #4]
 8104c3a:	4620      	mov	r0, r4
 8104c3c:	f000 f805 	bl	8104c4a <_ZSt10__fill_n_aIPhjhET_S1_T0_RKT1_St26random_access_iterator_tag>
 8104c40:	4603      	mov	r3, r0
			       std::__iterator_category(__first));
    }
 8104c42:	4618      	mov	r0, r3
 8104c44:	3710      	adds	r7, #16
 8104c46:	46bd      	mov	sp, r7
 8104c48:	bdb0      	pop	{r4, r5, r7, pc}

08104c4a <_ZSt10__fill_n_aIPhjhET_S1_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
 8104c4a:	b580      	push	{r7, lr}
 8104c4c:	b084      	sub	sp, #16
 8104c4e:	af00      	add	r7, sp, #0
 8104c50:	60f8      	str	r0, [r7, #12]
 8104c52:	60b9      	str	r1, [r7, #8]
 8104c54:	607a      	str	r2, [r7, #4]
 8104c56:	703b      	strb	r3, [r7, #0]
      if (__n <= 0)
 8104c58:	68bb      	ldr	r3, [r7, #8]
 8104c5a:	2b00      	cmp	r3, #0
 8104c5c:	d101      	bne.n	8104c62 <_ZSt10__fill_n_aIPhjhET_S1_T0_RKT1_St26random_access_iterator_tag+0x18>
	return __first;
 8104c5e:	68fb      	ldr	r3, [r7, #12]
 8104c60:	e00a      	b.n	8104c78 <_ZSt10__fill_n_aIPhjhET_S1_T0_RKT1_St26random_access_iterator_tag+0x2e>
      std::__fill_a(__first, __first + __n, __value);
 8104c62:	68fa      	ldr	r2, [r7, #12]
 8104c64:	68bb      	ldr	r3, [r7, #8]
 8104c66:	4413      	add	r3, r2
 8104c68:	687a      	ldr	r2, [r7, #4]
 8104c6a:	4619      	mov	r1, r3
 8104c6c:	68f8      	ldr	r0, [r7, #12]
 8104c6e:	f000 f807 	bl	8104c80 <_ZSt8__fill_aIPhhEvT_S1_RKT0_>
      return __first + __n;
 8104c72:	68fa      	ldr	r2, [r7, #12]
 8104c74:	68bb      	ldr	r3, [r7, #8]
 8104c76:	4413      	add	r3, r2
    }
 8104c78:	4618      	mov	r0, r3
 8104c7a:	3710      	adds	r7, #16
 8104c7c:	46bd      	mov	sp, r7
 8104c7e:	bd80      	pop	{r7, pc}

08104c80 <_ZSt8__fill_aIPhhEvT_S1_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
 8104c80:	b580      	push	{r7, lr}
 8104c82:	b084      	sub	sp, #16
 8104c84:	af00      	add	r7, sp, #0
 8104c86:	60f8      	str	r0, [r7, #12]
 8104c88:	60b9      	str	r1, [r7, #8]
 8104c8a:	607a      	str	r2, [r7, #4]
    { std::__fill_a1(__first, __last, __value); }
 8104c8c:	687a      	ldr	r2, [r7, #4]
 8104c8e:	68b9      	ldr	r1, [r7, #8]
 8104c90:	68f8      	ldr	r0, [r7, #12]
 8104c92:	f000 f804 	bl	8104c9e <_ZSt9__fill_a1IhEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>
 8104c96:	bf00      	nop
 8104c98:	3710      	adds	r7, #16
 8104c9a:	46bd      	mov	sp, r7
 8104c9c:	bd80      	pop	{r7, pc}

08104c9e <_ZSt9__fill_a1IhEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>:
    __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
 8104c9e:	b580      	push	{r7, lr}
 8104ca0:	b086      	sub	sp, #24
 8104ca2:	af00      	add	r7, sp, #0
 8104ca4:	60f8      	str	r0, [r7, #12]
 8104ca6:	60b9      	str	r1, [r7, #8]
 8104ca8:	607a      	str	r2, [r7, #4]
      const _Tp __tmp = __c;
 8104caa:	687b      	ldr	r3, [r7, #4]
 8104cac:	781b      	ldrb	r3, [r3, #0]
 8104cae:	75fb      	strb	r3, [r7, #23]
      if (const size_t __len = __last - __first)
 8104cb0:	68ba      	ldr	r2, [r7, #8]
 8104cb2:	68fb      	ldr	r3, [r7, #12]
 8104cb4:	1ad3      	subs	r3, r2, r3
 8104cb6:	613b      	str	r3, [r7, #16]
 8104cb8:	693b      	ldr	r3, [r7, #16]
 8104cba:	2b00      	cmp	r3, #0
 8104cbc:	d005      	beq.n	8104cca <_ZSt9__fill_a1IhEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_+0x2c>
	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
 8104cbe:	7dfb      	ldrb	r3, [r7, #23]
 8104cc0:	693a      	ldr	r2, [r7, #16]
 8104cc2:	4619      	mov	r1, r3
 8104cc4:	68f8      	ldr	r0, [r7, #12]
 8104cc6:	f00a fdd9 	bl	810f87c <memset>
    }
 8104cca:	bf00      	nop
 8104ccc:	3718      	adds	r7, #24
 8104cce:	46bd      	mov	sp, r7
 8104cd0:	bd80      	pop	{r7, pc}
	...

08104cd4 <main>:
 8104cd4:	b580      	push	{r7, lr}
 8104cd6:	af00      	add	r7, sp, #0
 8104cd8:	f000 fdcc 	bl	8105874 <HAL_Init>
 8104cdc:	f000 fa04 	bl	81050e8 <MX_RESMGR_UTILITY_Init>
 8104ce0:	f000 f922 	bl	8104f28 <MX_GPIO_Init>
 8104ce4:	f000 f818 	bl	8104d18 <MX_USART1_UART_Init>
 8104ce8:	f000 f8c6 	bl	8104e78 <MX_USART3_UART_Init>
 8104cec:	f000 f86c 	bl	8104dc8 <MX_USART2_UART_Init>
 8104cf0:	f006 fe30 	bl	810b954 <osKernelInitialize>
 8104cf4:	4a05      	ldr	r2, [pc, #20]	@ (8104d0c <main+0x38>)
 8104cf6:	2100      	movs	r1, #0
 8104cf8:	4805      	ldr	r0, [pc, #20]	@ (8104d10 <main+0x3c>)
 8104cfa:	f006 fe75 	bl	810b9e8 <osThreadNew>
 8104cfe:	4603      	mov	r3, r0
 8104d00:	4a04      	ldr	r2, [pc, #16]	@ (8104d14 <main+0x40>)
 8104d02:	6013      	str	r3, [r2, #0]
 8104d04:	f006 fe4a 	bl	810b99c <osKernelStart>
 8104d08:	bf00      	nop
 8104d0a:	e7fd      	b.n	8104d08 <main+0x34>
 8104d0c:	08111854 	.word	0x08111854
 8104d10:	08105079 	.word	0x08105079
 8104d14:	10000598 	.word	0x10000598

08104d18 <MX_USART1_UART_Init>:
 8104d18:	b580      	push	{r7, lr}
 8104d1a:	af00      	add	r7, sp, #0
 8104d1c:	2300      	movs	r3, #0
 8104d1e:	2200      	movs	r2, #0
 8104d20:	2112      	movs	r1, #18
 8104d22:	2010      	movs	r0, #16
 8104d24:	f009 fc6e 	bl	810e604 <ResMgr_Request>
 8104d28:	4603      	mov	r3, r0
 8104d2a:	2b00      	cmp	r3, #0
 8104d2c:	d001      	beq.n	8104d32 <MX_USART1_UART_Init+0x1a>
 8104d2e:	f000 f9d5 	bl	81050dc <Error_Handler>
 8104d32:	4b23      	ldr	r3, [pc, #140]	@ (8104dc0 <MX_USART1_UART_Init+0xa8>)
 8104d34:	4a23      	ldr	r2, [pc, #140]	@ (8104dc4 <MX_USART1_UART_Init+0xac>)
 8104d36:	601a      	str	r2, [r3, #0]
 8104d38:	4b21      	ldr	r3, [pc, #132]	@ (8104dc0 <MX_USART1_UART_Init+0xa8>)
 8104d3a:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8104d3e:	605a      	str	r2, [r3, #4]
 8104d40:	4b1f      	ldr	r3, [pc, #124]	@ (8104dc0 <MX_USART1_UART_Init+0xa8>)
 8104d42:	2200      	movs	r2, #0
 8104d44:	609a      	str	r2, [r3, #8]
 8104d46:	4b1e      	ldr	r3, [pc, #120]	@ (8104dc0 <MX_USART1_UART_Init+0xa8>)
 8104d48:	2200      	movs	r2, #0
 8104d4a:	60da      	str	r2, [r3, #12]
 8104d4c:	4b1c      	ldr	r3, [pc, #112]	@ (8104dc0 <MX_USART1_UART_Init+0xa8>)
 8104d4e:	2200      	movs	r2, #0
 8104d50:	611a      	str	r2, [r3, #16]
 8104d52:	4b1b      	ldr	r3, [pc, #108]	@ (8104dc0 <MX_USART1_UART_Init+0xa8>)
 8104d54:	220c      	movs	r2, #12
 8104d56:	615a      	str	r2, [r3, #20]
 8104d58:	4b19      	ldr	r3, [pc, #100]	@ (8104dc0 <MX_USART1_UART_Init+0xa8>)
 8104d5a:	2200      	movs	r2, #0
 8104d5c:	619a      	str	r2, [r3, #24]
 8104d5e:	4b18      	ldr	r3, [pc, #96]	@ (8104dc0 <MX_USART1_UART_Init+0xa8>)
 8104d60:	2200      	movs	r2, #0
 8104d62:	61da      	str	r2, [r3, #28]
 8104d64:	4b16      	ldr	r3, [pc, #88]	@ (8104dc0 <MX_USART1_UART_Init+0xa8>)
 8104d66:	2200      	movs	r2, #0
 8104d68:	621a      	str	r2, [r3, #32]
 8104d6a:	4b15      	ldr	r3, [pc, #84]	@ (8104dc0 <MX_USART1_UART_Init+0xa8>)
 8104d6c:	2200      	movs	r2, #0
 8104d6e:	625a      	str	r2, [r3, #36]	@ 0x24
 8104d70:	4b13      	ldr	r3, [pc, #76]	@ (8104dc0 <MX_USART1_UART_Init+0xa8>)
 8104d72:	2200      	movs	r2, #0
 8104d74:	629a      	str	r2, [r3, #40]	@ 0x28
 8104d76:	4812      	ldr	r0, [pc, #72]	@ (8104dc0 <MX_USART1_UART_Init+0xa8>)
 8104d78:	f004 f95e 	bl	8109038 <HAL_UART_Init>
 8104d7c:	4603      	mov	r3, r0
 8104d7e:	2b00      	cmp	r3, #0
 8104d80:	d001      	beq.n	8104d86 <MX_USART1_UART_Init+0x6e>
 8104d82:	f000 f9ab 	bl	81050dc <Error_Handler>
 8104d86:	2100      	movs	r1, #0
 8104d88:	480d      	ldr	r0, [pc, #52]	@ (8104dc0 <MX_USART1_UART_Init+0xa8>)
 8104d8a:	f006 fcd4 	bl	810b736 <HAL_UARTEx_SetTxFifoThreshold>
 8104d8e:	4603      	mov	r3, r0
 8104d90:	2b00      	cmp	r3, #0
 8104d92:	d001      	beq.n	8104d98 <MX_USART1_UART_Init+0x80>
 8104d94:	f000 f9a2 	bl	81050dc <Error_Handler>
 8104d98:	2100      	movs	r1, #0
 8104d9a:	4809      	ldr	r0, [pc, #36]	@ (8104dc0 <MX_USART1_UART_Init+0xa8>)
 8104d9c:	f006 fd09 	bl	810b7b2 <HAL_UARTEx_SetRxFifoThreshold>
 8104da0:	4603      	mov	r3, r0
 8104da2:	2b00      	cmp	r3, #0
 8104da4:	d001      	beq.n	8104daa <MX_USART1_UART_Init+0x92>
 8104da6:	f000 f999 	bl	81050dc <Error_Handler>
 8104daa:	4805      	ldr	r0, [pc, #20]	@ (8104dc0 <MX_USART1_UART_Init+0xa8>)
 8104dac:	f006 fc8a 	bl	810b6c4 <HAL_UARTEx_DisableFifoMode>
 8104db0:	4603      	mov	r3, r0
 8104db2:	2b00      	cmp	r3, #0
 8104db4:	d001      	beq.n	8104dba <MX_USART1_UART_Init+0xa2>
 8104db6:	f000 f991 	bl	81050dc <Error_Handler>
 8104dba:	bf00      	nop
 8104dbc:	bd80      	pop	{r7, pc}
 8104dbe:	bf00      	nop
 8104dc0:	100003dc 	.word	0x100003dc
 8104dc4:	40011000 	.word	0x40011000

08104dc8 <MX_USART2_UART_Init>:
 8104dc8:	b580      	push	{r7, lr}
 8104dca:	af00      	add	r7, sp, #0
 8104dcc:	2300      	movs	r3, #0
 8104dce:	2200      	movs	r2, #0
 8104dd0:	2112      	movs	r1, #18
 8104dd2:	2011      	movs	r0, #17
 8104dd4:	f009 fc16 	bl	810e604 <ResMgr_Request>
 8104dd8:	4603      	mov	r3, r0
 8104dda:	2b00      	cmp	r3, #0
 8104ddc:	d001      	beq.n	8104de2 <MX_USART2_UART_Init+0x1a>
 8104dde:	f000 f97d 	bl	81050dc <Error_Handler>
 8104de2:	4b23      	ldr	r3, [pc, #140]	@ (8104e70 <MX_USART2_UART_Init+0xa8>)
 8104de4:	4a23      	ldr	r2, [pc, #140]	@ (8104e74 <MX_USART2_UART_Init+0xac>)
 8104de6:	601a      	str	r2, [r3, #0]
 8104de8:	4b21      	ldr	r3, [pc, #132]	@ (8104e70 <MX_USART2_UART_Init+0xa8>)
 8104dea:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8104dee:	605a      	str	r2, [r3, #4]
 8104df0:	4b1f      	ldr	r3, [pc, #124]	@ (8104e70 <MX_USART2_UART_Init+0xa8>)
 8104df2:	2200      	movs	r2, #0
 8104df4:	609a      	str	r2, [r3, #8]
 8104df6:	4b1e      	ldr	r3, [pc, #120]	@ (8104e70 <MX_USART2_UART_Init+0xa8>)
 8104df8:	2200      	movs	r2, #0
 8104dfa:	60da      	str	r2, [r3, #12]
 8104dfc:	4b1c      	ldr	r3, [pc, #112]	@ (8104e70 <MX_USART2_UART_Init+0xa8>)
 8104dfe:	2200      	movs	r2, #0
 8104e00:	611a      	str	r2, [r3, #16]
 8104e02:	4b1b      	ldr	r3, [pc, #108]	@ (8104e70 <MX_USART2_UART_Init+0xa8>)
 8104e04:	220c      	movs	r2, #12
 8104e06:	615a      	str	r2, [r3, #20]
 8104e08:	4b19      	ldr	r3, [pc, #100]	@ (8104e70 <MX_USART2_UART_Init+0xa8>)
 8104e0a:	2200      	movs	r2, #0
 8104e0c:	619a      	str	r2, [r3, #24]
 8104e0e:	4b18      	ldr	r3, [pc, #96]	@ (8104e70 <MX_USART2_UART_Init+0xa8>)
 8104e10:	2200      	movs	r2, #0
 8104e12:	61da      	str	r2, [r3, #28]
 8104e14:	4b16      	ldr	r3, [pc, #88]	@ (8104e70 <MX_USART2_UART_Init+0xa8>)
 8104e16:	2200      	movs	r2, #0
 8104e18:	621a      	str	r2, [r3, #32]
 8104e1a:	4b15      	ldr	r3, [pc, #84]	@ (8104e70 <MX_USART2_UART_Init+0xa8>)
 8104e1c:	2200      	movs	r2, #0
 8104e1e:	625a      	str	r2, [r3, #36]	@ 0x24
 8104e20:	4b13      	ldr	r3, [pc, #76]	@ (8104e70 <MX_USART2_UART_Init+0xa8>)
 8104e22:	2200      	movs	r2, #0
 8104e24:	629a      	str	r2, [r3, #40]	@ 0x28
 8104e26:	4812      	ldr	r0, [pc, #72]	@ (8104e70 <MX_USART2_UART_Init+0xa8>)
 8104e28:	f004 f906 	bl	8109038 <HAL_UART_Init>
 8104e2c:	4603      	mov	r3, r0
 8104e2e:	2b00      	cmp	r3, #0
 8104e30:	d001      	beq.n	8104e36 <MX_USART2_UART_Init+0x6e>
 8104e32:	f000 f953 	bl	81050dc <Error_Handler>
 8104e36:	2100      	movs	r1, #0
 8104e38:	480d      	ldr	r0, [pc, #52]	@ (8104e70 <MX_USART2_UART_Init+0xa8>)
 8104e3a:	f006 fc7c 	bl	810b736 <HAL_UARTEx_SetTxFifoThreshold>
 8104e3e:	4603      	mov	r3, r0
 8104e40:	2b00      	cmp	r3, #0
 8104e42:	d001      	beq.n	8104e48 <MX_USART2_UART_Init+0x80>
 8104e44:	f000 f94a 	bl	81050dc <Error_Handler>
 8104e48:	2100      	movs	r1, #0
 8104e4a:	4809      	ldr	r0, [pc, #36]	@ (8104e70 <MX_USART2_UART_Init+0xa8>)
 8104e4c:	f006 fcb1 	bl	810b7b2 <HAL_UARTEx_SetRxFifoThreshold>
 8104e50:	4603      	mov	r3, r0
 8104e52:	2b00      	cmp	r3, #0
 8104e54:	d001      	beq.n	8104e5a <MX_USART2_UART_Init+0x92>
 8104e56:	f000 f941 	bl	81050dc <Error_Handler>
 8104e5a:	4805      	ldr	r0, [pc, #20]	@ (8104e70 <MX_USART2_UART_Init+0xa8>)
 8104e5c:	f006 fc32 	bl	810b6c4 <HAL_UARTEx_DisableFifoMode>
 8104e60:	4603      	mov	r3, r0
 8104e62:	2b00      	cmp	r3, #0
 8104e64:	d001      	beq.n	8104e6a <MX_USART2_UART_Init+0xa2>
 8104e66:	f000 f939 	bl	81050dc <Error_Handler>
 8104e6a:	bf00      	nop
 8104e6c:	bd80      	pop	{r7, pc}
 8104e6e:	bf00      	nop
 8104e70:	10000470 	.word	0x10000470
 8104e74:	40004400 	.word	0x40004400

08104e78 <MX_USART3_UART_Init>:
 8104e78:	b580      	push	{r7, lr}
 8104e7a:	af00      	add	r7, sp, #0
 8104e7c:	2300      	movs	r3, #0
 8104e7e:	2200      	movs	r2, #0
 8104e80:	2112      	movs	r1, #18
 8104e82:	2012      	movs	r0, #18
 8104e84:	f009 fbbe 	bl	810e604 <ResMgr_Request>
 8104e88:	4603      	mov	r3, r0
 8104e8a:	2b00      	cmp	r3, #0
 8104e8c:	d001      	beq.n	8104e92 <MX_USART3_UART_Init+0x1a>
 8104e8e:	f000 f925 	bl	81050dc <Error_Handler>
 8104e92:	4b23      	ldr	r3, [pc, #140]	@ (8104f20 <MX_USART3_UART_Init+0xa8>)
 8104e94:	4a23      	ldr	r2, [pc, #140]	@ (8104f24 <MX_USART3_UART_Init+0xac>)
 8104e96:	601a      	str	r2, [r3, #0]
 8104e98:	4b21      	ldr	r3, [pc, #132]	@ (8104f20 <MX_USART3_UART_Init+0xa8>)
 8104e9a:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8104e9e:	605a      	str	r2, [r3, #4]
 8104ea0:	4b1f      	ldr	r3, [pc, #124]	@ (8104f20 <MX_USART3_UART_Init+0xa8>)
 8104ea2:	2200      	movs	r2, #0
 8104ea4:	609a      	str	r2, [r3, #8]
 8104ea6:	4b1e      	ldr	r3, [pc, #120]	@ (8104f20 <MX_USART3_UART_Init+0xa8>)
 8104ea8:	2200      	movs	r2, #0
 8104eaa:	60da      	str	r2, [r3, #12]
 8104eac:	4b1c      	ldr	r3, [pc, #112]	@ (8104f20 <MX_USART3_UART_Init+0xa8>)
 8104eae:	2200      	movs	r2, #0
 8104eb0:	611a      	str	r2, [r3, #16]
 8104eb2:	4b1b      	ldr	r3, [pc, #108]	@ (8104f20 <MX_USART3_UART_Init+0xa8>)
 8104eb4:	220c      	movs	r2, #12
 8104eb6:	615a      	str	r2, [r3, #20]
 8104eb8:	4b19      	ldr	r3, [pc, #100]	@ (8104f20 <MX_USART3_UART_Init+0xa8>)
 8104eba:	2200      	movs	r2, #0
 8104ebc:	619a      	str	r2, [r3, #24]
 8104ebe:	4b18      	ldr	r3, [pc, #96]	@ (8104f20 <MX_USART3_UART_Init+0xa8>)
 8104ec0:	2200      	movs	r2, #0
 8104ec2:	61da      	str	r2, [r3, #28]
 8104ec4:	4b16      	ldr	r3, [pc, #88]	@ (8104f20 <MX_USART3_UART_Init+0xa8>)
 8104ec6:	2200      	movs	r2, #0
 8104ec8:	621a      	str	r2, [r3, #32]
 8104eca:	4b15      	ldr	r3, [pc, #84]	@ (8104f20 <MX_USART3_UART_Init+0xa8>)
 8104ecc:	2200      	movs	r2, #0
 8104ece:	625a      	str	r2, [r3, #36]	@ 0x24
 8104ed0:	4b13      	ldr	r3, [pc, #76]	@ (8104f20 <MX_USART3_UART_Init+0xa8>)
 8104ed2:	2200      	movs	r2, #0
 8104ed4:	629a      	str	r2, [r3, #40]	@ 0x28
 8104ed6:	4812      	ldr	r0, [pc, #72]	@ (8104f20 <MX_USART3_UART_Init+0xa8>)
 8104ed8:	f004 f8ae 	bl	8109038 <HAL_UART_Init>
 8104edc:	4603      	mov	r3, r0
 8104ede:	2b00      	cmp	r3, #0
 8104ee0:	d001      	beq.n	8104ee6 <MX_USART3_UART_Init+0x6e>
 8104ee2:	f000 f8fb 	bl	81050dc <Error_Handler>
 8104ee6:	2100      	movs	r1, #0
 8104ee8:	480d      	ldr	r0, [pc, #52]	@ (8104f20 <MX_USART3_UART_Init+0xa8>)
 8104eea:	f006 fc24 	bl	810b736 <HAL_UARTEx_SetTxFifoThreshold>
 8104eee:	4603      	mov	r3, r0
 8104ef0:	2b00      	cmp	r3, #0
 8104ef2:	d001      	beq.n	8104ef8 <MX_USART3_UART_Init+0x80>
 8104ef4:	f000 f8f2 	bl	81050dc <Error_Handler>
 8104ef8:	2100      	movs	r1, #0
 8104efa:	4809      	ldr	r0, [pc, #36]	@ (8104f20 <MX_USART3_UART_Init+0xa8>)
 8104efc:	f006 fc59 	bl	810b7b2 <HAL_UARTEx_SetRxFifoThreshold>
 8104f00:	4603      	mov	r3, r0
 8104f02:	2b00      	cmp	r3, #0
 8104f04:	d001      	beq.n	8104f0a <MX_USART3_UART_Init+0x92>
 8104f06:	f000 f8e9 	bl	81050dc <Error_Handler>
 8104f0a:	4805      	ldr	r0, [pc, #20]	@ (8104f20 <MX_USART3_UART_Init+0xa8>)
 8104f0c:	f006 fbda 	bl	810b6c4 <HAL_UARTEx_DisableFifoMode>
 8104f10:	4603      	mov	r3, r0
 8104f12:	2b00      	cmp	r3, #0
 8104f14:	d001      	beq.n	8104f1a <MX_USART3_UART_Init+0xa2>
 8104f16:	f000 f8e1 	bl	81050dc <Error_Handler>
 8104f1a:	bf00      	nop
 8104f1c:	bd80      	pop	{r7, pc}
 8104f1e:	bf00      	nop
 8104f20:	10000504 	.word	0x10000504
 8104f24:	40004800 	.word	0x40004800

08104f28 <MX_GPIO_Init>:
 8104f28:	b580      	push	{r7, lr}
 8104f2a:	b08a      	sub	sp, #40	@ 0x28
 8104f2c:	af00      	add	r7, sp, #0
 8104f2e:	f107 0314 	add.w	r3, r7, #20
 8104f32:	2200      	movs	r2, #0
 8104f34:	601a      	str	r2, [r3, #0]
 8104f36:	605a      	str	r2, [r3, #4]
 8104f38:	609a      	str	r2, [r3, #8]
 8104f3a:	60da      	str	r2, [r3, #12]
 8104f3c:	611a      	str	r2, [r3, #16]
 8104f3e:	4b4a      	ldr	r3, [pc, #296]	@ (8105068 <MX_GPIO_Init+0x140>)
 8104f40:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8104f44:	4a48      	ldr	r2, [pc, #288]	@ (8105068 <MX_GPIO_Init+0x140>)
 8104f46:	f043 0301 	orr.w	r3, r3, #1
 8104f4a:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8104f4e:	4b46      	ldr	r3, [pc, #280]	@ (8105068 <MX_GPIO_Init+0x140>)
 8104f50:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8104f54:	f003 0301 	and.w	r3, r3, #1
 8104f58:	613b      	str	r3, [r7, #16]
 8104f5a:	693b      	ldr	r3, [r7, #16]
 8104f5c:	4b42      	ldr	r3, [pc, #264]	@ (8105068 <MX_GPIO_Init+0x140>)
 8104f5e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8104f62:	4a41      	ldr	r2, [pc, #260]	@ (8105068 <MX_GPIO_Init+0x140>)
 8104f64:	f043 0302 	orr.w	r3, r3, #2
 8104f68:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8104f6c:	4b3e      	ldr	r3, [pc, #248]	@ (8105068 <MX_GPIO_Init+0x140>)
 8104f6e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8104f72:	f003 0302 	and.w	r3, r3, #2
 8104f76:	60fb      	str	r3, [r7, #12]
 8104f78:	68fb      	ldr	r3, [r7, #12]
 8104f7a:	4b3b      	ldr	r3, [pc, #236]	@ (8105068 <MX_GPIO_Init+0x140>)
 8104f7c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8104f80:	4a39      	ldr	r2, [pc, #228]	@ (8105068 <MX_GPIO_Init+0x140>)
 8104f82:	f043 0308 	orr.w	r3, r3, #8
 8104f86:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8104f8a:	4b37      	ldr	r3, [pc, #220]	@ (8105068 <MX_GPIO_Init+0x140>)
 8104f8c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8104f90:	f003 0308 	and.w	r3, r3, #8
 8104f94:	60bb      	str	r3, [r7, #8]
 8104f96:	68bb      	ldr	r3, [r7, #8]
 8104f98:	4b33      	ldr	r3, [pc, #204]	@ (8105068 <MX_GPIO_Init+0x140>)
 8104f9a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8104f9e:	4a32      	ldr	r2, [pc, #200]	@ (8105068 <MX_GPIO_Init+0x140>)
 8104fa0:	f043 0304 	orr.w	r3, r3, #4
 8104fa4:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8104fa8:	4b2f      	ldr	r3, [pc, #188]	@ (8105068 <MX_GPIO_Init+0x140>)
 8104faa:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8104fae:	f003 0304 	and.w	r3, r3, #4
 8104fb2:	607b      	str	r3, [r7, #4]
 8104fb4:	687b      	ldr	r3, [r7, #4]
 8104fb6:	4b2c      	ldr	r3, [pc, #176]	@ (8105068 <MX_GPIO_Init+0x140>)
 8104fb8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8104fbc:	4a2a      	ldr	r2, [pc, #168]	@ (8105068 <MX_GPIO_Init+0x140>)
 8104fbe:	f043 0310 	orr.w	r3, r3, #16
 8104fc2:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8104fc6:	4b28      	ldr	r3, [pc, #160]	@ (8105068 <MX_GPIO_Init+0x140>)
 8104fc8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8104fcc:	f003 0310 	and.w	r3, r3, #16
 8104fd0:	603b      	str	r3, [r7, #0]
 8104fd2:	683b      	ldr	r3, [r7, #0]
 8104fd4:	2200      	movs	r2, #0
 8104fd6:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8104fda:	4824      	ldr	r0, [pc, #144]	@ (810506c <MX_GPIO_Init+0x144>)
 8104fdc:	f001 fcbc 	bl	8106958 <HAL_GPIO_WritePin>
 8104fe0:	2200      	movs	r2, #0
 8104fe2:	2102      	movs	r1, #2
 8104fe4:	4822      	ldr	r0, [pc, #136]	@ (8105070 <MX_GPIO_Init+0x148>)
 8104fe6:	f001 fcb7 	bl	8106958 <HAL_GPIO_WritePin>
 8104fea:	f44f 4330 	mov.w	r3, #45056	@ 0xb000
 8104fee:	617b      	str	r3, [r7, #20]
 8104ff0:	2302      	movs	r3, #2
 8104ff2:	61bb      	str	r3, [r7, #24]
 8104ff4:	2300      	movs	r3, #0
 8104ff6:	61fb      	str	r3, [r7, #28]
 8104ff8:	2300      	movs	r3, #0
 8104ffa:	623b      	str	r3, [r7, #32]
 8104ffc:	2305      	movs	r3, #5
 8104ffe:	627b      	str	r3, [r7, #36]	@ 0x24
 8105000:	f107 0314 	add.w	r3, r7, #20
 8105004:	4619      	mov	r1, r3
 8105006:	4819      	ldr	r0, [pc, #100]	@ (810506c <MX_GPIO_Init+0x144>)
 8105008:	f001 faf6 	bl	81065f8 <HAL_GPIO_Init>
 810500c:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 8105010:	617b      	str	r3, [r7, #20]
 8105012:	2301      	movs	r3, #1
 8105014:	61bb      	str	r3, [r7, #24]
 8105016:	2300      	movs	r3, #0
 8105018:	61fb      	str	r3, [r7, #28]
 810501a:	2300      	movs	r3, #0
 810501c:	623b      	str	r3, [r7, #32]
 810501e:	f107 0314 	add.w	r3, r7, #20
 8105022:	4619      	mov	r1, r3
 8105024:	4811      	ldr	r0, [pc, #68]	@ (810506c <MX_GPIO_Init+0x144>)
 8105026:	f001 fae7 	bl	81065f8 <HAL_GPIO_Init>
 810502a:	f44f 7370 	mov.w	r3, #960	@ 0x3c0
 810502e:	617b      	str	r3, [r7, #20]
 8105030:	2300      	movs	r3, #0
 8105032:	61bb      	str	r3, [r7, #24]
 8105034:	2302      	movs	r3, #2
 8105036:	61fb      	str	r3, [r7, #28]
 8105038:	f107 0314 	add.w	r3, r7, #20
 810503c:	4619      	mov	r1, r3
 810503e:	480d      	ldr	r0, [pc, #52]	@ (8105074 <MX_GPIO_Init+0x14c>)
 8105040:	f001 fada 	bl	81065f8 <HAL_GPIO_Init>
 8105044:	2302      	movs	r3, #2
 8105046:	617b      	str	r3, [r7, #20]
 8105048:	2301      	movs	r3, #1
 810504a:	61bb      	str	r3, [r7, #24]
 810504c:	2300      	movs	r3, #0
 810504e:	61fb      	str	r3, [r7, #28]
 8105050:	2300      	movs	r3, #0
 8105052:	623b      	str	r3, [r7, #32]
 8105054:	f107 0314 	add.w	r3, r7, #20
 8105058:	4619      	mov	r1, r3
 810505a:	4805      	ldr	r0, [pc, #20]	@ (8105070 <MX_GPIO_Init+0x148>)
 810505c:	f001 facc 	bl	81065f8 <HAL_GPIO_Init>
 8105060:	bf00      	nop
 8105062:	3728      	adds	r7, #40	@ 0x28
 8105064:	46bd      	mov	sp, r7
 8105066:	bd80      	pop	{r7, pc}
 8105068:	58024400 	.word	0x58024400
 810506c:	58020400 	.word	0x58020400
 8105070:	58021000 	.word	0x58021000
 8105074:	58020800 	.word	0x58020800

08105078 <StartDefaultTask>:
 8105078:	b580      	push	{r7, lr}
 810507a:	b082      	sub	sp, #8
 810507c:	af00      	add	r7, sp, #0
 810507e:	6078      	str	r0, [r7, #4]
 8105080:	f006 fec6 	bl	810be10 <xPortGetFreeHeapSize>
 8105084:	4603      	mov	r3, r0
 8105086:	4619      	mov	r1, r3
 8105088:	4808      	ldr	r0, [pc, #32]	@ (81050ac <StartDefaultTask+0x34>)
 810508a:	f00a fa8d 	bl	810f5a8 <iprintf>
 810508e:	f000 f8bf 	bl	8105210 <cpp_app_main>
 8105092:	4807      	ldr	r0, [pc, #28]	@ (81050b0 <StartDefaultTask+0x38>)
 8105094:	f00a fa88 	bl	810f5a8 <iprintf>
 8105098:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 810509c:	4805      	ldr	r0, [pc, #20]	@ (81050b4 <StartDefaultTask+0x3c>)
 810509e:	f001 fc74 	bl	810698a <HAL_GPIO_TogglePin>
 81050a2:	2064      	movs	r0, #100	@ 0x64
 81050a4:	f006 fd32 	bl	810bb0c <osDelay>
 81050a8:	bf00      	nop
 81050aa:	e7f5      	b.n	8105098 <StartDefaultTask+0x20>
 81050ac:	08111760 	.word	0x08111760
 81050b0:	08111780 	.word	0x08111780
 81050b4:	58020400 	.word	0x58020400

081050b8 <HAL_TIM_PeriodElapsedCallback>:
 81050b8:	b580      	push	{r7, lr}
 81050ba:	b082      	sub	sp, #8
 81050bc:	af00      	add	r7, sp, #0
 81050be:	6078      	str	r0, [r7, #4]
 81050c0:	687b      	ldr	r3, [r7, #4]
 81050c2:	681b      	ldr	r3, [r3, #0]
 81050c4:	4a04      	ldr	r2, [pc, #16]	@ (81050d8 <HAL_TIM_PeriodElapsedCallback+0x20>)
 81050c6:	4293      	cmp	r3, r2
 81050c8:	d101      	bne.n	81050ce <HAL_TIM_PeriodElapsedCallback+0x16>
 81050ca:	f000 fc31 	bl	8105930 <HAL_IncTick>
 81050ce:	bf00      	nop
 81050d0:	3708      	adds	r7, #8
 81050d2:	46bd      	mov	sp, r7
 81050d4:	bd80      	pop	{r7, pc}
 81050d6:	bf00      	nop
 81050d8:	40001000 	.word	0x40001000

081050dc <Error_Handler>:
 81050dc:	b480      	push	{r7}
 81050de:	af00      	add	r7, sp, #0
 81050e0:	b672      	cpsid	i
 81050e2:	bf00      	nop
 81050e4:	bf00      	nop
 81050e6:	e7fd      	b.n	81050e4 <Error_Handler+0x8>

081050e8 <MX_RESMGR_UTILITY_Init>:
 81050e8:	b580      	push	{r7, lr}
 81050ea:	af00      	add	r7, sp, #0
 81050ec:	4905      	ldr	r1, [pc, #20]	@ (8105104 <MX_RESMGR_UTILITY_Init+0x1c>)
 81050ee:	4806      	ldr	r0, [pc, #24]	@ (8105108 <MX_RESMGR_UTILITY_Init+0x20>)
 81050f0:	f009 f9ea 	bl	810e4c8 <ResMgr_Init>
 81050f4:	4603      	mov	r3, r0
 81050f6:	2b00      	cmp	r3, #0
 81050f8:	d001      	beq.n	81050fe <MX_RESMGR_UTILITY_Init+0x16>
 81050fa:	f7ff ffef 	bl	81050dc <Error_Handler>
 81050fe:	bf00      	nop
 8105100:	bd80      	pop	{r7, pc}
 8105102:	bf00      	nop
 8105104:	08105159 	.word	0x08105159
 8105108:	0810510d 	.word	0x0810510d

0810510c <MX_RESMGR_UTILITY_SendMsg>:
 810510c:	b480      	push	{r7}
 810510e:	b083      	sub	sp, #12
 8105110:	af00      	add	r7, sp, #0
 8105112:	6078      	str	r0, [r7, #4]
 8105114:	6039      	str	r1, [r7, #0]
 8105116:	683b      	ldr	r3, [r7, #0]
 8105118:	2b05      	cmp	r3, #5
 810511a:	d811      	bhi.n	8105140 <MX_RESMGR_UTILITY_SendMsg+0x34>
 810511c:	683b      	ldr	r3, [r7, #0]
 810511e:	2b05      	cmp	r3, #5
 8105120:	d811      	bhi.n	8105146 <MX_RESMGR_UTILITY_SendMsg+0x3a>
 8105122:	a201      	add	r2, pc, #4	@ (adr r2, 8105128 <MX_RESMGR_UTILITY_SendMsg+0x1c>)
 8105124:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8105128:	08105147 	.word	0x08105147
 810512c:	08105147 	.word	0x08105147
 8105130:	08105147 	.word	0x08105147
 8105134:	08105147 	.word	0x08105147
 8105138:	08105147 	.word	0x08105147
 810513c:	08105147 	.word	0x08105147
 8105140:	683b      	ldr	r3, [r7, #0]
 8105142:	2bff      	cmp	r3, #255	@ 0xff
 8105144:	d001      	beq.n	810514a <MX_RESMGR_UTILITY_SendMsg+0x3e>
 8105146:	bf00      	nop
 8105148:	e000      	b.n	810514c <MX_RESMGR_UTILITY_SendMsg+0x40>
 810514a:	bf00      	nop
 810514c:	bf00      	nop
 810514e:	370c      	adds	r7, #12
 8105150:	46bd      	mov	sp, r7
 8105152:	f85d 7b04 	ldr.w	r7, [sp], #4
 8105156:	4770      	bx	lr

08105158 <MX_RESMGR_UTILITY_Callback>:
 8105158:	b480      	push	{r7}
 810515a:	b083      	sub	sp, #12
 810515c:	af00      	add	r7, sp, #0
 810515e:	6078      	str	r0, [r7, #4]
 8105160:	6039      	str	r1, [r7, #0]
 8105162:	683b      	ldr	r3, [r7, #0]
 8105164:	2b15      	cmp	r3, #21
 8105166:	d831      	bhi.n	81051cc <MX_RESMGR_UTILITY_Callback+0x74>
 8105168:	683b      	ldr	r3, [r7, #0]
 810516a:	2b15      	cmp	r3, #21
 810516c:	d831      	bhi.n	81051d2 <MX_RESMGR_UTILITY_Callback+0x7a>
 810516e:	a201      	add	r2, pc, #4	@ (adr r2, 8105174 <MX_RESMGR_UTILITY_Callback+0x1c>)
 8105170:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8105174:	081051d3 	.word	0x081051d3
 8105178:	081051d3 	.word	0x081051d3
 810517c:	081051d3 	.word	0x081051d3
 8105180:	081051d3 	.word	0x081051d3
 8105184:	081051d3 	.word	0x081051d3
 8105188:	081051d3 	.word	0x081051d3
 810518c:	081051d3 	.word	0x081051d3
 8105190:	081051d3 	.word	0x081051d3
 8105194:	081051d3 	.word	0x081051d3
 8105198:	081051d3 	.word	0x081051d3
 810519c:	081051d3 	.word	0x081051d3
 81051a0:	081051d3 	.word	0x081051d3
 81051a4:	081051d3 	.word	0x081051d3
 81051a8:	081051d3 	.word	0x081051d3
 81051ac:	081051d3 	.word	0x081051d3
 81051b0:	081051d3 	.word	0x081051d3
 81051b4:	081051d3 	.word	0x081051d3
 81051b8:	081051d3 	.word	0x081051d3
 81051bc:	081051d3 	.word	0x081051d3
 81051c0:	081051d3 	.word	0x081051d3
 81051c4:	081051d3 	.word	0x081051d3
 81051c8:	081051d3 	.word	0x081051d3
 81051cc:	683b      	ldr	r3, [r7, #0]
 81051ce:	2bff      	cmp	r3, #255	@ 0xff
 81051d0:	d001      	beq.n	81051d6 <MX_RESMGR_UTILITY_Callback+0x7e>
 81051d2:	bf00      	nop
 81051d4:	e000      	b.n	81051d8 <MX_RESMGR_UTILITY_Callback+0x80>
 81051d6:	bf00      	nop
 81051d8:	bf00      	nop
 81051da:	370c      	adds	r7, #12
 81051dc:	46bd      	mov	sp, r7
 81051de:	f85d 7b04 	ldr.w	r7, [sp], #4
 81051e2:	4770      	bx	lr

081051e4 <_write>:

extern "C" void cpp_app_main(void);
extern "C" void MyTaskFunction(void *argument);  // Forward declaration

// Provide _write syscall for printf redirection
extern "C" int _write(int file, char *ptr, int len) {
 81051e4:	b580      	push	{r7, lr}
 81051e6:	b084      	sub	sp, #16
 81051e8:	af00      	add	r7, sp, #0
 81051ea:	60f8      	str	r0, [r7, #12]
 81051ec:	60b9      	str	r1, [r7, #8]
 81051ee:	607a      	str	r2, [r7, #4]
    HAL_UART_Transmit(&huart3, (uint8_t*)ptr, len, HAL_MAX_DELAY);
 81051f0:	687b      	ldr	r3, [r7, #4]
 81051f2:	b29a      	uxth	r2, r3
 81051f4:	f04f 33ff 	mov.w	r3, #4294967295
 81051f8:	68b9      	ldr	r1, [r7, #8]
 81051fa:	4804      	ldr	r0, [pc, #16]	@ (810520c <_write+0x28>)
 81051fc:	f003 ff6c 	bl	81090d8 <HAL_UART_Transmit>
    return len;
 8105200:	687b      	ldr	r3, [r7, #4]
}
 8105202:	4618      	mov	r0, r3
 8105204:	3710      	adds	r7, #16
 8105206:	46bd      	mov	sp, r7
 8105208:	bd80      	pop	{r7, pc}
 810520a:	bf00      	nop
 810520c:	10000504 	.word	0x10000504

08105210 <cpp_app_main>:



// 🚀 Application entry point called from StartDefaultTask
extern "C" void cpp_app_main(void)
{
 8105210:	b580      	push	{r7, lr}
 8105212:	b08a      	sub	sp, #40	@ 0x28
 8105214:	af00      	add	r7, sp, #0
    printf("cpp_app_main started\n");
 8105216:	4812      	ldr	r0, [pc, #72]	@ (8105260 <cpp_app_main+0x50>)
 8105218:	f00a fa36 	bl	810f688 <puts>

    // Create a new task
    const osThreadAttr_t myTask_attributes = {
 810521c:	463b      	mov	r3, r7
 810521e:	2224      	movs	r2, #36	@ 0x24
 8105220:	2100      	movs	r1, #0
 8105222:	4618      	mov	r0, r3
 8105224:	f00a fb2a 	bl	810f87c <memset>
 8105228:	4b0e      	ldr	r3, [pc, #56]	@ (8105264 <cpp_app_main+0x54>)
 810522a:	603b      	str	r3, [r7, #0]
 810522c:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8105230:	617b      	str	r3, [r7, #20]
 8105232:	2318      	movs	r3, #24
 8105234:	61bb      	str	r3, [r7, #24]
        .name = "myTask",
        .stack_size = 512 * 4,  // 2KB stack
        .priority = (osPriority_t) osPriorityNormal,
    };

    osThreadId_t myTaskHandle = osThreadNew(MyTaskFunction, nullptr, &myTask_attributes);
 8105236:	463b      	mov	r3, r7
 8105238:	461a      	mov	r2, r3
 810523a:	2100      	movs	r1, #0
 810523c:	480a      	ldr	r0, [pc, #40]	@ (8105268 <cpp_app_main+0x58>)
 810523e:	f006 fbd3 	bl	810b9e8 <osThreadNew>
 8105242:	6278      	str	r0, [r7, #36]	@ 0x24
    if (myTaskHandle == nullptr) {
 8105244:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8105246:	2b00      	cmp	r3, #0
 8105248:	d103      	bne.n	8105252 <cpp_app_main+0x42>
        printf("Failed to create MyTaskFunction\n");
 810524a:	4808      	ldr	r0, [pc, #32]	@ (810526c <cpp_app_main+0x5c>)
 810524c:	f00a fa1c 	bl	810f688 <puts>
        printf("MyTaskFunction created successfully\n");
    }

    // You can return here — or sleep forever if this is the main task
    // osDelay(osWaitForever); // Optional if not returning
}
 8105250:	e002      	b.n	8105258 <cpp_app_main+0x48>
        printf("MyTaskFunction created successfully\n");
 8105252:	4807      	ldr	r0, [pc, #28]	@ (8105270 <cpp_app_main+0x60>)
 8105254:	f00a fa18 	bl	810f688 <puts>
}
 8105258:	bf00      	nop
 810525a:	3728      	adds	r7, #40	@ 0x28
 810525c:	46bd      	mov	sp, r7
 810525e:	bd80      	pop	{r7, pc}
 8105260:	08111794 	.word	0x08111794
 8105264:	081117ac 	.word	0x081117ac
 8105268:	08105275 	.word	0x08105275
 810526c:	081117b4 	.word	0x081117b4
 8105270:	081117d4 	.word	0x081117d4

08105274 <MyTaskFunction>:

extern  void MyTaskFunction(void *argument)
{
 8105274:	b590      	push	{r4, r7, lr}
 8105276:	b0e9      	sub	sp, #420	@ 0x1a4
 8105278:	af00      	add	r7, sp, #0
 810527a:	f507 73d0 	add.w	r3, r7, #416	@ 0x1a0
 810527e:	f5a3 73ce 	sub.w	r3, r3, #412	@ 0x19c
 8105282:	6018      	str	r0, [r3, #0]


	DayCam* dayCam = new DayCam(&huart1);
 8105284:	f44f 7090 	mov.w	r0, #288	@ 0x120
 8105288:	f009 face 	bl	810e828 <_Znwj>
 810528c:	4603      	mov	r3, r0
 810528e:	461c      	mov	r4, r3
 8105290:	4912      	ldr	r1, [pc, #72]	@ (81052dc <MyTaskFunction+0x68>)
 8105292:	4620      	mov	r0, r4
 8105294:	f7fc fc70 	bl	8101b78 <_ZN6DayCamC1EP20__UART_HandleTypeDef>
 8105298:	f8c7 419c 	str.w	r4, [r7, #412]	@ 0x19c
	Client client(&huart3);
 810529c:	f107 0308 	add.w	r3, r7, #8
 81052a0:	490f      	ldr	r1, [pc, #60]	@ (81052e0 <MyTaskFunction+0x6c>)
 81052a2:	4618      	mov	r0, r3
 81052a4:	f7fb fef0 	bl	8101088 <_ZN6ClientC1EP20__UART_HandleTypeDef>
//	LRX20A* lrx20A = new LRX20A(&huart1);

//   IRay iRay(&huart1);
    client.Init();
 81052a8:	f107 0308 	add.w	r3, r7, #8
 81052ac:	4618      	mov	r0, r3
 81052ae:	f7fb ff25 	bl	81010fc <_ZN6Client4InitEv>
//   iRay.Init();


    client.setDayCam(dayCam);
 81052b2:	f107 0308 	add.w	r3, r7, #8
 81052b6:	f8d7 119c 	ldr.w	r1, [r7, #412]	@ 0x19c
 81052ba:	4618      	mov	r0, r3
 81052bc:	f7fc f9aa 	bl	8101614 <_ZN6Client9setDayCamEP6DayCam>

 //   client.setLRF(lrx20A);

    dayCam->Init();
 81052c0:	f8d7 019c 	ldr.w	r0, [r7, #412]	@ 0x19c
 81052c4:	f7fc fd76 	bl	8101db4 <_ZN6DayCam4InitEv>
  //  dayCam->address_command;

    for (;;)
    {
    //    printf("Hello from MyTaskFunction!\r\n");
        HAL_GPIO_TogglePin(USER_LED2_GPIO_Port, USER_LED2_Pin);  // Optional
 81052c8:	2102      	movs	r1, #2
 81052ca:	4806      	ldr	r0, [pc, #24]	@ (81052e4 <MyTaskFunction+0x70>)
 81052cc:	f001 fb5d 	bl	810698a <HAL_GPIO_TogglePin>
        osDelay(1000);  // delay 1 second
 81052d0:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 81052d4:	f006 fc1a 	bl	810bb0c <osDelay>
        HAL_GPIO_TogglePin(USER_LED2_GPIO_Port, USER_LED2_Pin);  // Optional
 81052d8:	bf00      	nop
 81052da:	e7f5      	b.n	81052c8 <MyTaskFunction+0x54>
 81052dc:	100003dc 	.word	0x100003dc
 81052e0:	10000504 	.word	0x10000504
 81052e4:	58021000 	.word	0x58021000

081052e8 <HAL_MspInit>:
 81052e8:	b580      	push	{r7, lr}
 81052ea:	b082      	sub	sp, #8
 81052ec:	af00      	add	r7, sp, #0
 81052ee:	4b0c      	ldr	r3, [pc, #48]	@ (8105320 <HAL_MspInit+0x38>)
 81052f0:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 81052f4:	4a0a      	ldr	r2, [pc, #40]	@ (8105320 <HAL_MspInit+0x38>)
 81052f6:	f043 0302 	orr.w	r3, r3, #2
 81052fa:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
 81052fe:	4b08      	ldr	r3, [pc, #32]	@ (8105320 <HAL_MspInit+0x38>)
 8105300:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8105304:	f003 0302 	and.w	r3, r3, #2
 8105308:	607b      	str	r3, [r7, #4]
 810530a:	687b      	ldr	r3, [r7, #4]
 810530c:	2200      	movs	r2, #0
 810530e:	210f      	movs	r1, #15
 8105310:	f06f 0001 	mvn.w	r0, #1
 8105314:	f000 fbe4 	bl	8105ae0 <HAL_NVIC_SetPriority>
 8105318:	bf00      	nop
 810531a:	3708      	adds	r7, #8
 810531c:	46bd      	mov	sp, r7
 810531e:	bd80      	pop	{r7, pc}
 8105320:	58024400 	.word	0x58024400

08105324 <HAL_UART_MspInit>:
 8105324:	b580      	push	{r7, lr}
 8105326:	b0be      	sub	sp, #248	@ 0xf8
 8105328:	af00      	add	r7, sp, #0
 810532a:	6078      	str	r0, [r7, #4]
 810532c:	f107 03e4 	add.w	r3, r7, #228	@ 0xe4
 8105330:	2200      	movs	r2, #0
 8105332:	601a      	str	r2, [r3, #0]
 8105334:	605a      	str	r2, [r3, #4]
 8105336:	609a      	str	r2, [r3, #8]
 8105338:	60da      	str	r2, [r3, #12]
 810533a:	611a      	str	r2, [r3, #16]
 810533c:	f107 0320 	add.w	r3, r7, #32
 8105340:	22c0      	movs	r2, #192	@ 0xc0
 8105342:	2100      	movs	r1, #0
 8105344:	4618      	mov	r0, r3
 8105346:	f00a fa99 	bl	810f87c <memset>
 810534a:	687b      	ldr	r3, [r7, #4]
 810534c:	681b      	ldr	r3, [r3, #0]
 810534e:	4a7f      	ldr	r2, [pc, #508]	@ (810554c <HAL_UART_MspInit+0x228>)
 8105350:	4293      	cmp	r3, r2
 8105352:	d14e      	bne.n	81053f2 <HAL_UART_MspInit+0xce>
 8105354:	f04f 0201 	mov.w	r2, #1
 8105358:	f04f 0300 	mov.w	r3, #0
 810535c:	e9c7 2308 	strd	r2, r3, [r7, #32]
 8105360:	2300      	movs	r3, #0
 8105362:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8105366:	f107 0320 	add.w	r3, r7, #32
 810536a:	4618      	mov	r0, r3
 810536c:	f001 fd70 	bl	8106e50 <HAL_RCCEx_PeriphCLKConfig>
 8105370:	4603      	mov	r3, r0
 8105372:	2b00      	cmp	r3, #0
 8105374:	d001      	beq.n	810537a <HAL_UART_MspInit+0x56>
 8105376:	f7ff feb1 	bl	81050dc <Error_Handler>
 810537a:	4b75      	ldr	r3, [pc, #468]	@ (8105550 <HAL_UART_MspInit+0x22c>)
 810537c:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8105380:	4a73      	ldr	r2, [pc, #460]	@ (8105550 <HAL_UART_MspInit+0x22c>)
 8105382:	f043 0310 	orr.w	r3, r3, #16
 8105386:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 810538a:	4b71      	ldr	r3, [pc, #452]	@ (8105550 <HAL_UART_MspInit+0x22c>)
 810538c:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8105390:	f003 0310 	and.w	r3, r3, #16
 8105394:	61fb      	str	r3, [r7, #28]
 8105396:	69fb      	ldr	r3, [r7, #28]
 8105398:	4b6d      	ldr	r3, [pc, #436]	@ (8105550 <HAL_UART_MspInit+0x22c>)
 810539a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 810539e:	4a6c      	ldr	r2, [pc, #432]	@ (8105550 <HAL_UART_MspInit+0x22c>)
 81053a0:	f043 0302 	orr.w	r3, r3, #2
 81053a4:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 81053a8:	4b69      	ldr	r3, [pc, #420]	@ (8105550 <HAL_UART_MspInit+0x22c>)
 81053aa:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 81053ae:	f003 0302 	and.w	r3, r3, #2
 81053b2:	61bb      	str	r3, [r7, #24]
 81053b4:	69bb      	ldr	r3, [r7, #24]
 81053b6:	23c0      	movs	r3, #192	@ 0xc0
 81053b8:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 81053bc:	2302      	movs	r3, #2
 81053be:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 81053c2:	2300      	movs	r3, #0
 81053c4:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 81053c8:	2300      	movs	r3, #0
 81053ca:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 81053ce:	2307      	movs	r3, #7
 81053d0:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 81053d4:	f107 03e4 	add.w	r3, r7, #228	@ 0xe4
 81053d8:	4619      	mov	r1, r3
 81053da:	485e      	ldr	r0, [pc, #376]	@ (8105554 <HAL_UART_MspInit+0x230>)
 81053dc:	f001 f90c 	bl	81065f8 <HAL_GPIO_Init>
 81053e0:	2200      	movs	r2, #0
 81053e2:	2105      	movs	r1, #5
 81053e4:	2025      	movs	r0, #37	@ 0x25
 81053e6:	f000 fb7b 	bl	8105ae0 <HAL_NVIC_SetPriority>
 81053ea:	2025      	movs	r0, #37	@ 0x25
 81053ec:	f000 fb92 	bl	8105b14 <HAL_NVIC_EnableIRQ>
 81053f0:	e0a7      	b.n	8105542 <HAL_UART_MspInit+0x21e>
 81053f2:	687b      	ldr	r3, [r7, #4]
 81053f4:	681b      	ldr	r3, [r3, #0]
 81053f6:	4a58      	ldr	r2, [pc, #352]	@ (8105558 <HAL_UART_MspInit+0x234>)
 81053f8:	4293      	cmp	r3, r2
 81053fa:	d14e      	bne.n	810549a <HAL_UART_MspInit+0x176>
 81053fc:	f04f 0202 	mov.w	r2, #2
 8105400:	f04f 0300 	mov.w	r3, #0
 8105404:	e9c7 2308 	strd	r2, r3, [r7, #32]
 8105408:	2300      	movs	r3, #0
 810540a:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 810540e:	f107 0320 	add.w	r3, r7, #32
 8105412:	4618      	mov	r0, r3
 8105414:	f001 fd1c 	bl	8106e50 <HAL_RCCEx_PeriphCLKConfig>
 8105418:	4603      	mov	r3, r0
 810541a:	2b00      	cmp	r3, #0
 810541c:	d001      	beq.n	8105422 <HAL_UART_MspInit+0xfe>
 810541e:	f7ff fe5d 	bl	81050dc <Error_Handler>
 8105422:	4b4b      	ldr	r3, [pc, #300]	@ (8105550 <HAL_UART_MspInit+0x22c>)
 8105424:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8105428:	4a49      	ldr	r2, [pc, #292]	@ (8105550 <HAL_UART_MspInit+0x22c>)
 810542a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 810542e:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8105432:	4b47      	ldr	r3, [pc, #284]	@ (8105550 <HAL_UART_MspInit+0x22c>)
 8105434:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8105438:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 810543c:	617b      	str	r3, [r7, #20]
 810543e:	697b      	ldr	r3, [r7, #20]
 8105440:	4b43      	ldr	r3, [pc, #268]	@ (8105550 <HAL_UART_MspInit+0x22c>)
 8105442:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8105446:	4a42      	ldr	r2, [pc, #264]	@ (8105550 <HAL_UART_MspInit+0x22c>)
 8105448:	f043 0301 	orr.w	r3, r3, #1
 810544c:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8105450:	4b3f      	ldr	r3, [pc, #252]	@ (8105550 <HAL_UART_MspInit+0x22c>)
 8105452:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8105456:	f003 0301 	and.w	r3, r3, #1
 810545a:	613b      	str	r3, [r7, #16]
 810545c:	693b      	ldr	r3, [r7, #16]
 810545e:	230c      	movs	r3, #12
 8105460:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8105464:	2302      	movs	r3, #2
 8105466:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 810546a:	2300      	movs	r3, #0
 810546c:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 8105470:	2300      	movs	r3, #0
 8105472:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 8105476:	2307      	movs	r3, #7
 8105478:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 810547c:	f107 03e4 	add.w	r3, r7, #228	@ 0xe4
 8105480:	4619      	mov	r1, r3
 8105482:	4836      	ldr	r0, [pc, #216]	@ (810555c <HAL_UART_MspInit+0x238>)
 8105484:	f001 f8b8 	bl	81065f8 <HAL_GPIO_Init>
 8105488:	2200      	movs	r2, #0
 810548a:	2105      	movs	r1, #5
 810548c:	2026      	movs	r0, #38	@ 0x26
 810548e:	f000 fb27 	bl	8105ae0 <HAL_NVIC_SetPriority>
 8105492:	2026      	movs	r0, #38	@ 0x26
 8105494:	f000 fb3e 	bl	8105b14 <HAL_NVIC_EnableIRQ>
 8105498:	e053      	b.n	8105542 <HAL_UART_MspInit+0x21e>
 810549a:	687b      	ldr	r3, [r7, #4]
 810549c:	681b      	ldr	r3, [r3, #0]
 810549e:	4a30      	ldr	r2, [pc, #192]	@ (8105560 <HAL_UART_MspInit+0x23c>)
 81054a0:	4293      	cmp	r3, r2
 81054a2:	d14e      	bne.n	8105542 <HAL_UART_MspInit+0x21e>
 81054a4:	f04f 0202 	mov.w	r2, #2
 81054a8:	f04f 0300 	mov.w	r3, #0
 81054ac:	e9c7 2308 	strd	r2, r3, [r7, #32]
 81054b0:	2300      	movs	r3, #0
 81054b2:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 81054b6:	f107 0320 	add.w	r3, r7, #32
 81054ba:	4618      	mov	r0, r3
 81054bc:	f001 fcc8 	bl	8106e50 <HAL_RCCEx_PeriphCLKConfig>
 81054c0:	4603      	mov	r3, r0
 81054c2:	2b00      	cmp	r3, #0
 81054c4:	d001      	beq.n	81054ca <HAL_UART_MspInit+0x1a6>
 81054c6:	f7ff fe09 	bl	81050dc <Error_Handler>
 81054ca:	4b21      	ldr	r3, [pc, #132]	@ (8105550 <HAL_UART_MspInit+0x22c>)
 81054cc:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 81054d0:	4a1f      	ldr	r2, [pc, #124]	@ (8105550 <HAL_UART_MspInit+0x22c>)
 81054d2:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 81054d6:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 81054da:	4b1d      	ldr	r3, [pc, #116]	@ (8105550 <HAL_UART_MspInit+0x22c>)
 81054dc:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 81054e0:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 81054e4:	60fb      	str	r3, [r7, #12]
 81054e6:	68fb      	ldr	r3, [r7, #12]
 81054e8:	4b19      	ldr	r3, [pc, #100]	@ (8105550 <HAL_UART_MspInit+0x22c>)
 81054ea:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 81054ee:	4a18      	ldr	r2, [pc, #96]	@ (8105550 <HAL_UART_MspInit+0x22c>)
 81054f0:	f043 0308 	orr.w	r3, r3, #8
 81054f4:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 81054f8:	4b15      	ldr	r3, [pc, #84]	@ (8105550 <HAL_UART_MspInit+0x22c>)
 81054fa:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 81054fe:	f003 0308 	and.w	r3, r3, #8
 8105502:	60bb      	str	r3, [r7, #8]
 8105504:	68bb      	ldr	r3, [r7, #8]
 8105506:	f44f 7340 	mov.w	r3, #768	@ 0x300
 810550a:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 810550e:	2302      	movs	r3, #2
 8105510:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8105514:	2300      	movs	r3, #0
 8105516:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 810551a:	2300      	movs	r3, #0
 810551c:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 8105520:	2307      	movs	r3, #7
 8105522:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 8105526:	f107 03e4 	add.w	r3, r7, #228	@ 0xe4
 810552a:	4619      	mov	r1, r3
 810552c:	480d      	ldr	r0, [pc, #52]	@ (8105564 <HAL_UART_MspInit+0x240>)
 810552e:	f001 f863 	bl	81065f8 <HAL_GPIO_Init>
 8105532:	2200      	movs	r2, #0
 8105534:	2105      	movs	r1, #5
 8105536:	2027      	movs	r0, #39	@ 0x27
 8105538:	f000 fad2 	bl	8105ae0 <HAL_NVIC_SetPriority>
 810553c:	2027      	movs	r0, #39	@ 0x27
 810553e:	f000 fae9 	bl	8105b14 <HAL_NVIC_EnableIRQ>
 8105542:	bf00      	nop
 8105544:	37f8      	adds	r7, #248	@ 0xf8
 8105546:	46bd      	mov	sp, r7
 8105548:	bd80      	pop	{r7, pc}
 810554a:	bf00      	nop
 810554c:	40011000 	.word	0x40011000
 8105550:	58024400 	.word	0x58024400
 8105554:	58020400 	.word	0x58020400
 8105558:	40004400 	.word	0x40004400
 810555c:	58020000 	.word	0x58020000
 8105560:	40004800 	.word	0x40004800
 8105564:	58020c00 	.word	0x58020c00

08105568 <HAL_InitTick>:
 8105568:	b580      	push	{r7, lr}
 810556a:	b090      	sub	sp, #64	@ 0x40
 810556c:	af00      	add	r7, sp, #0
 810556e:	6078      	str	r0, [r7, #4]
 8105570:	687b      	ldr	r3, [r7, #4]
 8105572:	2b0f      	cmp	r3, #15
 8105574:	d827      	bhi.n	81055c6 <HAL_InitTick+0x5e>
 8105576:	2200      	movs	r2, #0
 8105578:	6879      	ldr	r1, [r7, #4]
 810557a:	2036      	movs	r0, #54	@ 0x36
 810557c:	f000 fab0 	bl	8105ae0 <HAL_NVIC_SetPriority>
 8105580:	2036      	movs	r0, #54	@ 0x36
 8105582:	f000 fac7 	bl	8105b14 <HAL_NVIC_EnableIRQ>
 8105586:	4a29      	ldr	r2, [pc, #164]	@ (810562c <HAL_InitTick+0xc4>)
 8105588:	687b      	ldr	r3, [r7, #4]
 810558a:	6013      	str	r3, [r2, #0]
 810558c:	4b28      	ldr	r3, [pc, #160]	@ (8105630 <HAL_InitTick+0xc8>)
 810558e:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8105592:	4a27      	ldr	r2, [pc, #156]	@ (8105630 <HAL_InitTick+0xc8>)
 8105594:	f043 0310 	orr.w	r3, r3, #16
 8105598:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 810559c:	4b24      	ldr	r3, [pc, #144]	@ (8105630 <HAL_InitTick+0xc8>)
 810559e:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 81055a2:	f003 0310 	and.w	r3, r3, #16
 81055a6:	60fb      	str	r3, [r7, #12]
 81055a8:	68fb      	ldr	r3, [r7, #12]
 81055aa:	f107 0210 	add.w	r2, r7, #16
 81055ae:	f107 0314 	add.w	r3, r7, #20
 81055b2:	4611      	mov	r1, r2
 81055b4:	4618      	mov	r0, r3
 81055b6:	f001 fc09 	bl	8106dcc <HAL_RCC_GetClockConfig>
 81055ba:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 81055bc:	63bb      	str	r3, [r7, #56]	@ 0x38
 81055be:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 81055c0:	2b00      	cmp	r3, #0
 81055c2:	d106      	bne.n	81055d2 <HAL_InitTick+0x6a>
 81055c4:	e001      	b.n	81055ca <HAL_InitTick+0x62>
 81055c6:	2301      	movs	r3, #1
 81055c8:	e02b      	b.n	8105622 <HAL_InitTick+0xba>
 81055ca:	f001 fbd3 	bl	8106d74 <HAL_RCC_GetPCLK1Freq>
 81055ce:	63f8      	str	r0, [r7, #60]	@ 0x3c
 81055d0:	e004      	b.n	81055dc <HAL_InitTick+0x74>
 81055d2:	f001 fbcf 	bl	8106d74 <HAL_RCC_GetPCLK1Freq>
 81055d6:	4603      	mov	r3, r0
 81055d8:	005b      	lsls	r3, r3, #1
 81055da:	63fb      	str	r3, [r7, #60]	@ 0x3c
 81055dc:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 81055de:	4a15      	ldr	r2, [pc, #84]	@ (8105634 <HAL_InitTick+0xcc>)
 81055e0:	fba2 2303 	umull	r2, r3, r2, r3
 81055e4:	0c9b      	lsrs	r3, r3, #18
 81055e6:	3b01      	subs	r3, #1
 81055e8:	637b      	str	r3, [r7, #52]	@ 0x34
 81055ea:	4b13      	ldr	r3, [pc, #76]	@ (8105638 <HAL_InitTick+0xd0>)
 81055ec:	4a13      	ldr	r2, [pc, #76]	@ (810563c <HAL_InitTick+0xd4>)
 81055ee:	601a      	str	r2, [r3, #0]
 81055f0:	4b11      	ldr	r3, [pc, #68]	@ (8105638 <HAL_InitTick+0xd0>)
 81055f2:	f240 32e7 	movw	r2, #999	@ 0x3e7
 81055f6:	60da      	str	r2, [r3, #12]
 81055f8:	4a0f      	ldr	r2, [pc, #60]	@ (8105638 <HAL_InitTick+0xd0>)
 81055fa:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 81055fc:	6053      	str	r3, [r2, #4]
 81055fe:	4b0e      	ldr	r3, [pc, #56]	@ (8105638 <HAL_InitTick+0xd0>)
 8105600:	2200      	movs	r2, #0
 8105602:	611a      	str	r2, [r3, #16]
 8105604:	4b0c      	ldr	r3, [pc, #48]	@ (8105638 <HAL_InitTick+0xd0>)
 8105606:	2200      	movs	r2, #0
 8105608:	609a      	str	r2, [r3, #8]
 810560a:	480b      	ldr	r0, [pc, #44]	@ (8105638 <HAL_InitTick+0xd0>)
 810560c:	f003 fa4c 	bl	8108aa8 <HAL_TIM_Base_Init>
 8105610:	4603      	mov	r3, r0
 8105612:	2b00      	cmp	r3, #0
 8105614:	d104      	bne.n	8105620 <HAL_InitTick+0xb8>
 8105616:	4808      	ldr	r0, [pc, #32]	@ (8105638 <HAL_InitTick+0xd0>)
 8105618:	f003 faa8 	bl	8108b6c <HAL_TIM_Base_Start_IT>
 810561c:	4603      	mov	r3, r0
 810561e:	e000      	b.n	8105622 <HAL_InitTick+0xba>
 8105620:	2301      	movs	r3, #1
 8105622:	4618      	mov	r0, r3
 8105624:	3740      	adds	r7, #64	@ 0x40
 8105626:	46bd      	mov	sp, r7
 8105628:	bd80      	pop	{r7, pc}
 810562a:	bf00      	nop
 810562c:	10000008 	.word	0x10000008
 8105630:	58024400 	.word	0x58024400
 8105634:	431bde83 	.word	0x431bde83
 8105638:	1000059c 	.word	0x1000059c
 810563c:	40001000 	.word	0x40001000

08105640 <NMI_Handler>:
 8105640:	b480      	push	{r7}
 8105642:	af00      	add	r7, sp, #0
 8105644:	bf00      	nop
 8105646:	e7fd      	b.n	8105644 <NMI_Handler+0x4>

08105648 <HardFault_Handler>:
 8105648:	b480      	push	{r7}
 810564a:	af00      	add	r7, sp, #0
 810564c:	bf00      	nop
 810564e:	e7fd      	b.n	810564c <HardFault_Handler+0x4>

08105650 <MemManage_Handler>:
 8105650:	b480      	push	{r7}
 8105652:	af00      	add	r7, sp, #0
 8105654:	bf00      	nop
 8105656:	e7fd      	b.n	8105654 <MemManage_Handler+0x4>

08105658 <BusFault_Handler>:
 8105658:	b480      	push	{r7}
 810565a:	af00      	add	r7, sp, #0
 810565c:	bf00      	nop
 810565e:	e7fd      	b.n	810565c <BusFault_Handler+0x4>

08105660 <UsageFault_Handler>:
 8105660:	b480      	push	{r7}
 8105662:	af00      	add	r7, sp, #0
 8105664:	bf00      	nop
 8105666:	e7fd      	b.n	8105664 <UsageFault_Handler+0x4>

08105668 <DebugMon_Handler>:
 8105668:	b480      	push	{r7}
 810566a:	af00      	add	r7, sp, #0
 810566c:	bf00      	nop
 810566e:	46bd      	mov	sp, r7
 8105670:	f85d 7b04 	ldr.w	r7, [sp], #4
 8105674:	4770      	bx	lr
	...

08105678 <USART1_IRQHandler>:
 8105678:	b580      	push	{r7, lr}
 810567a:	af00      	add	r7, sp, #0
 810567c:	4802      	ldr	r0, [pc, #8]	@ (8105688 <USART1_IRQHandler+0x10>)
 810567e:	f003 fe05 	bl	810928c <HAL_UART_IRQHandler>
 8105682:	bf00      	nop
 8105684:	bd80      	pop	{r7, pc}
 8105686:	bf00      	nop
 8105688:	100003dc 	.word	0x100003dc

0810568c <USART2_IRQHandler>:
 810568c:	b580      	push	{r7, lr}
 810568e:	af00      	add	r7, sp, #0
 8105690:	4802      	ldr	r0, [pc, #8]	@ (810569c <USART2_IRQHandler+0x10>)
 8105692:	f003 fdfb 	bl	810928c <HAL_UART_IRQHandler>
 8105696:	bf00      	nop
 8105698:	bd80      	pop	{r7, pc}
 810569a:	bf00      	nop
 810569c:	10000470 	.word	0x10000470

081056a0 <USART3_IRQHandler>:
 81056a0:	b580      	push	{r7, lr}
 81056a2:	af00      	add	r7, sp, #0
 81056a4:	4802      	ldr	r0, [pc, #8]	@ (81056b0 <USART3_IRQHandler+0x10>)
 81056a6:	f003 fdf1 	bl	810928c <HAL_UART_IRQHandler>
 81056aa:	bf00      	nop
 81056ac:	bd80      	pop	{r7, pc}
 81056ae:	bf00      	nop
 81056b0:	10000504 	.word	0x10000504

081056b4 <TIM6_DAC_IRQHandler>:
 81056b4:	b580      	push	{r7, lr}
 81056b6:	af00      	add	r7, sp, #0
 81056b8:	4802      	ldr	r0, [pc, #8]	@ (81056c4 <TIM6_DAC_IRQHandler+0x10>)
 81056ba:	f003 facf 	bl	8108c5c <HAL_TIM_IRQHandler>
 81056be:	bf00      	nop
 81056c0:	bd80      	pop	{r7, pc}
 81056c2:	bf00      	nop
 81056c4:	1000059c 	.word	0x1000059c

081056c8 <_getpid>:
 81056c8:	b480      	push	{r7}
 81056ca:	af00      	add	r7, sp, #0
 81056cc:	2301      	movs	r3, #1
 81056ce:	4618      	mov	r0, r3
 81056d0:	46bd      	mov	sp, r7
 81056d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 81056d6:	4770      	bx	lr

081056d8 <_kill>:
 81056d8:	b580      	push	{r7, lr}
 81056da:	b082      	sub	sp, #8
 81056dc:	af00      	add	r7, sp, #0
 81056de:	6078      	str	r0, [r7, #4]
 81056e0:	6039      	str	r1, [r7, #0]
 81056e2:	f00a f9cf 	bl	810fa84 <__errno>
 81056e6:	4603      	mov	r3, r0
 81056e8:	2216      	movs	r2, #22
 81056ea:	601a      	str	r2, [r3, #0]
 81056ec:	f04f 33ff 	mov.w	r3, #4294967295
 81056f0:	4618      	mov	r0, r3
 81056f2:	3708      	adds	r7, #8
 81056f4:	46bd      	mov	sp, r7
 81056f6:	bd80      	pop	{r7, pc}

081056f8 <_exit>:
 81056f8:	b580      	push	{r7, lr}
 81056fa:	b082      	sub	sp, #8
 81056fc:	af00      	add	r7, sp, #0
 81056fe:	6078      	str	r0, [r7, #4]
 8105700:	f04f 31ff 	mov.w	r1, #4294967295
 8105704:	6878      	ldr	r0, [r7, #4]
 8105706:	f7ff ffe7 	bl	81056d8 <_kill>
 810570a:	bf00      	nop
 810570c:	e7fd      	b.n	810570a <_exit+0x12>

0810570e <_read>:
 810570e:	b580      	push	{r7, lr}
 8105710:	b086      	sub	sp, #24
 8105712:	af00      	add	r7, sp, #0
 8105714:	60f8      	str	r0, [r7, #12]
 8105716:	60b9      	str	r1, [r7, #8]
 8105718:	607a      	str	r2, [r7, #4]
 810571a:	2300      	movs	r3, #0
 810571c:	617b      	str	r3, [r7, #20]
 810571e:	e00a      	b.n	8105736 <_read+0x28>
 8105720:	f3af 8000 	nop.w
 8105724:	4601      	mov	r1, r0
 8105726:	68bb      	ldr	r3, [r7, #8]
 8105728:	1c5a      	adds	r2, r3, #1
 810572a:	60ba      	str	r2, [r7, #8]
 810572c:	b2ca      	uxtb	r2, r1
 810572e:	701a      	strb	r2, [r3, #0]
 8105730:	697b      	ldr	r3, [r7, #20]
 8105732:	3301      	adds	r3, #1
 8105734:	617b      	str	r3, [r7, #20]
 8105736:	697a      	ldr	r2, [r7, #20]
 8105738:	687b      	ldr	r3, [r7, #4]
 810573a:	429a      	cmp	r2, r3
 810573c:	dbf0      	blt.n	8105720 <_read+0x12>
 810573e:	687b      	ldr	r3, [r7, #4]
 8105740:	4618      	mov	r0, r3
 8105742:	3718      	adds	r7, #24
 8105744:	46bd      	mov	sp, r7
 8105746:	bd80      	pop	{r7, pc}

08105748 <_close>:
 8105748:	b480      	push	{r7}
 810574a:	b083      	sub	sp, #12
 810574c:	af00      	add	r7, sp, #0
 810574e:	6078      	str	r0, [r7, #4]
 8105750:	f04f 33ff 	mov.w	r3, #4294967295
 8105754:	4618      	mov	r0, r3
 8105756:	370c      	adds	r7, #12
 8105758:	46bd      	mov	sp, r7
 810575a:	f85d 7b04 	ldr.w	r7, [sp], #4
 810575e:	4770      	bx	lr

08105760 <_fstat>:
 8105760:	b480      	push	{r7}
 8105762:	b083      	sub	sp, #12
 8105764:	af00      	add	r7, sp, #0
 8105766:	6078      	str	r0, [r7, #4]
 8105768:	6039      	str	r1, [r7, #0]
 810576a:	683b      	ldr	r3, [r7, #0]
 810576c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8105770:	605a      	str	r2, [r3, #4]
 8105772:	2300      	movs	r3, #0
 8105774:	4618      	mov	r0, r3
 8105776:	370c      	adds	r7, #12
 8105778:	46bd      	mov	sp, r7
 810577a:	f85d 7b04 	ldr.w	r7, [sp], #4
 810577e:	4770      	bx	lr

08105780 <_isatty>:
 8105780:	b480      	push	{r7}
 8105782:	b083      	sub	sp, #12
 8105784:	af00      	add	r7, sp, #0
 8105786:	6078      	str	r0, [r7, #4]
 8105788:	2301      	movs	r3, #1
 810578a:	4618      	mov	r0, r3
 810578c:	370c      	adds	r7, #12
 810578e:	46bd      	mov	sp, r7
 8105790:	f85d 7b04 	ldr.w	r7, [sp], #4
 8105794:	4770      	bx	lr

08105796 <_lseek>:
 8105796:	b480      	push	{r7}
 8105798:	b085      	sub	sp, #20
 810579a:	af00      	add	r7, sp, #0
 810579c:	60f8      	str	r0, [r7, #12]
 810579e:	60b9      	str	r1, [r7, #8]
 81057a0:	607a      	str	r2, [r7, #4]
 81057a2:	2300      	movs	r3, #0
 81057a4:	4618      	mov	r0, r3
 81057a6:	3714      	adds	r7, #20
 81057a8:	46bd      	mov	sp, r7
 81057aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 81057ae:	4770      	bx	lr

081057b0 <_sbrk>:
 81057b0:	b580      	push	{r7, lr}
 81057b2:	b086      	sub	sp, #24
 81057b4:	af00      	add	r7, sp, #0
 81057b6:	6078      	str	r0, [r7, #4]
 81057b8:	4a14      	ldr	r2, [pc, #80]	@ (810580c <_sbrk+0x5c>)
 81057ba:	4b15      	ldr	r3, [pc, #84]	@ (8105810 <_sbrk+0x60>)
 81057bc:	1ad3      	subs	r3, r2, r3
 81057be:	617b      	str	r3, [r7, #20]
 81057c0:	697b      	ldr	r3, [r7, #20]
 81057c2:	613b      	str	r3, [r7, #16]
 81057c4:	4b13      	ldr	r3, [pc, #76]	@ (8105814 <_sbrk+0x64>)
 81057c6:	681b      	ldr	r3, [r3, #0]
 81057c8:	2b00      	cmp	r3, #0
 81057ca:	d102      	bne.n	81057d2 <_sbrk+0x22>
 81057cc:	4b11      	ldr	r3, [pc, #68]	@ (8105814 <_sbrk+0x64>)
 81057ce:	4a12      	ldr	r2, [pc, #72]	@ (8105818 <_sbrk+0x68>)
 81057d0:	601a      	str	r2, [r3, #0]
 81057d2:	4b10      	ldr	r3, [pc, #64]	@ (8105814 <_sbrk+0x64>)
 81057d4:	681a      	ldr	r2, [r3, #0]
 81057d6:	687b      	ldr	r3, [r7, #4]
 81057d8:	4413      	add	r3, r2
 81057da:	693a      	ldr	r2, [r7, #16]
 81057dc:	429a      	cmp	r2, r3
 81057de:	d207      	bcs.n	81057f0 <_sbrk+0x40>
 81057e0:	f00a f950 	bl	810fa84 <__errno>
 81057e4:	4603      	mov	r3, r0
 81057e6:	220c      	movs	r2, #12
 81057e8:	601a      	str	r2, [r3, #0]
 81057ea:	f04f 33ff 	mov.w	r3, #4294967295
 81057ee:	e009      	b.n	8105804 <_sbrk+0x54>
 81057f0:	4b08      	ldr	r3, [pc, #32]	@ (8105814 <_sbrk+0x64>)
 81057f2:	681b      	ldr	r3, [r3, #0]
 81057f4:	60fb      	str	r3, [r7, #12]
 81057f6:	4b07      	ldr	r3, [pc, #28]	@ (8105814 <_sbrk+0x64>)
 81057f8:	681a      	ldr	r2, [r3, #0]
 81057fa:	687b      	ldr	r3, [r7, #4]
 81057fc:	4413      	add	r3, r2
 81057fe:	4a05      	ldr	r2, [pc, #20]	@ (8105814 <_sbrk+0x64>)
 8105800:	6013      	str	r3, [r2, #0]
 8105802:	68fb      	ldr	r3, [r7, #12]
 8105804:	4618      	mov	r0, r3
 8105806:	3718      	adds	r7, #24
 8105808:	46bd      	mov	sp, r7
 810580a:	bd80      	pop	{r7, pc}
 810580c:	10048000 	.word	0x10048000
 8105810:	00000400 	.word	0x00000400
 8105814:	100005e8 	.word	0x100005e8
 8105818:	10005130 	.word	0x10005130

0810581c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack      /* set stack pointer */
 810581c:	f8df d038 	ldr.w	sp, [pc, #56]	@ 8105858 <LoopFillZerobss+0xe>

/* Call the ExitRun0Mode function to configure the power supply */
  bl  ExitRun0Mode
 8105820:	f7fb fbf8 	bl	8101014 <ExitRun0Mode>
/* Call the clock system initialization function.*/
  bl  SystemInit
 8105824:	f7fb fbde 	bl	8100fe4 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8105828:	480c      	ldr	r0, [pc, #48]	@ (810585c <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 810582a:	490d      	ldr	r1, [pc, #52]	@ (8105860 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 810582c:	4a0d      	ldr	r2, [pc, #52]	@ (8105864 <LoopFillZerobss+0x1a>)
  movs r3, #0
 810582e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8105830:	e002      	b.n	8105838 <LoopCopyDataInit>

08105832 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8105832:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8105834:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8105836:	3304      	adds	r3, #4

08105838 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8105838:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 810583a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 810583c:	d3f9      	bcc.n	8105832 <CopyDataInit>
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 810583e:	4a0a      	ldr	r2, [pc, #40]	@ (8105868 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8105840:	4c0a      	ldr	r4, [pc, #40]	@ (810586c <LoopFillZerobss+0x22>)
  movs r3, #0
 8105842:	2300      	movs	r3, #0
  b LoopFillZerobss
 8105844:	e001      	b.n	810584a <LoopFillZerobss>

08105846 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8105846:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8105848:	3204      	adds	r2, #4

0810584a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 810584a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 810584c:	d3fb      	bcc.n	8105846 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 810584e:	f00a f91f 	bl	810fa90 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8105852:	f7ff fa3f 	bl	8104cd4 <main>
  bx  lr
 8105856:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8105858:	10048000 	.word	0x10048000
  ldr r0, =_sdata
 810585c:	10000000 	.word	0x10000000
  ldr r1, =_edata
 8105860:	100001dc 	.word	0x100001dc
  ldr r2, =_sidata
 8105864:	08111c44 	.word	0x08111c44
  ldr r2, =_sbss
 8105868:	100003a8 	.word	0x100003a8
  ldr r4, =_ebss
 810586c:	10005130 	.word	0x10005130

08105870 <ADC3_IRQHandler>:
 * @retval None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8105870:	e7fe      	b.n	8105870 <ADC3_IRQHandler>
	...

08105874 <HAL_Init>:
 8105874:	b580      	push	{r7, lr}
 8105876:	b082      	sub	sp, #8
 8105878:	af00      	add	r7, sp, #0
 810587a:	4b28      	ldr	r3, [pc, #160]	@ (810591c <HAL_Init+0xa8>)
 810587c:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8105880:	4a26      	ldr	r2, [pc, #152]	@ (810591c <HAL_Init+0xa8>)
 8105882:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8105886:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 810588a:	4b24      	ldr	r3, [pc, #144]	@ (810591c <HAL_Init+0xa8>)
 810588c:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8105890:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8105894:	603b      	str	r3, [r7, #0]
 8105896:	683b      	ldr	r3, [r7, #0]
 8105898:	4b21      	ldr	r3, [pc, #132]	@ (8105920 <HAL_Init+0xac>)
 810589a:	681b      	ldr	r3, [r3, #0]
 810589c:	f423 237f 	bic.w	r3, r3, #1044480	@ 0xff000
 81058a0:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 81058a4:	4a1e      	ldr	r2, [pc, #120]	@ (8105920 <HAL_Init+0xac>)
 81058a6:	f443 4301 	orr.w	r3, r3, #33024	@ 0x8100
 81058aa:	6013      	str	r3, [r2, #0]
 81058ac:	4b1c      	ldr	r3, [pc, #112]	@ (8105920 <HAL_Init+0xac>)
 81058ae:	681b      	ldr	r3, [r3, #0]
 81058b0:	4a1b      	ldr	r2, [pc, #108]	@ (8105920 <HAL_Init+0xac>)
 81058b2:	f043 0301 	orr.w	r3, r3, #1
 81058b6:	6013      	str	r3, [r2, #0]
 81058b8:	2003      	movs	r0, #3
 81058ba:	f000 f906 	bl	8105aca <HAL_NVIC_SetPriorityGrouping>
 81058be:	f001 f8ad 	bl	8106a1c <HAL_RCC_GetSysClockFreq>
 81058c2:	4602      	mov	r2, r0
 81058c4:	4b15      	ldr	r3, [pc, #84]	@ (810591c <HAL_Init+0xa8>)
 81058c6:	699b      	ldr	r3, [r3, #24]
 81058c8:	0a1b      	lsrs	r3, r3, #8
 81058ca:	f003 030f 	and.w	r3, r3, #15
 81058ce:	4915      	ldr	r1, [pc, #84]	@ (8105924 <HAL_Init+0xb0>)
 81058d0:	5ccb      	ldrb	r3, [r1, r3]
 81058d2:	f003 031f 	and.w	r3, r3, #31
 81058d6:	fa22 f303 	lsr.w	r3, r2, r3
 81058da:	607b      	str	r3, [r7, #4]
 81058dc:	4b0f      	ldr	r3, [pc, #60]	@ (810591c <HAL_Init+0xa8>)
 81058de:	699b      	ldr	r3, [r3, #24]
 81058e0:	f003 030f 	and.w	r3, r3, #15
 81058e4:	4a0f      	ldr	r2, [pc, #60]	@ (8105924 <HAL_Init+0xb0>)
 81058e6:	5cd3      	ldrb	r3, [r2, r3]
 81058e8:	f003 031f 	and.w	r3, r3, #31
 81058ec:	687a      	ldr	r2, [r7, #4]
 81058ee:	fa22 f303 	lsr.w	r3, r2, r3
 81058f2:	4a0d      	ldr	r2, [pc, #52]	@ (8105928 <HAL_Init+0xb4>)
 81058f4:	6013      	str	r3, [r2, #0]
 81058f6:	4b0c      	ldr	r3, [pc, #48]	@ (8105928 <HAL_Init+0xb4>)
 81058f8:	681b      	ldr	r3, [r3, #0]
 81058fa:	4a0c      	ldr	r2, [pc, #48]	@ (810592c <HAL_Init+0xb8>)
 81058fc:	6013      	str	r3, [r2, #0]
 81058fe:	200f      	movs	r0, #15
 8105900:	f7ff fe32 	bl	8105568 <HAL_InitTick>
 8105904:	4603      	mov	r3, r0
 8105906:	2b00      	cmp	r3, #0
 8105908:	d001      	beq.n	810590e <HAL_Init+0x9a>
 810590a:	2301      	movs	r3, #1
 810590c:	e002      	b.n	8105914 <HAL_Init+0xa0>
 810590e:	f7ff fceb 	bl	81052e8 <HAL_MspInit>
 8105912:	2300      	movs	r3, #0
 8105914:	4618      	mov	r0, r3
 8105916:	3708      	adds	r7, #8
 8105918:	46bd      	mov	sp, r7
 810591a:	bd80      	pop	{r7, pc}
 810591c:	58024400 	.word	0x58024400
 8105920:	40024400 	.word	0x40024400
 8105924:	08111810 	.word	0x08111810
 8105928:	10000004 	.word	0x10000004
 810592c:	10000000 	.word	0x10000000

08105930 <HAL_IncTick>:
 8105930:	b480      	push	{r7}
 8105932:	af00      	add	r7, sp, #0
 8105934:	4b06      	ldr	r3, [pc, #24]	@ (8105950 <HAL_IncTick+0x20>)
 8105936:	781b      	ldrb	r3, [r3, #0]
 8105938:	461a      	mov	r2, r3
 810593a:	4b06      	ldr	r3, [pc, #24]	@ (8105954 <HAL_IncTick+0x24>)
 810593c:	681b      	ldr	r3, [r3, #0]
 810593e:	4413      	add	r3, r2
 8105940:	4a04      	ldr	r2, [pc, #16]	@ (8105954 <HAL_IncTick+0x24>)
 8105942:	6013      	str	r3, [r2, #0]
 8105944:	bf00      	nop
 8105946:	46bd      	mov	sp, r7
 8105948:	f85d 7b04 	ldr.w	r7, [sp], #4
 810594c:	4770      	bx	lr
 810594e:	bf00      	nop
 8105950:	1000000c 	.word	0x1000000c
 8105954:	100005ec 	.word	0x100005ec

08105958 <HAL_GetTick>:
 8105958:	b480      	push	{r7}
 810595a:	af00      	add	r7, sp, #0
 810595c:	4b03      	ldr	r3, [pc, #12]	@ (810596c <HAL_GetTick+0x14>)
 810595e:	681b      	ldr	r3, [r3, #0]
 8105960:	4618      	mov	r0, r3
 8105962:	46bd      	mov	sp, r7
 8105964:	f85d 7b04 	ldr.w	r7, [sp], #4
 8105968:	4770      	bx	lr
 810596a:	bf00      	nop
 810596c:	100005ec 	.word	0x100005ec

08105970 <__NVIC_SetPriorityGrouping>:
 8105970:	b480      	push	{r7}
 8105972:	b085      	sub	sp, #20
 8105974:	af00      	add	r7, sp, #0
 8105976:	6078      	str	r0, [r7, #4]
 8105978:	687b      	ldr	r3, [r7, #4]
 810597a:	f003 0307 	and.w	r3, r3, #7
 810597e:	60fb      	str	r3, [r7, #12]
 8105980:	4b0c      	ldr	r3, [pc, #48]	@ (81059b4 <__NVIC_SetPriorityGrouping+0x44>)
 8105982:	68db      	ldr	r3, [r3, #12]
 8105984:	60bb      	str	r3, [r7, #8]
 8105986:	68ba      	ldr	r2, [r7, #8]
 8105988:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 810598c:	4013      	ands	r3, r2
 810598e:	60bb      	str	r3, [r7, #8]
 8105990:	68fb      	ldr	r3, [r7, #12]
 8105992:	021a      	lsls	r2, r3, #8
 8105994:	68bb      	ldr	r3, [r7, #8]
 8105996:	4313      	orrs	r3, r2
 8105998:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 810599c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 81059a0:	60bb      	str	r3, [r7, #8]
 81059a2:	4a04      	ldr	r2, [pc, #16]	@ (81059b4 <__NVIC_SetPriorityGrouping+0x44>)
 81059a4:	68bb      	ldr	r3, [r7, #8]
 81059a6:	60d3      	str	r3, [r2, #12]
 81059a8:	bf00      	nop
 81059aa:	3714      	adds	r7, #20
 81059ac:	46bd      	mov	sp, r7
 81059ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 81059b2:	4770      	bx	lr
 81059b4:	e000ed00 	.word	0xe000ed00

081059b8 <__NVIC_GetPriorityGrouping>:
 81059b8:	b480      	push	{r7}
 81059ba:	af00      	add	r7, sp, #0
 81059bc:	4b04      	ldr	r3, [pc, #16]	@ (81059d0 <__NVIC_GetPriorityGrouping+0x18>)
 81059be:	68db      	ldr	r3, [r3, #12]
 81059c0:	0a1b      	lsrs	r3, r3, #8
 81059c2:	f003 0307 	and.w	r3, r3, #7
 81059c6:	4618      	mov	r0, r3
 81059c8:	46bd      	mov	sp, r7
 81059ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 81059ce:	4770      	bx	lr
 81059d0:	e000ed00 	.word	0xe000ed00

081059d4 <__NVIC_EnableIRQ>:
 81059d4:	b480      	push	{r7}
 81059d6:	b083      	sub	sp, #12
 81059d8:	af00      	add	r7, sp, #0
 81059da:	4603      	mov	r3, r0
 81059dc:	80fb      	strh	r3, [r7, #6]
 81059de:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 81059e2:	2b00      	cmp	r3, #0
 81059e4:	db0b      	blt.n	81059fe <__NVIC_EnableIRQ+0x2a>
 81059e6:	88fb      	ldrh	r3, [r7, #6]
 81059e8:	f003 021f 	and.w	r2, r3, #31
 81059ec:	4907      	ldr	r1, [pc, #28]	@ (8105a0c <__NVIC_EnableIRQ+0x38>)
 81059ee:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 81059f2:	095b      	lsrs	r3, r3, #5
 81059f4:	2001      	movs	r0, #1
 81059f6:	fa00 f202 	lsl.w	r2, r0, r2
 81059fa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 81059fe:	bf00      	nop
 8105a00:	370c      	adds	r7, #12
 8105a02:	46bd      	mov	sp, r7
 8105a04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8105a08:	4770      	bx	lr
 8105a0a:	bf00      	nop
 8105a0c:	e000e100 	.word	0xe000e100

08105a10 <__NVIC_SetPriority>:
 8105a10:	b480      	push	{r7}
 8105a12:	b083      	sub	sp, #12
 8105a14:	af00      	add	r7, sp, #0
 8105a16:	4603      	mov	r3, r0
 8105a18:	6039      	str	r1, [r7, #0]
 8105a1a:	80fb      	strh	r3, [r7, #6]
 8105a1c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8105a20:	2b00      	cmp	r3, #0
 8105a22:	db0a      	blt.n	8105a3a <__NVIC_SetPriority+0x2a>
 8105a24:	683b      	ldr	r3, [r7, #0]
 8105a26:	b2da      	uxtb	r2, r3
 8105a28:	490c      	ldr	r1, [pc, #48]	@ (8105a5c <__NVIC_SetPriority+0x4c>)
 8105a2a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8105a2e:	0112      	lsls	r2, r2, #4
 8105a30:	b2d2      	uxtb	r2, r2
 8105a32:	440b      	add	r3, r1
 8105a34:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8105a38:	e00a      	b.n	8105a50 <__NVIC_SetPriority+0x40>
 8105a3a:	683b      	ldr	r3, [r7, #0]
 8105a3c:	b2da      	uxtb	r2, r3
 8105a3e:	4908      	ldr	r1, [pc, #32]	@ (8105a60 <__NVIC_SetPriority+0x50>)
 8105a40:	88fb      	ldrh	r3, [r7, #6]
 8105a42:	f003 030f 	and.w	r3, r3, #15
 8105a46:	3b04      	subs	r3, #4
 8105a48:	0112      	lsls	r2, r2, #4
 8105a4a:	b2d2      	uxtb	r2, r2
 8105a4c:	440b      	add	r3, r1
 8105a4e:	761a      	strb	r2, [r3, #24]
 8105a50:	bf00      	nop
 8105a52:	370c      	adds	r7, #12
 8105a54:	46bd      	mov	sp, r7
 8105a56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8105a5a:	4770      	bx	lr
 8105a5c:	e000e100 	.word	0xe000e100
 8105a60:	e000ed00 	.word	0xe000ed00

08105a64 <NVIC_EncodePriority>:
 8105a64:	b480      	push	{r7}
 8105a66:	b089      	sub	sp, #36	@ 0x24
 8105a68:	af00      	add	r7, sp, #0
 8105a6a:	60f8      	str	r0, [r7, #12]
 8105a6c:	60b9      	str	r1, [r7, #8]
 8105a6e:	607a      	str	r2, [r7, #4]
 8105a70:	68fb      	ldr	r3, [r7, #12]
 8105a72:	f003 0307 	and.w	r3, r3, #7
 8105a76:	61fb      	str	r3, [r7, #28]
 8105a78:	69fb      	ldr	r3, [r7, #28]
 8105a7a:	f1c3 0307 	rsb	r3, r3, #7
 8105a7e:	2b04      	cmp	r3, #4
 8105a80:	bf28      	it	cs
 8105a82:	2304      	movcs	r3, #4
 8105a84:	61bb      	str	r3, [r7, #24]
 8105a86:	69fb      	ldr	r3, [r7, #28]
 8105a88:	3304      	adds	r3, #4
 8105a8a:	2b06      	cmp	r3, #6
 8105a8c:	d902      	bls.n	8105a94 <NVIC_EncodePriority+0x30>
 8105a8e:	69fb      	ldr	r3, [r7, #28]
 8105a90:	3b03      	subs	r3, #3
 8105a92:	e000      	b.n	8105a96 <NVIC_EncodePriority+0x32>
 8105a94:	2300      	movs	r3, #0
 8105a96:	617b      	str	r3, [r7, #20]
 8105a98:	f04f 32ff 	mov.w	r2, #4294967295
 8105a9c:	69bb      	ldr	r3, [r7, #24]
 8105a9e:	fa02 f303 	lsl.w	r3, r2, r3
 8105aa2:	43da      	mvns	r2, r3
 8105aa4:	68bb      	ldr	r3, [r7, #8]
 8105aa6:	401a      	ands	r2, r3
 8105aa8:	697b      	ldr	r3, [r7, #20]
 8105aaa:	409a      	lsls	r2, r3
 8105aac:	f04f 31ff 	mov.w	r1, #4294967295
 8105ab0:	697b      	ldr	r3, [r7, #20]
 8105ab2:	fa01 f303 	lsl.w	r3, r1, r3
 8105ab6:	43d9      	mvns	r1, r3
 8105ab8:	687b      	ldr	r3, [r7, #4]
 8105aba:	400b      	ands	r3, r1
 8105abc:	4313      	orrs	r3, r2
 8105abe:	4618      	mov	r0, r3
 8105ac0:	3724      	adds	r7, #36	@ 0x24
 8105ac2:	46bd      	mov	sp, r7
 8105ac4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8105ac8:	4770      	bx	lr

08105aca <HAL_NVIC_SetPriorityGrouping>:
 8105aca:	b580      	push	{r7, lr}
 8105acc:	b082      	sub	sp, #8
 8105ace:	af00      	add	r7, sp, #0
 8105ad0:	6078      	str	r0, [r7, #4]
 8105ad2:	6878      	ldr	r0, [r7, #4]
 8105ad4:	f7ff ff4c 	bl	8105970 <__NVIC_SetPriorityGrouping>
 8105ad8:	bf00      	nop
 8105ada:	3708      	adds	r7, #8
 8105adc:	46bd      	mov	sp, r7
 8105ade:	bd80      	pop	{r7, pc}

08105ae0 <HAL_NVIC_SetPriority>:
 8105ae0:	b580      	push	{r7, lr}
 8105ae2:	b086      	sub	sp, #24
 8105ae4:	af00      	add	r7, sp, #0
 8105ae6:	4603      	mov	r3, r0
 8105ae8:	60b9      	str	r1, [r7, #8]
 8105aea:	607a      	str	r2, [r7, #4]
 8105aec:	81fb      	strh	r3, [r7, #14]
 8105aee:	f7ff ff63 	bl	81059b8 <__NVIC_GetPriorityGrouping>
 8105af2:	6178      	str	r0, [r7, #20]
 8105af4:	687a      	ldr	r2, [r7, #4]
 8105af6:	68b9      	ldr	r1, [r7, #8]
 8105af8:	6978      	ldr	r0, [r7, #20]
 8105afa:	f7ff ffb3 	bl	8105a64 <NVIC_EncodePriority>
 8105afe:	4602      	mov	r2, r0
 8105b00:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8105b04:	4611      	mov	r1, r2
 8105b06:	4618      	mov	r0, r3
 8105b08:	f7ff ff82 	bl	8105a10 <__NVIC_SetPriority>
 8105b0c:	bf00      	nop
 8105b0e:	3718      	adds	r7, #24
 8105b10:	46bd      	mov	sp, r7
 8105b12:	bd80      	pop	{r7, pc}

08105b14 <HAL_NVIC_EnableIRQ>:
 8105b14:	b580      	push	{r7, lr}
 8105b16:	b082      	sub	sp, #8
 8105b18:	af00      	add	r7, sp, #0
 8105b1a:	4603      	mov	r3, r0
 8105b1c:	80fb      	strh	r3, [r7, #6]
 8105b1e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8105b22:	4618      	mov	r0, r3
 8105b24:	f7ff ff56 	bl	81059d4 <__NVIC_EnableIRQ>
 8105b28:	bf00      	nop
 8105b2a:	3708      	adds	r7, #8
 8105b2c:	46bd      	mov	sp, r7
 8105b2e:	bd80      	pop	{r7, pc}

08105b30 <HAL_DMA_Abort>:
 8105b30:	b580      	push	{r7, lr}
 8105b32:	b086      	sub	sp, #24
 8105b34:	af00      	add	r7, sp, #0
 8105b36:	6078      	str	r0, [r7, #4]
 8105b38:	f7ff ff0e 	bl	8105958 <HAL_GetTick>
 8105b3c:	6138      	str	r0, [r7, #16]
 8105b3e:	687b      	ldr	r3, [r7, #4]
 8105b40:	2b00      	cmp	r3, #0
 8105b42:	d101      	bne.n	8105b48 <HAL_DMA_Abort+0x18>
 8105b44:	2301      	movs	r3, #1
 8105b46:	e2dc      	b.n	8106102 <HAL_DMA_Abort+0x5d2>
 8105b48:	687b      	ldr	r3, [r7, #4]
 8105b4a:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8105b4e:	b2db      	uxtb	r3, r3
 8105b50:	2b02      	cmp	r3, #2
 8105b52:	d008      	beq.n	8105b66 <HAL_DMA_Abort+0x36>
 8105b54:	687b      	ldr	r3, [r7, #4]
 8105b56:	2280      	movs	r2, #128	@ 0x80
 8105b58:	655a      	str	r2, [r3, #84]	@ 0x54
 8105b5a:	687b      	ldr	r3, [r7, #4]
 8105b5c:	2200      	movs	r2, #0
 8105b5e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8105b62:	2301      	movs	r3, #1
 8105b64:	e2cd      	b.n	8106102 <HAL_DMA_Abort+0x5d2>
 8105b66:	687b      	ldr	r3, [r7, #4]
 8105b68:	681b      	ldr	r3, [r3, #0]
 8105b6a:	4a76      	ldr	r2, [pc, #472]	@ (8105d44 <HAL_DMA_Abort+0x214>)
 8105b6c:	4293      	cmp	r3, r2
 8105b6e:	d04a      	beq.n	8105c06 <HAL_DMA_Abort+0xd6>
 8105b70:	687b      	ldr	r3, [r7, #4]
 8105b72:	681b      	ldr	r3, [r3, #0]
 8105b74:	4a74      	ldr	r2, [pc, #464]	@ (8105d48 <HAL_DMA_Abort+0x218>)
 8105b76:	4293      	cmp	r3, r2
 8105b78:	d045      	beq.n	8105c06 <HAL_DMA_Abort+0xd6>
 8105b7a:	687b      	ldr	r3, [r7, #4]
 8105b7c:	681b      	ldr	r3, [r3, #0]
 8105b7e:	4a73      	ldr	r2, [pc, #460]	@ (8105d4c <HAL_DMA_Abort+0x21c>)
 8105b80:	4293      	cmp	r3, r2
 8105b82:	d040      	beq.n	8105c06 <HAL_DMA_Abort+0xd6>
 8105b84:	687b      	ldr	r3, [r7, #4]
 8105b86:	681b      	ldr	r3, [r3, #0]
 8105b88:	4a71      	ldr	r2, [pc, #452]	@ (8105d50 <HAL_DMA_Abort+0x220>)
 8105b8a:	4293      	cmp	r3, r2
 8105b8c:	d03b      	beq.n	8105c06 <HAL_DMA_Abort+0xd6>
 8105b8e:	687b      	ldr	r3, [r7, #4]
 8105b90:	681b      	ldr	r3, [r3, #0]
 8105b92:	4a70      	ldr	r2, [pc, #448]	@ (8105d54 <HAL_DMA_Abort+0x224>)
 8105b94:	4293      	cmp	r3, r2
 8105b96:	d036      	beq.n	8105c06 <HAL_DMA_Abort+0xd6>
 8105b98:	687b      	ldr	r3, [r7, #4]
 8105b9a:	681b      	ldr	r3, [r3, #0]
 8105b9c:	4a6e      	ldr	r2, [pc, #440]	@ (8105d58 <HAL_DMA_Abort+0x228>)
 8105b9e:	4293      	cmp	r3, r2
 8105ba0:	d031      	beq.n	8105c06 <HAL_DMA_Abort+0xd6>
 8105ba2:	687b      	ldr	r3, [r7, #4]
 8105ba4:	681b      	ldr	r3, [r3, #0]
 8105ba6:	4a6d      	ldr	r2, [pc, #436]	@ (8105d5c <HAL_DMA_Abort+0x22c>)
 8105ba8:	4293      	cmp	r3, r2
 8105baa:	d02c      	beq.n	8105c06 <HAL_DMA_Abort+0xd6>
 8105bac:	687b      	ldr	r3, [r7, #4]
 8105bae:	681b      	ldr	r3, [r3, #0]
 8105bb0:	4a6b      	ldr	r2, [pc, #428]	@ (8105d60 <HAL_DMA_Abort+0x230>)
 8105bb2:	4293      	cmp	r3, r2
 8105bb4:	d027      	beq.n	8105c06 <HAL_DMA_Abort+0xd6>
 8105bb6:	687b      	ldr	r3, [r7, #4]
 8105bb8:	681b      	ldr	r3, [r3, #0]
 8105bba:	4a6a      	ldr	r2, [pc, #424]	@ (8105d64 <HAL_DMA_Abort+0x234>)
 8105bbc:	4293      	cmp	r3, r2
 8105bbe:	d022      	beq.n	8105c06 <HAL_DMA_Abort+0xd6>
 8105bc0:	687b      	ldr	r3, [r7, #4]
 8105bc2:	681b      	ldr	r3, [r3, #0]
 8105bc4:	4a68      	ldr	r2, [pc, #416]	@ (8105d68 <HAL_DMA_Abort+0x238>)
 8105bc6:	4293      	cmp	r3, r2
 8105bc8:	d01d      	beq.n	8105c06 <HAL_DMA_Abort+0xd6>
 8105bca:	687b      	ldr	r3, [r7, #4]
 8105bcc:	681b      	ldr	r3, [r3, #0]
 8105bce:	4a67      	ldr	r2, [pc, #412]	@ (8105d6c <HAL_DMA_Abort+0x23c>)
 8105bd0:	4293      	cmp	r3, r2
 8105bd2:	d018      	beq.n	8105c06 <HAL_DMA_Abort+0xd6>
 8105bd4:	687b      	ldr	r3, [r7, #4]
 8105bd6:	681b      	ldr	r3, [r3, #0]
 8105bd8:	4a65      	ldr	r2, [pc, #404]	@ (8105d70 <HAL_DMA_Abort+0x240>)
 8105bda:	4293      	cmp	r3, r2
 8105bdc:	d013      	beq.n	8105c06 <HAL_DMA_Abort+0xd6>
 8105bde:	687b      	ldr	r3, [r7, #4]
 8105be0:	681b      	ldr	r3, [r3, #0]
 8105be2:	4a64      	ldr	r2, [pc, #400]	@ (8105d74 <HAL_DMA_Abort+0x244>)
 8105be4:	4293      	cmp	r3, r2
 8105be6:	d00e      	beq.n	8105c06 <HAL_DMA_Abort+0xd6>
 8105be8:	687b      	ldr	r3, [r7, #4]
 8105bea:	681b      	ldr	r3, [r3, #0]
 8105bec:	4a62      	ldr	r2, [pc, #392]	@ (8105d78 <HAL_DMA_Abort+0x248>)
 8105bee:	4293      	cmp	r3, r2
 8105bf0:	d009      	beq.n	8105c06 <HAL_DMA_Abort+0xd6>
 8105bf2:	687b      	ldr	r3, [r7, #4]
 8105bf4:	681b      	ldr	r3, [r3, #0]
 8105bf6:	4a61      	ldr	r2, [pc, #388]	@ (8105d7c <HAL_DMA_Abort+0x24c>)
 8105bf8:	4293      	cmp	r3, r2
 8105bfa:	d004      	beq.n	8105c06 <HAL_DMA_Abort+0xd6>
 8105bfc:	687b      	ldr	r3, [r7, #4]
 8105bfe:	681b      	ldr	r3, [r3, #0]
 8105c00:	4a5f      	ldr	r2, [pc, #380]	@ (8105d80 <HAL_DMA_Abort+0x250>)
 8105c02:	4293      	cmp	r3, r2
 8105c04:	d101      	bne.n	8105c0a <HAL_DMA_Abort+0xda>
 8105c06:	2301      	movs	r3, #1
 8105c08:	e000      	b.n	8105c0c <HAL_DMA_Abort+0xdc>
 8105c0a:	2300      	movs	r3, #0
 8105c0c:	2b00      	cmp	r3, #0
 8105c0e:	d013      	beq.n	8105c38 <HAL_DMA_Abort+0x108>
 8105c10:	687b      	ldr	r3, [r7, #4]
 8105c12:	681b      	ldr	r3, [r3, #0]
 8105c14:	681a      	ldr	r2, [r3, #0]
 8105c16:	687b      	ldr	r3, [r7, #4]
 8105c18:	681b      	ldr	r3, [r3, #0]
 8105c1a:	f022 021e 	bic.w	r2, r2, #30
 8105c1e:	601a      	str	r2, [r3, #0]
 8105c20:	687b      	ldr	r3, [r7, #4]
 8105c22:	681b      	ldr	r3, [r3, #0]
 8105c24:	695a      	ldr	r2, [r3, #20]
 8105c26:	687b      	ldr	r3, [r7, #4]
 8105c28:	681b      	ldr	r3, [r3, #0]
 8105c2a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8105c2e:	615a      	str	r2, [r3, #20]
 8105c30:	687b      	ldr	r3, [r7, #4]
 8105c32:	681b      	ldr	r3, [r3, #0]
 8105c34:	617b      	str	r3, [r7, #20]
 8105c36:	e00a      	b.n	8105c4e <HAL_DMA_Abort+0x11e>
 8105c38:	687b      	ldr	r3, [r7, #4]
 8105c3a:	681b      	ldr	r3, [r3, #0]
 8105c3c:	681a      	ldr	r2, [r3, #0]
 8105c3e:	687b      	ldr	r3, [r7, #4]
 8105c40:	681b      	ldr	r3, [r3, #0]
 8105c42:	f022 020e 	bic.w	r2, r2, #14
 8105c46:	601a      	str	r2, [r3, #0]
 8105c48:	687b      	ldr	r3, [r7, #4]
 8105c4a:	681b      	ldr	r3, [r3, #0]
 8105c4c:	617b      	str	r3, [r7, #20]
 8105c4e:	687b      	ldr	r3, [r7, #4]
 8105c50:	681b      	ldr	r3, [r3, #0]
 8105c52:	4a3c      	ldr	r2, [pc, #240]	@ (8105d44 <HAL_DMA_Abort+0x214>)
 8105c54:	4293      	cmp	r3, r2
 8105c56:	d072      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105c58:	687b      	ldr	r3, [r7, #4]
 8105c5a:	681b      	ldr	r3, [r3, #0]
 8105c5c:	4a3a      	ldr	r2, [pc, #232]	@ (8105d48 <HAL_DMA_Abort+0x218>)
 8105c5e:	4293      	cmp	r3, r2
 8105c60:	d06d      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105c62:	687b      	ldr	r3, [r7, #4]
 8105c64:	681b      	ldr	r3, [r3, #0]
 8105c66:	4a39      	ldr	r2, [pc, #228]	@ (8105d4c <HAL_DMA_Abort+0x21c>)
 8105c68:	4293      	cmp	r3, r2
 8105c6a:	d068      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105c6c:	687b      	ldr	r3, [r7, #4]
 8105c6e:	681b      	ldr	r3, [r3, #0]
 8105c70:	4a37      	ldr	r2, [pc, #220]	@ (8105d50 <HAL_DMA_Abort+0x220>)
 8105c72:	4293      	cmp	r3, r2
 8105c74:	d063      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105c76:	687b      	ldr	r3, [r7, #4]
 8105c78:	681b      	ldr	r3, [r3, #0]
 8105c7a:	4a36      	ldr	r2, [pc, #216]	@ (8105d54 <HAL_DMA_Abort+0x224>)
 8105c7c:	4293      	cmp	r3, r2
 8105c7e:	d05e      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105c80:	687b      	ldr	r3, [r7, #4]
 8105c82:	681b      	ldr	r3, [r3, #0]
 8105c84:	4a34      	ldr	r2, [pc, #208]	@ (8105d58 <HAL_DMA_Abort+0x228>)
 8105c86:	4293      	cmp	r3, r2
 8105c88:	d059      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105c8a:	687b      	ldr	r3, [r7, #4]
 8105c8c:	681b      	ldr	r3, [r3, #0]
 8105c8e:	4a33      	ldr	r2, [pc, #204]	@ (8105d5c <HAL_DMA_Abort+0x22c>)
 8105c90:	4293      	cmp	r3, r2
 8105c92:	d054      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105c94:	687b      	ldr	r3, [r7, #4]
 8105c96:	681b      	ldr	r3, [r3, #0]
 8105c98:	4a31      	ldr	r2, [pc, #196]	@ (8105d60 <HAL_DMA_Abort+0x230>)
 8105c9a:	4293      	cmp	r3, r2
 8105c9c:	d04f      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105c9e:	687b      	ldr	r3, [r7, #4]
 8105ca0:	681b      	ldr	r3, [r3, #0]
 8105ca2:	4a30      	ldr	r2, [pc, #192]	@ (8105d64 <HAL_DMA_Abort+0x234>)
 8105ca4:	4293      	cmp	r3, r2
 8105ca6:	d04a      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105ca8:	687b      	ldr	r3, [r7, #4]
 8105caa:	681b      	ldr	r3, [r3, #0]
 8105cac:	4a2e      	ldr	r2, [pc, #184]	@ (8105d68 <HAL_DMA_Abort+0x238>)
 8105cae:	4293      	cmp	r3, r2
 8105cb0:	d045      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105cb2:	687b      	ldr	r3, [r7, #4]
 8105cb4:	681b      	ldr	r3, [r3, #0]
 8105cb6:	4a2d      	ldr	r2, [pc, #180]	@ (8105d6c <HAL_DMA_Abort+0x23c>)
 8105cb8:	4293      	cmp	r3, r2
 8105cba:	d040      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105cbc:	687b      	ldr	r3, [r7, #4]
 8105cbe:	681b      	ldr	r3, [r3, #0]
 8105cc0:	4a2b      	ldr	r2, [pc, #172]	@ (8105d70 <HAL_DMA_Abort+0x240>)
 8105cc2:	4293      	cmp	r3, r2
 8105cc4:	d03b      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105cc6:	687b      	ldr	r3, [r7, #4]
 8105cc8:	681b      	ldr	r3, [r3, #0]
 8105cca:	4a2a      	ldr	r2, [pc, #168]	@ (8105d74 <HAL_DMA_Abort+0x244>)
 8105ccc:	4293      	cmp	r3, r2
 8105cce:	d036      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105cd0:	687b      	ldr	r3, [r7, #4]
 8105cd2:	681b      	ldr	r3, [r3, #0]
 8105cd4:	4a28      	ldr	r2, [pc, #160]	@ (8105d78 <HAL_DMA_Abort+0x248>)
 8105cd6:	4293      	cmp	r3, r2
 8105cd8:	d031      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105cda:	687b      	ldr	r3, [r7, #4]
 8105cdc:	681b      	ldr	r3, [r3, #0]
 8105cde:	4a27      	ldr	r2, [pc, #156]	@ (8105d7c <HAL_DMA_Abort+0x24c>)
 8105ce0:	4293      	cmp	r3, r2
 8105ce2:	d02c      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105ce4:	687b      	ldr	r3, [r7, #4]
 8105ce6:	681b      	ldr	r3, [r3, #0]
 8105ce8:	4a25      	ldr	r2, [pc, #148]	@ (8105d80 <HAL_DMA_Abort+0x250>)
 8105cea:	4293      	cmp	r3, r2
 8105cec:	d027      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105cee:	687b      	ldr	r3, [r7, #4]
 8105cf0:	681b      	ldr	r3, [r3, #0]
 8105cf2:	4a24      	ldr	r2, [pc, #144]	@ (8105d84 <HAL_DMA_Abort+0x254>)
 8105cf4:	4293      	cmp	r3, r2
 8105cf6:	d022      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105cf8:	687b      	ldr	r3, [r7, #4]
 8105cfa:	681b      	ldr	r3, [r3, #0]
 8105cfc:	4a22      	ldr	r2, [pc, #136]	@ (8105d88 <HAL_DMA_Abort+0x258>)
 8105cfe:	4293      	cmp	r3, r2
 8105d00:	d01d      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105d02:	687b      	ldr	r3, [r7, #4]
 8105d04:	681b      	ldr	r3, [r3, #0]
 8105d06:	4a21      	ldr	r2, [pc, #132]	@ (8105d8c <HAL_DMA_Abort+0x25c>)
 8105d08:	4293      	cmp	r3, r2
 8105d0a:	d018      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105d0c:	687b      	ldr	r3, [r7, #4]
 8105d0e:	681b      	ldr	r3, [r3, #0]
 8105d10:	4a1f      	ldr	r2, [pc, #124]	@ (8105d90 <HAL_DMA_Abort+0x260>)
 8105d12:	4293      	cmp	r3, r2
 8105d14:	d013      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105d16:	687b      	ldr	r3, [r7, #4]
 8105d18:	681b      	ldr	r3, [r3, #0]
 8105d1a:	4a1e      	ldr	r2, [pc, #120]	@ (8105d94 <HAL_DMA_Abort+0x264>)
 8105d1c:	4293      	cmp	r3, r2
 8105d1e:	d00e      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105d20:	687b      	ldr	r3, [r7, #4]
 8105d22:	681b      	ldr	r3, [r3, #0]
 8105d24:	4a1c      	ldr	r2, [pc, #112]	@ (8105d98 <HAL_DMA_Abort+0x268>)
 8105d26:	4293      	cmp	r3, r2
 8105d28:	d009      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105d2a:	687b      	ldr	r3, [r7, #4]
 8105d2c:	681b      	ldr	r3, [r3, #0]
 8105d2e:	4a1b      	ldr	r2, [pc, #108]	@ (8105d9c <HAL_DMA_Abort+0x26c>)
 8105d30:	4293      	cmp	r3, r2
 8105d32:	d004      	beq.n	8105d3e <HAL_DMA_Abort+0x20e>
 8105d34:	687b      	ldr	r3, [r7, #4]
 8105d36:	681b      	ldr	r3, [r3, #0]
 8105d38:	4a19      	ldr	r2, [pc, #100]	@ (8105da0 <HAL_DMA_Abort+0x270>)
 8105d3a:	4293      	cmp	r3, r2
 8105d3c:	d132      	bne.n	8105da4 <HAL_DMA_Abort+0x274>
 8105d3e:	2301      	movs	r3, #1
 8105d40:	e031      	b.n	8105da6 <HAL_DMA_Abort+0x276>
 8105d42:	bf00      	nop
 8105d44:	40020010 	.word	0x40020010
 8105d48:	40020028 	.word	0x40020028
 8105d4c:	40020040 	.word	0x40020040
 8105d50:	40020058 	.word	0x40020058
 8105d54:	40020070 	.word	0x40020070
 8105d58:	40020088 	.word	0x40020088
 8105d5c:	400200a0 	.word	0x400200a0
 8105d60:	400200b8 	.word	0x400200b8
 8105d64:	40020410 	.word	0x40020410
 8105d68:	40020428 	.word	0x40020428
 8105d6c:	40020440 	.word	0x40020440
 8105d70:	40020458 	.word	0x40020458
 8105d74:	40020470 	.word	0x40020470
 8105d78:	40020488 	.word	0x40020488
 8105d7c:	400204a0 	.word	0x400204a0
 8105d80:	400204b8 	.word	0x400204b8
 8105d84:	58025408 	.word	0x58025408
 8105d88:	5802541c 	.word	0x5802541c
 8105d8c:	58025430 	.word	0x58025430
 8105d90:	58025444 	.word	0x58025444
 8105d94:	58025458 	.word	0x58025458
 8105d98:	5802546c 	.word	0x5802546c
 8105d9c:	58025480 	.word	0x58025480
 8105da0:	58025494 	.word	0x58025494
 8105da4:	2300      	movs	r3, #0
 8105da6:	2b00      	cmp	r3, #0
 8105da8:	d007      	beq.n	8105dba <HAL_DMA_Abort+0x28a>
 8105daa:	687b      	ldr	r3, [r7, #4]
 8105dac:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8105dae:	681a      	ldr	r2, [r3, #0]
 8105db0:	687b      	ldr	r3, [r7, #4]
 8105db2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8105db4:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8105db8:	601a      	str	r2, [r3, #0]
 8105dba:	687b      	ldr	r3, [r7, #4]
 8105dbc:	681b      	ldr	r3, [r3, #0]
 8105dbe:	4a6d      	ldr	r2, [pc, #436]	@ (8105f74 <HAL_DMA_Abort+0x444>)
 8105dc0:	4293      	cmp	r3, r2
 8105dc2:	d04a      	beq.n	8105e5a <HAL_DMA_Abort+0x32a>
 8105dc4:	687b      	ldr	r3, [r7, #4]
 8105dc6:	681b      	ldr	r3, [r3, #0]
 8105dc8:	4a6b      	ldr	r2, [pc, #428]	@ (8105f78 <HAL_DMA_Abort+0x448>)
 8105dca:	4293      	cmp	r3, r2
 8105dcc:	d045      	beq.n	8105e5a <HAL_DMA_Abort+0x32a>
 8105dce:	687b      	ldr	r3, [r7, #4]
 8105dd0:	681b      	ldr	r3, [r3, #0]
 8105dd2:	4a6a      	ldr	r2, [pc, #424]	@ (8105f7c <HAL_DMA_Abort+0x44c>)
 8105dd4:	4293      	cmp	r3, r2
 8105dd6:	d040      	beq.n	8105e5a <HAL_DMA_Abort+0x32a>
 8105dd8:	687b      	ldr	r3, [r7, #4]
 8105dda:	681b      	ldr	r3, [r3, #0]
 8105ddc:	4a68      	ldr	r2, [pc, #416]	@ (8105f80 <HAL_DMA_Abort+0x450>)
 8105dde:	4293      	cmp	r3, r2
 8105de0:	d03b      	beq.n	8105e5a <HAL_DMA_Abort+0x32a>
 8105de2:	687b      	ldr	r3, [r7, #4]
 8105de4:	681b      	ldr	r3, [r3, #0]
 8105de6:	4a67      	ldr	r2, [pc, #412]	@ (8105f84 <HAL_DMA_Abort+0x454>)
 8105de8:	4293      	cmp	r3, r2
 8105dea:	d036      	beq.n	8105e5a <HAL_DMA_Abort+0x32a>
 8105dec:	687b      	ldr	r3, [r7, #4]
 8105dee:	681b      	ldr	r3, [r3, #0]
 8105df0:	4a65      	ldr	r2, [pc, #404]	@ (8105f88 <HAL_DMA_Abort+0x458>)
 8105df2:	4293      	cmp	r3, r2
 8105df4:	d031      	beq.n	8105e5a <HAL_DMA_Abort+0x32a>
 8105df6:	687b      	ldr	r3, [r7, #4]
 8105df8:	681b      	ldr	r3, [r3, #0]
 8105dfa:	4a64      	ldr	r2, [pc, #400]	@ (8105f8c <HAL_DMA_Abort+0x45c>)
 8105dfc:	4293      	cmp	r3, r2
 8105dfe:	d02c      	beq.n	8105e5a <HAL_DMA_Abort+0x32a>
 8105e00:	687b      	ldr	r3, [r7, #4]
 8105e02:	681b      	ldr	r3, [r3, #0]
 8105e04:	4a62      	ldr	r2, [pc, #392]	@ (8105f90 <HAL_DMA_Abort+0x460>)
 8105e06:	4293      	cmp	r3, r2
 8105e08:	d027      	beq.n	8105e5a <HAL_DMA_Abort+0x32a>
 8105e0a:	687b      	ldr	r3, [r7, #4]
 8105e0c:	681b      	ldr	r3, [r3, #0]
 8105e0e:	4a61      	ldr	r2, [pc, #388]	@ (8105f94 <HAL_DMA_Abort+0x464>)
 8105e10:	4293      	cmp	r3, r2
 8105e12:	d022      	beq.n	8105e5a <HAL_DMA_Abort+0x32a>
 8105e14:	687b      	ldr	r3, [r7, #4]
 8105e16:	681b      	ldr	r3, [r3, #0]
 8105e18:	4a5f      	ldr	r2, [pc, #380]	@ (8105f98 <HAL_DMA_Abort+0x468>)
 8105e1a:	4293      	cmp	r3, r2
 8105e1c:	d01d      	beq.n	8105e5a <HAL_DMA_Abort+0x32a>
 8105e1e:	687b      	ldr	r3, [r7, #4]
 8105e20:	681b      	ldr	r3, [r3, #0]
 8105e22:	4a5e      	ldr	r2, [pc, #376]	@ (8105f9c <HAL_DMA_Abort+0x46c>)
 8105e24:	4293      	cmp	r3, r2
 8105e26:	d018      	beq.n	8105e5a <HAL_DMA_Abort+0x32a>
 8105e28:	687b      	ldr	r3, [r7, #4]
 8105e2a:	681b      	ldr	r3, [r3, #0]
 8105e2c:	4a5c      	ldr	r2, [pc, #368]	@ (8105fa0 <HAL_DMA_Abort+0x470>)
 8105e2e:	4293      	cmp	r3, r2
 8105e30:	d013      	beq.n	8105e5a <HAL_DMA_Abort+0x32a>
 8105e32:	687b      	ldr	r3, [r7, #4]
 8105e34:	681b      	ldr	r3, [r3, #0]
 8105e36:	4a5b      	ldr	r2, [pc, #364]	@ (8105fa4 <HAL_DMA_Abort+0x474>)
 8105e38:	4293      	cmp	r3, r2
 8105e3a:	d00e      	beq.n	8105e5a <HAL_DMA_Abort+0x32a>
 8105e3c:	687b      	ldr	r3, [r7, #4]
 8105e3e:	681b      	ldr	r3, [r3, #0]
 8105e40:	4a59      	ldr	r2, [pc, #356]	@ (8105fa8 <HAL_DMA_Abort+0x478>)
 8105e42:	4293      	cmp	r3, r2
 8105e44:	d009      	beq.n	8105e5a <HAL_DMA_Abort+0x32a>
 8105e46:	687b      	ldr	r3, [r7, #4]
 8105e48:	681b      	ldr	r3, [r3, #0]
 8105e4a:	4a58      	ldr	r2, [pc, #352]	@ (8105fac <HAL_DMA_Abort+0x47c>)
 8105e4c:	4293      	cmp	r3, r2
 8105e4e:	d004      	beq.n	8105e5a <HAL_DMA_Abort+0x32a>
 8105e50:	687b      	ldr	r3, [r7, #4]
 8105e52:	681b      	ldr	r3, [r3, #0]
 8105e54:	4a56      	ldr	r2, [pc, #344]	@ (8105fb0 <HAL_DMA_Abort+0x480>)
 8105e56:	4293      	cmp	r3, r2
 8105e58:	d108      	bne.n	8105e6c <HAL_DMA_Abort+0x33c>
 8105e5a:	687b      	ldr	r3, [r7, #4]
 8105e5c:	681b      	ldr	r3, [r3, #0]
 8105e5e:	681a      	ldr	r2, [r3, #0]
 8105e60:	687b      	ldr	r3, [r7, #4]
 8105e62:	681b      	ldr	r3, [r3, #0]
 8105e64:	f022 0201 	bic.w	r2, r2, #1
 8105e68:	601a      	str	r2, [r3, #0]
 8105e6a:	e007      	b.n	8105e7c <HAL_DMA_Abort+0x34c>
 8105e6c:	687b      	ldr	r3, [r7, #4]
 8105e6e:	681b      	ldr	r3, [r3, #0]
 8105e70:	681a      	ldr	r2, [r3, #0]
 8105e72:	687b      	ldr	r3, [r7, #4]
 8105e74:	681b      	ldr	r3, [r3, #0]
 8105e76:	f022 0201 	bic.w	r2, r2, #1
 8105e7a:	601a      	str	r2, [r3, #0]
 8105e7c:	e013      	b.n	8105ea6 <HAL_DMA_Abort+0x376>
 8105e7e:	f7ff fd6b 	bl	8105958 <HAL_GetTick>
 8105e82:	4602      	mov	r2, r0
 8105e84:	693b      	ldr	r3, [r7, #16]
 8105e86:	1ad3      	subs	r3, r2, r3
 8105e88:	2b05      	cmp	r3, #5
 8105e8a:	d90c      	bls.n	8105ea6 <HAL_DMA_Abort+0x376>
 8105e8c:	687b      	ldr	r3, [r7, #4]
 8105e8e:	2220      	movs	r2, #32
 8105e90:	655a      	str	r2, [r3, #84]	@ 0x54
 8105e92:	687b      	ldr	r3, [r7, #4]
 8105e94:	2203      	movs	r2, #3
 8105e96:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8105e9a:	687b      	ldr	r3, [r7, #4]
 8105e9c:	2200      	movs	r2, #0
 8105e9e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8105ea2:	2301      	movs	r3, #1
 8105ea4:	e12d      	b.n	8106102 <HAL_DMA_Abort+0x5d2>
 8105ea6:	697b      	ldr	r3, [r7, #20]
 8105ea8:	681b      	ldr	r3, [r3, #0]
 8105eaa:	f003 0301 	and.w	r3, r3, #1
 8105eae:	2b00      	cmp	r3, #0
 8105eb0:	d1e5      	bne.n	8105e7e <HAL_DMA_Abort+0x34e>
 8105eb2:	687b      	ldr	r3, [r7, #4]
 8105eb4:	681b      	ldr	r3, [r3, #0]
 8105eb6:	4a2f      	ldr	r2, [pc, #188]	@ (8105f74 <HAL_DMA_Abort+0x444>)
 8105eb8:	4293      	cmp	r3, r2
 8105eba:	d04a      	beq.n	8105f52 <HAL_DMA_Abort+0x422>
 8105ebc:	687b      	ldr	r3, [r7, #4]
 8105ebe:	681b      	ldr	r3, [r3, #0]
 8105ec0:	4a2d      	ldr	r2, [pc, #180]	@ (8105f78 <HAL_DMA_Abort+0x448>)
 8105ec2:	4293      	cmp	r3, r2
 8105ec4:	d045      	beq.n	8105f52 <HAL_DMA_Abort+0x422>
 8105ec6:	687b      	ldr	r3, [r7, #4]
 8105ec8:	681b      	ldr	r3, [r3, #0]
 8105eca:	4a2c      	ldr	r2, [pc, #176]	@ (8105f7c <HAL_DMA_Abort+0x44c>)
 8105ecc:	4293      	cmp	r3, r2
 8105ece:	d040      	beq.n	8105f52 <HAL_DMA_Abort+0x422>
 8105ed0:	687b      	ldr	r3, [r7, #4]
 8105ed2:	681b      	ldr	r3, [r3, #0]
 8105ed4:	4a2a      	ldr	r2, [pc, #168]	@ (8105f80 <HAL_DMA_Abort+0x450>)
 8105ed6:	4293      	cmp	r3, r2
 8105ed8:	d03b      	beq.n	8105f52 <HAL_DMA_Abort+0x422>
 8105eda:	687b      	ldr	r3, [r7, #4]
 8105edc:	681b      	ldr	r3, [r3, #0]
 8105ede:	4a29      	ldr	r2, [pc, #164]	@ (8105f84 <HAL_DMA_Abort+0x454>)
 8105ee0:	4293      	cmp	r3, r2
 8105ee2:	d036      	beq.n	8105f52 <HAL_DMA_Abort+0x422>
 8105ee4:	687b      	ldr	r3, [r7, #4]
 8105ee6:	681b      	ldr	r3, [r3, #0]
 8105ee8:	4a27      	ldr	r2, [pc, #156]	@ (8105f88 <HAL_DMA_Abort+0x458>)
 8105eea:	4293      	cmp	r3, r2
 8105eec:	d031      	beq.n	8105f52 <HAL_DMA_Abort+0x422>
 8105eee:	687b      	ldr	r3, [r7, #4]
 8105ef0:	681b      	ldr	r3, [r3, #0]
 8105ef2:	4a26      	ldr	r2, [pc, #152]	@ (8105f8c <HAL_DMA_Abort+0x45c>)
 8105ef4:	4293      	cmp	r3, r2
 8105ef6:	d02c      	beq.n	8105f52 <HAL_DMA_Abort+0x422>
 8105ef8:	687b      	ldr	r3, [r7, #4]
 8105efa:	681b      	ldr	r3, [r3, #0]
 8105efc:	4a24      	ldr	r2, [pc, #144]	@ (8105f90 <HAL_DMA_Abort+0x460>)
 8105efe:	4293      	cmp	r3, r2
 8105f00:	d027      	beq.n	8105f52 <HAL_DMA_Abort+0x422>
 8105f02:	687b      	ldr	r3, [r7, #4]
 8105f04:	681b      	ldr	r3, [r3, #0]
 8105f06:	4a23      	ldr	r2, [pc, #140]	@ (8105f94 <HAL_DMA_Abort+0x464>)
 8105f08:	4293      	cmp	r3, r2
 8105f0a:	d022      	beq.n	8105f52 <HAL_DMA_Abort+0x422>
 8105f0c:	687b      	ldr	r3, [r7, #4]
 8105f0e:	681b      	ldr	r3, [r3, #0]
 8105f10:	4a21      	ldr	r2, [pc, #132]	@ (8105f98 <HAL_DMA_Abort+0x468>)
 8105f12:	4293      	cmp	r3, r2
 8105f14:	d01d      	beq.n	8105f52 <HAL_DMA_Abort+0x422>
 8105f16:	687b      	ldr	r3, [r7, #4]
 8105f18:	681b      	ldr	r3, [r3, #0]
 8105f1a:	4a20      	ldr	r2, [pc, #128]	@ (8105f9c <HAL_DMA_Abort+0x46c>)
 8105f1c:	4293      	cmp	r3, r2
 8105f1e:	d018      	beq.n	8105f52 <HAL_DMA_Abort+0x422>
 8105f20:	687b      	ldr	r3, [r7, #4]
 8105f22:	681b      	ldr	r3, [r3, #0]
 8105f24:	4a1e      	ldr	r2, [pc, #120]	@ (8105fa0 <HAL_DMA_Abort+0x470>)
 8105f26:	4293      	cmp	r3, r2
 8105f28:	d013      	beq.n	8105f52 <HAL_DMA_Abort+0x422>
 8105f2a:	687b      	ldr	r3, [r7, #4]
 8105f2c:	681b      	ldr	r3, [r3, #0]
 8105f2e:	4a1d      	ldr	r2, [pc, #116]	@ (8105fa4 <HAL_DMA_Abort+0x474>)
 8105f30:	4293      	cmp	r3, r2
 8105f32:	d00e      	beq.n	8105f52 <HAL_DMA_Abort+0x422>
 8105f34:	687b      	ldr	r3, [r7, #4]
 8105f36:	681b      	ldr	r3, [r3, #0]
 8105f38:	4a1b      	ldr	r2, [pc, #108]	@ (8105fa8 <HAL_DMA_Abort+0x478>)
 8105f3a:	4293      	cmp	r3, r2
 8105f3c:	d009      	beq.n	8105f52 <HAL_DMA_Abort+0x422>
 8105f3e:	687b      	ldr	r3, [r7, #4]
 8105f40:	681b      	ldr	r3, [r3, #0]
 8105f42:	4a1a      	ldr	r2, [pc, #104]	@ (8105fac <HAL_DMA_Abort+0x47c>)
 8105f44:	4293      	cmp	r3, r2
 8105f46:	d004      	beq.n	8105f52 <HAL_DMA_Abort+0x422>
 8105f48:	687b      	ldr	r3, [r7, #4]
 8105f4a:	681b      	ldr	r3, [r3, #0]
 8105f4c:	4a18      	ldr	r2, [pc, #96]	@ (8105fb0 <HAL_DMA_Abort+0x480>)
 8105f4e:	4293      	cmp	r3, r2
 8105f50:	d101      	bne.n	8105f56 <HAL_DMA_Abort+0x426>
 8105f52:	2301      	movs	r3, #1
 8105f54:	e000      	b.n	8105f58 <HAL_DMA_Abort+0x428>
 8105f56:	2300      	movs	r3, #0
 8105f58:	2b00      	cmp	r3, #0
 8105f5a:	d02b      	beq.n	8105fb4 <HAL_DMA_Abort+0x484>
 8105f5c:	687b      	ldr	r3, [r7, #4]
 8105f5e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8105f60:	60bb      	str	r3, [r7, #8]
 8105f62:	687b      	ldr	r3, [r7, #4]
 8105f64:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8105f66:	f003 031f 	and.w	r3, r3, #31
 8105f6a:	223f      	movs	r2, #63	@ 0x3f
 8105f6c:	409a      	lsls	r2, r3
 8105f6e:	68bb      	ldr	r3, [r7, #8]
 8105f70:	609a      	str	r2, [r3, #8]
 8105f72:	e02a      	b.n	8105fca <HAL_DMA_Abort+0x49a>
 8105f74:	40020010 	.word	0x40020010
 8105f78:	40020028 	.word	0x40020028
 8105f7c:	40020040 	.word	0x40020040
 8105f80:	40020058 	.word	0x40020058
 8105f84:	40020070 	.word	0x40020070
 8105f88:	40020088 	.word	0x40020088
 8105f8c:	400200a0 	.word	0x400200a0
 8105f90:	400200b8 	.word	0x400200b8
 8105f94:	40020410 	.word	0x40020410
 8105f98:	40020428 	.word	0x40020428
 8105f9c:	40020440 	.word	0x40020440
 8105fa0:	40020458 	.word	0x40020458
 8105fa4:	40020470 	.word	0x40020470
 8105fa8:	40020488 	.word	0x40020488
 8105fac:	400204a0 	.word	0x400204a0
 8105fb0:	400204b8 	.word	0x400204b8
 8105fb4:	687b      	ldr	r3, [r7, #4]
 8105fb6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8105fb8:	60fb      	str	r3, [r7, #12]
 8105fba:	687b      	ldr	r3, [r7, #4]
 8105fbc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8105fbe:	f003 031f 	and.w	r3, r3, #31
 8105fc2:	2201      	movs	r2, #1
 8105fc4:	409a      	lsls	r2, r3
 8105fc6:	68fb      	ldr	r3, [r7, #12]
 8105fc8:	605a      	str	r2, [r3, #4]
 8105fca:	687b      	ldr	r3, [r7, #4]
 8105fcc:	681b      	ldr	r3, [r3, #0]
 8105fce:	4a4f      	ldr	r2, [pc, #316]	@ (810610c <HAL_DMA_Abort+0x5dc>)
 8105fd0:	4293      	cmp	r3, r2
 8105fd2:	d072      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 8105fd4:	687b      	ldr	r3, [r7, #4]
 8105fd6:	681b      	ldr	r3, [r3, #0]
 8105fd8:	4a4d      	ldr	r2, [pc, #308]	@ (8106110 <HAL_DMA_Abort+0x5e0>)
 8105fda:	4293      	cmp	r3, r2
 8105fdc:	d06d      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 8105fde:	687b      	ldr	r3, [r7, #4]
 8105fe0:	681b      	ldr	r3, [r3, #0]
 8105fe2:	4a4c      	ldr	r2, [pc, #304]	@ (8106114 <HAL_DMA_Abort+0x5e4>)
 8105fe4:	4293      	cmp	r3, r2
 8105fe6:	d068      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 8105fe8:	687b      	ldr	r3, [r7, #4]
 8105fea:	681b      	ldr	r3, [r3, #0]
 8105fec:	4a4a      	ldr	r2, [pc, #296]	@ (8106118 <HAL_DMA_Abort+0x5e8>)
 8105fee:	4293      	cmp	r3, r2
 8105ff0:	d063      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 8105ff2:	687b      	ldr	r3, [r7, #4]
 8105ff4:	681b      	ldr	r3, [r3, #0]
 8105ff6:	4a49      	ldr	r2, [pc, #292]	@ (810611c <HAL_DMA_Abort+0x5ec>)
 8105ff8:	4293      	cmp	r3, r2
 8105ffa:	d05e      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 8105ffc:	687b      	ldr	r3, [r7, #4]
 8105ffe:	681b      	ldr	r3, [r3, #0]
 8106000:	4a47      	ldr	r2, [pc, #284]	@ (8106120 <HAL_DMA_Abort+0x5f0>)
 8106002:	4293      	cmp	r3, r2
 8106004:	d059      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 8106006:	687b      	ldr	r3, [r7, #4]
 8106008:	681b      	ldr	r3, [r3, #0]
 810600a:	4a46      	ldr	r2, [pc, #280]	@ (8106124 <HAL_DMA_Abort+0x5f4>)
 810600c:	4293      	cmp	r3, r2
 810600e:	d054      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 8106010:	687b      	ldr	r3, [r7, #4]
 8106012:	681b      	ldr	r3, [r3, #0]
 8106014:	4a44      	ldr	r2, [pc, #272]	@ (8106128 <HAL_DMA_Abort+0x5f8>)
 8106016:	4293      	cmp	r3, r2
 8106018:	d04f      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 810601a:	687b      	ldr	r3, [r7, #4]
 810601c:	681b      	ldr	r3, [r3, #0]
 810601e:	4a43      	ldr	r2, [pc, #268]	@ (810612c <HAL_DMA_Abort+0x5fc>)
 8106020:	4293      	cmp	r3, r2
 8106022:	d04a      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 8106024:	687b      	ldr	r3, [r7, #4]
 8106026:	681b      	ldr	r3, [r3, #0]
 8106028:	4a41      	ldr	r2, [pc, #260]	@ (8106130 <HAL_DMA_Abort+0x600>)
 810602a:	4293      	cmp	r3, r2
 810602c:	d045      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 810602e:	687b      	ldr	r3, [r7, #4]
 8106030:	681b      	ldr	r3, [r3, #0]
 8106032:	4a40      	ldr	r2, [pc, #256]	@ (8106134 <HAL_DMA_Abort+0x604>)
 8106034:	4293      	cmp	r3, r2
 8106036:	d040      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 8106038:	687b      	ldr	r3, [r7, #4]
 810603a:	681b      	ldr	r3, [r3, #0]
 810603c:	4a3e      	ldr	r2, [pc, #248]	@ (8106138 <HAL_DMA_Abort+0x608>)
 810603e:	4293      	cmp	r3, r2
 8106040:	d03b      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 8106042:	687b      	ldr	r3, [r7, #4]
 8106044:	681b      	ldr	r3, [r3, #0]
 8106046:	4a3d      	ldr	r2, [pc, #244]	@ (810613c <HAL_DMA_Abort+0x60c>)
 8106048:	4293      	cmp	r3, r2
 810604a:	d036      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 810604c:	687b      	ldr	r3, [r7, #4]
 810604e:	681b      	ldr	r3, [r3, #0]
 8106050:	4a3b      	ldr	r2, [pc, #236]	@ (8106140 <HAL_DMA_Abort+0x610>)
 8106052:	4293      	cmp	r3, r2
 8106054:	d031      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 8106056:	687b      	ldr	r3, [r7, #4]
 8106058:	681b      	ldr	r3, [r3, #0]
 810605a:	4a3a      	ldr	r2, [pc, #232]	@ (8106144 <HAL_DMA_Abort+0x614>)
 810605c:	4293      	cmp	r3, r2
 810605e:	d02c      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 8106060:	687b      	ldr	r3, [r7, #4]
 8106062:	681b      	ldr	r3, [r3, #0]
 8106064:	4a38      	ldr	r2, [pc, #224]	@ (8106148 <HAL_DMA_Abort+0x618>)
 8106066:	4293      	cmp	r3, r2
 8106068:	d027      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 810606a:	687b      	ldr	r3, [r7, #4]
 810606c:	681b      	ldr	r3, [r3, #0]
 810606e:	4a37      	ldr	r2, [pc, #220]	@ (810614c <HAL_DMA_Abort+0x61c>)
 8106070:	4293      	cmp	r3, r2
 8106072:	d022      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 8106074:	687b      	ldr	r3, [r7, #4]
 8106076:	681b      	ldr	r3, [r3, #0]
 8106078:	4a35      	ldr	r2, [pc, #212]	@ (8106150 <HAL_DMA_Abort+0x620>)
 810607a:	4293      	cmp	r3, r2
 810607c:	d01d      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 810607e:	687b      	ldr	r3, [r7, #4]
 8106080:	681b      	ldr	r3, [r3, #0]
 8106082:	4a34      	ldr	r2, [pc, #208]	@ (8106154 <HAL_DMA_Abort+0x624>)
 8106084:	4293      	cmp	r3, r2
 8106086:	d018      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 8106088:	687b      	ldr	r3, [r7, #4]
 810608a:	681b      	ldr	r3, [r3, #0]
 810608c:	4a32      	ldr	r2, [pc, #200]	@ (8106158 <HAL_DMA_Abort+0x628>)
 810608e:	4293      	cmp	r3, r2
 8106090:	d013      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 8106092:	687b      	ldr	r3, [r7, #4]
 8106094:	681b      	ldr	r3, [r3, #0]
 8106096:	4a31      	ldr	r2, [pc, #196]	@ (810615c <HAL_DMA_Abort+0x62c>)
 8106098:	4293      	cmp	r3, r2
 810609a:	d00e      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 810609c:	687b      	ldr	r3, [r7, #4]
 810609e:	681b      	ldr	r3, [r3, #0]
 81060a0:	4a2f      	ldr	r2, [pc, #188]	@ (8106160 <HAL_DMA_Abort+0x630>)
 81060a2:	4293      	cmp	r3, r2
 81060a4:	d009      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 81060a6:	687b      	ldr	r3, [r7, #4]
 81060a8:	681b      	ldr	r3, [r3, #0]
 81060aa:	4a2e      	ldr	r2, [pc, #184]	@ (8106164 <HAL_DMA_Abort+0x634>)
 81060ac:	4293      	cmp	r3, r2
 81060ae:	d004      	beq.n	81060ba <HAL_DMA_Abort+0x58a>
 81060b0:	687b      	ldr	r3, [r7, #4]
 81060b2:	681b      	ldr	r3, [r3, #0]
 81060b4:	4a2c      	ldr	r2, [pc, #176]	@ (8106168 <HAL_DMA_Abort+0x638>)
 81060b6:	4293      	cmp	r3, r2
 81060b8:	d101      	bne.n	81060be <HAL_DMA_Abort+0x58e>
 81060ba:	2301      	movs	r3, #1
 81060bc:	e000      	b.n	81060c0 <HAL_DMA_Abort+0x590>
 81060be:	2300      	movs	r3, #0
 81060c0:	2b00      	cmp	r3, #0
 81060c2:	d015      	beq.n	81060f0 <HAL_DMA_Abort+0x5c0>
 81060c4:	687b      	ldr	r3, [r7, #4]
 81060c6:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 81060c8:	687a      	ldr	r2, [r7, #4]
 81060ca:	6e92      	ldr	r2, [r2, #104]	@ 0x68
 81060cc:	605a      	str	r2, [r3, #4]
 81060ce:	687b      	ldr	r3, [r7, #4]
 81060d0:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 81060d2:	2b00      	cmp	r3, #0
 81060d4:	d00c      	beq.n	81060f0 <HAL_DMA_Abort+0x5c0>
 81060d6:	687b      	ldr	r3, [r7, #4]
 81060d8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 81060da:	681a      	ldr	r2, [r3, #0]
 81060dc:	687b      	ldr	r3, [r7, #4]
 81060de:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 81060e0:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 81060e4:	601a      	str	r2, [r3, #0]
 81060e6:	687b      	ldr	r3, [r7, #4]
 81060e8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 81060ea:	687a      	ldr	r2, [r7, #4]
 81060ec:	6f52      	ldr	r2, [r2, #116]	@ 0x74
 81060ee:	605a      	str	r2, [r3, #4]
 81060f0:	687b      	ldr	r3, [r7, #4]
 81060f2:	2201      	movs	r2, #1
 81060f4:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 81060f8:	687b      	ldr	r3, [r7, #4]
 81060fa:	2200      	movs	r2, #0
 81060fc:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8106100:	2300      	movs	r3, #0
 8106102:	4618      	mov	r0, r3
 8106104:	3718      	adds	r7, #24
 8106106:	46bd      	mov	sp, r7
 8106108:	bd80      	pop	{r7, pc}
 810610a:	bf00      	nop
 810610c:	40020010 	.word	0x40020010
 8106110:	40020028 	.word	0x40020028
 8106114:	40020040 	.word	0x40020040
 8106118:	40020058 	.word	0x40020058
 810611c:	40020070 	.word	0x40020070
 8106120:	40020088 	.word	0x40020088
 8106124:	400200a0 	.word	0x400200a0
 8106128:	400200b8 	.word	0x400200b8
 810612c:	40020410 	.word	0x40020410
 8106130:	40020428 	.word	0x40020428
 8106134:	40020440 	.word	0x40020440
 8106138:	40020458 	.word	0x40020458
 810613c:	40020470 	.word	0x40020470
 8106140:	40020488 	.word	0x40020488
 8106144:	400204a0 	.word	0x400204a0
 8106148:	400204b8 	.word	0x400204b8
 810614c:	58025408 	.word	0x58025408
 8106150:	5802541c 	.word	0x5802541c
 8106154:	58025430 	.word	0x58025430
 8106158:	58025444 	.word	0x58025444
 810615c:	58025458 	.word	0x58025458
 8106160:	5802546c 	.word	0x5802546c
 8106164:	58025480 	.word	0x58025480
 8106168:	58025494 	.word	0x58025494

0810616c <HAL_DMA_Abort_IT>:
 810616c:	b580      	push	{r7, lr}
 810616e:	b084      	sub	sp, #16
 8106170:	af00      	add	r7, sp, #0
 8106172:	6078      	str	r0, [r7, #4]
 8106174:	687b      	ldr	r3, [r7, #4]
 8106176:	2b00      	cmp	r3, #0
 8106178:	d101      	bne.n	810617e <HAL_DMA_Abort_IT+0x12>
 810617a:	2301      	movs	r3, #1
 810617c:	e237      	b.n	81065ee <HAL_DMA_Abort_IT+0x482>
 810617e:	687b      	ldr	r3, [r7, #4]
 8106180:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8106184:	b2db      	uxtb	r3, r3
 8106186:	2b02      	cmp	r3, #2
 8106188:	d004      	beq.n	8106194 <HAL_DMA_Abort_IT+0x28>
 810618a:	687b      	ldr	r3, [r7, #4]
 810618c:	2280      	movs	r2, #128	@ 0x80
 810618e:	655a      	str	r2, [r3, #84]	@ 0x54
 8106190:	2301      	movs	r3, #1
 8106192:	e22c      	b.n	81065ee <HAL_DMA_Abort_IT+0x482>
 8106194:	687b      	ldr	r3, [r7, #4]
 8106196:	681b      	ldr	r3, [r3, #0]
 8106198:	4a5c      	ldr	r2, [pc, #368]	@ (810630c <HAL_DMA_Abort_IT+0x1a0>)
 810619a:	4293      	cmp	r3, r2
 810619c:	d04a      	beq.n	8106234 <HAL_DMA_Abort_IT+0xc8>
 810619e:	687b      	ldr	r3, [r7, #4]
 81061a0:	681b      	ldr	r3, [r3, #0]
 81061a2:	4a5b      	ldr	r2, [pc, #364]	@ (8106310 <HAL_DMA_Abort_IT+0x1a4>)
 81061a4:	4293      	cmp	r3, r2
 81061a6:	d045      	beq.n	8106234 <HAL_DMA_Abort_IT+0xc8>
 81061a8:	687b      	ldr	r3, [r7, #4]
 81061aa:	681b      	ldr	r3, [r3, #0]
 81061ac:	4a59      	ldr	r2, [pc, #356]	@ (8106314 <HAL_DMA_Abort_IT+0x1a8>)
 81061ae:	4293      	cmp	r3, r2
 81061b0:	d040      	beq.n	8106234 <HAL_DMA_Abort_IT+0xc8>
 81061b2:	687b      	ldr	r3, [r7, #4]
 81061b4:	681b      	ldr	r3, [r3, #0]
 81061b6:	4a58      	ldr	r2, [pc, #352]	@ (8106318 <HAL_DMA_Abort_IT+0x1ac>)
 81061b8:	4293      	cmp	r3, r2
 81061ba:	d03b      	beq.n	8106234 <HAL_DMA_Abort_IT+0xc8>
 81061bc:	687b      	ldr	r3, [r7, #4]
 81061be:	681b      	ldr	r3, [r3, #0]
 81061c0:	4a56      	ldr	r2, [pc, #344]	@ (810631c <HAL_DMA_Abort_IT+0x1b0>)
 81061c2:	4293      	cmp	r3, r2
 81061c4:	d036      	beq.n	8106234 <HAL_DMA_Abort_IT+0xc8>
 81061c6:	687b      	ldr	r3, [r7, #4]
 81061c8:	681b      	ldr	r3, [r3, #0]
 81061ca:	4a55      	ldr	r2, [pc, #340]	@ (8106320 <HAL_DMA_Abort_IT+0x1b4>)
 81061cc:	4293      	cmp	r3, r2
 81061ce:	d031      	beq.n	8106234 <HAL_DMA_Abort_IT+0xc8>
 81061d0:	687b      	ldr	r3, [r7, #4]
 81061d2:	681b      	ldr	r3, [r3, #0]
 81061d4:	4a53      	ldr	r2, [pc, #332]	@ (8106324 <HAL_DMA_Abort_IT+0x1b8>)
 81061d6:	4293      	cmp	r3, r2
 81061d8:	d02c      	beq.n	8106234 <HAL_DMA_Abort_IT+0xc8>
 81061da:	687b      	ldr	r3, [r7, #4]
 81061dc:	681b      	ldr	r3, [r3, #0]
 81061de:	4a52      	ldr	r2, [pc, #328]	@ (8106328 <HAL_DMA_Abort_IT+0x1bc>)
 81061e0:	4293      	cmp	r3, r2
 81061e2:	d027      	beq.n	8106234 <HAL_DMA_Abort_IT+0xc8>
 81061e4:	687b      	ldr	r3, [r7, #4]
 81061e6:	681b      	ldr	r3, [r3, #0]
 81061e8:	4a50      	ldr	r2, [pc, #320]	@ (810632c <HAL_DMA_Abort_IT+0x1c0>)
 81061ea:	4293      	cmp	r3, r2
 81061ec:	d022      	beq.n	8106234 <HAL_DMA_Abort_IT+0xc8>
 81061ee:	687b      	ldr	r3, [r7, #4]
 81061f0:	681b      	ldr	r3, [r3, #0]
 81061f2:	4a4f      	ldr	r2, [pc, #316]	@ (8106330 <HAL_DMA_Abort_IT+0x1c4>)
 81061f4:	4293      	cmp	r3, r2
 81061f6:	d01d      	beq.n	8106234 <HAL_DMA_Abort_IT+0xc8>
 81061f8:	687b      	ldr	r3, [r7, #4]
 81061fa:	681b      	ldr	r3, [r3, #0]
 81061fc:	4a4d      	ldr	r2, [pc, #308]	@ (8106334 <HAL_DMA_Abort_IT+0x1c8>)
 81061fe:	4293      	cmp	r3, r2
 8106200:	d018      	beq.n	8106234 <HAL_DMA_Abort_IT+0xc8>
 8106202:	687b      	ldr	r3, [r7, #4]
 8106204:	681b      	ldr	r3, [r3, #0]
 8106206:	4a4c      	ldr	r2, [pc, #304]	@ (8106338 <HAL_DMA_Abort_IT+0x1cc>)
 8106208:	4293      	cmp	r3, r2
 810620a:	d013      	beq.n	8106234 <HAL_DMA_Abort_IT+0xc8>
 810620c:	687b      	ldr	r3, [r7, #4]
 810620e:	681b      	ldr	r3, [r3, #0]
 8106210:	4a4a      	ldr	r2, [pc, #296]	@ (810633c <HAL_DMA_Abort_IT+0x1d0>)
 8106212:	4293      	cmp	r3, r2
 8106214:	d00e      	beq.n	8106234 <HAL_DMA_Abort_IT+0xc8>
 8106216:	687b      	ldr	r3, [r7, #4]
 8106218:	681b      	ldr	r3, [r3, #0]
 810621a:	4a49      	ldr	r2, [pc, #292]	@ (8106340 <HAL_DMA_Abort_IT+0x1d4>)
 810621c:	4293      	cmp	r3, r2
 810621e:	d009      	beq.n	8106234 <HAL_DMA_Abort_IT+0xc8>
 8106220:	687b      	ldr	r3, [r7, #4]
 8106222:	681b      	ldr	r3, [r3, #0]
 8106224:	4a47      	ldr	r2, [pc, #284]	@ (8106344 <HAL_DMA_Abort_IT+0x1d8>)
 8106226:	4293      	cmp	r3, r2
 8106228:	d004      	beq.n	8106234 <HAL_DMA_Abort_IT+0xc8>
 810622a:	687b      	ldr	r3, [r7, #4]
 810622c:	681b      	ldr	r3, [r3, #0]
 810622e:	4a46      	ldr	r2, [pc, #280]	@ (8106348 <HAL_DMA_Abort_IT+0x1dc>)
 8106230:	4293      	cmp	r3, r2
 8106232:	d101      	bne.n	8106238 <HAL_DMA_Abort_IT+0xcc>
 8106234:	2301      	movs	r3, #1
 8106236:	e000      	b.n	810623a <HAL_DMA_Abort_IT+0xce>
 8106238:	2300      	movs	r3, #0
 810623a:	2b00      	cmp	r3, #0
 810623c:	f000 8086 	beq.w	810634c <HAL_DMA_Abort_IT+0x1e0>
 8106240:	687b      	ldr	r3, [r7, #4]
 8106242:	2204      	movs	r2, #4
 8106244:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8106248:	687b      	ldr	r3, [r7, #4]
 810624a:	681b      	ldr	r3, [r3, #0]
 810624c:	4a2f      	ldr	r2, [pc, #188]	@ (810630c <HAL_DMA_Abort_IT+0x1a0>)
 810624e:	4293      	cmp	r3, r2
 8106250:	d04a      	beq.n	81062e8 <HAL_DMA_Abort_IT+0x17c>
 8106252:	687b      	ldr	r3, [r7, #4]
 8106254:	681b      	ldr	r3, [r3, #0]
 8106256:	4a2e      	ldr	r2, [pc, #184]	@ (8106310 <HAL_DMA_Abort_IT+0x1a4>)
 8106258:	4293      	cmp	r3, r2
 810625a:	d045      	beq.n	81062e8 <HAL_DMA_Abort_IT+0x17c>
 810625c:	687b      	ldr	r3, [r7, #4]
 810625e:	681b      	ldr	r3, [r3, #0]
 8106260:	4a2c      	ldr	r2, [pc, #176]	@ (8106314 <HAL_DMA_Abort_IT+0x1a8>)
 8106262:	4293      	cmp	r3, r2
 8106264:	d040      	beq.n	81062e8 <HAL_DMA_Abort_IT+0x17c>
 8106266:	687b      	ldr	r3, [r7, #4]
 8106268:	681b      	ldr	r3, [r3, #0]
 810626a:	4a2b      	ldr	r2, [pc, #172]	@ (8106318 <HAL_DMA_Abort_IT+0x1ac>)
 810626c:	4293      	cmp	r3, r2
 810626e:	d03b      	beq.n	81062e8 <HAL_DMA_Abort_IT+0x17c>
 8106270:	687b      	ldr	r3, [r7, #4]
 8106272:	681b      	ldr	r3, [r3, #0]
 8106274:	4a29      	ldr	r2, [pc, #164]	@ (810631c <HAL_DMA_Abort_IT+0x1b0>)
 8106276:	4293      	cmp	r3, r2
 8106278:	d036      	beq.n	81062e8 <HAL_DMA_Abort_IT+0x17c>
 810627a:	687b      	ldr	r3, [r7, #4]
 810627c:	681b      	ldr	r3, [r3, #0]
 810627e:	4a28      	ldr	r2, [pc, #160]	@ (8106320 <HAL_DMA_Abort_IT+0x1b4>)
 8106280:	4293      	cmp	r3, r2
 8106282:	d031      	beq.n	81062e8 <HAL_DMA_Abort_IT+0x17c>
 8106284:	687b      	ldr	r3, [r7, #4]
 8106286:	681b      	ldr	r3, [r3, #0]
 8106288:	4a26      	ldr	r2, [pc, #152]	@ (8106324 <HAL_DMA_Abort_IT+0x1b8>)
 810628a:	4293      	cmp	r3, r2
 810628c:	d02c      	beq.n	81062e8 <HAL_DMA_Abort_IT+0x17c>
 810628e:	687b      	ldr	r3, [r7, #4]
 8106290:	681b      	ldr	r3, [r3, #0]
 8106292:	4a25      	ldr	r2, [pc, #148]	@ (8106328 <HAL_DMA_Abort_IT+0x1bc>)
 8106294:	4293      	cmp	r3, r2
 8106296:	d027      	beq.n	81062e8 <HAL_DMA_Abort_IT+0x17c>
 8106298:	687b      	ldr	r3, [r7, #4]
 810629a:	681b      	ldr	r3, [r3, #0]
 810629c:	4a23      	ldr	r2, [pc, #140]	@ (810632c <HAL_DMA_Abort_IT+0x1c0>)
 810629e:	4293      	cmp	r3, r2
 81062a0:	d022      	beq.n	81062e8 <HAL_DMA_Abort_IT+0x17c>
 81062a2:	687b      	ldr	r3, [r7, #4]
 81062a4:	681b      	ldr	r3, [r3, #0]
 81062a6:	4a22      	ldr	r2, [pc, #136]	@ (8106330 <HAL_DMA_Abort_IT+0x1c4>)
 81062a8:	4293      	cmp	r3, r2
 81062aa:	d01d      	beq.n	81062e8 <HAL_DMA_Abort_IT+0x17c>
 81062ac:	687b      	ldr	r3, [r7, #4]
 81062ae:	681b      	ldr	r3, [r3, #0]
 81062b0:	4a20      	ldr	r2, [pc, #128]	@ (8106334 <HAL_DMA_Abort_IT+0x1c8>)
 81062b2:	4293      	cmp	r3, r2
 81062b4:	d018      	beq.n	81062e8 <HAL_DMA_Abort_IT+0x17c>
 81062b6:	687b      	ldr	r3, [r7, #4]
 81062b8:	681b      	ldr	r3, [r3, #0]
 81062ba:	4a1f      	ldr	r2, [pc, #124]	@ (8106338 <HAL_DMA_Abort_IT+0x1cc>)
 81062bc:	4293      	cmp	r3, r2
 81062be:	d013      	beq.n	81062e8 <HAL_DMA_Abort_IT+0x17c>
 81062c0:	687b      	ldr	r3, [r7, #4]
 81062c2:	681b      	ldr	r3, [r3, #0]
 81062c4:	4a1d      	ldr	r2, [pc, #116]	@ (810633c <HAL_DMA_Abort_IT+0x1d0>)
 81062c6:	4293      	cmp	r3, r2
 81062c8:	d00e      	beq.n	81062e8 <HAL_DMA_Abort_IT+0x17c>
 81062ca:	687b      	ldr	r3, [r7, #4]
 81062cc:	681b      	ldr	r3, [r3, #0]
 81062ce:	4a1c      	ldr	r2, [pc, #112]	@ (8106340 <HAL_DMA_Abort_IT+0x1d4>)
 81062d0:	4293      	cmp	r3, r2
 81062d2:	d009      	beq.n	81062e8 <HAL_DMA_Abort_IT+0x17c>
 81062d4:	687b      	ldr	r3, [r7, #4]
 81062d6:	681b      	ldr	r3, [r3, #0]
 81062d8:	4a1a      	ldr	r2, [pc, #104]	@ (8106344 <HAL_DMA_Abort_IT+0x1d8>)
 81062da:	4293      	cmp	r3, r2
 81062dc:	d004      	beq.n	81062e8 <HAL_DMA_Abort_IT+0x17c>
 81062de:	687b      	ldr	r3, [r7, #4]
 81062e0:	681b      	ldr	r3, [r3, #0]
 81062e2:	4a19      	ldr	r2, [pc, #100]	@ (8106348 <HAL_DMA_Abort_IT+0x1dc>)
 81062e4:	4293      	cmp	r3, r2
 81062e6:	d108      	bne.n	81062fa <HAL_DMA_Abort_IT+0x18e>
 81062e8:	687b      	ldr	r3, [r7, #4]
 81062ea:	681b      	ldr	r3, [r3, #0]
 81062ec:	681a      	ldr	r2, [r3, #0]
 81062ee:	687b      	ldr	r3, [r7, #4]
 81062f0:	681b      	ldr	r3, [r3, #0]
 81062f2:	f022 0201 	bic.w	r2, r2, #1
 81062f6:	601a      	str	r2, [r3, #0]
 81062f8:	e178      	b.n	81065ec <HAL_DMA_Abort_IT+0x480>
 81062fa:	687b      	ldr	r3, [r7, #4]
 81062fc:	681b      	ldr	r3, [r3, #0]
 81062fe:	681a      	ldr	r2, [r3, #0]
 8106300:	687b      	ldr	r3, [r7, #4]
 8106302:	681b      	ldr	r3, [r3, #0]
 8106304:	f022 0201 	bic.w	r2, r2, #1
 8106308:	601a      	str	r2, [r3, #0]
 810630a:	e16f      	b.n	81065ec <HAL_DMA_Abort_IT+0x480>
 810630c:	40020010 	.word	0x40020010
 8106310:	40020028 	.word	0x40020028
 8106314:	40020040 	.word	0x40020040
 8106318:	40020058 	.word	0x40020058
 810631c:	40020070 	.word	0x40020070
 8106320:	40020088 	.word	0x40020088
 8106324:	400200a0 	.word	0x400200a0
 8106328:	400200b8 	.word	0x400200b8
 810632c:	40020410 	.word	0x40020410
 8106330:	40020428 	.word	0x40020428
 8106334:	40020440 	.word	0x40020440
 8106338:	40020458 	.word	0x40020458
 810633c:	40020470 	.word	0x40020470
 8106340:	40020488 	.word	0x40020488
 8106344:	400204a0 	.word	0x400204a0
 8106348:	400204b8 	.word	0x400204b8
 810634c:	687b      	ldr	r3, [r7, #4]
 810634e:	681b      	ldr	r3, [r3, #0]
 8106350:	681a      	ldr	r2, [r3, #0]
 8106352:	687b      	ldr	r3, [r7, #4]
 8106354:	681b      	ldr	r3, [r3, #0]
 8106356:	f022 020e 	bic.w	r2, r2, #14
 810635a:	601a      	str	r2, [r3, #0]
 810635c:	687b      	ldr	r3, [r7, #4]
 810635e:	681b      	ldr	r3, [r3, #0]
 8106360:	4a6c      	ldr	r2, [pc, #432]	@ (8106514 <HAL_DMA_Abort_IT+0x3a8>)
 8106362:	4293      	cmp	r3, r2
 8106364:	d04a      	beq.n	81063fc <HAL_DMA_Abort_IT+0x290>
 8106366:	687b      	ldr	r3, [r7, #4]
 8106368:	681b      	ldr	r3, [r3, #0]
 810636a:	4a6b      	ldr	r2, [pc, #428]	@ (8106518 <HAL_DMA_Abort_IT+0x3ac>)
 810636c:	4293      	cmp	r3, r2
 810636e:	d045      	beq.n	81063fc <HAL_DMA_Abort_IT+0x290>
 8106370:	687b      	ldr	r3, [r7, #4]
 8106372:	681b      	ldr	r3, [r3, #0]
 8106374:	4a69      	ldr	r2, [pc, #420]	@ (810651c <HAL_DMA_Abort_IT+0x3b0>)
 8106376:	4293      	cmp	r3, r2
 8106378:	d040      	beq.n	81063fc <HAL_DMA_Abort_IT+0x290>
 810637a:	687b      	ldr	r3, [r7, #4]
 810637c:	681b      	ldr	r3, [r3, #0]
 810637e:	4a68      	ldr	r2, [pc, #416]	@ (8106520 <HAL_DMA_Abort_IT+0x3b4>)
 8106380:	4293      	cmp	r3, r2
 8106382:	d03b      	beq.n	81063fc <HAL_DMA_Abort_IT+0x290>
 8106384:	687b      	ldr	r3, [r7, #4]
 8106386:	681b      	ldr	r3, [r3, #0]
 8106388:	4a66      	ldr	r2, [pc, #408]	@ (8106524 <HAL_DMA_Abort_IT+0x3b8>)
 810638a:	4293      	cmp	r3, r2
 810638c:	d036      	beq.n	81063fc <HAL_DMA_Abort_IT+0x290>
 810638e:	687b      	ldr	r3, [r7, #4]
 8106390:	681b      	ldr	r3, [r3, #0]
 8106392:	4a65      	ldr	r2, [pc, #404]	@ (8106528 <HAL_DMA_Abort_IT+0x3bc>)
 8106394:	4293      	cmp	r3, r2
 8106396:	d031      	beq.n	81063fc <HAL_DMA_Abort_IT+0x290>
 8106398:	687b      	ldr	r3, [r7, #4]
 810639a:	681b      	ldr	r3, [r3, #0]
 810639c:	4a63      	ldr	r2, [pc, #396]	@ (810652c <HAL_DMA_Abort_IT+0x3c0>)
 810639e:	4293      	cmp	r3, r2
 81063a0:	d02c      	beq.n	81063fc <HAL_DMA_Abort_IT+0x290>
 81063a2:	687b      	ldr	r3, [r7, #4]
 81063a4:	681b      	ldr	r3, [r3, #0]
 81063a6:	4a62      	ldr	r2, [pc, #392]	@ (8106530 <HAL_DMA_Abort_IT+0x3c4>)
 81063a8:	4293      	cmp	r3, r2
 81063aa:	d027      	beq.n	81063fc <HAL_DMA_Abort_IT+0x290>
 81063ac:	687b      	ldr	r3, [r7, #4]
 81063ae:	681b      	ldr	r3, [r3, #0]
 81063b0:	4a60      	ldr	r2, [pc, #384]	@ (8106534 <HAL_DMA_Abort_IT+0x3c8>)
 81063b2:	4293      	cmp	r3, r2
 81063b4:	d022      	beq.n	81063fc <HAL_DMA_Abort_IT+0x290>
 81063b6:	687b      	ldr	r3, [r7, #4]
 81063b8:	681b      	ldr	r3, [r3, #0]
 81063ba:	4a5f      	ldr	r2, [pc, #380]	@ (8106538 <HAL_DMA_Abort_IT+0x3cc>)
 81063bc:	4293      	cmp	r3, r2
 81063be:	d01d      	beq.n	81063fc <HAL_DMA_Abort_IT+0x290>
 81063c0:	687b      	ldr	r3, [r7, #4]
 81063c2:	681b      	ldr	r3, [r3, #0]
 81063c4:	4a5d      	ldr	r2, [pc, #372]	@ (810653c <HAL_DMA_Abort_IT+0x3d0>)
 81063c6:	4293      	cmp	r3, r2
 81063c8:	d018      	beq.n	81063fc <HAL_DMA_Abort_IT+0x290>
 81063ca:	687b      	ldr	r3, [r7, #4]
 81063cc:	681b      	ldr	r3, [r3, #0]
 81063ce:	4a5c      	ldr	r2, [pc, #368]	@ (8106540 <HAL_DMA_Abort_IT+0x3d4>)
 81063d0:	4293      	cmp	r3, r2
 81063d2:	d013      	beq.n	81063fc <HAL_DMA_Abort_IT+0x290>
 81063d4:	687b      	ldr	r3, [r7, #4]
 81063d6:	681b      	ldr	r3, [r3, #0]
 81063d8:	4a5a      	ldr	r2, [pc, #360]	@ (8106544 <HAL_DMA_Abort_IT+0x3d8>)
 81063da:	4293      	cmp	r3, r2
 81063dc:	d00e      	beq.n	81063fc <HAL_DMA_Abort_IT+0x290>
 81063de:	687b      	ldr	r3, [r7, #4]
 81063e0:	681b      	ldr	r3, [r3, #0]
 81063e2:	4a59      	ldr	r2, [pc, #356]	@ (8106548 <HAL_DMA_Abort_IT+0x3dc>)
 81063e4:	4293      	cmp	r3, r2
 81063e6:	d009      	beq.n	81063fc <HAL_DMA_Abort_IT+0x290>
 81063e8:	687b      	ldr	r3, [r7, #4]
 81063ea:	681b      	ldr	r3, [r3, #0]
 81063ec:	4a57      	ldr	r2, [pc, #348]	@ (810654c <HAL_DMA_Abort_IT+0x3e0>)
 81063ee:	4293      	cmp	r3, r2
 81063f0:	d004      	beq.n	81063fc <HAL_DMA_Abort_IT+0x290>
 81063f2:	687b      	ldr	r3, [r7, #4]
 81063f4:	681b      	ldr	r3, [r3, #0]
 81063f6:	4a56      	ldr	r2, [pc, #344]	@ (8106550 <HAL_DMA_Abort_IT+0x3e4>)
 81063f8:	4293      	cmp	r3, r2
 81063fa:	d108      	bne.n	810640e <HAL_DMA_Abort_IT+0x2a2>
 81063fc:	687b      	ldr	r3, [r7, #4]
 81063fe:	681b      	ldr	r3, [r3, #0]
 8106400:	681a      	ldr	r2, [r3, #0]
 8106402:	687b      	ldr	r3, [r7, #4]
 8106404:	681b      	ldr	r3, [r3, #0]
 8106406:	f022 0201 	bic.w	r2, r2, #1
 810640a:	601a      	str	r2, [r3, #0]
 810640c:	e007      	b.n	810641e <HAL_DMA_Abort_IT+0x2b2>
 810640e:	687b      	ldr	r3, [r7, #4]
 8106410:	681b      	ldr	r3, [r3, #0]
 8106412:	681a      	ldr	r2, [r3, #0]
 8106414:	687b      	ldr	r3, [r7, #4]
 8106416:	681b      	ldr	r3, [r3, #0]
 8106418:	f022 0201 	bic.w	r2, r2, #1
 810641c:	601a      	str	r2, [r3, #0]
 810641e:	687b      	ldr	r3, [r7, #4]
 8106420:	681b      	ldr	r3, [r3, #0]
 8106422:	4a3c      	ldr	r2, [pc, #240]	@ (8106514 <HAL_DMA_Abort_IT+0x3a8>)
 8106424:	4293      	cmp	r3, r2
 8106426:	d072      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 8106428:	687b      	ldr	r3, [r7, #4]
 810642a:	681b      	ldr	r3, [r3, #0]
 810642c:	4a3a      	ldr	r2, [pc, #232]	@ (8106518 <HAL_DMA_Abort_IT+0x3ac>)
 810642e:	4293      	cmp	r3, r2
 8106430:	d06d      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 8106432:	687b      	ldr	r3, [r7, #4]
 8106434:	681b      	ldr	r3, [r3, #0]
 8106436:	4a39      	ldr	r2, [pc, #228]	@ (810651c <HAL_DMA_Abort_IT+0x3b0>)
 8106438:	4293      	cmp	r3, r2
 810643a:	d068      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 810643c:	687b      	ldr	r3, [r7, #4]
 810643e:	681b      	ldr	r3, [r3, #0]
 8106440:	4a37      	ldr	r2, [pc, #220]	@ (8106520 <HAL_DMA_Abort_IT+0x3b4>)
 8106442:	4293      	cmp	r3, r2
 8106444:	d063      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 8106446:	687b      	ldr	r3, [r7, #4]
 8106448:	681b      	ldr	r3, [r3, #0]
 810644a:	4a36      	ldr	r2, [pc, #216]	@ (8106524 <HAL_DMA_Abort_IT+0x3b8>)
 810644c:	4293      	cmp	r3, r2
 810644e:	d05e      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 8106450:	687b      	ldr	r3, [r7, #4]
 8106452:	681b      	ldr	r3, [r3, #0]
 8106454:	4a34      	ldr	r2, [pc, #208]	@ (8106528 <HAL_DMA_Abort_IT+0x3bc>)
 8106456:	4293      	cmp	r3, r2
 8106458:	d059      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 810645a:	687b      	ldr	r3, [r7, #4]
 810645c:	681b      	ldr	r3, [r3, #0]
 810645e:	4a33      	ldr	r2, [pc, #204]	@ (810652c <HAL_DMA_Abort_IT+0x3c0>)
 8106460:	4293      	cmp	r3, r2
 8106462:	d054      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 8106464:	687b      	ldr	r3, [r7, #4]
 8106466:	681b      	ldr	r3, [r3, #0]
 8106468:	4a31      	ldr	r2, [pc, #196]	@ (8106530 <HAL_DMA_Abort_IT+0x3c4>)
 810646a:	4293      	cmp	r3, r2
 810646c:	d04f      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 810646e:	687b      	ldr	r3, [r7, #4]
 8106470:	681b      	ldr	r3, [r3, #0]
 8106472:	4a30      	ldr	r2, [pc, #192]	@ (8106534 <HAL_DMA_Abort_IT+0x3c8>)
 8106474:	4293      	cmp	r3, r2
 8106476:	d04a      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 8106478:	687b      	ldr	r3, [r7, #4]
 810647a:	681b      	ldr	r3, [r3, #0]
 810647c:	4a2e      	ldr	r2, [pc, #184]	@ (8106538 <HAL_DMA_Abort_IT+0x3cc>)
 810647e:	4293      	cmp	r3, r2
 8106480:	d045      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 8106482:	687b      	ldr	r3, [r7, #4]
 8106484:	681b      	ldr	r3, [r3, #0]
 8106486:	4a2d      	ldr	r2, [pc, #180]	@ (810653c <HAL_DMA_Abort_IT+0x3d0>)
 8106488:	4293      	cmp	r3, r2
 810648a:	d040      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 810648c:	687b      	ldr	r3, [r7, #4]
 810648e:	681b      	ldr	r3, [r3, #0]
 8106490:	4a2b      	ldr	r2, [pc, #172]	@ (8106540 <HAL_DMA_Abort_IT+0x3d4>)
 8106492:	4293      	cmp	r3, r2
 8106494:	d03b      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 8106496:	687b      	ldr	r3, [r7, #4]
 8106498:	681b      	ldr	r3, [r3, #0]
 810649a:	4a2a      	ldr	r2, [pc, #168]	@ (8106544 <HAL_DMA_Abort_IT+0x3d8>)
 810649c:	4293      	cmp	r3, r2
 810649e:	d036      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 81064a0:	687b      	ldr	r3, [r7, #4]
 81064a2:	681b      	ldr	r3, [r3, #0]
 81064a4:	4a28      	ldr	r2, [pc, #160]	@ (8106548 <HAL_DMA_Abort_IT+0x3dc>)
 81064a6:	4293      	cmp	r3, r2
 81064a8:	d031      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 81064aa:	687b      	ldr	r3, [r7, #4]
 81064ac:	681b      	ldr	r3, [r3, #0]
 81064ae:	4a27      	ldr	r2, [pc, #156]	@ (810654c <HAL_DMA_Abort_IT+0x3e0>)
 81064b0:	4293      	cmp	r3, r2
 81064b2:	d02c      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 81064b4:	687b      	ldr	r3, [r7, #4]
 81064b6:	681b      	ldr	r3, [r3, #0]
 81064b8:	4a25      	ldr	r2, [pc, #148]	@ (8106550 <HAL_DMA_Abort_IT+0x3e4>)
 81064ba:	4293      	cmp	r3, r2
 81064bc:	d027      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 81064be:	687b      	ldr	r3, [r7, #4]
 81064c0:	681b      	ldr	r3, [r3, #0]
 81064c2:	4a24      	ldr	r2, [pc, #144]	@ (8106554 <HAL_DMA_Abort_IT+0x3e8>)
 81064c4:	4293      	cmp	r3, r2
 81064c6:	d022      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 81064c8:	687b      	ldr	r3, [r7, #4]
 81064ca:	681b      	ldr	r3, [r3, #0]
 81064cc:	4a22      	ldr	r2, [pc, #136]	@ (8106558 <HAL_DMA_Abort_IT+0x3ec>)
 81064ce:	4293      	cmp	r3, r2
 81064d0:	d01d      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 81064d2:	687b      	ldr	r3, [r7, #4]
 81064d4:	681b      	ldr	r3, [r3, #0]
 81064d6:	4a21      	ldr	r2, [pc, #132]	@ (810655c <HAL_DMA_Abort_IT+0x3f0>)
 81064d8:	4293      	cmp	r3, r2
 81064da:	d018      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 81064dc:	687b      	ldr	r3, [r7, #4]
 81064de:	681b      	ldr	r3, [r3, #0]
 81064e0:	4a1f      	ldr	r2, [pc, #124]	@ (8106560 <HAL_DMA_Abort_IT+0x3f4>)
 81064e2:	4293      	cmp	r3, r2
 81064e4:	d013      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 81064e6:	687b      	ldr	r3, [r7, #4]
 81064e8:	681b      	ldr	r3, [r3, #0]
 81064ea:	4a1e      	ldr	r2, [pc, #120]	@ (8106564 <HAL_DMA_Abort_IT+0x3f8>)
 81064ec:	4293      	cmp	r3, r2
 81064ee:	d00e      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 81064f0:	687b      	ldr	r3, [r7, #4]
 81064f2:	681b      	ldr	r3, [r3, #0]
 81064f4:	4a1c      	ldr	r2, [pc, #112]	@ (8106568 <HAL_DMA_Abort_IT+0x3fc>)
 81064f6:	4293      	cmp	r3, r2
 81064f8:	d009      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 81064fa:	687b      	ldr	r3, [r7, #4]
 81064fc:	681b      	ldr	r3, [r3, #0]
 81064fe:	4a1b      	ldr	r2, [pc, #108]	@ (810656c <HAL_DMA_Abort_IT+0x400>)
 8106500:	4293      	cmp	r3, r2
 8106502:	d004      	beq.n	810650e <HAL_DMA_Abort_IT+0x3a2>
 8106504:	687b      	ldr	r3, [r7, #4]
 8106506:	681b      	ldr	r3, [r3, #0]
 8106508:	4a19      	ldr	r2, [pc, #100]	@ (8106570 <HAL_DMA_Abort_IT+0x404>)
 810650a:	4293      	cmp	r3, r2
 810650c:	d132      	bne.n	8106574 <HAL_DMA_Abort_IT+0x408>
 810650e:	2301      	movs	r3, #1
 8106510:	e031      	b.n	8106576 <HAL_DMA_Abort_IT+0x40a>
 8106512:	bf00      	nop
 8106514:	40020010 	.word	0x40020010
 8106518:	40020028 	.word	0x40020028
 810651c:	40020040 	.word	0x40020040
 8106520:	40020058 	.word	0x40020058
 8106524:	40020070 	.word	0x40020070
 8106528:	40020088 	.word	0x40020088
 810652c:	400200a0 	.word	0x400200a0
 8106530:	400200b8 	.word	0x400200b8
 8106534:	40020410 	.word	0x40020410
 8106538:	40020428 	.word	0x40020428
 810653c:	40020440 	.word	0x40020440
 8106540:	40020458 	.word	0x40020458
 8106544:	40020470 	.word	0x40020470
 8106548:	40020488 	.word	0x40020488
 810654c:	400204a0 	.word	0x400204a0
 8106550:	400204b8 	.word	0x400204b8
 8106554:	58025408 	.word	0x58025408
 8106558:	5802541c 	.word	0x5802541c
 810655c:	58025430 	.word	0x58025430
 8106560:	58025444 	.word	0x58025444
 8106564:	58025458 	.word	0x58025458
 8106568:	5802546c 	.word	0x5802546c
 810656c:	58025480 	.word	0x58025480
 8106570:	58025494 	.word	0x58025494
 8106574:	2300      	movs	r3, #0
 8106576:	2b00      	cmp	r3, #0
 8106578:	d028      	beq.n	81065cc <HAL_DMA_Abort_IT+0x460>
 810657a:	687b      	ldr	r3, [r7, #4]
 810657c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 810657e:	681a      	ldr	r2, [r3, #0]
 8106580:	687b      	ldr	r3, [r7, #4]
 8106582:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8106584:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8106588:	601a      	str	r2, [r3, #0]
 810658a:	687b      	ldr	r3, [r7, #4]
 810658c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 810658e:	60fb      	str	r3, [r7, #12]
 8106590:	687b      	ldr	r3, [r7, #4]
 8106592:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8106594:	f003 031f 	and.w	r3, r3, #31
 8106598:	2201      	movs	r2, #1
 810659a:	409a      	lsls	r2, r3
 810659c:	68fb      	ldr	r3, [r7, #12]
 810659e:	605a      	str	r2, [r3, #4]
 81065a0:	687b      	ldr	r3, [r7, #4]
 81065a2:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 81065a4:	687a      	ldr	r2, [r7, #4]
 81065a6:	6e92      	ldr	r2, [r2, #104]	@ 0x68
 81065a8:	605a      	str	r2, [r3, #4]
 81065aa:	687b      	ldr	r3, [r7, #4]
 81065ac:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 81065ae:	2b00      	cmp	r3, #0
 81065b0:	d00c      	beq.n	81065cc <HAL_DMA_Abort_IT+0x460>
 81065b2:	687b      	ldr	r3, [r7, #4]
 81065b4:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 81065b6:	681a      	ldr	r2, [r3, #0]
 81065b8:	687b      	ldr	r3, [r7, #4]
 81065ba:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 81065bc:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 81065c0:	601a      	str	r2, [r3, #0]
 81065c2:	687b      	ldr	r3, [r7, #4]
 81065c4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 81065c6:	687a      	ldr	r2, [r7, #4]
 81065c8:	6f52      	ldr	r2, [r2, #116]	@ 0x74
 81065ca:	605a      	str	r2, [r3, #4]
 81065cc:	687b      	ldr	r3, [r7, #4]
 81065ce:	2201      	movs	r2, #1
 81065d0:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 81065d4:	687b      	ldr	r3, [r7, #4]
 81065d6:	2200      	movs	r2, #0
 81065d8:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 81065dc:	687b      	ldr	r3, [r7, #4]
 81065de:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 81065e0:	2b00      	cmp	r3, #0
 81065e2:	d003      	beq.n	81065ec <HAL_DMA_Abort_IT+0x480>
 81065e4:	687b      	ldr	r3, [r7, #4]
 81065e6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 81065e8:	6878      	ldr	r0, [r7, #4]
 81065ea:	4798      	blx	r3
 81065ec:	2300      	movs	r3, #0
 81065ee:	4618      	mov	r0, r3
 81065f0:	3710      	adds	r7, #16
 81065f2:	46bd      	mov	sp, r7
 81065f4:	bd80      	pop	{r7, pc}
 81065f6:	bf00      	nop

081065f8 <HAL_GPIO_Init>:
 81065f8:	b480      	push	{r7}
 81065fa:	b089      	sub	sp, #36	@ 0x24
 81065fc:	af00      	add	r7, sp, #0
 81065fe:	6078      	str	r0, [r7, #4]
 8106600:	6039      	str	r1, [r7, #0]
 8106602:	2300      	movs	r3, #0
 8106604:	61fb      	str	r3, [r7, #28]
 8106606:	4b89      	ldr	r3, [pc, #548]	@ (810682c <HAL_GPIO_Init+0x234>)
 8106608:	617b      	str	r3, [r7, #20]
 810660a:	e194      	b.n	8106936 <HAL_GPIO_Init+0x33e>
 810660c:	683b      	ldr	r3, [r7, #0]
 810660e:	681a      	ldr	r2, [r3, #0]
 8106610:	2101      	movs	r1, #1
 8106612:	69fb      	ldr	r3, [r7, #28]
 8106614:	fa01 f303 	lsl.w	r3, r1, r3
 8106618:	4013      	ands	r3, r2
 810661a:	613b      	str	r3, [r7, #16]
 810661c:	693b      	ldr	r3, [r7, #16]
 810661e:	2b00      	cmp	r3, #0
 8106620:	f000 8186 	beq.w	8106930 <HAL_GPIO_Init+0x338>
 8106624:	683b      	ldr	r3, [r7, #0]
 8106626:	685b      	ldr	r3, [r3, #4]
 8106628:	f003 0303 	and.w	r3, r3, #3
 810662c:	2b01      	cmp	r3, #1
 810662e:	d005      	beq.n	810663c <HAL_GPIO_Init+0x44>
 8106630:	683b      	ldr	r3, [r7, #0]
 8106632:	685b      	ldr	r3, [r3, #4]
 8106634:	f003 0303 	and.w	r3, r3, #3
 8106638:	2b02      	cmp	r3, #2
 810663a:	d130      	bne.n	810669e <HAL_GPIO_Init+0xa6>
 810663c:	687b      	ldr	r3, [r7, #4]
 810663e:	689b      	ldr	r3, [r3, #8]
 8106640:	61bb      	str	r3, [r7, #24]
 8106642:	69fb      	ldr	r3, [r7, #28]
 8106644:	005b      	lsls	r3, r3, #1
 8106646:	2203      	movs	r2, #3
 8106648:	fa02 f303 	lsl.w	r3, r2, r3
 810664c:	43db      	mvns	r3, r3
 810664e:	69ba      	ldr	r2, [r7, #24]
 8106650:	4013      	ands	r3, r2
 8106652:	61bb      	str	r3, [r7, #24]
 8106654:	683b      	ldr	r3, [r7, #0]
 8106656:	68da      	ldr	r2, [r3, #12]
 8106658:	69fb      	ldr	r3, [r7, #28]
 810665a:	005b      	lsls	r3, r3, #1
 810665c:	fa02 f303 	lsl.w	r3, r2, r3
 8106660:	69ba      	ldr	r2, [r7, #24]
 8106662:	4313      	orrs	r3, r2
 8106664:	61bb      	str	r3, [r7, #24]
 8106666:	687b      	ldr	r3, [r7, #4]
 8106668:	69ba      	ldr	r2, [r7, #24]
 810666a:	609a      	str	r2, [r3, #8]
 810666c:	687b      	ldr	r3, [r7, #4]
 810666e:	685b      	ldr	r3, [r3, #4]
 8106670:	61bb      	str	r3, [r7, #24]
 8106672:	2201      	movs	r2, #1
 8106674:	69fb      	ldr	r3, [r7, #28]
 8106676:	fa02 f303 	lsl.w	r3, r2, r3
 810667a:	43db      	mvns	r3, r3
 810667c:	69ba      	ldr	r2, [r7, #24]
 810667e:	4013      	ands	r3, r2
 8106680:	61bb      	str	r3, [r7, #24]
 8106682:	683b      	ldr	r3, [r7, #0]
 8106684:	685b      	ldr	r3, [r3, #4]
 8106686:	091b      	lsrs	r3, r3, #4
 8106688:	f003 0201 	and.w	r2, r3, #1
 810668c:	69fb      	ldr	r3, [r7, #28]
 810668e:	fa02 f303 	lsl.w	r3, r2, r3
 8106692:	69ba      	ldr	r2, [r7, #24]
 8106694:	4313      	orrs	r3, r2
 8106696:	61bb      	str	r3, [r7, #24]
 8106698:	687b      	ldr	r3, [r7, #4]
 810669a:	69ba      	ldr	r2, [r7, #24]
 810669c:	605a      	str	r2, [r3, #4]
 810669e:	683b      	ldr	r3, [r7, #0]
 81066a0:	685b      	ldr	r3, [r3, #4]
 81066a2:	f003 0303 	and.w	r3, r3, #3
 81066a6:	2b03      	cmp	r3, #3
 81066a8:	d017      	beq.n	81066da <HAL_GPIO_Init+0xe2>
 81066aa:	687b      	ldr	r3, [r7, #4]
 81066ac:	68db      	ldr	r3, [r3, #12]
 81066ae:	61bb      	str	r3, [r7, #24]
 81066b0:	69fb      	ldr	r3, [r7, #28]
 81066b2:	005b      	lsls	r3, r3, #1
 81066b4:	2203      	movs	r2, #3
 81066b6:	fa02 f303 	lsl.w	r3, r2, r3
 81066ba:	43db      	mvns	r3, r3
 81066bc:	69ba      	ldr	r2, [r7, #24]
 81066be:	4013      	ands	r3, r2
 81066c0:	61bb      	str	r3, [r7, #24]
 81066c2:	683b      	ldr	r3, [r7, #0]
 81066c4:	689a      	ldr	r2, [r3, #8]
 81066c6:	69fb      	ldr	r3, [r7, #28]
 81066c8:	005b      	lsls	r3, r3, #1
 81066ca:	fa02 f303 	lsl.w	r3, r2, r3
 81066ce:	69ba      	ldr	r2, [r7, #24]
 81066d0:	4313      	orrs	r3, r2
 81066d2:	61bb      	str	r3, [r7, #24]
 81066d4:	687b      	ldr	r3, [r7, #4]
 81066d6:	69ba      	ldr	r2, [r7, #24]
 81066d8:	60da      	str	r2, [r3, #12]
 81066da:	683b      	ldr	r3, [r7, #0]
 81066dc:	685b      	ldr	r3, [r3, #4]
 81066de:	f003 0303 	and.w	r3, r3, #3
 81066e2:	2b02      	cmp	r3, #2
 81066e4:	d123      	bne.n	810672e <HAL_GPIO_Init+0x136>
 81066e6:	69fb      	ldr	r3, [r7, #28]
 81066e8:	08da      	lsrs	r2, r3, #3
 81066ea:	687b      	ldr	r3, [r7, #4]
 81066ec:	3208      	adds	r2, #8
 81066ee:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 81066f2:	61bb      	str	r3, [r7, #24]
 81066f4:	69fb      	ldr	r3, [r7, #28]
 81066f6:	f003 0307 	and.w	r3, r3, #7
 81066fa:	009b      	lsls	r3, r3, #2
 81066fc:	220f      	movs	r2, #15
 81066fe:	fa02 f303 	lsl.w	r3, r2, r3
 8106702:	43db      	mvns	r3, r3
 8106704:	69ba      	ldr	r2, [r7, #24]
 8106706:	4013      	ands	r3, r2
 8106708:	61bb      	str	r3, [r7, #24]
 810670a:	683b      	ldr	r3, [r7, #0]
 810670c:	691a      	ldr	r2, [r3, #16]
 810670e:	69fb      	ldr	r3, [r7, #28]
 8106710:	f003 0307 	and.w	r3, r3, #7
 8106714:	009b      	lsls	r3, r3, #2
 8106716:	fa02 f303 	lsl.w	r3, r2, r3
 810671a:	69ba      	ldr	r2, [r7, #24]
 810671c:	4313      	orrs	r3, r2
 810671e:	61bb      	str	r3, [r7, #24]
 8106720:	69fb      	ldr	r3, [r7, #28]
 8106722:	08da      	lsrs	r2, r3, #3
 8106724:	687b      	ldr	r3, [r7, #4]
 8106726:	3208      	adds	r2, #8
 8106728:	69b9      	ldr	r1, [r7, #24]
 810672a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 810672e:	687b      	ldr	r3, [r7, #4]
 8106730:	681b      	ldr	r3, [r3, #0]
 8106732:	61bb      	str	r3, [r7, #24]
 8106734:	69fb      	ldr	r3, [r7, #28]
 8106736:	005b      	lsls	r3, r3, #1
 8106738:	2203      	movs	r2, #3
 810673a:	fa02 f303 	lsl.w	r3, r2, r3
 810673e:	43db      	mvns	r3, r3
 8106740:	69ba      	ldr	r2, [r7, #24]
 8106742:	4013      	ands	r3, r2
 8106744:	61bb      	str	r3, [r7, #24]
 8106746:	683b      	ldr	r3, [r7, #0]
 8106748:	685b      	ldr	r3, [r3, #4]
 810674a:	f003 0203 	and.w	r2, r3, #3
 810674e:	69fb      	ldr	r3, [r7, #28]
 8106750:	005b      	lsls	r3, r3, #1
 8106752:	fa02 f303 	lsl.w	r3, r2, r3
 8106756:	69ba      	ldr	r2, [r7, #24]
 8106758:	4313      	orrs	r3, r2
 810675a:	61bb      	str	r3, [r7, #24]
 810675c:	687b      	ldr	r3, [r7, #4]
 810675e:	69ba      	ldr	r2, [r7, #24]
 8106760:	601a      	str	r2, [r3, #0]
 8106762:	683b      	ldr	r3, [r7, #0]
 8106764:	685b      	ldr	r3, [r3, #4]
 8106766:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 810676a:	2b00      	cmp	r3, #0
 810676c:	f000 80e0 	beq.w	8106930 <HAL_GPIO_Init+0x338>
 8106770:	4b2f      	ldr	r3, [pc, #188]	@ (8106830 <HAL_GPIO_Init+0x238>)
 8106772:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8106776:	4a2e      	ldr	r2, [pc, #184]	@ (8106830 <HAL_GPIO_Init+0x238>)
 8106778:	f043 0302 	orr.w	r3, r3, #2
 810677c:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
 8106780:	4b2b      	ldr	r3, [pc, #172]	@ (8106830 <HAL_GPIO_Init+0x238>)
 8106782:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8106786:	f003 0302 	and.w	r3, r3, #2
 810678a:	60fb      	str	r3, [r7, #12]
 810678c:	68fb      	ldr	r3, [r7, #12]
 810678e:	4a29      	ldr	r2, [pc, #164]	@ (8106834 <HAL_GPIO_Init+0x23c>)
 8106790:	69fb      	ldr	r3, [r7, #28]
 8106792:	089b      	lsrs	r3, r3, #2
 8106794:	3302      	adds	r3, #2
 8106796:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 810679a:	61bb      	str	r3, [r7, #24]
 810679c:	69fb      	ldr	r3, [r7, #28]
 810679e:	f003 0303 	and.w	r3, r3, #3
 81067a2:	009b      	lsls	r3, r3, #2
 81067a4:	220f      	movs	r2, #15
 81067a6:	fa02 f303 	lsl.w	r3, r2, r3
 81067aa:	43db      	mvns	r3, r3
 81067ac:	69ba      	ldr	r2, [r7, #24]
 81067ae:	4013      	ands	r3, r2
 81067b0:	61bb      	str	r3, [r7, #24]
 81067b2:	687b      	ldr	r3, [r7, #4]
 81067b4:	4a20      	ldr	r2, [pc, #128]	@ (8106838 <HAL_GPIO_Init+0x240>)
 81067b6:	4293      	cmp	r3, r2
 81067b8:	d052      	beq.n	8106860 <HAL_GPIO_Init+0x268>
 81067ba:	687b      	ldr	r3, [r7, #4]
 81067bc:	4a1f      	ldr	r2, [pc, #124]	@ (810683c <HAL_GPIO_Init+0x244>)
 81067be:	4293      	cmp	r3, r2
 81067c0:	d031      	beq.n	8106826 <HAL_GPIO_Init+0x22e>
 81067c2:	687b      	ldr	r3, [r7, #4]
 81067c4:	4a1e      	ldr	r2, [pc, #120]	@ (8106840 <HAL_GPIO_Init+0x248>)
 81067c6:	4293      	cmp	r3, r2
 81067c8:	d02b      	beq.n	8106822 <HAL_GPIO_Init+0x22a>
 81067ca:	687b      	ldr	r3, [r7, #4]
 81067cc:	4a1d      	ldr	r2, [pc, #116]	@ (8106844 <HAL_GPIO_Init+0x24c>)
 81067ce:	4293      	cmp	r3, r2
 81067d0:	d025      	beq.n	810681e <HAL_GPIO_Init+0x226>
 81067d2:	687b      	ldr	r3, [r7, #4]
 81067d4:	4a1c      	ldr	r2, [pc, #112]	@ (8106848 <HAL_GPIO_Init+0x250>)
 81067d6:	4293      	cmp	r3, r2
 81067d8:	d01f      	beq.n	810681a <HAL_GPIO_Init+0x222>
 81067da:	687b      	ldr	r3, [r7, #4]
 81067dc:	4a1b      	ldr	r2, [pc, #108]	@ (810684c <HAL_GPIO_Init+0x254>)
 81067de:	4293      	cmp	r3, r2
 81067e0:	d019      	beq.n	8106816 <HAL_GPIO_Init+0x21e>
 81067e2:	687b      	ldr	r3, [r7, #4]
 81067e4:	4a1a      	ldr	r2, [pc, #104]	@ (8106850 <HAL_GPIO_Init+0x258>)
 81067e6:	4293      	cmp	r3, r2
 81067e8:	d013      	beq.n	8106812 <HAL_GPIO_Init+0x21a>
 81067ea:	687b      	ldr	r3, [r7, #4]
 81067ec:	4a19      	ldr	r2, [pc, #100]	@ (8106854 <HAL_GPIO_Init+0x25c>)
 81067ee:	4293      	cmp	r3, r2
 81067f0:	d00d      	beq.n	810680e <HAL_GPIO_Init+0x216>
 81067f2:	687b      	ldr	r3, [r7, #4]
 81067f4:	4a18      	ldr	r2, [pc, #96]	@ (8106858 <HAL_GPIO_Init+0x260>)
 81067f6:	4293      	cmp	r3, r2
 81067f8:	d007      	beq.n	810680a <HAL_GPIO_Init+0x212>
 81067fa:	687b      	ldr	r3, [r7, #4]
 81067fc:	4a17      	ldr	r2, [pc, #92]	@ (810685c <HAL_GPIO_Init+0x264>)
 81067fe:	4293      	cmp	r3, r2
 8106800:	d101      	bne.n	8106806 <HAL_GPIO_Init+0x20e>
 8106802:	2309      	movs	r3, #9
 8106804:	e02d      	b.n	8106862 <HAL_GPIO_Init+0x26a>
 8106806:	230a      	movs	r3, #10
 8106808:	e02b      	b.n	8106862 <HAL_GPIO_Init+0x26a>
 810680a:	2308      	movs	r3, #8
 810680c:	e029      	b.n	8106862 <HAL_GPIO_Init+0x26a>
 810680e:	2307      	movs	r3, #7
 8106810:	e027      	b.n	8106862 <HAL_GPIO_Init+0x26a>
 8106812:	2306      	movs	r3, #6
 8106814:	e025      	b.n	8106862 <HAL_GPIO_Init+0x26a>
 8106816:	2305      	movs	r3, #5
 8106818:	e023      	b.n	8106862 <HAL_GPIO_Init+0x26a>
 810681a:	2304      	movs	r3, #4
 810681c:	e021      	b.n	8106862 <HAL_GPIO_Init+0x26a>
 810681e:	2303      	movs	r3, #3
 8106820:	e01f      	b.n	8106862 <HAL_GPIO_Init+0x26a>
 8106822:	2302      	movs	r3, #2
 8106824:	e01d      	b.n	8106862 <HAL_GPIO_Init+0x26a>
 8106826:	2301      	movs	r3, #1
 8106828:	e01b      	b.n	8106862 <HAL_GPIO_Init+0x26a>
 810682a:	bf00      	nop
 810682c:	580000c0 	.word	0x580000c0
 8106830:	58024400 	.word	0x58024400
 8106834:	58000400 	.word	0x58000400
 8106838:	58020000 	.word	0x58020000
 810683c:	58020400 	.word	0x58020400
 8106840:	58020800 	.word	0x58020800
 8106844:	58020c00 	.word	0x58020c00
 8106848:	58021000 	.word	0x58021000
 810684c:	58021400 	.word	0x58021400
 8106850:	58021800 	.word	0x58021800
 8106854:	58021c00 	.word	0x58021c00
 8106858:	58022000 	.word	0x58022000
 810685c:	58022400 	.word	0x58022400
 8106860:	2300      	movs	r3, #0
 8106862:	69fa      	ldr	r2, [r7, #28]
 8106864:	f002 0203 	and.w	r2, r2, #3
 8106868:	0092      	lsls	r2, r2, #2
 810686a:	4093      	lsls	r3, r2
 810686c:	69ba      	ldr	r2, [r7, #24]
 810686e:	4313      	orrs	r3, r2
 8106870:	61bb      	str	r3, [r7, #24]
 8106872:	4938      	ldr	r1, [pc, #224]	@ (8106954 <HAL_GPIO_Init+0x35c>)
 8106874:	69fb      	ldr	r3, [r7, #28]
 8106876:	089b      	lsrs	r3, r3, #2
 8106878:	3302      	adds	r3, #2
 810687a:	69ba      	ldr	r2, [r7, #24]
 810687c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8106880:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8106884:	681b      	ldr	r3, [r3, #0]
 8106886:	61bb      	str	r3, [r7, #24]
 8106888:	693b      	ldr	r3, [r7, #16]
 810688a:	43db      	mvns	r3, r3
 810688c:	69ba      	ldr	r2, [r7, #24]
 810688e:	4013      	ands	r3, r2
 8106890:	61bb      	str	r3, [r7, #24]
 8106892:	683b      	ldr	r3, [r7, #0]
 8106894:	685b      	ldr	r3, [r3, #4]
 8106896:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 810689a:	2b00      	cmp	r3, #0
 810689c:	d003      	beq.n	81068a6 <HAL_GPIO_Init+0x2ae>
 810689e:	69ba      	ldr	r2, [r7, #24]
 81068a0:	693b      	ldr	r3, [r7, #16]
 81068a2:	4313      	orrs	r3, r2
 81068a4:	61bb      	str	r3, [r7, #24]
 81068a6:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 81068aa:	69bb      	ldr	r3, [r7, #24]
 81068ac:	6013      	str	r3, [r2, #0]
 81068ae:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 81068b2:	685b      	ldr	r3, [r3, #4]
 81068b4:	61bb      	str	r3, [r7, #24]
 81068b6:	693b      	ldr	r3, [r7, #16]
 81068b8:	43db      	mvns	r3, r3
 81068ba:	69ba      	ldr	r2, [r7, #24]
 81068bc:	4013      	ands	r3, r2
 81068be:	61bb      	str	r3, [r7, #24]
 81068c0:	683b      	ldr	r3, [r7, #0]
 81068c2:	685b      	ldr	r3, [r3, #4]
 81068c4:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 81068c8:	2b00      	cmp	r3, #0
 81068ca:	d003      	beq.n	81068d4 <HAL_GPIO_Init+0x2dc>
 81068cc:	69ba      	ldr	r2, [r7, #24]
 81068ce:	693b      	ldr	r3, [r7, #16]
 81068d0:	4313      	orrs	r3, r2
 81068d2:	61bb      	str	r3, [r7, #24]
 81068d4:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 81068d8:	69bb      	ldr	r3, [r7, #24]
 81068da:	6053      	str	r3, [r2, #4]
 81068dc:	697b      	ldr	r3, [r7, #20]
 81068de:	685b      	ldr	r3, [r3, #4]
 81068e0:	61bb      	str	r3, [r7, #24]
 81068e2:	693b      	ldr	r3, [r7, #16]
 81068e4:	43db      	mvns	r3, r3
 81068e6:	69ba      	ldr	r2, [r7, #24]
 81068e8:	4013      	ands	r3, r2
 81068ea:	61bb      	str	r3, [r7, #24]
 81068ec:	683b      	ldr	r3, [r7, #0]
 81068ee:	685b      	ldr	r3, [r3, #4]
 81068f0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 81068f4:	2b00      	cmp	r3, #0
 81068f6:	d003      	beq.n	8106900 <HAL_GPIO_Init+0x308>
 81068f8:	69ba      	ldr	r2, [r7, #24]
 81068fa:	693b      	ldr	r3, [r7, #16]
 81068fc:	4313      	orrs	r3, r2
 81068fe:	61bb      	str	r3, [r7, #24]
 8106900:	697b      	ldr	r3, [r7, #20]
 8106902:	69ba      	ldr	r2, [r7, #24]
 8106904:	605a      	str	r2, [r3, #4]
 8106906:	697b      	ldr	r3, [r7, #20]
 8106908:	681b      	ldr	r3, [r3, #0]
 810690a:	61bb      	str	r3, [r7, #24]
 810690c:	693b      	ldr	r3, [r7, #16]
 810690e:	43db      	mvns	r3, r3
 8106910:	69ba      	ldr	r2, [r7, #24]
 8106912:	4013      	ands	r3, r2
 8106914:	61bb      	str	r3, [r7, #24]
 8106916:	683b      	ldr	r3, [r7, #0]
 8106918:	685b      	ldr	r3, [r3, #4]
 810691a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 810691e:	2b00      	cmp	r3, #0
 8106920:	d003      	beq.n	810692a <HAL_GPIO_Init+0x332>
 8106922:	69ba      	ldr	r2, [r7, #24]
 8106924:	693b      	ldr	r3, [r7, #16]
 8106926:	4313      	orrs	r3, r2
 8106928:	61bb      	str	r3, [r7, #24]
 810692a:	697b      	ldr	r3, [r7, #20]
 810692c:	69ba      	ldr	r2, [r7, #24]
 810692e:	601a      	str	r2, [r3, #0]
 8106930:	69fb      	ldr	r3, [r7, #28]
 8106932:	3301      	adds	r3, #1
 8106934:	61fb      	str	r3, [r7, #28]
 8106936:	683b      	ldr	r3, [r7, #0]
 8106938:	681a      	ldr	r2, [r3, #0]
 810693a:	69fb      	ldr	r3, [r7, #28]
 810693c:	fa22 f303 	lsr.w	r3, r2, r3
 8106940:	2b00      	cmp	r3, #0
 8106942:	f47f ae63 	bne.w	810660c <HAL_GPIO_Init+0x14>
 8106946:	bf00      	nop
 8106948:	bf00      	nop
 810694a:	3724      	adds	r7, #36	@ 0x24
 810694c:	46bd      	mov	sp, r7
 810694e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8106952:	4770      	bx	lr
 8106954:	58000400 	.word	0x58000400

08106958 <HAL_GPIO_WritePin>:
 8106958:	b480      	push	{r7}
 810695a:	b083      	sub	sp, #12
 810695c:	af00      	add	r7, sp, #0
 810695e:	6078      	str	r0, [r7, #4]
 8106960:	460b      	mov	r3, r1
 8106962:	807b      	strh	r3, [r7, #2]
 8106964:	4613      	mov	r3, r2
 8106966:	707b      	strb	r3, [r7, #1]
 8106968:	787b      	ldrb	r3, [r7, #1]
 810696a:	2b00      	cmp	r3, #0
 810696c:	d003      	beq.n	8106976 <HAL_GPIO_WritePin+0x1e>
 810696e:	887a      	ldrh	r2, [r7, #2]
 8106970:	687b      	ldr	r3, [r7, #4]
 8106972:	619a      	str	r2, [r3, #24]
 8106974:	e003      	b.n	810697e <HAL_GPIO_WritePin+0x26>
 8106976:	887b      	ldrh	r3, [r7, #2]
 8106978:	041a      	lsls	r2, r3, #16
 810697a:	687b      	ldr	r3, [r7, #4]
 810697c:	619a      	str	r2, [r3, #24]
 810697e:	bf00      	nop
 8106980:	370c      	adds	r7, #12
 8106982:	46bd      	mov	sp, r7
 8106984:	f85d 7b04 	ldr.w	r7, [sp], #4
 8106988:	4770      	bx	lr

0810698a <HAL_GPIO_TogglePin>:
 810698a:	b480      	push	{r7}
 810698c:	b085      	sub	sp, #20
 810698e:	af00      	add	r7, sp, #0
 8106990:	6078      	str	r0, [r7, #4]
 8106992:	460b      	mov	r3, r1
 8106994:	807b      	strh	r3, [r7, #2]
 8106996:	687b      	ldr	r3, [r7, #4]
 8106998:	695b      	ldr	r3, [r3, #20]
 810699a:	60fb      	str	r3, [r7, #12]
 810699c:	887a      	ldrh	r2, [r7, #2]
 810699e:	68fb      	ldr	r3, [r7, #12]
 81069a0:	4013      	ands	r3, r2
 81069a2:	041a      	lsls	r2, r3, #16
 81069a4:	68fb      	ldr	r3, [r7, #12]
 81069a6:	43d9      	mvns	r1, r3
 81069a8:	887b      	ldrh	r3, [r7, #2]
 81069aa:	400b      	ands	r3, r1
 81069ac:	431a      	orrs	r2, r3
 81069ae:	687b      	ldr	r3, [r7, #4]
 81069b0:	619a      	str	r2, [r3, #24]
 81069b2:	bf00      	nop
 81069b4:	3714      	adds	r7, #20
 81069b6:	46bd      	mov	sp, r7
 81069b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 81069bc:	4770      	bx	lr
	...

081069c0 <HAL_HSEM_FastTake>:
 81069c0:	b480      	push	{r7}
 81069c2:	b083      	sub	sp, #12
 81069c4:	af00      	add	r7, sp, #0
 81069c6:	6078      	str	r0, [r7, #4]
 81069c8:	4a08      	ldr	r2, [pc, #32]	@ (81069ec <HAL_HSEM_FastTake+0x2c>)
 81069ca:	687b      	ldr	r3, [r7, #4]
 81069cc:	3320      	adds	r3, #32
 81069ce:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 81069d2:	4a07      	ldr	r2, [pc, #28]	@ (81069f0 <HAL_HSEM_FastTake+0x30>)
 81069d4:	4293      	cmp	r3, r2
 81069d6:	d101      	bne.n	81069dc <HAL_HSEM_FastTake+0x1c>
 81069d8:	2300      	movs	r3, #0
 81069da:	e000      	b.n	81069de <HAL_HSEM_FastTake+0x1e>
 81069dc:	2301      	movs	r3, #1
 81069de:	4618      	mov	r0, r3
 81069e0:	370c      	adds	r7, #12
 81069e2:	46bd      	mov	sp, r7
 81069e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 81069e8:	4770      	bx	lr
 81069ea:	bf00      	nop
 81069ec:	58026400 	.word	0x58026400
 81069f0:	80000100 	.word	0x80000100

081069f4 <HAL_HSEM_Release>:
 81069f4:	b480      	push	{r7}
 81069f6:	b083      	sub	sp, #12
 81069f8:	af00      	add	r7, sp, #0
 81069fa:	6078      	str	r0, [r7, #4]
 81069fc:	6039      	str	r1, [r7, #0]
 81069fe:	4906      	ldr	r1, [pc, #24]	@ (8106a18 <HAL_HSEM_Release+0x24>)
 8106a00:	683b      	ldr	r3, [r7, #0]
 8106a02:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8106a06:	687b      	ldr	r3, [r7, #4]
 8106a08:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8106a0c:	bf00      	nop
 8106a0e:	370c      	adds	r7, #12
 8106a10:	46bd      	mov	sp, r7
 8106a12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8106a16:	4770      	bx	lr
 8106a18:	58026400 	.word	0x58026400

08106a1c <HAL_RCC_GetSysClockFreq>:
 8106a1c:	b480      	push	{r7}
 8106a1e:	b089      	sub	sp, #36	@ 0x24
 8106a20:	af00      	add	r7, sp, #0
 8106a22:	4bb3      	ldr	r3, [pc, #716]	@ (8106cf0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8106a24:	691b      	ldr	r3, [r3, #16]
 8106a26:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8106a2a:	2b18      	cmp	r3, #24
 8106a2c:	f200 8155 	bhi.w	8106cda <HAL_RCC_GetSysClockFreq+0x2be>
 8106a30:	a201      	add	r2, pc, #4	@ (adr r2, 8106a38 <HAL_RCC_GetSysClockFreq+0x1c>)
 8106a32:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8106a36:	bf00      	nop
 8106a38:	08106a9d 	.word	0x08106a9d
 8106a3c:	08106cdb 	.word	0x08106cdb
 8106a40:	08106cdb 	.word	0x08106cdb
 8106a44:	08106cdb 	.word	0x08106cdb
 8106a48:	08106cdb 	.word	0x08106cdb
 8106a4c:	08106cdb 	.word	0x08106cdb
 8106a50:	08106cdb 	.word	0x08106cdb
 8106a54:	08106cdb 	.word	0x08106cdb
 8106a58:	08106ac3 	.word	0x08106ac3
 8106a5c:	08106cdb 	.word	0x08106cdb
 8106a60:	08106cdb 	.word	0x08106cdb
 8106a64:	08106cdb 	.word	0x08106cdb
 8106a68:	08106cdb 	.word	0x08106cdb
 8106a6c:	08106cdb 	.word	0x08106cdb
 8106a70:	08106cdb 	.word	0x08106cdb
 8106a74:	08106cdb 	.word	0x08106cdb
 8106a78:	08106ac9 	.word	0x08106ac9
 8106a7c:	08106cdb 	.word	0x08106cdb
 8106a80:	08106cdb 	.word	0x08106cdb
 8106a84:	08106cdb 	.word	0x08106cdb
 8106a88:	08106cdb 	.word	0x08106cdb
 8106a8c:	08106cdb 	.word	0x08106cdb
 8106a90:	08106cdb 	.word	0x08106cdb
 8106a94:	08106cdb 	.word	0x08106cdb
 8106a98:	08106acf 	.word	0x08106acf
 8106a9c:	4b94      	ldr	r3, [pc, #592]	@ (8106cf0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8106a9e:	681b      	ldr	r3, [r3, #0]
 8106aa0:	f003 0320 	and.w	r3, r3, #32
 8106aa4:	2b00      	cmp	r3, #0
 8106aa6:	d009      	beq.n	8106abc <HAL_RCC_GetSysClockFreq+0xa0>
 8106aa8:	4b91      	ldr	r3, [pc, #580]	@ (8106cf0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8106aaa:	681b      	ldr	r3, [r3, #0]
 8106aac:	08db      	lsrs	r3, r3, #3
 8106aae:	f003 0303 	and.w	r3, r3, #3
 8106ab2:	4a90      	ldr	r2, [pc, #576]	@ (8106cf4 <HAL_RCC_GetSysClockFreq+0x2d8>)
 8106ab4:	fa22 f303 	lsr.w	r3, r2, r3
 8106ab8:	61bb      	str	r3, [r7, #24]
 8106aba:	e111      	b.n	8106ce0 <HAL_RCC_GetSysClockFreq+0x2c4>
 8106abc:	4b8d      	ldr	r3, [pc, #564]	@ (8106cf4 <HAL_RCC_GetSysClockFreq+0x2d8>)
 8106abe:	61bb      	str	r3, [r7, #24]
 8106ac0:	e10e      	b.n	8106ce0 <HAL_RCC_GetSysClockFreq+0x2c4>
 8106ac2:	4b8d      	ldr	r3, [pc, #564]	@ (8106cf8 <HAL_RCC_GetSysClockFreq+0x2dc>)
 8106ac4:	61bb      	str	r3, [r7, #24]
 8106ac6:	e10b      	b.n	8106ce0 <HAL_RCC_GetSysClockFreq+0x2c4>
 8106ac8:	4b8c      	ldr	r3, [pc, #560]	@ (8106cfc <HAL_RCC_GetSysClockFreq+0x2e0>)
 8106aca:	61bb      	str	r3, [r7, #24]
 8106acc:	e108      	b.n	8106ce0 <HAL_RCC_GetSysClockFreq+0x2c4>
 8106ace:	4b88      	ldr	r3, [pc, #544]	@ (8106cf0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8106ad0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8106ad2:	f003 0303 	and.w	r3, r3, #3
 8106ad6:	617b      	str	r3, [r7, #20]
 8106ad8:	4b85      	ldr	r3, [pc, #532]	@ (8106cf0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8106ada:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8106adc:	091b      	lsrs	r3, r3, #4
 8106ade:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8106ae2:	613b      	str	r3, [r7, #16]
 8106ae4:	4b82      	ldr	r3, [pc, #520]	@ (8106cf0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8106ae6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8106ae8:	f003 0301 	and.w	r3, r3, #1
 8106aec:	60fb      	str	r3, [r7, #12]
 8106aee:	4b80      	ldr	r3, [pc, #512]	@ (8106cf0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8106af0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8106af2:	08db      	lsrs	r3, r3, #3
 8106af4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8106af8:	68fa      	ldr	r2, [r7, #12]
 8106afa:	fb02 f303 	mul.w	r3, r2, r3
 8106afe:	ee07 3a90 	vmov	s15, r3
 8106b02:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8106b06:	edc7 7a02 	vstr	s15, [r7, #8]
 8106b0a:	693b      	ldr	r3, [r7, #16]
 8106b0c:	2b00      	cmp	r3, #0
 8106b0e:	f000 80e1 	beq.w	8106cd4 <HAL_RCC_GetSysClockFreq+0x2b8>
 8106b12:	697b      	ldr	r3, [r7, #20]
 8106b14:	2b02      	cmp	r3, #2
 8106b16:	f000 8083 	beq.w	8106c20 <HAL_RCC_GetSysClockFreq+0x204>
 8106b1a:	697b      	ldr	r3, [r7, #20]
 8106b1c:	2b02      	cmp	r3, #2
 8106b1e:	f200 80a1 	bhi.w	8106c64 <HAL_RCC_GetSysClockFreq+0x248>
 8106b22:	697b      	ldr	r3, [r7, #20]
 8106b24:	2b00      	cmp	r3, #0
 8106b26:	d003      	beq.n	8106b30 <HAL_RCC_GetSysClockFreq+0x114>
 8106b28:	697b      	ldr	r3, [r7, #20]
 8106b2a:	2b01      	cmp	r3, #1
 8106b2c:	d056      	beq.n	8106bdc <HAL_RCC_GetSysClockFreq+0x1c0>
 8106b2e:	e099      	b.n	8106c64 <HAL_RCC_GetSysClockFreq+0x248>
 8106b30:	4b6f      	ldr	r3, [pc, #444]	@ (8106cf0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8106b32:	681b      	ldr	r3, [r3, #0]
 8106b34:	f003 0320 	and.w	r3, r3, #32
 8106b38:	2b00      	cmp	r3, #0
 8106b3a:	d02d      	beq.n	8106b98 <HAL_RCC_GetSysClockFreq+0x17c>
 8106b3c:	4b6c      	ldr	r3, [pc, #432]	@ (8106cf0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8106b3e:	681b      	ldr	r3, [r3, #0]
 8106b40:	08db      	lsrs	r3, r3, #3
 8106b42:	f003 0303 	and.w	r3, r3, #3
 8106b46:	4a6b      	ldr	r2, [pc, #428]	@ (8106cf4 <HAL_RCC_GetSysClockFreq+0x2d8>)
 8106b48:	fa22 f303 	lsr.w	r3, r2, r3
 8106b4c:	607b      	str	r3, [r7, #4]
 8106b4e:	687b      	ldr	r3, [r7, #4]
 8106b50:	ee07 3a90 	vmov	s15, r3
 8106b54:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8106b58:	693b      	ldr	r3, [r7, #16]
 8106b5a:	ee07 3a90 	vmov	s15, r3
 8106b5e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8106b62:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8106b66:	4b62      	ldr	r3, [pc, #392]	@ (8106cf0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8106b68:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8106b6a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8106b6e:	ee07 3a90 	vmov	s15, r3
 8106b72:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8106b76:	ed97 6a02 	vldr	s12, [r7, #8]
 8106b7a:	eddf 5a61 	vldr	s11, [pc, #388]	@ 8106d00 <HAL_RCC_GetSysClockFreq+0x2e4>
 8106b7e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8106b82:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8106b86:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8106b8a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8106b8e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8106b92:	edc7 7a07 	vstr	s15, [r7, #28]
 8106b96:	e087      	b.n	8106ca8 <HAL_RCC_GetSysClockFreq+0x28c>
 8106b98:	693b      	ldr	r3, [r7, #16]
 8106b9a:	ee07 3a90 	vmov	s15, r3
 8106b9e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8106ba2:	eddf 6a58 	vldr	s13, [pc, #352]	@ 8106d04 <HAL_RCC_GetSysClockFreq+0x2e8>
 8106ba6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8106baa:	4b51      	ldr	r3, [pc, #324]	@ (8106cf0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8106bac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8106bae:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8106bb2:	ee07 3a90 	vmov	s15, r3
 8106bb6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8106bba:	ed97 6a02 	vldr	s12, [r7, #8]
 8106bbe:	eddf 5a50 	vldr	s11, [pc, #320]	@ 8106d00 <HAL_RCC_GetSysClockFreq+0x2e4>
 8106bc2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8106bc6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8106bca:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8106bce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8106bd2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8106bd6:	edc7 7a07 	vstr	s15, [r7, #28]
 8106bda:	e065      	b.n	8106ca8 <HAL_RCC_GetSysClockFreq+0x28c>
 8106bdc:	693b      	ldr	r3, [r7, #16]
 8106bde:	ee07 3a90 	vmov	s15, r3
 8106be2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8106be6:	eddf 6a48 	vldr	s13, [pc, #288]	@ 8106d08 <HAL_RCC_GetSysClockFreq+0x2ec>
 8106bea:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8106bee:	4b40      	ldr	r3, [pc, #256]	@ (8106cf0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8106bf0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8106bf2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8106bf6:	ee07 3a90 	vmov	s15, r3
 8106bfa:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8106bfe:	ed97 6a02 	vldr	s12, [r7, #8]
 8106c02:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8106d00 <HAL_RCC_GetSysClockFreq+0x2e4>
 8106c06:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8106c0a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8106c0e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8106c12:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8106c16:	ee67 7a27 	vmul.f32	s15, s14, s15
 8106c1a:	edc7 7a07 	vstr	s15, [r7, #28]
 8106c1e:	e043      	b.n	8106ca8 <HAL_RCC_GetSysClockFreq+0x28c>
 8106c20:	693b      	ldr	r3, [r7, #16]
 8106c22:	ee07 3a90 	vmov	s15, r3
 8106c26:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8106c2a:	eddf 6a38 	vldr	s13, [pc, #224]	@ 8106d0c <HAL_RCC_GetSysClockFreq+0x2f0>
 8106c2e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8106c32:	4b2f      	ldr	r3, [pc, #188]	@ (8106cf0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8106c34:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8106c36:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8106c3a:	ee07 3a90 	vmov	s15, r3
 8106c3e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8106c42:	ed97 6a02 	vldr	s12, [r7, #8]
 8106c46:	eddf 5a2e 	vldr	s11, [pc, #184]	@ 8106d00 <HAL_RCC_GetSysClockFreq+0x2e4>
 8106c4a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8106c4e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8106c52:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8106c56:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8106c5a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8106c5e:	edc7 7a07 	vstr	s15, [r7, #28]
 8106c62:	e021      	b.n	8106ca8 <HAL_RCC_GetSysClockFreq+0x28c>
 8106c64:	693b      	ldr	r3, [r7, #16]
 8106c66:	ee07 3a90 	vmov	s15, r3
 8106c6a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8106c6e:	eddf 6a26 	vldr	s13, [pc, #152]	@ 8106d08 <HAL_RCC_GetSysClockFreq+0x2ec>
 8106c72:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8106c76:	4b1e      	ldr	r3, [pc, #120]	@ (8106cf0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8106c78:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8106c7a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8106c7e:	ee07 3a90 	vmov	s15, r3
 8106c82:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8106c86:	ed97 6a02 	vldr	s12, [r7, #8]
 8106c8a:	eddf 5a1d 	vldr	s11, [pc, #116]	@ 8106d00 <HAL_RCC_GetSysClockFreq+0x2e4>
 8106c8e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8106c92:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8106c96:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8106c9a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8106c9e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8106ca2:	edc7 7a07 	vstr	s15, [r7, #28]
 8106ca6:	bf00      	nop
 8106ca8:	4b11      	ldr	r3, [pc, #68]	@ (8106cf0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8106caa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8106cac:	0a5b      	lsrs	r3, r3, #9
 8106cae:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8106cb2:	3301      	adds	r3, #1
 8106cb4:	603b      	str	r3, [r7, #0]
 8106cb6:	683b      	ldr	r3, [r7, #0]
 8106cb8:	ee07 3a90 	vmov	s15, r3
 8106cbc:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8106cc0:	edd7 6a07 	vldr	s13, [r7, #28]
 8106cc4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8106cc8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8106ccc:	ee17 3a90 	vmov	r3, s15
 8106cd0:	61bb      	str	r3, [r7, #24]
 8106cd2:	e005      	b.n	8106ce0 <HAL_RCC_GetSysClockFreq+0x2c4>
 8106cd4:	2300      	movs	r3, #0
 8106cd6:	61bb      	str	r3, [r7, #24]
 8106cd8:	e002      	b.n	8106ce0 <HAL_RCC_GetSysClockFreq+0x2c4>
 8106cda:	4b07      	ldr	r3, [pc, #28]	@ (8106cf8 <HAL_RCC_GetSysClockFreq+0x2dc>)
 8106cdc:	61bb      	str	r3, [r7, #24]
 8106cde:	bf00      	nop
 8106ce0:	69bb      	ldr	r3, [r7, #24]
 8106ce2:	4618      	mov	r0, r3
 8106ce4:	3724      	adds	r7, #36	@ 0x24
 8106ce6:	46bd      	mov	sp, r7
 8106ce8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8106cec:	4770      	bx	lr
 8106cee:	bf00      	nop
 8106cf0:	58024400 	.word	0x58024400
 8106cf4:	03d09000 	.word	0x03d09000
 8106cf8:	003d0900 	.word	0x003d0900
 8106cfc:	017d7840 	.word	0x017d7840
 8106d00:	46000000 	.word	0x46000000
 8106d04:	4c742400 	.word	0x4c742400
 8106d08:	4a742400 	.word	0x4a742400
 8106d0c:	4bbebc20 	.word	0x4bbebc20

08106d10 <HAL_RCC_GetHCLKFreq>:
 8106d10:	b580      	push	{r7, lr}
 8106d12:	b082      	sub	sp, #8
 8106d14:	af00      	add	r7, sp, #0
 8106d16:	f7ff fe81 	bl	8106a1c <HAL_RCC_GetSysClockFreq>
 8106d1a:	4602      	mov	r2, r0
 8106d1c:	4b11      	ldr	r3, [pc, #68]	@ (8106d64 <HAL_RCC_GetHCLKFreq+0x54>)
 8106d1e:	699b      	ldr	r3, [r3, #24]
 8106d20:	0a1b      	lsrs	r3, r3, #8
 8106d22:	f003 030f 	and.w	r3, r3, #15
 8106d26:	4910      	ldr	r1, [pc, #64]	@ (8106d68 <HAL_RCC_GetHCLKFreq+0x58>)
 8106d28:	5ccb      	ldrb	r3, [r1, r3]
 8106d2a:	f003 031f 	and.w	r3, r3, #31
 8106d2e:	fa22 f303 	lsr.w	r3, r2, r3
 8106d32:	607b      	str	r3, [r7, #4]
 8106d34:	4b0b      	ldr	r3, [pc, #44]	@ (8106d64 <HAL_RCC_GetHCLKFreq+0x54>)
 8106d36:	699b      	ldr	r3, [r3, #24]
 8106d38:	f003 030f 	and.w	r3, r3, #15
 8106d3c:	4a0a      	ldr	r2, [pc, #40]	@ (8106d68 <HAL_RCC_GetHCLKFreq+0x58>)
 8106d3e:	5cd3      	ldrb	r3, [r2, r3]
 8106d40:	f003 031f 	and.w	r3, r3, #31
 8106d44:	687a      	ldr	r2, [r7, #4]
 8106d46:	fa22 f303 	lsr.w	r3, r2, r3
 8106d4a:	4a08      	ldr	r2, [pc, #32]	@ (8106d6c <HAL_RCC_GetHCLKFreq+0x5c>)
 8106d4c:	6013      	str	r3, [r2, #0]
 8106d4e:	4b07      	ldr	r3, [pc, #28]	@ (8106d6c <HAL_RCC_GetHCLKFreq+0x5c>)
 8106d50:	681b      	ldr	r3, [r3, #0]
 8106d52:	4a07      	ldr	r2, [pc, #28]	@ (8106d70 <HAL_RCC_GetHCLKFreq+0x60>)
 8106d54:	6013      	str	r3, [r2, #0]
 8106d56:	4b05      	ldr	r3, [pc, #20]	@ (8106d6c <HAL_RCC_GetHCLKFreq+0x5c>)
 8106d58:	681b      	ldr	r3, [r3, #0]
 8106d5a:	4618      	mov	r0, r3
 8106d5c:	3708      	adds	r7, #8
 8106d5e:	46bd      	mov	sp, r7
 8106d60:	bd80      	pop	{r7, pc}
 8106d62:	bf00      	nop
 8106d64:	58024400 	.word	0x58024400
 8106d68:	08111810 	.word	0x08111810
 8106d6c:	10000004 	.word	0x10000004
 8106d70:	10000000 	.word	0x10000000

08106d74 <HAL_RCC_GetPCLK1Freq>:
 8106d74:	b580      	push	{r7, lr}
 8106d76:	af00      	add	r7, sp, #0
 8106d78:	f7ff ffca 	bl	8106d10 <HAL_RCC_GetHCLKFreq>
 8106d7c:	4602      	mov	r2, r0
 8106d7e:	4b06      	ldr	r3, [pc, #24]	@ (8106d98 <HAL_RCC_GetPCLK1Freq+0x24>)
 8106d80:	69db      	ldr	r3, [r3, #28]
 8106d82:	091b      	lsrs	r3, r3, #4
 8106d84:	f003 0307 	and.w	r3, r3, #7
 8106d88:	4904      	ldr	r1, [pc, #16]	@ (8106d9c <HAL_RCC_GetPCLK1Freq+0x28>)
 8106d8a:	5ccb      	ldrb	r3, [r1, r3]
 8106d8c:	f003 031f 	and.w	r3, r3, #31
 8106d90:	fa22 f303 	lsr.w	r3, r2, r3
 8106d94:	4618      	mov	r0, r3
 8106d96:	bd80      	pop	{r7, pc}
 8106d98:	58024400 	.word	0x58024400
 8106d9c:	08111810 	.word	0x08111810

08106da0 <HAL_RCC_GetPCLK2Freq>:
 8106da0:	b580      	push	{r7, lr}
 8106da2:	af00      	add	r7, sp, #0
 8106da4:	f7ff ffb4 	bl	8106d10 <HAL_RCC_GetHCLKFreq>
 8106da8:	4602      	mov	r2, r0
 8106daa:	4b06      	ldr	r3, [pc, #24]	@ (8106dc4 <HAL_RCC_GetPCLK2Freq+0x24>)
 8106dac:	69db      	ldr	r3, [r3, #28]
 8106dae:	0a1b      	lsrs	r3, r3, #8
 8106db0:	f003 0307 	and.w	r3, r3, #7
 8106db4:	4904      	ldr	r1, [pc, #16]	@ (8106dc8 <HAL_RCC_GetPCLK2Freq+0x28>)
 8106db6:	5ccb      	ldrb	r3, [r1, r3]
 8106db8:	f003 031f 	and.w	r3, r3, #31
 8106dbc:	fa22 f303 	lsr.w	r3, r2, r3
 8106dc0:	4618      	mov	r0, r3
 8106dc2:	bd80      	pop	{r7, pc}
 8106dc4:	58024400 	.word	0x58024400
 8106dc8:	08111810 	.word	0x08111810

08106dcc <HAL_RCC_GetClockConfig>:
 8106dcc:	b480      	push	{r7}
 8106dce:	b083      	sub	sp, #12
 8106dd0:	af00      	add	r7, sp, #0
 8106dd2:	6078      	str	r0, [r7, #4]
 8106dd4:	6039      	str	r1, [r7, #0]
 8106dd6:	687b      	ldr	r3, [r7, #4]
 8106dd8:	223f      	movs	r2, #63	@ 0x3f
 8106dda:	601a      	str	r2, [r3, #0]
 8106ddc:	4b1a      	ldr	r3, [pc, #104]	@ (8106e48 <HAL_RCC_GetClockConfig+0x7c>)
 8106dde:	691b      	ldr	r3, [r3, #16]
 8106de0:	f003 0207 	and.w	r2, r3, #7
 8106de4:	687b      	ldr	r3, [r7, #4]
 8106de6:	605a      	str	r2, [r3, #4]
 8106de8:	4b17      	ldr	r3, [pc, #92]	@ (8106e48 <HAL_RCC_GetClockConfig+0x7c>)
 8106dea:	699b      	ldr	r3, [r3, #24]
 8106dec:	f403 6270 	and.w	r2, r3, #3840	@ 0xf00
 8106df0:	687b      	ldr	r3, [r7, #4]
 8106df2:	609a      	str	r2, [r3, #8]
 8106df4:	4b14      	ldr	r3, [pc, #80]	@ (8106e48 <HAL_RCC_GetClockConfig+0x7c>)
 8106df6:	699b      	ldr	r3, [r3, #24]
 8106df8:	f003 020f 	and.w	r2, r3, #15
 8106dfc:	687b      	ldr	r3, [r7, #4]
 8106dfe:	60da      	str	r2, [r3, #12]
 8106e00:	4b11      	ldr	r3, [pc, #68]	@ (8106e48 <HAL_RCC_GetClockConfig+0x7c>)
 8106e02:	699b      	ldr	r3, [r3, #24]
 8106e04:	f003 0270 	and.w	r2, r3, #112	@ 0x70
 8106e08:	687b      	ldr	r3, [r7, #4]
 8106e0a:	611a      	str	r2, [r3, #16]
 8106e0c:	4b0e      	ldr	r3, [pc, #56]	@ (8106e48 <HAL_RCC_GetClockConfig+0x7c>)
 8106e0e:	69db      	ldr	r3, [r3, #28]
 8106e10:	f003 0270 	and.w	r2, r3, #112	@ 0x70
 8106e14:	687b      	ldr	r3, [r7, #4]
 8106e16:	615a      	str	r2, [r3, #20]
 8106e18:	4b0b      	ldr	r3, [pc, #44]	@ (8106e48 <HAL_RCC_GetClockConfig+0x7c>)
 8106e1a:	69db      	ldr	r3, [r3, #28]
 8106e1c:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 8106e20:	687b      	ldr	r3, [r7, #4]
 8106e22:	619a      	str	r2, [r3, #24]
 8106e24:	4b08      	ldr	r3, [pc, #32]	@ (8106e48 <HAL_RCC_GetClockConfig+0x7c>)
 8106e26:	6a1b      	ldr	r3, [r3, #32]
 8106e28:	f003 0270 	and.w	r2, r3, #112	@ 0x70
 8106e2c:	687b      	ldr	r3, [r7, #4]
 8106e2e:	61da      	str	r2, [r3, #28]
 8106e30:	4b06      	ldr	r3, [pc, #24]	@ (8106e4c <HAL_RCC_GetClockConfig+0x80>)
 8106e32:	681b      	ldr	r3, [r3, #0]
 8106e34:	f003 020f 	and.w	r2, r3, #15
 8106e38:	683b      	ldr	r3, [r7, #0]
 8106e3a:	601a      	str	r2, [r3, #0]
 8106e3c:	bf00      	nop
 8106e3e:	370c      	adds	r7, #12
 8106e40:	46bd      	mov	sp, r7
 8106e42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8106e46:	4770      	bx	lr
 8106e48:	58024400 	.word	0x58024400
 8106e4c:	52002000 	.word	0x52002000

08106e50 <HAL_RCCEx_PeriphCLKConfig>:
 8106e50:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8106e54:	b0ca      	sub	sp, #296	@ 0x128
 8106e56:	af00      	add	r7, sp, #0
 8106e58:	f8c7 0114 	str.w	r0, [r7, #276]	@ 0x114
 8106e5c:	2300      	movs	r3, #0
 8106e5e:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8106e62:	2300      	movs	r3, #0
 8106e64:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8106e68:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8106e6c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8106e70:	f002 6400 	and.w	r4, r2, #134217728	@ 0x8000000
 8106e74:	2500      	movs	r5, #0
 8106e76:	ea54 0305 	orrs.w	r3, r4, r5
 8106e7a:	d049      	beq.n	8106f10 <HAL_RCCEx_PeriphCLKConfig+0xc0>
 8106e7c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8106e80:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8106e82:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8106e86:	d02f      	beq.n	8106ee8 <HAL_RCCEx_PeriphCLKConfig+0x98>
 8106e88:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8106e8c:	d828      	bhi.n	8106ee0 <HAL_RCCEx_PeriphCLKConfig+0x90>
 8106e8e:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8106e92:	d01a      	beq.n	8106eca <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8106e94:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8106e98:	d822      	bhi.n	8106ee0 <HAL_RCCEx_PeriphCLKConfig+0x90>
 8106e9a:	2b00      	cmp	r3, #0
 8106e9c:	d003      	beq.n	8106ea6 <HAL_RCCEx_PeriphCLKConfig+0x56>
 8106e9e:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8106ea2:	d007      	beq.n	8106eb4 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8106ea4:	e01c      	b.n	8106ee0 <HAL_RCCEx_PeriphCLKConfig+0x90>
 8106ea6:	4bb8      	ldr	r3, [pc, #736]	@ (8107188 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8106ea8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8106eaa:	4ab7      	ldr	r2, [pc, #732]	@ (8107188 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8106eac:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8106eb0:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8106eb2:	e01a      	b.n	8106eea <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8106eb4:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8106eb8:	3308      	adds	r3, #8
 8106eba:	2102      	movs	r1, #2
 8106ebc:	4618      	mov	r0, r3
 8106ebe:	f001 fc8f 	bl	81087e0 <RCCEx_PLL2_Config>
 8106ec2:	4603      	mov	r3, r0
 8106ec4:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8106ec8:	e00f      	b.n	8106eea <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8106eca:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8106ece:	3328      	adds	r3, #40	@ 0x28
 8106ed0:	2102      	movs	r1, #2
 8106ed2:	4618      	mov	r0, r3
 8106ed4:	f001 fd36 	bl	8108944 <RCCEx_PLL3_Config>
 8106ed8:	4603      	mov	r3, r0
 8106eda:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8106ede:	e004      	b.n	8106eea <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8106ee0:	2301      	movs	r3, #1
 8106ee2:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8106ee6:	e000      	b.n	8106eea <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8106ee8:	bf00      	nop
 8106eea:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8106eee:	2b00      	cmp	r3, #0
 8106ef0:	d10a      	bne.n	8106f08 <HAL_RCCEx_PeriphCLKConfig+0xb8>
 8106ef2:	4ba5      	ldr	r3, [pc, #660]	@ (8107188 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8106ef4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8106ef6:	f423 1140 	bic.w	r1, r3, #3145728	@ 0x300000
 8106efa:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8106efe:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8106f00:	4aa1      	ldr	r2, [pc, #644]	@ (8107188 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8106f02:	430b      	orrs	r3, r1
 8106f04:	6513      	str	r3, [r2, #80]	@ 0x50
 8106f06:	e003      	b.n	8106f10 <HAL_RCCEx_PeriphCLKConfig+0xc0>
 8106f08:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8106f0c:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8106f10:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8106f14:	e9d3 2300 	ldrd	r2, r3, [r3]
 8106f18:	f402 7880 	and.w	r8, r2, #256	@ 0x100
 8106f1c:	f04f 0900 	mov.w	r9, #0
 8106f20:	ea58 0309 	orrs.w	r3, r8, r9
 8106f24:	d047      	beq.n	8106fb6 <HAL_RCCEx_PeriphCLKConfig+0x166>
 8106f26:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8106f2a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8106f2c:	2b04      	cmp	r3, #4
 8106f2e:	d82a      	bhi.n	8106f86 <HAL_RCCEx_PeriphCLKConfig+0x136>
 8106f30:	a201      	add	r2, pc, #4	@ (adr r2, 8106f38 <HAL_RCCEx_PeriphCLKConfig+0xe8>)
 8106f32:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8106f36:	bf00      	nop
 8106f38:	08106f4d 	.word	0x08106f4d
 8106f3c:	08106f5b 	.word	0x08106f5b
 8106f40:	08106f71 	.word	0x08106f71
 8106f44:	08106f8f 	.word	0x08106f8f
 8106f48:	08106f8f 	.word	0x08106f8f
 8106f4c:	4b8e      	ldr	r3, [pc, #568]	@ (8107188 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8106f4e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8106f50:	4a8d      	ldr	r2, [pc, #564]	@ (8107188 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8106f52:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8106f56:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8106f58:	e01a      	b.n	8106f90 <HAL_RCCEx_PeriphCLKConfig+0x140>
 8106f5a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8106f5e:	3308      	adds	r3, #8
 8106f60:	2100      	movs	r1, #0
 8106f62:	4618      	mov	r0, r3
 8106f64:	f001 fc3c 	bl	81087e0 <RCCEx_PLL2_Config>
 8106f68:	4603      	mov	r3, r0
 8106f6a:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8106f6e:	e00f      	b.n	8106f90 <HAL_RCCEx_PeriphCLKConfig+0x140>
 8106f70:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8106f74:	3328      	adds	r3, #40	@ 0x28
 8106f76:	2100      	movs	r1, #0
 8106f78:	4618      	mov	r0, r3
 8106f7a:	f001 fce3 	bl	8108944 <RCCEx_PLL3_Config>
 8106f7e:	4603      	mov	r3, r0
 8106f80:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8106f84:	e004      	b.n	8106f90 <HAL_RCCEx_PeriphCLKConfig+0x140>
 8106f86:	2301      	movs	r3, #1
 8106f88:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8106f8c:	e000      	b.n	8106f90 <HAL_RCCEx_PeriphCLKConfig+0x140>
 8106f8e:	bf00      	nop
 8106f90:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8106f94:	2b00      	cmp	r3, #0
 8106f96:	d10a      	bne.n	8106fae <HAL_RCCEx_PeriphCLKConfig+0x15e>
 8106f98:	4b7b      	ldr	r3, [pc, #492]	@ (8107188 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8106f9a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8106f9c:	f023 0107 	bic.w	r1, r3, #7
 8106fa0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8106fa4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8106fa6:	4a78      	ldr	r2, [pc, #480]	@ (8107188 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8106fa8:	430b      	orrs	r3, r1
 8106faa:	6513      	str	r3, [r2, #80]	@ 0x50
 8106fac:	e003      	b.n	8106fb6 <HAL_RCCEx_PeriphCLKConfig+0x166>
 8106fae:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8106fb2:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8106fb6:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8106fba:	e9d3 2300 	ldrd	r2, r3, [r3]
 8106fbe:	f402 7a00 	and.w	sl, r2, #512	@ 0x200
 8106fc2:	f04f 0b00 	mov.w	fp, #0
 8106fc6:	ea5a 030b 	orrs.w	r3, sl, fp
 8106fca:	d04c      	beq.n	8107066 <HAL_RCCEx_PeriphCLKConfig+0x216>
 8106fcc:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8106fd0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8106fd2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8106fd6:	d030      	beq.n	810703a <HAL_RCCEx_PeriphCLKConfig+0x1ea>
 8106fd8:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8106fdc:	d829      	bhi.n	8107032 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 8106fde:	2bc0      	cmp	r3, #192	@ 0xc0
 8106fe0:	d02d      	beq.n	810703e <HAL_RCCEx_PeriphCLKConfig+0x1ee>
 8106fe2:	2bc0      	cmp	r3, #192	@ 0xc0
 8106fe4:	d825      	bhi.n	8107032 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 8106fe6:	2b80      	cmp	r3, #128	@ 0x80
 8106fe8:	d018      	beq.n	810701c <HAL_RCCEx_PeriphCLKConfig+0x1cc>
 8106fea:	2b80      	cmp	r3, #128	@ 0x80
 8106fec:	d821      	bhi.n	8107032 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 8106fee:	2b00      	cmp	r3, #0
 8106ff0:	d002      	beq.n	8106ff8 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 8106ff2:	2b40      	cmp	r3, #64	@ 0x40
 8106ff4:	d007      	beq.n	8107006 <HAL_RCCEx_PeriphCLKConfig+0x1b6>
 8106ff6:	e01c      	b.n	8107032 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 8106ff8:	4b63      	ldr	r3, [pc, #396]	@ (8107188 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8106ffa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8106ffc:	4a62      	ldr	r2, [pc, #392]	@ (8107188 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8106ffe:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8107002:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8107004:	e01c      	b.n	8107040 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
 8107006:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810700a:	3308      	adds	r3, #8
 810700c:	2100      	movs	r1, #0
 810700e:	4618      	mov	r0, r3
 8107010:	f001 fbe6 	bl	81087e0 <RCCEx_PLL2_Config>
 8107014:	4603      	mov	r3, r0
 8107016:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 810701a:	e011      	b.n	8107040 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
 810701c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107020:	3328      	adds	r3, #40	@ 0x28
 8107022:	2100      	movs	r1, #0
 8107024:	4618      	mov	r0, r3
 8107026:	f001 fc8d 	bl	8108944 <RCCEx_PLL3_Config>
 810702a:	4603      	mov	r3, r0
 810702c:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107030:	e006      	b.n	8107040 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
 8107032:	2301      	movs	r3, #1
 8107034:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107038:	e002      	b.n	8107040 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
 810703a:	bf00      	nop
 810703c:	e000      	b.n	8107040 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
 810703e:	bf00      	nop
 8107040:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107044:	2b00      	cmp	r3, #0
 8107046:	d10a      	bne.n	810705e <HAL_RCCEx_PeriphCLKConfig+0x20e>
 8107048:	4b4f      	ldr	r3, [pc, #316]	@ (8107188 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 810704a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 810704c:	f423 71e0 	bic.w	r1, r3, #448	@ 0x1c0
 8107050:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107054:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8107056:	4a4c      	ldr	r2, [pc, #304]	@ (8107188 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8107058:	430b      	orrs	r3, r1
 810705a:	6513      	str	r3, [r2, #80]	@ 0x50
 810705c:	e003      	b.n	8107066 <HAL_RCCEx_PeriphCLKConfig+0x216>
 810705e:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107062:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8107066:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810706a:	e9d3 2300 	ldrd	r2, r3, [r3]
 810706e:	f402 6380 	and.w	r3, r2, #1024	@ 0x400
 8107072:	f8c7 3108 	str.w	r3, [r7, #264]	@ 0x108
 8107076:	2300      	movs	r3, #0
 8107078:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
 810707c:	e9d7 1242 	ldrd	r1, r2, [r7, #264]	@ 0x108
 8107080:	460b      	mov	r3, r1
 8107082:	4313      	orrs	r3, r2
 8107084:	d053      	beq.n	810712e <HAL_RCCEx_PeriphCLKConfig+0x2de>
 8107086:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810708a:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 810708e:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8107092:	d035      	beq.n	8107100 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
 8107094:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8107098:	d82e      	bhi.n	81070f8 <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 810709a:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 810709e:	d031      	beq.n	8107104 <HAL_RCCEx_PeriphCLKConfig+0x2b4>
 81070a0:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 81070a4:	d828      	bhi.n	81070f8 <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 81070a6:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 81070aa:	d01a      	beq.n	81070e2 <HAL_RCCEx_PeriphCLKConfig+0x292>
 81070ac:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 81070b0:	d822      	bhi.n	81070f8 <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 81070b2:	2b00      	cmp	r3, #0
 81070b4:	d003      	beq.n	81070be <HAL_RCCEx_PeriphCLKConfig+0x26e>
 81070b6:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 81070ba:	d007      	beq.n	81070cc <HAL_RCCEx_PeriphCLKConfig+0x27c>
 81070bc:	e01c      	b.n	81070f8 <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 81070be:	4b32      	ldr	r3, [pc, #200]	@ (8107188 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 81070c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 81070c2:	4a31      	ldr	r2, [pc, #196]	@ (8107188 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 81070c4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 81070c8:	62d3      	str	r3, [r2, #44]	@ 0x2c
 81070ca:	e01c      	b.n	8107106 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 81070cc:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81070d0:	3308      	adds	r3, #8
 81070d2:	2100      	movs	r1, #0
 81070d4:	4618      	mov	r0, r3
 81070d6:	f001 fb83 	bl	81087e0 <RCCEx_PLL2_Config>
 81070da:	4603      	mov	r3, r0
 81070dc:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 81070e0:	e011      	b.n	8107106 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 81070e2:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81070e6:	3328      	adds	r3, #40	@ 0x28
 81070e8:	2100      	movs	r1, #0
 81070ea:	4618      	mov	r0, r3
 81070ec:	f001 fc2a 	bl	8108944 <RCCEx_PLL3_Config>
 81070f0:	4603      	mov	r3, r0
 81070f2:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 81070f6:	e006      	b.n	8107106 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 81070f8:	2301      	movs	r3, #1
 81070fa:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 81070fe:	e002      	b.n	8107106 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 8107100:	bf00      	nop
 8107102:	e000      	b.n	8107106 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 8107104:	bf00      	nop
 8107106:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 810710a:	2b00      	cmp	r3, #0
 810710c:	d10b      	bne.n	8107126 <HAL_RCCEx_PeriphCLKConfig+0x2d6>
 810710e:	4b1e      	ldr	r3, [pc, #120]	@ (8107188 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8107110:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8107112:	f423 0160 	bic.w	r1, r3, #14680064	@ 0xe00000
 8107116:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810711a:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 810711e:	4a1a      	ldr	r2, [pc, #104]	@ (8107188 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8107120:	430b      	orrs	r3, r1
 8107122:	6593      	str	r3, [r2, #88]	@ 0x58
 8107124:	e003      	b.n	810712e <HAL_RCCEx_PeriphCLKConfig+0x2de>
 8107126:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 810712a:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 810712e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107132:	e9d3 2300 	ldrd	r2, r3, [r3]
 8107136:	f402 6300 	and.w	r3, r2, #2048	@ 0x800
 810713a:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
 810713e:	2300      	movs	r3, #0
 8107140:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 8107144:	e9d7 1240 	ldrd	r1, r2, [r7, #256]	@ 0x100
 8107148:	460b      	mov	r3, r1
 810714a:	4313      	orrs	r3, r2
 810714c:	d056      	beq.n	81071fc <HAL_RCCEx_PeriphCLKConfig+0x3ac>
 810714e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107152:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 8107156:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 810715a:	d038      	beq.n	81071ce <HAL_RCCEx_PeriphCLKConfig+0x37e>
 810715c:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8107160:	d831      	bhi.n	81071c6 <HAL_RCCEx_PeriphCLKConfig+0x376>
 8107162:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8107166:	d034      	beq.n	81071d2 <HAL_RCCEx_PeriphCLKConfig+0x382>
 8107168:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 810716c:	d82b      	bhi.n	81071c6 <HAL_RCCEx_PeriphCLKConfig+0x376>
 810716e:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8107172:	d01d      	beq.n	81071b0 <HAL_RCCEx_PeriphCLKConfig+0x360>
 8107174:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8107178:	d825      	bhi.n	81071c6 <HAL_RCCEx_PeriphCLKConfig+0x376>
 810717a:	2b00      	cmp	r3, #0
 810717c:	d006      	beq.n	810718c <HAL_RCCEx_PeriphCLKConfig+0x33c>
 810717e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8107182:	d00a      	beq.n	810719a <HAL_RCCEx_PeriphCLKConfig+0x34a>
 8107184:	e01f      	b.n	81071c6 <HAL_RCCEx_PeriphCLKConfig+0x376>
 8107186:	bf00      	nop
 8107188:	58024400 	.word	0x58024400
 810718c:	4ba2      	ldr	r3, [pc, #648]	@ (8107418 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 810718e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8107190:	4aa1      	ldr	r2, [pc, #644]	@ (8107418 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8107192:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8107196:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8107198:	e01c      	b.n	81071d4 <HAL_RCCEx_PeriphCLKConfig+0x384>
 810719a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810719e:	3308      	adds	r3, #8
 81071a0:	2100      	movs	r1, #0
 81071a2:	4618      	mov	r0, r3
 81071a4:	f001 fb1c 	bl	81087e0 <RCCEx_PLL2_Config>
 81071a8:	4603      	mov	r3, r0
 81071aa:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 81071ae:	e011      	b.n	81071d4 <HAL_RCCEx_PeriphCLKConfig+0x384>
 81071b0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81071b4:	3328      	adds	r3, #40	@ 0x28
 81071b6:	2100      	movs	r1, #0
 81071b8:	4618      	mov	r0, r3
 81071ba:	f001 fbc3 	bl	8108944 <RCCEx_PLL3_Config>
 81071be:	4603      	mov	r3, r0
 81071c0:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 81071c4:	e006      	b.n	81071d4 <HAL_RCCEx_PeriphCLKConfig+0x384>
 81071c6:	2301      	movs	r3, #1
 81071c8:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 81071cc:	e002      	b.n	81071d4 <HAL_RCCEx_PeriphCLKConfig+0x384>
 81071ce:	bf00      	nop
 81071d0:	e000      	b.n	81071d4 <HAL_RCCEx_PeriphCLKConfig+0x384>
 81071d2:	bf00      	nop
 81071d4:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 81071d8:	2b00      	cmp	r3, #0
 81071da:	d10b      	bne.n	81071f4 <HAL_RCCEx_PeriphCLKConfig+0x3a4>
 81071dc:	4b8e      	ldr	r3, [pc, #568]	@ (8107418 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 81071de:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 81071e0:	f023 61e0 	bic.w	r1, r3, #117440512	@ 0x7000000
 81071e4:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81071e8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 81071ec:	4a8a      	ldr	r2, [pc, #552]	@ (8107418 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 81071ee:	430b      	orrs	r3, r1
 81071f0:	6593      	str	r3, [r2, #88]	@ 0x58
 81071f2:	e003      	b.n	81071fc <HAL_RCCEx_PeriphCLKConfig+0x3ac>
 81071f4:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 81071f8:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 81071fc:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107200:	e9d3 2300 	ldrd	r2, r3, [r3]
 8107204:	f002 7300 	and.w	r3, r2, #33554432	@ 0x2000000
 8107208:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 810720c:	2300      	movs	r3, #0
 810720e:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
 8107212:	e9d7 123e 	ldrd	r1, r2, [r7, #248]	@ 0xf8
 8107216:	460b      	mov	r3, r1
 8107218:	4313      	orrs	r3, r2
 810721a:	d03a      	beq.n	8107292 <HAL_RCCEx_PeriphCLKConfig+0x442>
 810721c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107220:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8107222:	2b30      	cmp	r3, #48	@ 0x30
 8107224:	d01f      	beq.n	8107266 <HAL_RCCEx_PeriphCLKConfig+0x416>
 8107226:	2b30      	cmp	r3, #48	@ 0x30
 8107228:	d819      	bhi.n	810725e <HAL_RCCEx_PeriphCLKConfig+0x40e>
 810722a:	2b20      	cmp	r3, #32
 810722c:	d00c      	beq.n	8107248 <HAL_RCCEx_PeriphCLKConfig+0x3f8>
 810722e:	2b20      	cmp	r3, #32
 8107230:	d815      	bhi.n	810725e <HAL_RCCEx_PeriphCLKConfig+0x40e>
 8107232:	2b00      	cmp	r3, #0
 8107234:	d019      	beq.n	810726a <HAL_RCCEx_PeriphCLKConfig+0x41a>
 8107236:	2b10      	cmp	r3, #16
 8107238:	d111      	bne.n	810725e <HAL_RCCEx_PeriphCLKConfig+0x40e>
 810723a:	4b77      	ldr	r3, [pc, #476]	@ (8107418 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 810723c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 810723e:	4a76      	ldr	r2, [pc, #472]	@ (8107418 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8107240:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8107244:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8107246:	e011      	b.n	810726c <HAL_RCCEx_PeriphCLKConfig+0x41c>
 8107248:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810724c:	3308      	adds	r3, #8
 810724e:	2102      	movs	r1, #2
 8107250:	4618      	mov	r0, r3
 8107252:	f001 fac5 	bl	81087e0 <RCCEx_PLL2_Config>
 8107256:	4603      	mov	r3, r0
 8107258:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 810725c:	e006      	b.n	810726c <HAL_RCCEx_PeriphCLKConfig+0x41c>
 810725e:	2301      	movs	r3, #1
 8107260:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107264:	e002      	b.n	810726c <HAL_RCCEx_PeriphCLKConfig+0x41c>
 8107266:	bf00      	nop
 8107268:	e000      	b.n	810726c <HAL_RCCEx_PeriphCLKConfig+0x41c>
 810726a:	bf00      	nop
 810726c:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107270:	2b00      	cmp	r3, #0
 8107272:	d10a      	bne.n	810728a <HAL_RCCEx_PeriphCLKConfig+0x43a>
 8107274:	4b68      	ldr	r3, [pc, #416]	@ (8107418 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8107276:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8107278:	f023 0130 	bic.w	r1, r3, #48	@ 0x30
 810727c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107280:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8107282:	4a65      	ldr	r2, [pc, #404]	@ (8107418 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8107284:	430b      	orrs	r3, r1
 8107286:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8107288:	e003      	b.n	8107292 <HAL_RCCEx_PeriphCLKConfig+0x442>
 810728a:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 810728e:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8107292:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107296:	e9d3 2300 	ldrd	r2, r3, [r3]
 810729a:	f402 5380 	and.w	r3, r2, #4096	@ 0x1000
 810729e:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 81072a2:	2300      	movs	r3, #0
 81072a4:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 81072a8:	e9d7 123c 	ldrd	r1, r2, [r7, #240]	@ 0xf0
 81072ac:	460b      	mov	r3, r1
 81072ae:	4313      	orrs	r3, r2
 81072b0:	d051      	beq.n	8107356 <HAL_RCCEx_PeriphCLKConfig+0x506>
 81072b2:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81072b6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 81072b8:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 81072bc:	d035      	beq.n	810732a <HAL_RCCEx_PeriphCLKConfig+0x4da>
 81072be:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 81072c2:	d82e      	bhi.n	8107322 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 81072c4:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 81072c8:	d031      	beq.n	810732e <HAL_RCCEx_PeriphCLKConfig+0x4de>
 81072ca:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 81072ce:	d828      	bhi.n	8107322 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 81072d0:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 81072d4:	d01a      	beq.n	810730c <HAL_RCCEx_PeriphCLKConfig+0x4bc>
 81072d6:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 81072da:	d822      	bhi.n	8107322 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 81072dc:	2b00      	cmp	r3, #0
 81072de:	d003      	beq.n	81072e8 <HAL_RCCEx_PeriphCLKConfig+0x498>
 81072e0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 81072e4:	d007      	beq.n	81072f6 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
 81072e6:	e01c      	b.n	8107322 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 81072e8:	4b4b      	ldr	r3, [pc, #300]	@ (8107418 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 81072ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 81072ec:	4a4a      	ldr	r2, [pc, #296]	@ (8107418 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 81072ee:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 81072f2:	62d3      	str	r3, [r2, #44]	@ 0x2c
 81072f4:	e01c      	b.n	8107330 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 81072f6:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81072fa:	3308      	adds	r3, #8
 81072fc:	2100      	movs	r1, #0
 81072fe:	4618      	mov	r0, r3
 8107300:	f001 fa6e 	bl	81087e0 <RCCEx_PLL2_Config>
 8107304:	4603      	mov	r3, r0
 8107306:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 810730a:	e011      	b.n	8107330 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 810730c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107310:	3328      	adds	r3, #40	@ 0x28
 8107312:	2100      	movs	r1, #0
 8107314:	4618      	mov	r0, r3
 8107316:	f001 fb15 	bl	8108944 <RCCEx_PLL3_Config>
 810731a:	4603      	mov	r3, r0
 810731c:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107320:	e006      	b.n	8107330 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 8107322:	2301      	movs	r3, #1
 8107324:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107328:	e002      	b.n	8107330 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 810732a:	bf00      	nop
 810732c:	e000      	b.n	8107330 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 810732e:	bf00      	nop
 8107330:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107334:	2b00      	cmp	r3, #0
 8107336:	d10a      	bne.n	810734e <HAL_RCCEx_PeriphCLKConfig+0x4fe>
 8107338:	4b37      	ldr	r3, [pc, #220]	@ (8107418 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 810733a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 810733c:	f423 41e0 	bic.w	r1, r3, #28672	@ 0x7000
 8107340:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107344:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8107346:	4a34      	ldr	r2, [pc, #208]	@ (8107418 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8107348:	430b      	orrs	r3, r1
 810734a:	6513      	str	r3, [r2, #80]	@ 0x50
 810734c:	e003      	b.n	8107356 <HAL_RCCEx_PeriphCLKConfig+0x506>
 810734e:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107352:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8107356:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810735a:	e9d3 2300 	ldrd	r2, r3, [r3]
 810735e:	f402 5300 	and.w	r3, r2, #8192	@ 0x2000
 8107362:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8107366:	2300      	movs	r3, #0
 8107368:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 810736c:	e9d7 123a 	ldrd	r1, r2, [r7, #232]	@ 0xe8
 8107370:	460b      	mov	r3, r1
 8107372:	4313      	orrs	r3, r2
 8107374:	d056      	beq.n	8107424 <HAL_RCCEx_PeriphCLKConfig+0x5d4>
 8107376:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810737a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 810737c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8107380:	d033      	beq.n	81073ea <HAL_RCCEx_PeriphCLKConfig+0x59a>
 8107382:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8107386:	d82c      	bhi.n	81073e2 <HAL_RCCEx_PeriphCLKConfig+0x592>
 8107388:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 810738c:	d02f      	beq.n	81073ee <HAL_RCCEx_PeriphCLKConfig+0x59e>
 810738e:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8107392:	d826      	bhi.n	81073e2 <HAL_RCCEx_PeriphCLKConfig+0x592>
 8107394:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8107398:	d02b      	beq.n	81073f2 <HAL_RCCEx_PeriphCLKConfig+0x5a2>
 810739a:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 810739e:	d820      	bhi.n	81073e2 <HAL_RCCEx_PeriphCLKConfig+0x592>
 81073a0:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 81073a4:	d012      	beq.n	81073cc <HAL_RCCEx_PeriphCLKConfig+0x57c>
 81073a6:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 81073aa:	d81a      	bhi.n	81073e2 <HAL_RCCEx_PeriphCLKConfig+0x592>
 81073ac:	2b00      	cmp	r3, #0
 81073ae:	d022      	beq.n	81073f6 <HAL_RCCEx_PeriphCLKConfig+0x5a6>
 81073b0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 81073b4:	d115      	bne.n	81073e2 <HAL_RCCEx_PeriphCLKConfig+0x592>
 81073b6:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81073ba:	3308      	adds	r3, #8
 81073bc:	2101      	movs	r1, #1
 81073be:	4618      	mov	r0, r3
 81073c0:	f001 fa0e 	bl	81087e0 <RCCEx_PLL2_Config>
 81073c4:	4603      	mov	r3, r0
 81073c6:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 81073ca:	e015      	b.n	81073f8 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 81073cc:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81073d0:	3328      	adds	r3, #40	@ 0x28
 81073d2:	2101      	movs	r1, #1
 81073d4:	4618      	mov	r0, r3
 81073d6:	f001 fab5 	bl	8108944 <RCCEx_PLL3_Config>
 81073da:	4603      	mov	r3, r0
 81073dc:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 81073e0:	e00a      	b.n	81073f8 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 81073e2:	2301      	movs	r3, #1
 81073e4:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 81073e8:	e006      	b.n	81073f8 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 81073ea:	bf00      	nop
 81073ec:	e004      	b.n	81073f8 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 81073ee:	bf00      	nop
 81073f0:	e002      	b.n	81073f8 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 81073f2:	bf00      	nop
 81073f4:	e000      	b.n	81073f8 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 81073f6:	bf00      	nop
 81073f8:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 81073fc:	2b00      	cmp	r3, #0
 81073fe:	d10d      	bne.n	810741c <HAL_RCCEx_PeriphCLKConfig+0x5cc>
 8107400:	4b05      	ldr	r3, [pc, #20]	@ (8107418 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8107402:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8107404:	f423 21e0 	bic.w	r1, r3, #458752	@ 0x70000
 8107408:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810740c:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 810740e:	4a02      	ldr	r2, [pc, #8]	@ (8107418 <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8107410:	430b      	orrs	r3, r1
 8107412:	6513      	str	r3, [r2, #80]	@ 0x50
 8107414:	e006      	b.n	8107424 <HAL_RCCEx_PeriphCLKConfig+0x5d4>
 8107416:	bf00      	nop
 8107418:	58024400 	.word	0x58024400
 810741c:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107420:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8107424:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107428:	e9d3 2300 	ldrd	r2, r3, [r3]
 810742c:	f402 4380 	and.w	r3, r2, #16384	@ 0x4000
 8107430:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8107434:	2300      	movs	r3, #0
 8107436:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 810743a:	e9d7 1238 	ldrd	r1, r2, [r7, #224]	@ 0xe0
 810743e:	460b      	mov	r3, r1
 8107440:	4313      	orrs	r3, r2
 8107442:	d055      	beq.n	81074f0 <HAL_RCCEx_PeriphCLKConfig+0x6a0>
 8107444:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107448:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 810744c:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8107450:	d033      	beq.n	81074ba <HAL_RCCEx_PeriphCLKConfig+0x66a>
 8107452:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8107456:	d82c      	bhi.n	81074b2 <HAL_RCCEx_PeriphCLKConfig+0x662>
 8107458:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 810745c:	d02f      	beq.n	81074be <HAL_RCCEx_PeriphCLKConfig+0x66e>
 810745e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8107462:	d826      	bhi.n	81074b2 <HAL_RCCEx_PeriphCLKConfig+0x662>
 8107464:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 8107468:	d02b      	beq.n	81074c2 <HAL_RCCEx_PeriphCLKConfig+0x672>
 810746a:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 810746e:	d820      	bhi.n	81074b2 <HAL_RCCEx_PeriphCLKConfig+0x662>
 8107470:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8107474:	d012      	beq.n	810749c <HAL_RCCEx_PeriphCLKConfig+0x64c>
 8107476:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 810747a:	d81a      	bhi.n	81074b2 <HAL_RCCEx_PeriphCLKConfig+0x662>
 810747c:	2b00      	cmp	r3, #0
 810747e:	d022      	beq.n	81074c6 <HAL_RCCEx_PeriphCLKConfig+0x676>
 8107480:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8107484:	d115      	bne.n	81074b2 <HAL_RCCEx_PeriphCLKConfig+0x662>
 8107486:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810748a:	3308      	adds	r3, #8
 810748c:	2101      	movs	r1, #1
 810748e:	4618      	mov	r0, r3
 8107490:	f001 f9a6 	bl	81087e0 <RCCEx_PLL2_Config>
 8107494:	4603      	mov	r3, r0
 8107496:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 810749a:	e015      	b.n	81074c8 <HAL_RCCEx_PeriphCLKConfig+0x678>
 810749c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81074a0:	3328      	adds	r3, #40	@ 0x28
 81074a2:	2101      	movs	r1, #1
 81074a4:	4618      	mov	r0, r3
 81074a6:	f001 fa4d 	bl	8108944 <RCCEx_PLL3_Config>
 81074aa:	4603      	mov	r3, r0
 81074ac:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 81074b0:	e00a      	b.n	81074c8 <HAL_RCCEx_PeriphCLKConfig+0x678>
 81074b2:	2301      	movs	r3, #1
 81074b4:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 81074b8:	e006      	b.n	81074c8 <HAL_RCCEx_PeriphCLKConfig+0x678>
 81074ba:	bf00      	nop
 81074bc:	e004      	b.n	81074c8 <HAL_RCCEx_PeriphCLKConfig+0x678>
 81074be:	bf00      	nop
 81074c0:	e002      	b.n	81074c8 <HAL_RCCEx_PeriphCLKConfig+0x678>
 81074c2:	bf00      	nop
 81074c4:	e000      	b.n	81074c8 <HAL_RCCEx_PeriphCLKConfig+0x678>
 81074c6:	bf00      	nop
 81074c8:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 81074cc:	2b00      	cmp	r3, #0
 81074ce:	d10b      	bne.n	81074e8 <HAL_RCCEx_PeriphCLKConfig+0x698>
 81074d0:	4ba4      	ldr	r3, [pc, #656]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 81074d2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 81074d4:	f023 41e0 	bic.w	r1, r3, #1879048192	@ 0x70000000
 81074d8:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81074dc:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 81074e0:	4aa0      	ldr	r2, [pc, #640]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 81074e2:	430b      	orrs	r3, r1
 81074e4:	6593      	str	r3, [r2, #88]	@ 0x58
 81074e6:	e003      	b.n	81074f0 <HAL_RCCEx_PeriphCLKConfig+0x6a0>
 81074e8:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 81074ec:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 81074f0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81074f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 81074f8:	f402 4300 	and.w	r3, r2, #32768	@ 0x8000
 81074fc:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8107500:	2300      	movs	r3, #0
 8107502:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8107506:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 810750a:	460b      	mov	r3, r1
 810750c:	4313      	orrs	r3, r2
 810750e:	d037      	beq.n	8107580 <HAL_RCCEx_PeriphCLKConfig+0x730>
 8107510:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107514:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8107516:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 810751a:	d00e      	beq.n	810753a <HAL_RCCEx_PeriphCLKConfig+0x6ea>
 810751c:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8107520:	d816      	bhi.n	8107550 <HAL_RCCEx_PeriphCLKConfig+0x700>
 8107522:	2b00      	cmp	r3, #0
 8107524:	d018      	beq.n	8107558 <HAL_RCCEx_PeriphCLKConfig+0x708>
 8107526:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 810752a:	d111      	bne.n	8107550 <HAL_RCCEx_PeriphCLKConfig+0x700>
 810752c:	4b8d      	ldr	r3, [pc, #564]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 810752e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8107530:	4a8c      	ldr	r2, [pc, #560]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 8107532:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8107536:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8107538:	e00f      	b.n	810755a <HAL_RCCEx_PeriphCLKConfig+0x70a>
 810753a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810753e:	3308      	adds	r3, #8
 8107540:	2101      	movs	r1, #1
 8107542:	4618      	mov	r0, r3
 8107544:	f001 f94c 	bl	81087e0 <RCCEx_PLL2_Config>
 8107548:	4603      	mov	r3, r0
 810754a:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 810754e:	e004      	b.n	810755a <HAL_RCCEx_PeriphCLKConfig+0x70a>
 8107550:	2301      	movs	r3, #1
 8107552:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107556:	e000      	b.n	810755a <HAL_RCCEx_PeriphCLKConfig+0x70a>
 8107558:	bf00      	nop
 810755a:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 810755e:	2b00      	cmp	r3, #0
 8107560:	d10a      	bne.n	8107578 <HAL_RCCEx_PeriphCLKConfig+0x728>
 8107562:	4b80      	ldr	r3, [pc, #512]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 8107564:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8107566:	f023 5140 	bic.w	r1, r3, #805306368	@ 0x30000000
 810756a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810756e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8107570:	4a7c      	ldr	r2, [pc, #496]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 8107572:	430b      	orrs	r3, r1
 8107574:	6513      	str	r3, [r2, #80]	@ 0x50
 8107576:	e003      	b.n	8107580 <HAL_RCCEx_PeriphCLKConfig+0x730>
 8107578:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 810757c:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8107580:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107584:	e9d3 2300 	ldrd	r2, r3, [r3]
 8107588:	f002 7380 	and.w	r3, r2, #16777216	@ 0x1000000
 810758c:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8107590:	2300      	movs	r3, #0
 8107592:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8107596:	e9d7 1234 	ldrd	r1, r2, [r7, #208]	@ 0xd0
 810759a:	460b      	mov	r3, r1
 810759c:	4313      	orrs	r3, r2
 810759e:	d039      	beq.n	8107614 <HAL_RCCEx_PeriphCLKConfig+0x7c4>
 81075a0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81075a4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 81075a6:	2b03      	cmp	r3, #3
 81075a8:	d81c      	bhi.n	81075e4 <HAL_RCCEx_PeriphCLKConfig+0x794>
 81075aa:	a201      	add	r2, pc, #4	@ (adr r2, 81075b0 <HAL_RCCEx_PeriphCLKConfig+0x760>)
 81075ac:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 81075b0:	081075ed 	.word	0x081075ed
 81075b4:	081075c1 	.word	0x081075c1
 81075b8:	081075cf 	.word	0x081075cf
 81075bc:	081075ed 	.word	0x081075ed
 81075c0:	4b68      	ldr	r3, [pc, #416]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 81075c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 81075c4:	4a67      	ldr	r2, [pc, #412]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 81075c6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 81075ca:	62d3      	str	r3, [r2, #44]	@ 0x2c
 81075cc:	e00f      	b.n	81075ee <HAL_RCCEx_PeriphCLKConfig+0x79e>
 81075ce:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81075d2:	3308      	adds	r3, #8
 81075d4:	2102      	movs	r1, #2
 81075d6:	4618      	mov	r0, r3
 81075d8:	f001 f902 	bl	81087e0 <RCCEx_PLL2_Config>
 81075dc:	4603      	mov	r3, r0
 81075de:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 81075e2:	e004      	b.n	81075ee <HAL_RCCEx_PeriphCLKConfig+0x79e>
 81075e4:	2301      	movs	r3, #1
 81075e6:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 81075ea:	e000      	b.n	81075ee <HAL_RCCEx_PeriphCLKConfig+0x79e>
 81075ec:	bf00      	nop
 81075ee:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 81075f2:	2b00      	cmp	r3, #0
 81075f4:	d10a      	bne.n	810760c <HAL_RCCEx_PeriphCLKConfig+0x7bc>
 81075f6:	4b5b      	ldr	r3, [pc, #364]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 81075f8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 81075fa:	f023 0103 	bic.w	r1, r3, #3
 81075fe:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107602:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8107604:	4a57      	ldr	r2, [pc, #348]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 8107606:	430b      	orrs	r3, r1
 8107608:	64d3      	str	r3, [r2, #76]	@ 0x4c
 810760a:	e003      	b.n	8107614 <HAL_RCCEx_PeriphCLKConfig+0x7c4>
 810760c:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107610:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8107614:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107618:	e9d3 2300 	ldrd	r2, r3, [r3]
 810761c:	f402 0380 	and.w	r3, r2, #4194304	@ 0x400000
 8107620:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8107624:	2300      	movs	r3, #0
 8107626:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 810762a:	e9d7 1232 	ldrd	r1, r2, [r7, #200]	@ 0xc8
 810762e:	460b      	mov	r3, r1
 8107630:	4313      	orrs	r3, r2
 8107632:	f000 809f 	beq.w	8107774 <HAL_RCCEx_PeriphCLKConfig+0x924>
 8107636:	4b4c      	ldr	r3, [pc, #304]	@ (8107768 <HAL_RCCEx_PeriphCLKConfig+0x918>)
 8107638:	681b      	ldr	r3, [r3, #0]
 810763a:	4a4b      	ldr	r2, [pc, #300]	@ (8107768 <HAL_RCCEx_PeriphCLKConfig+0x918>)
 810763c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8107640:	6013      	str	r3, [r2, #0]
 8107642:	f7fe f989 	bl	8105958 <HAL_GetTick>
 8107646:	f8c7 0120 	str.w	r0, [r7, #288]	@ 0x120
 810764a:	e00b      	b.n	8107664 <HAL_RCCEx_PeriphCLKConfig+0x814>
 810764c:	f7fe f984 	bl	8105958 <HAL_GetTick>
 8107650:	4602      	mov	r2, r0
 8107652:	f8d7 3120 	ldr.w	r3, [r7, #288]	@ 0x120
 8107656:	1ad3      	subs	r3, r2, r3
 8107658:	2b64      	cmp	r3, #100	@ 0x64
 810765a:	d903      	bls.n	8107664 <HAL_RCCEx_PeriphCLKConfig+0x814>
 810765c:	2303      	movs	r3, #3
 810765e:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107662:	e005      	b.n	8107670 <HAL_RCCEx_PeriphCLKConfig+0x820>
 8107664:	4b40      	ldr	r3, [pc, #256]	@ (8107768 <HAL_RCCEx_PeriphCLKConfig+0x918>)
 8107666:	681b      	ldr	r3, [r3, #0]
 8107668:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 810766c:	2b00      	cmp	r3, #0
 810766e:	d0ed      	beq.n	810764c <HAL_RCCEx_PeriphCLKConfig+0x7fc>
 8107670:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107674:	2b00      	cmp	r3, #0
 8107676:	d179      	bne.n	810776c <HAL_RCCEx_PeriphCLKConfig+0x91c>
 8107678:	4b3a      	ldr	r3, [pc, #232]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 810767a:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
 810767c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107680:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8107684:	4053      	eors	r3, r2
 8107686:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 810768a:	2b00      	cmp	r3, #0
 810768c:	d015      	beq.n	81076ba <HAL_RCCEx_PeriphCLKConfig+0x86a>
 810768e:	4b35      	ldr	r3, [pc, #212]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 8107690:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8107692:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8107696:	f8c7 311c 	str.w	r3, [r7, #284]	@ 0x11c
 810769a:	4b32      	ldr	r3, [pc, #200]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 810769c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 810769e:	4a31      	ldr	r2, [pc, #196]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 81076a0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 81076a4:	6713      	str	r3, [r2, #112]	@ 0x70
 81076a6:	4b2f      	ldr	r3, [pc, #188]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 81076a8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 81076aa:	4a2e      	ldr	r2, [pc, #184]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 81076ac:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 81076b0:	6713      	str	r3, [r2, #112]	@ 0x70
 81076b2:	4a2c      	ldr	r2, [pc, #176]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 81076b4:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 81076b8:	6713      	str	r3, [r2, #112]	@ 0x70
 81076ba:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81076be:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 81076c2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 81076c6:	d118      	bne.n	81076fa <HAL_RCCEx_PeriphCLKConfig+0x8aa>
 81076c8:	f7fe f946 	bl	8105958 <HAL_GetTick>
 81076cc:	f8c7 0120 	str.w	r0, [r7, #288]	@ 0x120
 81076d0:	e00d      	b.n	81076ee <HAL_RCCEx_PeriphCLKConfig+0x89e>
 81076d2:	f7fe f941 	bl	8105958 <HAL_GetTick>
 81076d6:	4602      	mov	r2, r0
 81076d8:	f8d7 3120 	ldr.w	r3, [r7, #288]	@ 0x120
 81076dc:	1ad2      	subs	r2, r2, r3
 81076de:	f241 3388 	movw	r3, #5000	@ 0x1388
 81076e2:	429a      	cmp	r2, r3
 81076e4:	d903      	bls.n	81076ee <HAL_RCCEx_PeriphCLKConfig+0x89e>
 81076e6:	2303      	movs	r3, #3
 81076e8:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 81076ec:	e005      	b.n	81076fa <HAL_RCCEx_PeriphCLKConfig+0x8aa>
 81076ee:	4b1d      	ldr	r3, [pc, #116]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 81076f0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 81076f2:	f003 0302 	and.w	r3, r3, #2
 81076f6:	2b00      	cmp	r3, #0
 81076f8:	d0eb      	beq.n	81076d2 <HAL_RCCEx_PeriphCLKConfig+0x882>
 81076fa:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 81076fe:	2b00      	cmp	r3, #0
 8107700:	d12b      	bne.n	810775a <HAL_RCCEx_PeriphCLKConfig+0x90a>
 8107702:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107706:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 810770a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 810770e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8107712:	d110      	bne.n	8107736 <HAL_RCCEx_PeriphCLKConfig+0x8e6>
 8107714:	4b13      	ldr	r3, [pc, #76]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 8107716:	691b      	ldr	r3, [r3, #16]
 8107718:	f423 517c 	bic.w	r1, r3, #16128	@ 0x3f00
 810771c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107720:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8107724:	091b      	lsrs	r3, r3, #4
 8107726:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 810772a:	f023 0330 	bic.w	r3, r3, #48	@ 0x30
 810772e:	4a0d      	ldr	r2, [pc, #52]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 8107730:	430b      	orrs	r3, r1
 8107732:	6113      	str	r3, [r2, #16]
 8107734:	e005      	b.n	8107742 <HAL_RCCEx_PeriphCLKConfig+0x8f2>
 8107736:	4b0b      	ldr	r3, [pc, #44]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 8107738:	691b      	ldr	r3, [r3, #16]
 810773a:	4a0a      	ldr	r2, [pc, #40]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 810773c:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 8107740:	6113      	str	r3, [r2, #16]
 8107742:	4b08      	ldr	r3, [pc, #32]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 8107744:	6f19      	ldr	r1, [r3, #112]	@ 0x70
 8107746:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810774a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 810774e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8107752:	4a04      	ldr	r2, [pc, #16]	@ (8107764 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 8107754:	430b      	orrs	r3, r1
 8107756:	6713      	str	r3, [r2, #112]	@ 0x70
 8107758:	e00c      	b.n	8107774 <HAL_RCCEx_PeriphCLKConfig+0x924>
 810775a:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 810775e:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8107762:	e007      	b.n	8107774 <HAL_RCCEx_PeriphCLKConfig+0x924>
 8107764:	58024400 	.word	0x58024400
 8107768:	58024800 	.word	0x58024800
 810776c:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107770:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8107774:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107778:	e9d3 2300 	ldrd	r2, r3, [r3]
 810777c:	f002 0301 	and.w	r3, r2, #1
 8107780:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8107784:	2300      	movs	r3, #0
 8107786:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 810778a:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 810778e:	460b      	mov	r3, r1
 8107790:	4313      	orrs	r3, r2
 8107792:	f000 8089 	beq.w	81078a8 <HAL_RCCEx_PeriphCLKConfig+0xa58>
 8107796:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810779a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 810779c:	2b28      	cmp	r3, #40	@ 0x28
 810779e:	d86b      	bhi.n	8107878 <HAL_RCCEx_PeriphCLKConfig+0xa28>
 81077a0:	a201      	add	r2, pc, #4	@ (adr r2, 81077a8 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 81077a2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 81077a6:	bf00      	nop
 81077a8:	08107881 	.word	0x08107881
 81077ac:	08107879 	.word	0x08107879
 81077b0:	08107879 	.word	0x08107879
 81077b4:	08107879 	.word	0x08107879
 81077b8:	08107879 	.word	0x08107879
 81077bc:	08107879 	.word	0x08107879
 81077c0:	08107879 	.word	0x08107879
 81077c4:	08107879 	.word	0x08107879
 81077c8:	0810784d 	.word	0x0810784d
 81077cc:	08107879 	.word	0x08107879
 81077d0:	08107879 	.word	0x08107879
 81077d4:	08107879 	.word	0x08107879
 81077d8:	08107879 	.word	0x08107879
 81077dc:	08107879 	.word	0x08107879
 81077e0:	08107879 	.word	0x08107879
 81077e4:	08107879 	.word	0x08107879
 81077e8:	08107863 	.word	0x08107863
 81077ec:	08107879 	.word	0x08107879
 81077f0:	08107879 	.word	0x08107879
 81077f4:	08107879 	.word	0x08107879
 81077f8:	08107879 	.word	0x08107879
 81077fc:	08107879 	.word	0x08107879
 8107800:	08107879 	.word	0x08107879
 8107804:	08107879 	.word	0x08107879
 8107808:	08107881 	.word	0x08107881
 810780c:	08107879 	.word	0x08107879
 8107810:	08107879 	.word	0x08107879
 8107814:	08107879 	.word	0x08107879
 8107818:	08107879 	.word	0x08107879
 810781c:	08107879 	.word	0x08107879
 8107820:	08107879 	.word	0x08107879
 8107824:	08107879 	.word	0x08107879
 8107828:	08107881 	.word	0x08107881
 810782c:	08107879 	.word	0x08107879
 8107830:	08107879 	.word	0x08107879
 8107834:	08107879 	.word	0x08107879
 8107838:	08107879 	.word	0x08107879
 810783c:	08107879 	.word	0x08107879
 8107840:	08107879 	.word	0x08107879
 8107844:	08107879 	.word	0x08107879
 8107848:	08107881 	.word	0x08107881
 810784c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107850:	3308      	adds	r3, #8
 8107852:	2101      	movs	r1, #1
 8107854:	4618      	mov	r0, r3
 8107856:	f000 ffc3 	bl	81087e0 <RCCEx_PLL2_Config>
 810785a:	4603      	mov	r3, r0
 810785c:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107860:	e00f      	b.n	8107882 <HAL_RCCEx_PeriphCLKConfig+0xa32>
 8107862:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107866:	3328      	adds	r3, #40	@ 0x28
 8107868:	2101      	movs	r1, #1
 810786a:	4618      	mov	r0, r3
 810786c:	f001 f86a 	bl	8108944 <RCCEx_PLL3_Config>
 8107870:	4603      	mov	r3, r0
 8107872:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107876:	e004      	b.n	8107882 <HAL_RCCEx_PeriphCLKConfig+0xa32>
 8107878:	2301      	movs	r3, #1
 810787a:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 810787e:	e000      	b.n	8107882 <HAL_RCCEx_PeriphCLKConfig+0xa32>
 8107880:	bf00      	nop
 8107882:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107886:	2b00      	cmp	r3, #0
 8107888:	d10a      	bne.n	81078a0 <HAL_RCCEx_PeriphCLKConfig+0xa50>
 810788a:	4bbf      	ldr	r3, [pc, #764]	@ (8107b88 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 810788c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 810788e:	f023 0138 	bic.w	r1, r3, #56	@ 0x38
 8107892:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107896:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8107898:	4abb      	ldr	r2, [pc, #748]	@ (8107b88 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 810789a:	430b      	orrs	r3, r1
 810789c:	6553      	str	r3, [r2, #84]	@ 0x54
 810789e:	e003      	b.n	81078a8 <HAL_RCCEx_PeriphCLKConfig+0xa58>
 81078a0:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 81078a4:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 81078a8:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81078ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 81078b0:	f002 0302 	and.w	r3, r2, #2
 81078b4:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 81078b8:	2300      	movs	r3, #0
 81078ba:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 81078be:	e9d7 122e 	ldrd	r1, r2, [r7, #184]	@ 0xb8
 81078c2:	460b      	mov	r3, r1
 81078c4:	4313      	orrs	r3, r2
 81078c6:	d041      	beq.n	810794c <HAL_RCCEx_PeriphCLKConfig+0xafc>
 81078c8:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81078cc:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 81078ce:	2b05      	cmp	r3, #5
 81078d0:	d824      	bhi.n	810791c <HAL_RCCEx_PeriphCLKConfig+0xacc>
 81078d2:	a201      	add	r2, pc, #4	@ (adr r2, 81078d8 <HAL_RCCEx_PeriphCLKConfig+0xa88>)
 81078d4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 81078d8:	08107925 	.word	0x08107925
 81078dc:	081078f1 	.word	0x081078f1
 81078e0:	08107907 	.word	0x08107907
 81078e4:	08107925 	.word	0x08107925
 81078e8:	08107925 	.word	0x08107925
 81078ec:	08107925 	.word	0x08107925
 81078f0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81078f4:	3308      	adds	r3, #8
 81078f6:	2101      	movs	r1, #1
 81078f8:	4618      	mov	r0, r3
 81078fa:	f000 ff71 	bl	81087e0 <RCCEx_PLL2_Config>
 81078fe:	4603      	mov	r3, r0
 8107900:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107904:	e00f      	b.n	8107926 <HAL_RCCEx_PeriphCLKConfig+0xad6>
 8107906:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810790a:	3328      	adds	r3, #40	@ 0x28
 810790c:	2101      	movs	r1, #1
 810790e:	4618      	mov	r0, r3
 8107910:	f001 f818 	bl	8108944 <RCCEx_PLL3_Config>
 8107914:	4603      	mov	r3, r0
 8107916:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 810791a:	e004      	b.n	8107926 <HAL_RCCEx_PeriphCLKConfig+0xad6>
 810791c:	2301      	movs	r3, #1
 810791e:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107922:	e000      	b.n	8107926 <HAL_RCCEx_PeriphCLKConfig+0xad6>
 8107924:	bf00      	nop
 8107926:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 810792a:	2b00      	cmp	r3, #0
 810792c:	d10a      	bne.n	8107944 <HAL_RCCEx_PeriphCLKConfig+0xaf4>
 810792e:	4b96      	ldr	r3, [pc, #600]	@ (8107b88 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8107930:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8107932:	f023 0107 	bic.w	r1, r3, #7
 8107936:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810793a:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 810793c:	4a92      	ldr	r2, [pc, #584]	@ (8107b88 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 810793e:	430b      	orrs	r3, r1
 8107940:	6553      	str	r3, [r2, #84]	@ 0x54
 8107942:	e003      	b.n	810794c <HAL_RCCEx_PeriphCLKConfig+0xafc>
 8107944:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107948:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 810794c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107950:	e9d3 2300 	ldrd	r2, r3, [r3]
 8107954:	f002 0304 	and.w	r3, r2, #4
 8107958:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 810795c:	2300      	movs	r3, #0
 810795e:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8107962:	e9d7 122c 	ldrd	r1, r2, [r7, #176]	@ 0xb0
 8107966:	460b      	mov	r3, r1
 8107968:	4313      	orrs	r3, r2
 810796a:	d044      	beq.n	81079f6 <HAL_RCCEx_PeriphCLKConfig+0xba6>
 810796c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107970:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8107974:	2b05      	cmp	r3, #5
 8107976:	d825      	bhi.n	81079c4 <HAL_RCCEx_PeriphCLKConfig+0xb74>
 8107978:	a201      	add	r2, pc, #4	@ (adr r2, 8107980 <HAL_RCCEx_PeriphCLKConfig+0xb30>)
 810797a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 810797e:	bf00      	nop
 8107980:	081079cd 	.word	0x081079cd
 8107984:	08107999 	.word	0x08107999
 8107988:	081079af 	.word	0x081079af
 810798c:	081079cd 	.word	0x081079cd
 8107990:	081079cd 	.word	0x081079cd
 8107994:	081079cd 	.word	0x081079cd
 8107998:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810799c:	3308      	adds	r3, #8
 810799e:	2101      	movs	r1, #1
 81079a0:	4618      	mov	r0, r3
 81079a2:	f000 ff1d 	bl	81087e0 <RCCEx_PLL2_Config>
 81079a6:	4603      	mov	r3, r0
 81079a8:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 81079ac:	e00f      	b.n	81079ce <HAL_RCCEx_PeriphCLKConfig+0xb7e>
 81079ae:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81079b2:	3328      	adds	r3, #40	@ 0x28
 81079b4:	2101      	movs	r1, #1
 81079b6:	4618      	mov	r0, r3
 81079b8:	f000 ffc4 	bl	8108944 <RCCEx_PLL3_Config>
 81079bc:	4603      	mov	r3, r0
 81079be:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 81079c2:	e004      	b.n	81079ce <HAL_RCCEx_PeriphCLKConfig+0xb7e>
 81079c4:	2301      	movs	r3, #1
 81079c6:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 81079ca:	e000      	b.n	81079ce <HAL_RCCEx_PeriphCLKConfig+0xb7e>
 81079cc:	bf00      	nop
 81079ce:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 81079d2:	2b00      	cmp	r3, #0
 81079d4:	d10b      	bne.n	81079ee <HAL_RCCEx_PeriphCLKConfig+0xb9e>
 81079d6:	4b6c      	ldr	r3, [pc, #432]	@ (8107b88 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 81079d8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 81079da:	f023 0107 	bic.w	r1, r3, #7
 81079de:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81079e2:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 81079e6:	4a68      	ldr	r2, [pc, #416]	@ (8107b88 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 81079e8:	430b      	orrs	r3, r1
 81079ea:	6593      	str	r3, [r2, #88]	@ 0x58
 81079ec:	e003      	b.n	81079f6 <HAL_RCCEx_PeriphCLKConfig+0xba6>
 81079ee:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 81079f2:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 81079f6:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81079fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 81079fe:	f002 0320 	and.w	r3, r2, #32
 8107a02:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8107a06:	2300      	movs	r3, #0
 8107a08:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8107a0c:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8107a10:	460b      	mov	r3, r1
 8107a12:	4313      	orrs	r3, r2
 8107a14:	d055      	beq.n	8107ac2 <HAL_RCCEx_PeriphCLKConfig+0xc72>
 8107a16:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107a1a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8107a1e:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8107a22:	d033      	beq.n	8107a8c <HAL_RCCEx_PeriphCLKConfig+0xc3c>
 8107a24:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8107a28:	d82c      	bhi.n	8107a84 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 8107a2a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8107a2e:	d02f      	beq.n	8107a90 <HAL_RCCEx_PeriphCLKConfig+0xc40>
 8107a30:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8107a34:	d826      	bhi.n	8107a84 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 8107a36:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 8107a3a:	d02b      	beq.n	8107a94 <HAL_RCCEx_PeriphCLKConfig+0xc44>
 8107a3c:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 8107a40:	d820      	bhi.n	8107a84 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 8107a42:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8107a46:	d012      	beq.n	8107a6e <HAL_RCCEx_PeriphCLKConfig+0xc1e>
 8107a48:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8107a4c:	d81a      	bhi.n	8107a84 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 8107a4e:	2b00      	cmp	r3, #0
 8107a50:	d022      	beq.n	8107a98 <HAL_RCCEx_PeriphCLKConfig+0xc48>
 8107a52:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8107a56:	d115      	bne.n	8107a84 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 8107a58:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107a5c:	3308      	adds	r3, #8
 8107a5e:	2100      	movs	r1, #0
 8107a60:	4618      	mov	r0, r3
 8107a62:	f000 febd 	bl	81087e0 <RCCEx_PLL2_Config>
 8107a66:	4603      	mov	r3, r0
 8107a68:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107a6c:	e015      	b.n	8107a9a <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 8107a6e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107a72:	3328      	adds	r3, #40	@ 0x28
 8107a74:	2102      	movs	r1, #2
 8107a76:	4618      	mov	r0, r3
 8107a78:	f000 ff64 	bl	8108944 <RCCEx_PLL3_Config>
 8107a7c:	4603      	mov	r3, r0
 8107a7e:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107a82:	e00a      	b.n	8107a9a <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 8107a84:	2301      	movs	r3, #1
 8107a86:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107a8a:	e006      	b.n	8107a9a <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 8107a8c:	bf00      	nop
 8107a8e:	e004      	b.n	8107a9a <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 8107a90:	bf00      	nop
 8107a92:	e002      	b.n	8107a9a <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 8107a94:	bf00      	nop
 8107a96:	e000      	b.n	8107a9a <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 8107a98:	bf00      	nop
 8107a9a:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107a9e:	2b00      	cmp	r3, #0
 8107aa0:	d10b      	bne.n	8107aba <HAL_RCCEx_PeriphCLKConfig+0xc6a>
 8107aa2:	4b39      	ldr	r3, [pc, #228]	@ (8107b88 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8107aa4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8107aa6:	f023 41e0 	bic.w	r1, r3, #1879048192	@ 0x70000000
 8107aaa:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107aae:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8107ab2:	4a35      	ldr	r2, [pc, #212]	@ (8107b88 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8107ab4:	430b      	orrs	r3, r1
 8107ab6:	6553      	str	r3, [r2, #84]	@ 0x54
 8107ab8:	e003      	b.n	8107ac2 <HAL_RCCEx_PeriphCLKConfig+0xc72>
 8107aba:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107abe:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8107ac2:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107ac6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8107aca:	f002 0340 	and.w	r3, r2, #64	@ 0x40
 8107ace:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8107ad2:	2300      	movs	r3, #0
 8107ad4:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8107ad8:	e9d7 1228 	ldrd	r1, r2, [r7, #160]	@ 0xa0
 8107adc:	460b      	mov	r3, r1
 8107ade:	4313      	orrs	r3, r2
 8107ae0:	d058      	beq.n	8107b94 <HAL_RCCEx_PeriphCLKConfig+0xd44>
 8107ae2:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107ae6:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8107aea:	f5b3 5fa0 	cmp.w	r3, #5120	@ 0x1400
 8107aee:	d033      	beq.n	8107b58 <HAL_RCCEx_PeriphCLKConfig+0xd08>
 8107af0:	f5b3 5fa0 	cmp.w	r3, #5120	@ 0x1400
 8107af4:	d82c      	bhi.n	8107b50 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 8107af6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8107afa:	d02f      	beq.n	8107b5c <HAL_RCCEx_PeriphCLKConfig+0xd0c>
 8107afc:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8107b00:	d826      	bhi.n	8107b50 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 8107b02:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 8107b06:	d02b      	beq.n	8107b60 <HAL_RCCEx_PeriphCLKConfig+0xd10>
 8107b08:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 8107b0c:	d820      	bhi.n	8107b50 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 8107b0e:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8107b12:	d012      	beq.n	8107b3a <HAL_RCCEx_PeriphCLKConfig+0xcea>
 8107b14:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8107b18:	d81a      	bhi.n	8107b50 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 8107b1a:	2b00      	cmp	r3, #0
 8107b1c:	d022      	beq.n	8107b64 <HAL_RCCEx_PeriphCLKConfig+0xd14>
 8107b1e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8107b22:	d115      	bne.n	8107b50 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 8107b24:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107b28:	3308      	adds	r3, #8
 8107b2a:	2100      	movs	r1, #0
 8107b2c:	4618      	mov	r0, r3
 8107b2e:	f000 fe57 	bl	81087e0 <RCCEx_PLL2_Config>
 8107b32:	4603      	mov	r3, r0
 8107b34:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107b38:	e015      	b.n	8107b66 <HAL_RCCEx_PeriphCLKConfig+0xd16>
 8107b3a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107b3e:	3328      	adds	r3, #40	@ 0x28
 8107b40:	2102      	movs	r1, #2
 8107b42:	4618      	mov	r0, r3
 8107b44:	f000 fefe 	bl	8108944 <RCCEx_PLL3_Config>
 8107b48:	4603      	mov	r3, r0
 8107b4a:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107b4e:	e00a      	b.n	8107b66 <HAL_RCCEx_PeriphCLKConfig+0xd16>
 8107b50:	2301      	movs	r3, #1
 8107b52:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107b56:	e006      	b.n	8107b66 <HAL_RCCEx_PeriphCLKConfig+0xd16>
 8107b58:	bf00      	nop
 8107b5a:	e004      	b.n	8107b66 <HAL_RCCEx_PeriphCLKConfig+0xd16>
 8107b5c:	bf00      	nop
 8107b5e:	e002      	b.n	8107b66 <HAL_RCCEx_PeriphCLKConfig+0xd16>
 8107b60:	bf00      	nop
 8107b62:	e000      	b.n	8107b66 <HAL_RCCEx_PeriphCLKConfig+0xd16>
 8107b64:	bf00      	nop
 8107b66:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107b6a:	2b00      	cmp	r3, #0
 8107b6c:	d10e      	bne.n	8107b8c <HAL_RCCEx_PeriphCLKConfig+0xd3c>
 8107b6e:	4b06      	ldr	r3, [pc, #24]	@ (8107b88 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8107b70:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8107b72:	f423 51e0 	bic.w	r1, r3, #7168	@ 0x1c00
 8107b76:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107b7a:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8107b7e:	4a02      	ldr	r2, [pc, #8]	@ (8107b88 <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8107b80:	430b      	orrs	r3, r1
 8107b82:	6593      	str	r3, [r2, #88]	@ 0x58
 8107b84:	e006      	b.n	8107b94 <HAL_RCCEx_PeriphCLKConfig+0xd44>
 8107b86:	bf00      	nop
 8107b88:	58024400 	.word	0x58024400
 8107b8c:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107b90:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8107b94:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107b98:	e9d3 2300 	ldrd	r2, r3, [r3]
 8107b9c:	f002 0380 	and.w	r3, r2, #128	@ 0x80
 8107ba0:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8107ba4:	2300      	movs	r3, #0
 8107ba6:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8107baa:	e9d7 1226 	ldrd	r1, r2, [r7, #152]	@ 0x98
 8107bae:	460b      	mov	r3, r1
 8107bb0:	4313      	orrs	r3, r2
 8107bb2:	d055      	beq.n	8107c60 <HAL_RCCEx_PeriphCLKConfig+0xe10>
 8107bb4:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107bb8:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8107bbc:	f5b3 4f20 	cmp.w	r3, #40960	@ 0xa000
 8107bc0:	d033      	beq.n	8107c2a <HAL_RCCEx_PeriphCLKConfig+0xdda>
 8107bc2:	f5b3 4f20 	cmp.w	r3, #40960	@ 0xa000
 8107bc6:	d82c      	bhi.n	8107c22 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8107bc8:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8107bcc:	d02f      	beq.n	8107c2e <HAL_RCCEx_PeriphCLKConfig+0xdde>
 8107bce:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8107bd2:	d826      	bhi.n	8107c22 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8107bd4:	f5b3 4fc0 	cmp.w	r3, #24576	@ 0x6000
 8107bd8:	d02b      	beq.n	8107c32 <HAL_RCCEx_PeriphCLKConfig+0xde2>
 8107bda:	f5b3 4fc0 	cmp.w	r3, #24576	@ 0x6000
 8107bde:	d820      	bhi.n	8107c22 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8107be0:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8107be4:	d012      	beq.n	8107c0c <HAL_RCCEx_PeriphCLKConfig+0xdbc>
 8107be6:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8107bea:	d81a      	bhi.n	8107c22 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8107bec:	2b00      	cmp	r3, #0
 8107bee:	d022      	beq.n	8107c36 <HAL_RCCEx_PeriphCLKConfig+0xde6>
 8107bf0:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8107bf4:	d115      	bne.n	8107c22 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8107bf6:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107bfa:	3308      	adds	r3, #8
 8107bfc:	2100      	movs	r1, #0
 8107bfe:	4618      	mov	r0, r3
 8107c00:	f000 fdee 	bl	81087e0 <RCCEx_PLL2_Config>
 8107c04:	4603      	mov	r3, r0
 8107c06:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107c0a:	e015      	b.n	8107c38 <HAL_RCCEx_PeriphCLKConfig+0xde8>
 8107c0c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107c10:	3328      	adds	r3, #40	@ 0x28
 8107c12:	2102      	movs	r1, #2
 8107c14:	4618      	mov	r0, r3
 8107c16:	f000 fe95 	bl	8108944 <RCCEx_PLL3_Config>
 8107c1a:	4603      	mov	r3, r0
 8107c1c:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107c20:	e00a      	b.n	8107c38 <HAL_RCCEx_PeriphCLKConfig+0xde8>
 8107c22:	2301      	movs	r3, #1
 8107c24:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107c28:	e006      	b.n	8107c38 <HAL_RCCEx_PeriphCLKConfig+0xde8>
 8107c2a:	bf00      	nop
 8107c2c:	e004      	b.n	8107c38 <HAL_RCCEx_PeriphCLKConfig+0xde8>
 8107c2e:	bf00      	nop
 8107c30:	e002      	b.n	8107c38 <HAL_RCCEx_PeriphCLKConfig+0xde8>
 8107c32:	bf00      	nop
 8107c34:	e000      	b.n	8107c38 <HAL_RCCEx_PeriphCLKConfig+0xde8>
 8107c36:	bf00      	nop
 8107c38:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107c3c:	2b00      	cmp	r3, #0
 8107c3e:	d10b      	bne.n	8107c58 <HAL_RCCEx_PeriphCLKConfig+0xe08>
 8107c40:	4ba1      	ldr	r3, [pc, #644]	@ (8107ec8 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8107c42:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8107c44:	f423 4160 	bic.w	r1, r3, #57344	@ 0xe000
 8107c48:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107c4c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8107c50:	4a9d      	ldr	r2, [pc, #628]	@ (8107ec8 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8107c52:	430b      	orrs	r3, r1
 8107c54:	6593      	str	r3, [r2, #88]	@ 0x58
 8107c56:	e003      	b.n	8107c60 <HAL_RCCEx_PeriphCLKConfig+0xe10>
 8107c58:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107c5c:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8107c60:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107c64:	e9d3 2300 	ldrd	r2, r3, [r3]
 8107c68:	f002 0308 	and.w	r3, r2, #8
 8107c6c:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8107c70:	2300      	movs	r3, #0
 8107c72:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8107c76:	e9d7 1224 	ldrd	r1, r2, [r7, #144]	@ 0x90
 8107c7a:	460b      	mov	r3, r1
 8107c7c:	4313      	orrs	r3, r2
 8107c7e:	d01e      	beq.n	8107cbe <HAL_RCCEx_PeriphCLKConfig+0xe6e>
 8107c80:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107c84:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8107c88:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8107c8c:	d10c      	bne.n	8107ca8 <HAL_RCCEx_PeriphCLKConfig+0xe58>
 8107c8e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107c92:	3328      	adds	r3, #40	@ 0x28
 8107c94:	2102      	movs	r1, #2
 8107c96:	4618      	mov	r0, r3
 8107c98:	f000 fe54 	bl	8108944 <RCCEx_PLL3_Config>
 8107c9c:	4603      	mov	r3, r0
 8107c9e:	2b00      	cmp	r3, #0
 8107ca0:	d002      	beq.n	8107ca8 <HAL_RCCEx_PeriphCLKConfig+0xe58>
 8107ca2:	2301      	movs	r3, #1
 8107ca4:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8107ca8:	4b87      	ldr	r3, [pc, #540]	@ (8107ec8 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8107caa:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8107cac:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 8107cb0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107cb4:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8107cb8:	4a83      	ldr	r2, [pc, #524]	@ (8107ec8 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8107cba:	430b      	orrs	r3, r1
 8107cbc:	6553      	str	r3, [r2, #84]	@ 0x54
 8107cbe:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107cc2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8107cc6:	f002 0310 	and.w	r3, r2, #16
 8107cca:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8107cce:	2300      	movs	r3, #0
 8107cd0:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8107cd4:	e9d7 1222 	ldrd	r1, r2, [r7, #136]	@ 0x88
 8107cd8:	460b      	mov	r3, r1
 8107cda:	4313      	orrs	r3, r2
 8107cdc:	d01e      	beq.n	8107d1c <HAL_RCCEx_PeriphCLKConfig+0xecc>
 8107cde:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107ce2:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8107ce6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8107cea:	d10c      	bne.n	8107d06 <HAL_RCCEx_PeriphCLKConfig+0xeb6>
 8107cec:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107cf0:	3328      	adds	r3, #40	@ 0x28
 8107cf2:	2102      	movs	r1, #2
 8107cf4:	4618      	mov	r0, r3
 8107cf6:	f000 fe25 	bl	8108944 <RCCEx_PLL3_Config>
 8107cfa:	4603      	mov	r3, r0
 8107cfc:	2b00      	cmp	r3, #0
 8107cfe:	d002      	beq.n	8107d06 <HAL_RCCEx_PeriphCLKConfig+0xeb6>
 8107d00:	2301      	movs	r3, #1
 8107d02:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8107d06:	4b70      	ldr	r3, [pc, #448]	@ (8107ec8 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8107d08:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8107d0a:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 8107d0e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107d12:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8107d16:	4a6c      	ldr	r2, [pc, #432]	@ (8107ec8 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8107d18:	430b      	orrs	r3, r1
 8107d1a:	6593      	str	r3, [r2, #88]	@ 0x58
 8107d1c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107d20:	e9d3 2300 	ldrd	r2, r3, [r3]
 8107d24:	f402 2300 	and.w	r3, r2, #524288	@ 0x80000
 8107d28:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8107d2c:	2300      	movs	r3, #0
 8107d2e:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8107d32:	e9d7 1220 	ldrd	r1, r2, [r7, #128]	@ 0x80
 8107d36:	460b      	mov	r3, r1
 8107d38:	4313      	orrs	r3, r2
 8107d3a:	d03e      	beq.n	8107dba <HAL_RCCEx_PeriphCLKConfig+0xf6a>
 8107d3c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107d40:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8107d44:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8107d48:	d022      	beq.n	8107d90 <HAL_RCCEx_PeriphCLKConfig+0xf40>
 8107d4a:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8107d4e:	d81b      	bhi.n	8107d88 <HAL_RCCEx_PeriphCLKConfig+0xf38>
 8107d50:	2b00      	cmp	r3, #0
 8107d52:	d003      	beq.n	8107d5c <HAL_RCCEx_PeriphCLKConfig+0xf0c>
 8107d54:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8107d58:	d00b      	beq.n	8107d72 <HAL_RCCEx_PeriphCLKConfig+0xf22>
 8107d5a:	e015      	b.n	8107d88 <HAL_RCCEx_PeriphCLKConfig+0xf38>
 8107d5c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107d60:	3308      	adds	r3, #8
 8107d62:	2100      	movs	r1, #0
 8107d64:	4618      	mov	r0, r3
 8107d66:	f000 fd3b 	bl	81087e0 <RCCEx_PLL2_Config>
 8107d6a:	4603      	mov	r3, r0
 8107d6c:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107d70:	e00f      	b.n	8107d92 <HAL_RCCEx_PeriphCLKConfig+0xf42>
 8107d72:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107d76:	3328      	adds	r3, #40	@ 0x28
 8107d78:	2102      	movs	r1, #2
 8107d7a:	4618      	mov	r0, r3
 8107d7c:	f000 fde2 	bl	8108944 <RCCEx_PLL3_Config>
 8107d80:	4603      	mov	r3, r0
 8107d82:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107d86:	e004      	b.n	8107d92 <HAL_RCCEx_PeriphCLKConfig+0xf42>
 8107d88:	2301      	movs	r3, #1
 8107d8a:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107d8e:	e000      	b.n	8107d92 <HAL_RCCEx_PeriphCLKConfig+0xf42>
 8107d90:	bf00      	nop
 8107d92:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107d96:	2b00      	cmp	r3, #0
 8107d98:	d10b      	bne.n	8107db2 <HAL_RCCEx_PeriphCLKConfig+0xf62>
 8107d9a:	4b4b      	ldr	r3, [pc, #300]	@ (8107ec8 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8107d9c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8107d9e:	f423 3140 	bic.w	r1, r3, #196608	@ 0x30000
 8107da2:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107da6:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8107daa:	4a47      	ldr	r2, [pc, #284]	@ (8107ec8 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8107dac:	430b      	orrs	r3, r1
 8107dae:	6593      	str	r3, [r2, #88]	@ 0x58
 8107db0:	e003      	b.n	8107dba <HAL_RCCEx_PeriphCLKConfig+0xf6a>
 8107db2:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107db6:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8107dba:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107dbe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8107dc2:	f402 2380 	and.w	r3, r2, #262144	@ 0x40000
 8107dc6:	67bb      	str	r3, [r7, #120]	@ 0x78
 8107dc8:	2300      	movs	r3, #0
 8107dca:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8107dcc:	e9d7 121e 	ldrd	r1, r2, [r7, #120]	@ 0x78
 8107dd0:	460b      	mov	r3, r1
 8107dd2:	4313      	orrs	r3, r2
 8107dd4:	d03b      	beq.n	8107e4e <HAL_RCCEx_PeriphCLKConfig+0xffe>
 8107dd6:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107dda:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8107dde:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8107de2:	d01f      	beq.n	8107e24 <HAL_RCCEx_PeriphCLKConfig+0xfd4>
 8107de4:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8107de8:	d818      	bhi.n	8107e1c <HAL_RCCEx_PeriphCLKConfig+0xfcc>
 8107dea:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8107dee:	d003      	beq.n	8107df8 <HAL_RCCEx_PeriphCLKConfig+0xfa8>
 8107df0:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8107df4:	d007      	beq.n	8107e06 <HAL_RCCEx_PeriphCLKConfig+0xfb6>
 8107df6:	e011      	b.n	8107e1c <HAL_RCCEx_PeriphCLKConfig+0xfcc>
 8107df8:	4b33      	ldr	r3, [pc, #204]	@ (8107ec8 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8107dfa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8107dfc:	4a32      	ldr	r2, [pc, #200]	@ (8107ec8 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8107dfe:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8107e02:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8107e04:	e00f      	b.n	8107e26 <HAL_RCCEx_PeriphCLKConfig+0xfd6>
 8107e06:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107e0a:	3328      	adds	r3, #40	@ 0x28
 8107e0c:	2101      	movs	r1, #1
 8107e0e:	4618      	mov	r0, r3
 8107e10:	f000 fd98 	bl	8108944 <RCCEx_PLL3_Config>
 8107e14:	4603      	mov	r3, r0
 8107e16:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107e1a:	e004      	b.n	8107e26 <HAL_RCCEx_PeriphCLKConfig+0xfd6>
 8107e1c:	2301      	movs	r3, #1
 8107e1e:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107e22:	e000      	b.n	8107e26 <HAL_RCCEx_PeriphCLKConfig+0xfd6>
 8107e24:	bf00      	nop
 8107e26:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107e2a:	2b00      	cmp	r3, #0
 8107e2c:	d10b      	bne.n	8107e46 <HAL_RCCEx_PeriphCLKConfig+0xff6>
 8107e2e:	4b26      	ldr	r3, [pc, #152]	@ (8107ec8 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8107e30:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8107e32:	f423 1140 	bic.w	r1, r3, #3145728	@ 0x300000
 8107e36:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107e3a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8107e3e:	4a22      	ldr	r2, [pc, #136]	@ (8107ec8 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8107e40:	430b      	orrs	r3, r1
 8107e42:	6553      	str	r3, [r2, #84]	@ 0x54
 8107e44:	e003      	b.n	8107e4e <HAL_RCCEx_PeriphCLKConfig+0xffe>
 8107e46:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107e4a:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8107e4e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107e52:	e9d3 2300 	ldrd	r2, r3, [r3]
 8107e56:	f402 3380 	and.w	r3, r2, #65536	@ 0x10000
 8107e5a:	673b      	str	r3, [r7, #112]	@ 0x70
 8107e5c:	2300      	movs	r3, #0
 8107e5e:	677b      	str	r3, [r7, #116]	@ 0x74
 8107e60:	e9d7 121c 	ldrd	r1, r2, [r7, #112]	@ 0x70
 8107e64:	460b      	mov	r3, r1
 8107e66:	4313      	orrs	r3, r2
 8107e68:	d034      	beq.n	8107ed4 <HAL_RCCEx_PeriphCLKConfig+0x1084>
 8107e6a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107e6e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8107e70:	2b00      	cmp	r3, #0
 8107e72:	d003      	beq.n	8107e7c <HAL_RCCEx_PeriphCLKConfig+0x102c>
 8107e74:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8107e78:	d007      	beq.n	8107e8a <HAL_RCCEx_PeriphCLKConfig+0x103a>
 8107e7a:	e011      	b.n	8107ea0 <HAL_RCCEx_PeriphCLKConfig+0x1050>
 8107e7c:	4b12      	ldr	r3, [pc, #72]	@ (8107ec8 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8107e7e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8107e80:	4a11      	ldr	r2, [pc, #68]	@ (8107ec8 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8107e82:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8107e86:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8107e88:	e00e      	b.n	8107ea8 <HAL_RCCEx_PeriphCLKConfig+0x1058>
 8107e8a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107e8e:	3308      	adds	r3, #8
 8107e90:	2102      	movs	r1, #2
 8107e92:	4618      	mov	r0, r3
 8107e94:	f000 fca4 	bl	81087e0 <RCCEx_PLL2_Config>
 8107e98:	4603      	mov	r3, r0
 8107e9a:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107e9e:	e003      	b.n	8107ea8 <HAL_RCCEx_PeriphCLKConfig+0x1058>
 8107ea0:	2301      	movs	r3, #1
 8107ea2:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107ea6:	bf00      	nop
 8107ea8:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107eac:	2b00      	cmp	r3, #0
 8107eae:	d10d      	bne.n	8107ecc <HAL_RCCEx_PeriphCLKConfig+0x107c>
 8107eb0:	4b05      	ldr	r3, [pc, #20]	@ (8107ec8 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8107eb2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8107eb4:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 8107eb8:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107ebc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8107ebe:	4a02      	ldr	r2, [pc, #8]	@ (8107ec8 <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8107ec0:	430b      	orrs	r3, r1
 8107ec2:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8107ec4:	e006      	b.n	8107ed4 <HAL_RCCEx_PeriphCLKConfig+0x1084>
 8107ec6:	bf00      	nop
 8107ec8:	58024400 	.word	0x58024400
 8107ecc:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107ed0:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8107ed4:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107ed8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8107edc:	f002 5300 	and.w	r3, r2, #536870912	@ 0x20000000
 8107ee0:	66bb      	str	r3, [r7, #104]	@ 0x68
 8107ee2:	2300      	movs	r3, #0
 8107ee4:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8107ee6:	e9d7 121a 	ldrd	r1, r2, [r7, #104]	@ 0x68
 8107eea:	460b      	mov	r3, r1
 8107eec:	4313      	orrs	r3, r2
 8107eee:	d00c      	beq.n	8107f0a <HAL_RCCEx_PeriphCLKConfig+0x10ba>
 8107ef0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107ef4:	3328      	adds	r3, #40	@ 0x28
 8107ef6:	2102      	movs	r1, #2
 8107ef8:	4618      	mov	r0, r3
 8107efa:	f000 fd23 	bl	8108944 <RCCEx_PLL3_Config>
 8107efe:	4603      	mov	r3, r0
 8107f00:	2b00      	cmp	r3, #0
 8107f02:	d002      	beq.n	8107f0a <HAL_RCCEx_PeriphCLKConfig+0x10ba>
 8107f04:	2301      	movs	r3, #1
 8107f06:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8107f0a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107f0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8107f12:	f402 3300 	and.w	r3, r2, #131072	@ 0x20000
 8107f16:	663b      	str	r3, [r7, #96]	@ 0x60
 8107f18:	2300      	movs	r3, #0
 8107f1a:	667b      	str	r3, [r7, #100]	@ 0x64
 8107f1c:	e9d7 1218 	ldrd	r1, r2, [r7, #96]	@ 0x60
 8107f20:	460b      	mov	r3, r1
 8107f22:	4313      	orrs	r3, r2
 8107f24:	d038      	beq.n	8107f98 <HAL_RCCEx_PeriphCLKConfig+0x1148>
 8107f26:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107f2a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8107f2e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8107f32:	d018      	beq.n	8107f66 <HAL_RCCEx_PeriphCLKConfig+0x1116>
 8107f34:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8107f38:	d811      	bhi.n	8107f5e <HAL_RCCEx_PeriphCLKConfig+0x110e>
 8107f3a:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8107f3e:	d014      	beq.n	8107f6a <HAL_RCCEx_PeriphCLKConfig+0x111a>
 8107f40:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8107f44:	d80b      	bhi.n	8107f5e <HAL_RCCEx_PeriphCLKConfig+0x110e>
 8107f46:	2b00      	cmp	r3, #0
 8107f48:	d011      	beq.n	8107f6e <HAL_RCCEx_PeriphCLKConfig+0x111e>
 8107f4a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8107f4e:	d106      	bne.n	8107f5e <HAL_RCCEx_PeriphCLKConfig+0x110e>
 8107f50:	4bc3      	ldr	r3, [pc, #780]	@ (8108260 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8107f52:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8107f54:	4ac2      	ldr	r2, [pc, #776]	@ (8108260 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8107f56:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8107f5a:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8107f5c:	e008      	b.n	8107f70 <HAL_RCCEx_PeriphCLKConfig+0x1120>
 8107f5e:	2301      	movs	r3, #1
 8107f60:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8107f64:	e004      	b.n	8107f70 <HAL_RCCEx_PeriphCLKConfig+0x1120>
 8107f66:	bf00      	nop
 8107f68:	e002      	b.n	8107f70 <HAL_RCCEx_PeriphCLKConfig+0x1120>
 8107f6a:	bf00      	nop
 8107f6c:	e000      	b.n	8107f70 <HAL_RCCEx_PeriphCLKConfig+0x1120>
 8107f6e:	bf00      	nop
 8107f70:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107f74:	2b00      	cmp	r3, #0
 8107f76:	d10b      	bne.n	8107f90 <HAL_RCCEx_PeriphCLKConfig+0x1140>
 8107f78:	4bb9      	ldr	r3, [pc, #740]	@ (8108260 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8107f7a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8107f7c:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 8107f80:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107f84:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8107f88:	4ab5      	ldr	r2, [pc, #724]	@ (8108260 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8107f8a:	430b      	orrs	r3, r1
 8107f8c:	6553      	str	r3, [r2, #84]	@ 0x54
 8107f8e:	e003      	b.n	8107f98 <HAL_RCCEx_PeriphCLKConfig+0x1148>
 8107f90:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8107f94:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8107f98:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107f9c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8107fa0:	f402 1380 	and.w	r3, r2, #1048576	@ 0x100000
 8107fa4:	65bb      	str	r3, [r7, #88]	@ 0x58
 8107fa6:	2300      	movs	r3, #0
 8107fa8:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8107faa:	e9d7 1216 	ldrd	r1, r2, [r7, #88]	@ 0x58
 8107fae:	460b      	mov	r3, r1
 8107fb0:	4313      	orrs	r3, r2
 8107fb2:	d009      	beq.n	8107fc8 <HAL_RCCEx_PeriphCLKConfig+0x1178>
 8107fb4:	4baa      	ldr	r3, [pc, #680]	@ (8108260 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8107fb6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8107fb8:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8107fbc:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107fc0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8107fc2:	4aa7      	ldr	r2, [pc, #668]	@ (8108260 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8107fc4:	430b      	orrs	r3, r1
 8107fc6:	6513      	str	r3, [r2, #80]	@ 0x50
 8107fc8:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107fcc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8107fd0:	f002 5380 	and.w	r3, r2, #268435456	@ 0x10000000
 8107fd4:	653b      	str	r3, [r7, #80]	@ 0x50
 8107fd6:	2300      	movs	r3, #0
 8107fd8:	657b      	str	r3, [r7, #84]	@ 0x54
 8107fda:	e9d7 1214 	ldrd	r1, r2, [r7, #80]	@ 0x50
 8107fde:	460b      	mov	r3, r1
 8107fe0:	4313      	orrs	r3, r2
 8107fe2:	d00a      	beq.n	8107ffa <HAL_RCCEx_PeriphCLKConfig+0x11aa>
 8107fe4:	4b9e      	ldr	r3, [pc, #632]	@ (8108260 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8107fe6:	691b      	ldr	r3, [r3, #16]
 8107fe8:	f423 4180 	bic.w	r1, r3, #16384	@ 0x4000
 8107fec:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107ff0:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 8107ff4:	4a9a      	ldr	r2, [pc, #616]	@ (8108260 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8107ff6:	430b      	orrs	r3, r1
 8107ff8:	6113      	str	r3, [r2, #16]
 8107ffa:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8107ffe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8108002:	f402 1300 	and.w	r3, r2, #2097152	@ 0x200000
 8108006:	64bb      	str	r3, [r7, #72]	@ 0x48
 8108008:	2300      	movs	r3, #0
 810800a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 810800c:	e9d7 1212 	ldrd	r1, r2, [r7, #72]	@ 0x48
 8108010:	460b      	mov	r3, r1
 8108012:	4313      	orrs	r3, r2
 8108014:	d009      	beq.n	810802a <HAL_RCCEx_PeriphCLKConfig+0x11da>
 8108016:	4b92      	ldr	r3, [pc, #584]	@ (8108260 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8108018:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 810801a:	f023 7180 	bic.w	r1, r3, #16777216	@ 0x1000000
 810801e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8108022:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8108024:	4a8e      	ldr	r2, [pc, #568]	@ (8108260 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8108026:	430b      	orrs	r3, r1
 8108028:	6513      	str	r3, [r2, #80]	@ 0x50
 810802a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810802e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8108032:	f002 4380 	and.w	r3, r2, #1073741824	@ 0x40000000
 8108036:	643b      	str	r3, [r7, #64]	@ 0x40
 8108038:	2300      	movs	r3, #0
 810803a:	647b      	str	r3, [r7, #68]	@ 0x44
 810803c:	e9d7 1210 	ldrd	r1, r2, [r7, #64]	@ 0x40
 8108040:	460b      	mov	r3, r1
 8108042:	4313      	orrs	r3, r2
 8108044:	d00e      	beq.n	8108064 <HAL_RCCEx_PeriphCLKConfig+0x1214>
 8108046:	4b86      	ldr	r3, [pc, #536]	@ (8108260 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8108048:	691b      	ldr	r3, [r3, #16]
 810804a:	4a85      	ldr	r2, [pc, #532]	@ (8108260 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 810804c:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8108050:	6113      	str	r3, [r2, #16]
 8108052:	4b83      	ldr	r3, [pc, #524]	@ (8108260 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8108054:	6919      	ldr	r1, [r3, #16]
 8108056:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810805a:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 810805e:	4a80      	ldr	r2, [pc, #512]	@ (8108260 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8108060:	430b      	orrs	r3, r1
 8108062:	6113      	str	r3, [r2, #16]
 8108064:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8108068:	e9d3 2300 	ldrd	r2, r3, [r3]
 810806c:	f002 4300 	and.w	r3, r2, #2147483648	@ 0x80000000
 8108070:	63bb      	str	r3, [r7, #56]	@ 0x38
 8108072:	2300      	movs	r3, #0
 8108074:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8108076:	e9d7 120e 	ldrd	r1, r2, [r7, #56]	@ 0x38
 810807a:	460b      	mov	r3, r1
 810807c:	4313      	orrs	r3, r2
 810807e:	d009      	beq.n	8108094 <HAL_RCCEx_PeriphCLKConfig+0x1244>
 8108080:	4b77      	ldr	r3, [pc, #476]	@ (8108260 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8108082:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8108084:	f023 5140 	bic.w	r1, r3, #805306368	@ 0x30000000
 8108088:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810808c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 810808e:	4a74      	ldr	r2, [pc, #464]	@ (8108260 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8108090:	430b      	orrs	r3, r1
 8108092:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8108094:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8108098:	e9d3 2300 	ldrd	r2, r3, [r3]
 810809c:	f402 0300 	and.w	r3, r2, #8388608	@ 0x800000
 81080a0:	633b      	str	r3, [r7, #48]	@ 0x30
 81080a2:	2300      	movs	r3, #0
 81080a4:	637b      	str	r3, [r7, #52]	@ 0x34
 81080a6:	e9d7 120c 	ldrd	r1, r2, [r7, #48]	@ 0x30
 81080aa:	460b      	mov	r3, r1
 81080ac:	4313      	orrs	r3, r2
 81080ae:	d00a      	beq.n	81080c6 <HAL_RCCEx_PeriphCLKConfig+0x1276>
 81080b0:	4b6b      	ldr	r3, [pc, #428]	@ (8108260 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 81080b2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 81080b4:	f423 0140 	bic.w	r1, r3, #12582912	@ 0xc00000
 81080b8:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81080bc:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 81080c0:	4a67      	ldr	r2, [pc, #412]	@ (8108260 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 81080c2:	430b      	orrs	r3, r1
 81080c4:	6553      	str	r3, [r2, #84]	@ 0x54
 81080c6:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81080ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 81080ce:	2100      	movs	r1, #0
 81080d0:	62b9      	str	r1, [r7, #40]	@ 0x28
 81080d2:	f003 0301 	and.w	r3, r3, #1
 81080d6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 81080d8:	e9d7 120a 	ldrd	r1, r2, [r7, #40]	@ 0x28
 81080dc:	460b      	mov	r3, r1
 81080de:	4313      	orrs	r3, r2
 81080e0:	d011      	beq.n	8108106 <HAL_RCCEx_PeriphCLKConfig+0x12b6>
 81080e2:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81080e6:	3308      	adds	r3, #8
 81080e8:	2100      	movs	r1, #0
 81080ea:	4618      	mov	r0, r3
 81080ec:	f000 fb78 	bl	81087e0 <RCCEx_PLL2_Config>
 81080f0:	4603      	mov	r3, r0
 81080f2:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 81080f6:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 81080fa:	2b00      	cmp	r3, #0
 81080fc:	d003      	beq.n	8108106 <HAL_RCCEx_PeriphCLKConfig+0x12b6>
 81080fe:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8108102:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8108106:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810810a:	e9d3 2300 	ldrd	r2, r3, [r3]
 810810e:	2100      	movs	r1, #0
 8108110:	6239      	str	r1, [r7, #32]
 8108112:	f003 0302 	and.w	r3, r3, #2
 8108116:	627b      	str	r3, [r7, #36]	@ 0x24
 8108118:	e9d7 1208 	ldrd	r1, r2, [r7, #32]
 810811c:	460b      	mov	r3, r1
 810811e:	4313      	orrs	r3, r2
 8108120:	d011      	beq.n	8108146 <HAL_RCCEx_PeriphCLKConfig+0x12f6>
 8108122:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8108126:	3308      	adds	r3, #8
 8108128:	2101      	movs	r1, #1
 810812a:	4618      	mov	r0, r3
 810812c:	f000 fb58 	bl	81087e0 <RCCEx_PLL2_Config>
 8108130:	4603      	mov	r3, r0
 8108132:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8108136:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 810813a:	2b00      	cmp	r3, #0
 810813c:	d003      	beq.n	8108146 <HAL_RCCEx_PeriphCLKConfig+0x12f6>
 810813e:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8108142:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8108146:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810814a:	e9d3 2300 	ldrd	r2, r3, [r3]
 810814e:	2100      	movs	r1, #0
 8108150:	61b9      	str	r1, [r7, #24]
 8108152:	f003 0304 	and.w	r3, r3, #4
 8108156:	61fb      	str	r3, [r7, #28]
 8108158:	e9d7 1206 	ldrd	r1, r2, [r7, #24]
 810815c:	460b      	mov	r3, r1
 810815e:	4313      	orrs	r3, r2
 8108160:	d011      	beq.n	8108186 <HAL_RCCEx_PeriphCLKConfig+0x1336>
 8108162:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8108166:	3308      	adds	r3, #8
 8108168:	2102      	movs	r1, #2
 810816a:	4618      	mov	r0, r3
 810816c:	f000 fb38 	bl	81087e0 <RCCEx_PLL2_Config>
 8108170:	4603      	mov	r3, r0
 8108172:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8108176:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 810817a:	2b00      	cmp	r3, #0
 810817c:	d003      	beq.n	8108186 <HAL_RCCEx_PeriphCLKConfig+0x1336>
 810817e:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8108182:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8108186:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810818a:	e9d3 2300 	ldrd	r2, r3, [r3]
 810818e:	2100      	movs	r1, #0
 8108190:	6139      	str	r1, [r7, #16]
 8108192:	f003 0308 	and.w	r3, r3, #8
 8108196:	617b      	str	r3, [r7, #20]
 8108198:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 810819c:	460b      	mov	r3, r1
 810819e:	4313      	orrs	r3, r2
 81081a0:	d011      	beq.n	81081c6 <HAL_RCCEx_PeriphCLKConfig+0x1376>
 81081a2:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81081a6:	3328      	adds	r3, #40	@ 0x28
 81081a8:	2100      	movs	r1, #0
 81081aa:	4618      	mov	r0, r3
 81081ac:	f000 fbca 	bl	8108944 <RCCEx_PLL3_Config>
 81081b0:	4603      	mov	r3, r0
 81081b2:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 81081b6:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 81081ba:	2b00      	cmp	r3, #0
 81081bc:	d003      	beq.n	81081c6 <HAL_RCCEx_PeriphCLKConfig+0x1376>
 81081be:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 81081c2:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 81081c6:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81081ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 81081ce:	2100      	movs	r1, #0
 81081d0:	60b9      	str	r1, [r7, #8]
 81081d2:	f003 0310 	and.w	r3, r3, #16
 81081d6:	60fb      	str	r3, [r7, #12]
 81081d8:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 81081dc:	460b      	mov	r3, r1
 81081de:	4313      	orrs	r3, r2
 81081e0:	d011      	beq.n	8108206 <HAL_RCCEx_PeriphCLKConfig+0x13b6>
 81081e2:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 81081e6:	3328      	adds	r3, #40	@ 0x28
 81081e8:	2101      	movs	r1, #1
 81081ea:	4618      	mov	r0, r3
 81081ec:	f000 fbaa 	bl	8108944 <RCCEx_PLL3_Config>
 81081f0:	4603      	mov	r3, r0
 81081f2:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 81081f6:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 81081fa:	2b00      	cmp	r3, #0
 81081fc:	d003      	beq.n	8108206 <HAL_RCCEx_PeriphCLKConfig+0x13b6>
 81081fe:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8108202:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8108206:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 810820a:	e9d3 2300 	ldrd	r2, r3, [r3]
 810820e:	2100      	movs	r1, #0
 8108210:	6039      	str	r1, [r7, #0]
 8108212:	f003 0320 	and.w	r3, r3, #32
 8108216:	607b      	str	r3, [r7, #4]
 8108218:	e9d7 1200 	ldrd	r1, r2, [r7]
 810821c:	460b      	mov	r3, r1
 810821e:	4313      	orrs	r3, r2
 8108220:	d011      	beq.n	8108246 <HAL_RCCEx_PeriphCLKConfig+0x13f6>
 8108222:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8108226:	3328      	adds	r3, #40	@ 0x28
 8108228:	2102      	movs	r1, #2
 810822a:	4618      	mov	r0, r3
 810822c:	f000 fb8a 	bl	8108944 <RCCEx_PLL3_Config>
 8108230:	4603      	mov	r3, r0
 8108232:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8108236:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 810823a:	2b00      	cmp	r3, #0
 810823c:	d003      	beq.n	8108246 <HAL_RCCEx_PeriphCLKConfig+0x13f6>
 810823e:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8108242:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8108246:	f897 3126 	ldrb.w	r3, [r7, #294]	@ 0x126
 810824a:	2b00      	cmp	r3, #0
 810824c:	d101      	bne.n	8108252 <HAL_RCCEx_PeriphCLKConfig+0x1402>
 810824e:	2300      	movs	r3, #0
 8108250:	e000      	b.n	8108254 <HAL_RCCEx_PeriphCLKConfig+0x1404>
 8108252:	2301      	movs	r3, #1
 8108254:	4618      	mov	r0, r3
 8108256:	f507 7794 	add.w	r7, r7, #296	@ 0x128
 810825a:	46bd      	mov	sp, r7
 810825c:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8108260:	58024400 	.word	0x58024400

08108264 <HAL_RCCEx_GetD3PCLK1Freq>:
 8108264:	b580      	push	{r7, lr}
 8108266:	af00      	add	r7, sp, #0
 8108268:	f7fe fd52 	bl	8106d10 <HAL_RCC_GetHCLKFreq>
 810826c:	4602      	mov	r2, r0
 810826e:	4b06      	ldr	r3, [pc, #24]	@ (8108288 <HAL_RCCEx_GetD3PCLK1Freq+0x24>)
 8108270:	6a1b      	ldr	r3, [r3, #32]
 8108272:	091b      	lsrs	r3, r3, #4
 8108274:	f003 0307 	and.w	r3, r3, #7
 8108278:	4904      	ldr	r1, [pc, #16]	@ (810828c <HAL_RCCEx_GetD3PCLK1Freq+0x28>)
 810827a:	5ccb      	ldrb	r3, [r1, r3]
 810827c:	f003 031f 	and.w	r3, r3, #31
 8108280:	fa22 f303 	lsr.w	r3, r2, r3
 8108284:	4618      	mov	r0, r3
 8108286:	bd80      	pop	{r7, pc}
 8108288:	58024400 	.word	0x58024400
 810828c:	08111810 	.word	0x08111810

08108290 <HAL_RCCEx_GetPLL2ClockFreq>:
 8108290:	b480      	push	{r7}
 8108292:	b089      	sub	sp, #36	@ 0x24
 8108294:	af00      	add	r7, sp, #0
 8108296:	6078      	str	r0, [r7, #4]
 8108298:	4ba1      	ldr	r3, [pc, #644]	@ (8108520 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 810829a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 810829c:	f003 0303 	and.w	r3, r3, #3
 81082a0:	61bb      	str	r3, [r7, #24]
 81082a2:	4b9f      	ldr	r3, [pc, #636]	@ (8108520 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 81082a4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 81082a6:	0b1b      	lsrs	r3, r3, #12
 81082a8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 81082ac:	617b      	str	r3, [r7, #20]
 81082ae:	4b9c      	ldr	r3, [pc, #624]	@ (8108520 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 81082b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 81082b2:	091b      	lsrs	r3, r3, #4
 81082b4:	f003 0301 	and.w	r3, r3, #1
 81082b8:	613b      	str	r3, [r7, #16]
 81082ba:	4b99      	ldr	r3, [pc, #612]	@ (8108520 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 81082bc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 81082be:	08db      	lsrs	r3, r3, #3
 81082c0:	f3c3 030c 	ubfx	r3, r3, #0, #13
 81082c4:	693a      	ldr	r2, [r7, #16]
 81082c6:	fb02 f303 	mul.w	r3, r2, r3
 81082ca:	ee07 3a90 	vmov	s15, r3
 81082ce:	eef8 7a67 	vcvt.f32.u32	s15, s15
 81082d2:	edc7 7a03 	vstr	s15, [r7, #12]
 81082d6:	697b      	ldr	r3, [r7, #20]
 81082d8:	2b00      	cmp	r3, #0
 81082da:	f000 8111 	beq.w	8108500 <HAL_RCCEx_GetPLL2ClockFreq+0x270>
 81082de:	69bb      	ldr	r3, [r7, #24]
 81082e0:	2b02      	cmp	r3, #2
 81082e2:	f000 8083 	beq.w	81083ec <HAL_RCCEx_GetPLL2ClockFreq+0x15c>
 81082e6:	69bb      	ldr	r3, [r7, #24]
 81082e8:	2b02      	cmp	r3, #2
 81082ea:	f200 80a1 	bhi.w	8108430 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 81082ee:	69bb      	ldr	r3, [r7, #24]
 81082f0:	2b00      	cmp	r3, #0
 81082f2:	d003      	beq.n	81082fc <HAL_RCCEx_GetPLL2ClockFreq+0x6c>
 81082f4:	69bb      	ldr	r3, [r7, #24]
 81082f6:	2b01      	cmp	r3, #1
 81082f8:	d056      	beq.n	81083a8 <HAL_RCCEx_GetPLL2ClockFreq+0x118>
 81082fa:	e099      	b.n	8108430 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 81082fc:	4b88      	ldr	r3, [pc, #544]	@ (8108520 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 81082fe:	681b      	ldr	r3, [r3, #0]
 8108300:	f003 0320 	and.w	r3, r3, #32
 8108304:	2b00      	cmp	r3, #0
 8108306:	d02d      	beq.n	8108364 <HAL_RCCEx_GetPLL2ClockFreq+0xd4>
 8108308:	4b85      	ldr	r3, [pc, #532]	@ (8108520 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 810830a:	681b      	ldr	r3, [r3, #0]
 810830c:	08db      	lsrs	r3, r3, #3
 810830e:	f003 0303 	and.w	r3, r3, #3
 8108312:	4a84      	ldr	r2, [pc, #528]	@ (8108524 <HAL_RCCEx_GetPLL2ClockFreq+0x294>)
 8108314:	fa22 f303 	lsr.w	r3, r2, r3
 8108318:	60bb      	str	r3, [r7, #8]
 810831a:	68bb      	ldr	r3, [r7, #8]
 810831c:	ee07 3a90 	vmov	s15, r3
 8108320:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8108324:	697b      	ldr	r3, [r7, #20]
 8108326:	ee07 3a90 	vmov	s15, r3
 810832a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 810832e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8108332:	4b7b      	ldr	r3, [pc, #492]	@ (8108520 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8108334:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8108336:	f3c3 0308 	ubfx	r3, r3, #0, #9
 810833a:	ee07 3a90 	vmov	s15, r3
 810833e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8108342:	ed97 6a03 	vldr	s12, [r7, #12]
 8108346:	eddf 5a78 	vldr	s11, [pc, #480]	@ 8108528 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 810834a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 810834e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8108352:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8108356:	ee77 7aa6 	vadd.f32	s15, s15, s13
 810835a:	ee67 7a27 	vmul.f32	s15, s14, s15
 810835e:	edc7 7a07 	vstr	s15, [r7, #28]
 8108362:	e087      	b.n	8108474 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 8108364:	697b      	ldr	r3, [r7, #20]
 8108366:	ee07 3a90 	vmov	s15, r3
 810836a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 810836e:	eddf 6a6f 	vldr	s13, [pc, #444]	@ 810852c <HAL_RCCEx_GetPLL2ClockFreq+0x29c>
 8108372:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8108376:	4b6a      	ldr	r3, [pc, #424]	@ (8108520 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8108378:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 810837a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 810837e:	ee07 3a90 	vmov	s15, r3
 8108382:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8108386:	ed97 6a03 	vldr	s12, [r7, #12]
 810838a:	eddf 5a67 	vldr	s11, [pc, #412]	@ 8108528 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 810838e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8108392:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8108396:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 810839a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 810839e:	ee67 7a27 	vmul.f32	s15, s14, s15
 81083a2:	edc7 7a07 	vstr	s15, [r7, #28]
 81083a6:	e065      	b.n	8108474 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 81083a8:	697b      	ldr	r3, [r7, #20]
 81083aa:	ee07 3a90 	vmov	s15, r3
 81083ae:	eef8 7a67 	vcvt.f32.u32	s15, s15
 81083b2:	eddf 6a5f 	vldr	s13, [pc, #380]	@ 8108530 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 81083b6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 81083ba:	4b59      	ldr	r3, [pc, #356]	@ (8108520 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 81083bc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 81083be:	f3c3 0308 	ubfx	r3, r3, #0, #9
 81083c2:	ee07 3a90 	vmov	s15, r3
 81083c6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 81083ca:	ed97 6a03 	vldr	s12, [r7, #12]
 81083ce:	eddf 5a56 	vldr	s11, [pc, #344]	@ 8108528 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 81083d2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 81083d6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 81083da:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 81083de:	ee77 7aa6 	vadd.f32	s15, s15, s13
 81083e2:	ee67 7a27 	vmul.f32	s15, s14, s15
 81083e6:	edc7 7a07 	vstr	s15, [r7, #28]
 81083ea:	e043      	b.n	8108474 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 81083ec:	697b      	ldr	r3, [r7, #20]
 81083ee:	ee07 3a90 	vmov	s15, r3
 81083f2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 81083f6:	eddf 6a4f 	vldr	s13, [pc, #316]	@ 8108534 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>
 81083fa:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 81083fe:	4b48      	ldr	r3, [pc, #288]	@ (8108520 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8108400:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8108402:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8108406:	ee07 3a90 	vmov	s15, r3
 810840a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 810840e:	ed97 6a03 	vldr	s12, [r7, #12]
 8108412:	eddf 5a45 	vldr	s11, [pc, #276]	@ 8108528 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8108416:	eec6 7a25 	vdiv.f32	s15, s12, s11
 810841a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 810841e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8108422:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8108426:	ee67 7a27 	vmul.f32	s15, s14, s15
 810842a:	edc7 7a07 	vstr	s15, [r7, #28]
 810842e:	e021      	b.n	8108474 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 8108430:	697b      	ldr	r3, [r7, #20]
 8108432:	ee07 3a90 	vmov	s15, r3
 8108436:	eef8 7a67 	vcvt.f32.u32	s15, s15
 810843a:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 8108530 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 810843e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8108442:	4b37      	ldr	r3, [pc, #220]	@ (8108520 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8108444:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8108446:	f3c3 0308 	ubfx	r3, r3, #0, #9
 810844a:	ee07 3a90 	vmov	s15, r3
 810844e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8108452:	ed97 6a03 	vldr	s12, [r7, #12]
 8108456:	eddf 5a34 	vldr	s11, [pc, #208]	@ 8108528 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 810845a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 810845e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8108462:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8108466:	ee77 7aa6 	vadd.f32	s15, s15, s13
 810846a:	ee67 7a27 	vmul.f32	s15, s14, s15
 810846e:	edc7 7a07 	vstr	s15, [r7, #28]
 8108472:	bf00      	nop
 8108474:	4b2a      	ldr	r3, [pc, #168]	@ (8108520 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8108476:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8108478:	0a5b      	lsrs	r3, r3, #9
 810847a:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 810847e:	ee07 3a90 	vmov	s15, r3
 8108482:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8108486:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 810848a:	ee37 7a87 	vadd.f32	s14, s15, s14
 810848e:	edd7 6a07 	vldr	s13, [r7, #28]
 8108492:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8108496:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 810849a:	ee17 2a90 	vmov	r2, s15
 810849e:	687b      	ldr	r3, [r7, #4]
 81084a0:	601a      	str	r2, [r3, #0]
 81084a2:	4b1f      	ldr	r3, [pc, #124]	@ (8108520 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 81084a4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 81084a6:	0c1b      	lsrs	r3, r3, #16
 81084a8:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 81084ac:	ee07 3a90 	vmov	s15, r3
 81084b0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 81084b4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 81084b8:	ee37 7a87 	vadd.f32	s14, s15, s14
 81084bc:	edd7 6a07 	vldr	s13, [r7, #28]
 81084c0:	eec6 7a87 	vdiv.f32	s15, s13, s14
 81084c4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 81084c8:	ee17 2a90 	vmov	r2, s15
 81084cc:	687b      	ldr	r3, [r7, #4]
 81084ce:	605a      	str	r2, [r3, #4]
 81084d0:	4b13      	ldr	r3, [pc, #76]	@ (8108520 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 81084d2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 81084d4:	0e1b      	lsrs	r3, r3, #24
 81084d6:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 81084da:	ee07 3a90 	vmov	s15, r3
 81084de:	eef8 7a67 	vcvt.f32.u32	s15, s15
 81084e2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 81084e6:	ee37 7a87 	vadd.f32	s14, s15, s14
 81084ea:	edd7 6a07 	vldr	s13, [r7, #28]
 81084ee:	eec6 7a87 	vdiv.f32	s15, s13, s14
 81084f2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 81084f6:	ee17 2a90 	vmov	r2, s15
 81084fa:	687b      	ldr	r3, [r7, #4]
 81084fc:	609a      	str	r2, [r3, #8]
 81084fe:	e008      	b.n	8108512 <HAL_RCCEx_GetPLL2ClockFreq+0x282>
 8108500:	687b      	ldr	r3, [r7, #4]
 8108502:	2200      	movs	r2, #0
 8108504:	601a      	str	r2, [r3, #0]
 8108506:	687b      	ldr	r3, [r7, #4]
 8108508:	2200      	movs	r2, #0
 810850a:	605a      	str	r2, [r3, #4]
 810850c:	687b      	ldr	r3, [r7, #4]
 810850e:	2200      	movs	r2, #0
 8108510:	609a      	str	r2, [r3, #8]
 8108512:	bf00      	nop
 8108514:	3724      	adds	r7, #36	@ 0x24
 8108516:	46bd      	mov	sp, r7
 8108518:	f85d 7b04 	ldr.w	r7, [sp], #4
 810851c:	4770      	bx	lr
 810851e:	bf00      	nop
 8108520:	58024400 	.word	0x58024400
 8108524:	03d09000 	.word	0x03d09000
 8108528:	46000000 	.word	0x46000000
 810852c:	4c742400 	.word	0x4c742400
 8108530:	4a742400 	.word	0x4a742400
 8108534:	4bbebc20 	.word	0x4bbebc20

08108538 <HAL_RCCEx_GetPLL3ClockFreq>:
 8108538:	b480      	push	{r7}
 810853a:	b089      	sub	sp, #36	@ 0x24
 810853c:	af00      	add	r7, sp, #0
 810853e:	6078      	str	r0, [r7, #4]
 8108540:	4ba1      	ldr	r3, [pc, #644]	@ (81087c8 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8108542:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8108544:	f003 0303 	and.w	r3, r3, #3
 8108548:	61bb      	str	r3, [r7, #24]
 810854a:	4b9f      	ldr	r3, [pc, #636]	@ (81087c8 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 810854c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 810854e:	0d1b      	lsrs	r3, r3, #20
 8108550:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8108554:	617b      	str	r3, [r7, #20]
 8108556:	4b9c      	ldr	r3, [pc, #624]	@ (81087c8 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8108558:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 810855a:	0a1b      	lsrs	r3, r3, #8
 810855c:	f003 0301 	and.w	r3, r3, #1
 8108560:	613b      	str	r3, [r7, #16]
 8108562:	4b99      	ldr	r3, [pc, #612]	@ (81087c8 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8108564:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8108566:	08db      	lsrs	r3, r3, #3
 8108568:	f3c3 030c 	ubfx	r3, r3, #0, #13
 810856c:	693a      	ldr	r2, [r7, #16]
 810856e:	fb02 f303 	mul.w	r3, r2, r3
 8108572:	ee07 3a90 	vmov	s15, r3
 8108576:	eef8 7a67 	vcvt.f32.u32	s15, s15
 810857a:	edc7 7a03 	vstr	s15, [r7, #12]
 810857e:	697b      	ldr	r3, [r7, #20]
 8108580:	2b00      	cmp	r3, #0
 8108582:	f000 8111 	beq.w	81087a8 <HAL_RCCEx_GetPLL3ClockFreq+0x270>
 8108586:	69bb      	ldr	r3, [r7, #24]
 8108588:	2b02      	cmp	r3, #2
 810858a:	f000 8083 	beq.w	8108694 <HAL_RCCEx_GetPLL3ClockFreq+0x15c>
 810858e:	69bb      	ldr	r3, [r7, #24]
 8108590:	2b02      	cmp	r3, #2
 8108592:	f200 80a1 	bhi.w	81086d8 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 8108596:	69bb      	ldr	r3, [r7, #24]
 8108598:	2b00      	cmp	r3, #0
 810859a:	d003      	beq.n	81085a4 <HAL_RCCEx_GetPLL3ClockFreq+0x6c>
 810859c:	69bb      	ldr	r3, [r7, #24]
 810859e:	2b01      	cmp	r3, #1
 81085a0:	d056      	beq.n	8108650 <HAL_RCCEx_GetPLL3ClockFreq+0x118>
 81085a2:	e099      	b.n	81086d8 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 81085a4:	4b88      	ldr	r3, [pc, #544]	@ (81087c8 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 81085a6:	681b      	ldr	r3, [r3, #0]
 81085a8:	f003 0320 	and.w	r3, r3, #32
 81085ac:	2b00      	cmp	r3, #0
 81085ae:	d02d      	beq.n	810860c <HAL_RCCEx_GetPLL3ClockFreq+0xd4>
 81085b0:	4b85      	ldr	r3, [pc, #532]	@ (81087c8 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 81085b2:	681b      	ldr	r3, [r3, #0]
 81085b4:	08db      	lsrs	r3, r3, #3
 81085b6:	f003 0303 	and.w	r3, r3, #3
 81085ba:	4a84      	ldr	r2, [pc, #528]	@ (81087cc <HAL_RCCEx_GetPLL3ClockFreq+0x294>)
 81085bc:	fa22 f303 	lsr.w	r3, r2, r3
 81085c0:	60bb      	str	r3, [r7, #8]
 81085c2:	68bb      	ldr	r3, [r7, #8]
 81085c4:	ee07 3a90 	vmov	s15, r3
 81085c8:	eef8 6a67 	vcvt.f32.u32	s13, s15
 81085cc:	697b      	ldr	r3, [r7, #20]
 81085ce:	ee07 3a90 	vmov	s15, r3
 81085d2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 81085d6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 81085da:	4b7b      	ldr	r3, [pc, #492]	@ (81087c8 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 81085dc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 81085de:	f3c3 0308 	ubfx	r3, r3, #0, #9
 81085e2:	ee07 3a90 	vmov	s15, r3
 81085e6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 81085ea:	ed97 6a03 	vldr	s12, [r7, #12]
 81085ee:	eddf 5a78 	vldr	s11, [pc, #480]	@ 81087d0 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 81085f2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 81085f6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 81085fa:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 81085fe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8108602:	ee67 7a27 	vmul.f32	s15, s14, s15
 8108606:	edc7 7a07 	vstr	s15, [r7, #28]
 810860a:	e087      	b.n	810871c <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 810860c:	697b      	ldr	r3, [r7, #20]
 810860e:	ee07 3a90 	vmov	s15, r3
 8108612:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8108616:	eddf 6a6f 	vldr	s13, [pc, #444]	@ 81087d4 <HAL_RCCEx_GetPLL3ClockFreq+0x29c>
 810861a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 810861e:	4b6a      	ldr	r3, [pc, #424]	@ (81087c8 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8108620:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8108622:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8108626:	ee07 3a90 	vmov	s15, r3
 810862a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 810862e:	ed97 6a03 	vldr	s12, [r7, #12]
 8108632:	eddf 5a67 	vldr	s11, [pc, #412]	@ 81087d0 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8108636:	eec6 7a25 	vdiv.f32	s15, s12, s11
 810863a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 810863e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8108642:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8108646:	ee67 7a27 	vmul.f32	s15, s14, s15
 810864a:	edc7 7a07 	vstr	s15, [r7, #28]
 810864e:	e065      	b.n	810871c <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 8108650:	697b      	ldr	r3, [r7, #20]
 8108652:	ee07 3a90 	vmov	s15, r3
 8108656:	eef8 7a67 	vcvt.f32.u32	s15, s15
 810865a:	eddf 6a5f 	vldr	s13, [pc, #380]	@ 81087d8 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 810865e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8108662:	4b59      	ldr	r3, [pc, #356]	@ (81087c8 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8108664:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8108666:	f3c3 0308 	ubfx	r3, r3, #0, #9
 810866a:	ee07 3a90 	vmov	s15, r3
 810866e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8108672:	ed97 6a03 	vldr	s12, [r7, #12]
 8108676:	eddf 5a56 	vldr	s11, [pc, #344]	@ 81087d0 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 810867a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 810867e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8108682:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8108686:	ee77 7aa6 	vadd.f32	s15, s15, s13
 810868a:	ee67 7a27 	vmul.f32	s15, s14, s15
 810868e:	edc7 7a07 	vstr	s15, [r7, #28]
 8108692:	e043      	b.n	810871c <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 8108694:	697b      	ldr	r3, [r7, #20]
 8108696:	ee07 3a90 	vmov	s15, r3
 810869a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 810869e:	eddf 6a4f 	vldr	s13, [pc, #316]	@ 81087dc <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>
 81086a2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 81086a6:	4b48      	ldr	r3, [pc, #288]	@ (81087c8 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 81086a8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 81086aa:	f3c3 0308 	ubfx	r3, r3, #0, #9
 81086ae:	ee07 3a90 	vmov	s15, r3
 81086b2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 81086b6:	ed97 6a03 	vldr	s12, [r7, #12]
 81086ba:	eddf 5a45 	vldr	s11, [pc, #276]	@ 81087d0 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 81086be:	eec6 7a25 	vdiv.f32	s15, s12, s11
 81086c2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 81086c6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 81086ca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 81086ce:	ee67 7a27 	vmul.f32	s15, s14, s15
 81086d2:	edc7 7a07 	vstr	s15, [r7, #28]
 81086d6:	e021      	b.n	810871c <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 81086d8:	697b      	ldr	r3, [r7, #20]
 81086da:	ee07 3a90 	vmov	s15, r3
 81086de:	eef8 7a67 	vcvt.f32.u32	s15, s15
 81086e2:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 81087d8 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 81086e6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 81086ea:	4b37      	ldr	r3, [pc, #220]	@ (81087c8 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 81086ec:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 81086ee:	f3c3 0308 	ubfx	r3, r3, #0, #9
 81086f2:	ee07 3a90 	vmov	s15, r3
 81086f6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 81086fa:	ed97 6a03 	vldr	s12, [r7, #12]
 81086fe:	eddf 5a34 	vldr	s11, [pc, #208]	@ 81087d0 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8108702:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8108706:	ee76 7aa7 	vadd.f32	s15, s13, s15
 810870a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 810870e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8108712:	ee67 7a27 	vmul.f32	s15, s14, s15
 8108716:	edc7 7a07 	vstr	s15, [r7, #28]
 810871a:	bf00      	nop
 810871c:	4b2a      	ldr	r3, [pc, #168]	@ (81087c8 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 810871e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8108720:	0a5b      	lsrs	r3, r3, #9
 8108722:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8108726:	ee07 3a90 	vmov	s15, r3
 810872a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 810872e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8108732:	ee37 7a87 	vadd.f32	s14, s15, s14
 8108736:	edd7 6a07 	vldr	s13, [r7, #28]
 810873a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 810873e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8108742:	ee17 2a90 	vmov	r2, s15
 8108746:	687b      	ldr	r3, [r7, #4]
 8108748:	601a      	str	r2, [r3, #0]
 810874a:	4b1f      	ldr	r3, [pc, #124]	@ (81087c8 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 810874c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 810874e:	0c1b      	lsrs	r3, r3, #16
 8108750:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8108754:	ee07 3a90 	vmov	s15, r3
 8108758:	eef8 7a67 	vcvt.f32.u32	s15, s15
 810875c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8108760:	ee37 7a87 	vadd.f32	s14, s15, s14
 8108764:	edd7 6a07 	vldr	s13, [r7, #28]
 8108768:	eec6 7a87 	vdiv.f32	s15, s13, s14
 810876c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8108770:	ee17 2a90 	vmov	r2, s15
 8108774:	687b      	ldr	r3, [r7, #4]
 8108776:	605a      	str	r2, [r3, #4]
 8108778:	4b13      	ldr	r3, [pc, #76]	@ (81087c8 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 810877a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 810877c:	0e1b      	lsrs	r3, r3, #24
 810877e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8108782:	ee07 3a90 	vmov	s15, r3
 8108786:	eef8 7a67 	vcvt.f32.u32	s15, s15
 810878a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 810878e:	ee37 7a87 	vadd.f32	s14, s15, s14
 8108792:	edd7 6a07 	vldr	s13, [r7, #28]
 8108796:	eec6 7a87 	vdiv.f32	s15, s13, s14
 810879a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 810879e:	ee17 2a90 	vmov	r2, s15
 81087a2:	687b      	ldr	r3, [r7, #4]
 81087a4:	609a      	str	r2, [r3, #8]
 81087a6:	e008      	b.n	81087ba <HAL_RCCEx_GetPLL3ClockFreq+0x282>
 81087a8:	687b      	ldr	r3, [r7, #4]
 81087aa:	2200      	movs	r2, #0
 81087ac:	601a      	str	r2, [r3, #0]
 81087ae:	687b      	ldr	r3, [r7, #4]
 81087b0:	2200      	movs	r2, #0
 81087b2:	605a      	str	r2, [r3, #4]
 81087b4:	687b      	ldr	r3, [r7, #4]
 81087b6:	2200      	movs	r2, #0
 81087b8:	609a      	str	r2, [r3, #8]
 81087ba:	bf00      	nop
 81087bc:	3724      	adds	r7, #36	@ 0x24
 81087be:	46bd      	mov	sp, r7
 81087c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 81087c4:	4770      	bx	lr
 81087c6:	bf00      	nop
 81087c8:	58024400 	.word	0x58024400
 81087cc:	03d09000 	.word	0x03d09000
 81087d0:	46000000 	.word	0x46000000
 81087d4:	4c742400 	.word	0x4c742400
 81087d8:	4a742400 	.word	0x4a742400
 81087dc:	4bbebc20 	.word	0x4bbebc20

081087e0 <RCCEx_PLL2_Config>:
 81087e0:	b580      	push	{r7, lr}
 81087e2:	b084      	sub	sp, #16
 81087e4:	af00      	add	r7, sp, #0
 81087e6:	6078      	str	r0, [r7, #4]
 81087e8:	6039      	str	r1, [r7, #0]
 81087ea:	2300      	movs	r3, #0
 81087ec:	73fb      	strb	r3, [r7, #15]
 81087ee:	4b54      	ldr	r3, [pc, #336]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 81087f0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 81087f2:	f003 0303 	and.w	r3, r3, #3
 81087f6:	2b03      	cmp	r3, #3
 81087f8:	d101      	bne.n	81087fe <RCCEx_PLL2_Config+0x1e>
 81087fa:	2301      	movs	r3, #1
 81087fc:	e09b      	b.n	8108936 <RCCEx_PLL2_Config+0x156>
 81087fe:	4b50      	ldr	r3, [pc, #320]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 8108800:	681b      	ldr	r3, [r3, #0]
 8108802:	4a4f      	ldr	r2, [pc, #316]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 8108804:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8108808:	6013      	str	r3, [r2, #0]
 810880a:	f7fd f8a5 	bl	8105958 <HAL_GetTick>
 810880e:	60b8      	str	r0, [r7, #8]
 8108810:	e008      	b.n	8108824 <RCCEx_PLL2_Config+0x44>
 8108812:	f7fd f8a1 	bl	8105958 <HAL_GetTick>
 8108816:	4602      	mov	r2, r0
 8108818:	68bb      	ldr	r3, [r7, #8]
 810881a:	1ad3      	subs	r3, r2, r3
 810881c:	2b02      	cmp	r3, #2
 810881e:	d901      	bls.n	8108824 <RCCEx_PLL2_Config+0x44>
 8108820:	2303      	movs	r3, #3
 8108822:	e088      	b.n	8108936 <RCCEx_PLL2_Config+0x156>
 8108824:	4b46      	ldr	r3, [pc, #280]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 8108826:	681b      	ldr	r3, [r3, #0]
 8108828:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 810882c:	2b00      	cmp	r3, #0
 810882e:	d1f0      	bne.n	8108812 <RCCEx_PLL2_Config+0x32>
 8108830:	4b43      	ldr	r3, [pc, #268]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 8108832:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8108834:	f423 327c 	bic.w	r2, r3, #258048	@ 0x3f000
 8108838:	687b      	ldr	r3, [r7, #4]
 810883a:	681b      	ldr	r3, [r3, #0]
 810883c:	031b      	lsls	r3, r3, #12
 810883e:	4940      	ldr	r1, [pc, #256]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 8108840:	4313      	orrs	r3, r2
 8108842:	628b      	str	r3, [r1, #40]	@ 0x28
 8108844:	687b      	ldr	r3, [r7, #4]
 8108846:	685b      	ldr	r3, [r3, #4]
 8108848:	3b01      	subs	r3, #1
 810884a:	f3c3 0208 	ubfx	r2, r3, #0, #9
 810884e:	687b      	ldr	r3, [r7, #4]
 8108850:	689b      	ldr	r3, [r3, #8]
 8108852:	3b01      	subs	r3, #1
 8108854:	025b      	lsls	r3, r3, #9
 8108856:	b29b      	uxth	r3, r3
 8108858:	431a      	orrs	r2, r3
 810885a:	687b      	ldr	r3, [r7, #4]
 810885c:	68db      	ldr	r3, [r3, #12]
 810885e:	3b01      	subs	r3, #1
 8108860:	041b      	lsls	r3, r3, #16
 8108862:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 8108866:	431a      	orrs	r2, r3
 8108868:	687b      	ldr	r3, [r7, #4]
 810886a:	691b      	ldr	r3, [r3, #16]
 810886c:	3b01      	subs	r3, #1
 810886e:	061b      	lsls	r3, r3, #24
 8108870:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 8108874:	4932      	ldr	r1, [pc, #200]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 8108876:	4313      	orrs	r3, r2
 8108878:	638b      	str	r3, [r1, #56]	@ 0x38
 810887a:	4b31      	ldr	r3, [pc, #196]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 810887c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 810887e:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 8108882:	687b      	ldr	r3, [r7, #4]
 8108884:	695b      	ldr	r3, [r3, #20]
 8108886:	492e      	ldr	r1, [pc, #184]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 8108888:	4313      	orrs	r3, r2
 810888a:	62cb      	str	r3, [r1, #44]	@ 0x2c
 810888c:	4b2c      	ldr	r3, [pc, #176]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 810888e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8108890:	f023 0220 	bic.w	r2, r3, #32
 8108894:	687b      	ldr	r3, [r7, #4]
 8108896:	699b      	ldr	r3, [r3, #24]
 8108898:	4929      	ldr	r1, [pc, #164]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 810889a:	4313      	orrs	r3, r2
 810889c:	62cb      	str	r3, [r1, #44]	@ 0x2c
 810889e:	4b28      	ldr	r3, [pc, #160]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 81088a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 81088a2:	4a27      	ldr	r2, [pc, #156]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 81088a4:	f023 0310 	bic.w	r3, r3, #16
 81088a8:	62d3      	str	r3, [r2, #44]	@ 0x2c
 81088aa:	4b25      	ldr	r3, [pc, #148]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 81088ac:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 81088ae:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 81088b2:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 81088b6:	687a      	ldr	r2, [r7, #4]
 81088b8:	69d2      	ldr	r2, [r2, #28]
 81088ba:	00d2      	lsls	r2, r2, #3
 81088bc:	4920      	ldr	r1, [pc, #128]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 81088be:	4313      	orrs	r3, r2
 81088c0:	63cb      	str	r3, [r1, #60]	@ 0x3c
 81088c2:	4b1f      	ldr	r3, [pc, #124]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 81088c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 81088c6:	4a1e      	ldr	r2, [pc, #120]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 81088c8:	f043 0310 	orr.w	r3, r3, #16
 81088cc:	62d3      	str	r3, [r2, #44]	@ 0x2c
 81088ce:	683b      	ldr	r3, [r7, #0]
 81088d0:	2b00      	cmp	r3, #0
 81088d2:	d106      	bne.n	81088e2 <RCCEx_PLL2_Config+0x102>
 81088d4:	4b1a      	ldr	r3, [pc, #104]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 81088d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 81088d8:	4a19      	ldr	r2, [pc, #100]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 81088da:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 81088de:	62d3      	str	r3, [r2, #44]	@ 0x2c
 81088e0:	e00f      	b.n	8108902 <RCCEx_PLL2_Config+0x122>
 81088e2:	683b      	ldr	r3, [r7, #0]
 81088e4:	2b01      	cmp	r3, #1
 81088e6:	d106      	bne.n	81088f6 <RCCEx_PLL2_Config+0x116>
 81088e8:	4b15      	ldr	r3, [pc, #84]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 81088ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 81088ec:	4a14      	ldr	r2, [pc, #80]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 81088ee:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 81088f2:	62d3      	str	r3, [r2, #44]	@ 0x2c
 81088f4:	e005      	b.n	8108902 <RCCEx_PLL2_Config+0x122>
 81088f6:	4b12      	ldr	r3, [pc, #72]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 81088f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 81088fa:	4a11      	ldr	r2, [pc, #68]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 81088fc:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8108900:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8108902:	4b0f      	ldr	r3, [pc, #60]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 8108904:	681b      	ldr	r3, [r3, #0]
 8108906:	4a0e      	ldr	r2, [pc, #56]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 8108908:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 810890c:	6013      	str	r3, [r2, #0]
 810890e:	f7fd f823 	bl	8105958 <HAL_GetTick>
 8108912:	60b8      	str	r0, [r7, #8]
 8108914:	e008      	b.n	8108928 <RCCEx_PLL2_Config+0x148>
 8108916:	f7fd f81f 	bl	8105958 <HAL_GetTick>
 810891a:	4602      	mov	r2, r0
 810891c:	68bb      	ldr	r3, [r7, #8]
 810891e:	1ad3      	subs	r3, r2, r3
 8108920:	2b02      	cmp	r3, #2
 8108922:	d901      	bls.n	8108928 <RCCEx_PLL2_Config+0x148>
 8108924:	2303      	movs	r3, #3
 8108926:	e006      	b.n	8108936 <RCCEx_PLL2_Config+0x156>
 8108928:	4b05      	ldr	r3, [pc, #20]	@ (8108940 <RCCEx_PLL2_Config+0x160>)
 810892a:	681b      	ldr	r3, [r3, #0]
 810892c:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8108930:	2b00      	cmp	r3, #0
 8108932:	d0f0      	beq.n	8108916 <RCCEx_PLL2_Config+0x136>
 8108934:	7bfb      	ldrb	r3, [r7, #15]
 8108936:	4618      	mov	r0, r3
 8108938:	3710      	adds	r7, #16
 810893a:	46bd      	mov	sp, r7
 810893c:	bd80      	pop	{r7, pc}
 810893e:	bf00      	nop
 8108940:	58024400 	.word	0x58024400

08108944 <RCCEx_PLL3_Config>:
 8108944:	b580      	push	{r7, lr}
 8108946:	b084      	sub	sp, #16
 8108948:	af00      	add	r7, sp, #0
 810894a:	6078      	str	r0, [r7, #4]
 810894c:	6039      	str	r1, [r7, #0]
 810894e:	2300      	movs	r3, #0
 8108950:	73fb      	strb	r3, [r7, #15]
 8108952:	4b54      	ldr	r3, [pc, #336]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 8108954:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8108956:	f003 0303 	and.w	r3, r3, #3
 810895a:	2b03      	cmp	r3, #3
 810895c:	d101      	bne.n	8108962 <RCCEx_PLL3_Config+0x1e>
 810895e:	2301      	movs	r3, #1
 8108960:	e09b      	b.n	8108a9a <RCCEx_PLL3_Config+0x156>
 8108962:	4b50      	ldr	r3, [pc, #320]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 8108964:	681b      	ldr	r3, [r3, #0]
 8108966:	4a4f      	ldr	r2, [pc, #316]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 8108968:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 810896c:	6013      	str	r3, [r2, #0]
 810896e:	f7fc fff3 	bl	8105958 <HAL_GetTick>
 8108972:	60b8      	str	r0, [r7, #8]
 8108974:	e008      	b.n	8108988 <RCCEx_PLL3_Config+0x44>
 8108976:	f7fc ffef 	bl	8105958 <HAL_GetTick>
 810897a:	4602      	mov	r2, r0
 810897c:	68bb      	ldr	r3, [r7, #8]
 810897e:	1ad3      	subs	r3, r2, r3
 8108980:	2b02      	cmp	r3, #2
 8108982:	d901      	bls.n	8108988 <RCCEx_PLL3_Config+0x44>
 8108984:	2303      	movs	r3, #3
 8108986:	e088      	b.n	8108a9a <RCCEx_PLL3_Config+0x156>
 8108988:	4b46      	ldr	r3, [pc, #280]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 810898a:	681b      	ldr	r3, [r3, #0]
 810898c:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8108990:	2b00      	cmp	r3, #0
 8108992:	d1f0      	bne.n	8108976 <RCCEx_PLL3_Config+0x32>
 8108994:	4b43      	ldr	r3, [pc, #268]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 8108996:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8108998:	f023 727c 	bic.w	r2, r3, #66060288	@ 0x3f00000
 810899c:	687b      	ldr	r3, [r7, #4]
 810899e:	681b      	ldr	r3, [r3, #0]
 81089a0:	051b      	lsls	r3, r3, #20
 81089a2:	4940      	ldr	r1, [pc, #256]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 81089a4:	4313      	orrs	r3, r2
 81089a6:	628b      	str	r3, [r1, #40]	@ 0x28
 81089a8:	687b      	ldr	r3, [r7, #4]
 81089aa:	685b      	ldr	r3, [r3, #4]
 81089ac:	3b01      	subs	r3, #1
 81089ae:	f3c3 0208 	ubfx	r2, r3, #0, #9
 81089b2:	687b      	ldr	r3, [r7, #4]
 81089b4:	689b      	ldr	r3, [r3, #8]
 81089b6:	3b01      	subs	r3, #1
 81089b8:	025b      	lsls	r3, r3, #9
 81089ba:	b29b      	uxth	r3, r3
 81089bc:	431a      	orrs	r2, r3
 81089be:	687b      	ldr	r3, [r7, #4]
 81089c0:	68db      	ldr	r3, [r3, #12]
 81089c2:	3b01      	subs	r3, #1
 81089c4:	041b      	lsls	r3, r3, #16
 81089c6:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 81089ca:	431a      	orrs	r2, r3
 81089cc:	687b      	ldr	r3, [r7, #4]
 81089ce:	691b      	ldr	r3, [r3, #16]
 81089d0:	3b01      	subs	r3, #1
 81089d2:	061b      	lsls	r3, r3, #24
 81089d4:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 81089d8:	4932      	ldr	r1, [pc, #200]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 81089da:	4313      	orrs	r3, r2
 81089dc:	640b      	str	r3, [r1, #64]	@ 0x40
 81089de:	4b31      	ldr	r3, [pc, #196]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 81089e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 81089e2:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 81089e6:	687b      	ldr	r3, [r7, #4]
 81089e8:	695b      	ldr	r3, [r3, #20]
 81089ea:	492e      	ldr	r1, [pc, #184]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 81089ec:	4313      	orrs	r3, r2
 81089ee:	62cb      	str	r3, [r1, #44]	@ 0x2c
 81089f0:	4b2c      	ldr	r3, [pc, #176]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 81089f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 81089f4:	f423 7200 	bic.w	r2, r3, #512	@ 0x200
 81089f8:	687b      	ldr	r3, [r7, #4]
 81089fa:	699b      	ldr	r3, [r3, #24]
 81089fc:	4929      	ldr	r1, [pc, #164]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 81089fe:	4313      	orrs	r3, r2
 8108a00:	62cb      	str	r3, [r1, #44]	@ 0x2c
 8108a02:	4b28      	ldr	r3, [pc, #160]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 8108a04:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8108a06:	4a27      	ldr	r2, [pc, #156]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 8108a08:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8108a0c:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8108a0e:	4b25      	ldr	r3, [pc, #148]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 8108a10:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8108a12:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8108a16:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8108a1a:	687a      	ldr	r2, [r7, #4]
 8108a1c:	69d2      	ldr	r2, [r2, #28]
 8108a1e:	00d2      	lsls	r2, r2, #3
 8108a20:	4920      	ldr	r1, [pc, #128]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 8108a22:	4313      	orrs	r3, r2
 8108a24:	644b      	str	r3, [r1, #68]	@ 0x44
 8108a26:	4b1f      	ldr	r3, [pc, #124]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 8108a28:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8108a2a:	4a1e      	ldr	r2, [pc, #120]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 8108a2c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8108a30:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8108a32:	683b      	ldr	r3, [r7, #0]
 8108a34:	2b00      	cmp	r3, #0
 8108a36:	d106      	bne.n	8108a46 <RCCEx_PLL3_Config+0x102>
 8108a38:	4b1a      	ldr	r3, [pc, #104]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 8108a3a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8108a3c:	4a19      	ldr	r2, [pc, #100]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 8108a3e:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8108a42:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8108a44:	e00f      	b.n	8108a66 <RCCEx_PLL3_Config+0x122>
 8108a46:	683b      	ldr	r3, [r7, #0]
 8108a48:	2b01      	cmp	r3, #1
 8108a4a:	d106      	bne.n	8108a5a <RCCEx_PLL3_Config+0x116>
 8108a4c:	4b15      	ldr	r3, [pc, #84]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 8108a4e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8108a50:	4a14      	ldr	r2, [pc, #80]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 8108a52:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8108a56:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8108a58:	e005      	b.n	8108a66 <RCCEx_PLL3_Config+0x122>
 8108a5a:	4b12      	ldr	r3, [pc, #72]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 8108a5c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8108a5e:	4a11      	ldr	r2, [pc, #68]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 8108a60:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8108a64:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8108a66:	4b0f      	ldr	r3, [pc, #60]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 8108a68:	681b      	ldr	r3, [r3, #0]
 8108a6a:	4a0e      	ldr	r2, [pc, #56]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 8108a6c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8108a70:	6013      	str	r3, [r2, #0]
 8108a72:	f7fc ff71 	bl	8105958 <HAL_GetTick>
 8108a76:	60b8      	str	r0, [r7, #8]
 8108a78:	e008      	b.n	8108a8c <RCCEx_PLL3_Config+0x148>
 8108a7a:	f7fc ff6d 	bl	8105958 <HAL_GetTick>
 8108a7e:	4602      	mov	r2, r0
 8108a80:	68bb      	ldr	r3, [r7, #8]
 8108a82:	1ad3      	subs	r3, r2, r3
 8108a84:	2b02      	cmp	r3, #2
 8108a86:	d901      	bls.n	8108a8c <RCCEx_PLL3_Config+0x148>
 8108a88:	2303      	movs	r3, #3
 8108a8a:	e006      	b.n	8108a9a <RCCEx_PLL3_Config+0x156>
 8108a8c:	4b05      	ldr	r3, [pc, #20]	@ (8108aa4 <RCCEx_PLL3_Config+0x160>)
 8108a8e:	681b      	ldr	r3, [r3, #0]
 8108a90:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8108a94:	2b00      	cmp	r3, #0
 8108a96:	d0f0      	beq.n	8108a7a <RCCEx_PLL3_Config+0x136>
 8108a98:	7bfb      	ldrb	r3, [r7, #15]
 8108a9a:	4618      	mov	r0, r3
 8108a9c:	3710      	adds	r7, #16
 8108a9e:	46bd      	mov	sp, r7
 8108aa0:	bd80      	pop	{r7, pc}
 8108aa2:	bf00      	nop
 8108aa4:	58024400 	.word	0x58024400

08108aa8 <HAL_TIM_Base_Init>:
 8108aa8:	b580      	push	{r7, lr}
 8108aaa:	b082      	sub	sp, #8
 8108aac:	af00      	add	r7, sp, #0
 8108aae:	6078      	str	r0, [r7, #4]
 8108ab0:	687b      	ldr	r3, [r7, #4]
 8108ab2:	2b00      	cmp	r3, #0
 8108ab4:	d101      	bne.n	8108aba <HAL_TIM_Base_Init+0x12>
 8108ab6:	2301      	movs	r3, #1
 8108ab8:	e049      	b.n	8108b4e <HAL_TIM_Base_Init+0xa6>
 8108aba:	687b      	ldr	r3, [r7, #4]
 8108abc:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8108ac0:	b2db      	uxtb	r3, r3
 8108ac2:	2b00      	cmp	r3, #0
 8108ac4:	d106      	bne.n	8108ad4 <HAL_TIM_Base_Init+0x2c>
 8108ac6:	687b      	ldr	r3, [r7, #4]
 8108ac8:	2200      	movs	r2, #0
 8108aca:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8108ace:	6878      	ldr	r0, [r7, #4]
 8108ad0:	f000 f841 	bl	8108b56 <HAL_TIM_Base_MspInit>
 8108ad4:	687b      	ldr	r3, [r7, #4]
 8108ad6:	2202      	movs	r2, #2
 8108ad8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8108adc:	687b      	ldr	r3, [r7, #4]
 8108ade:	681a      	ldr	r2, [r3, #0]
 8108ae0:	687b      	ldr	r3, [r7, #4]
 8108ae2:	3304      	adds	r3, #4
 8108ae4:	4619      	mov	r1, r3
 8108ae6:	4610      	mov	r0, r2
 8108ae8:	f000 f9e8 	bl	8108ebc <TIM_Base_SetConfig>
 8108aec:	687b      	ldr	r3, [r7, #4]
 8108aee:	2201      	movs	r2, #1
 8108af0:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8108af4:	687b      	ldr	r3, [r7, #4]
 8108af6:	2201      	movs	r2, #1
 8108af8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8108afc:	687b      	ldr	r3, [r7, #4]
 8108afe:	2201      	movs	r2, #1
 8108b00:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8108b04:	687b      	ldr	r3, [r7, #4]
 8108b06:	2201      	movs	r2, #1
 8108b08:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8108b0c:	687b      	ldr	r3, [r7, #4]
 8108b0e:	2201      	movs	r2, #1
 8108b10:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8108b14:	687b      	ldr	r3, [r7, #4]
 8108b16:	2201      	movs	r2, #1
 8108b18:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8108b1c:	687b      	ldr	r3, [r7, #4]
 8108b1e:	2201      	movs	r2, #1
 8108b20:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8108b24:	687b      	ldr	r3, [r7, #4]
 8108b26:	2201      	movs	r2, #1
 8108b28:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8108b2c:	687b      	ldr	r3, [r7, #4]
 8108b2e:	2201      	movs	r2, #1
 8108b30:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8108b34:	687b      	ldr	r3, [r7, #4]
 8108b36:	2201      	movs	r2, #1
 8108b38:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8108b3c:	687b      	ldr	r3, [r7, #4]
 8108b3e:	2201      	movs	r2, #1
 8108b40:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8108b44:	687b      	ldr	r3, [r7, #4]
 8108b46:	2201      	movs	r2, #1
 8108b48:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8108b4c:	2300      	movs	r3, #0
 8108b4e:	4618      	mov	r0, r3
 8108b50:	3708      	adds	r7, #8
 8108b52:	46bd      	mov	sp, r7
 8108b54:	bd80      	pop	{r7, pc}

08108b56 <HAL_TIM_Base_MspInit>:
 8108b56:	b480      	push	{r7}
 8108b58:	b083      	sub	sp, #12
 8108b5a:	af00      	add	r7, sp, #0
 8108b5c:	6078      	str	r0, [r7, #4]
 8108b5e:	bf00      	nop
 8108b60:	370c      	adds	r7, #12
 8108b62:	46bd      	mov	sp, r7
 8108b64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8108b68:	4770      	bx	lr
	...

08108b6c <HAL_TIM_Base_Start_IT>:
 8108b6c:	b480      	push	{r7}
 8108b6e:	b085      	sub	sp, #20
 8108b70:	af00      	add	r7, sp, #0
 8108b72:	6078      	str	r0, [r7, #4]
 8108b74:	687b      	ldr	r3, [r7, #4]
 8108b76:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8108b7a:	b2db      	uxtb	r3, r3
 8108b7c:	2b01      	cmp	r3, #1
 8108b7e:	d001      	beq.n	8108b84 <HAL_TIM_Base_Start_IT+0x18>
 8108b80:	2301      	movs	r3, #1
 8108b82:	e054      	b.n	8108c2e <HAL_TIM_Base_Start_IT+0xc2>
 8108b84:	687b      	ldr	r3, [r7, #4]
 8108b86:	2202      	movs	r2, #2
 8108b88:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8108b8c:	687b      	ldr	r3, [r7, #4]
 8108b8e:	681b      	ldr	r3, [r3, #0]
 8108b90:	68da      	ldr	r2, [r3, #12]
 8108b92:	687b      	ldr	r3, [r7, #4]
 8108b94:	681b      	ldr	r3, [r3, #0]
 8108b96:	f042 0201 	orr.w	r2, r2, #1
 8108b9a:	60da      	str	r2, [r3, #12]
 8108b9c:	687b      	ldr	r3, [r7, #4]
 8108b9e:	681b      	ldr	r3, [r3, #0]
 8108ba0:	4a26      	ldr	r2, [pc, #152]	@ (8108c3c <HAL_TIM_Base_Start_IT+0xd0>)
 8108ba2:	4293      	cmp	r3, r2
 8108ba4:	d022      	beq.n	8108bec <HAL_TIM_Base_Start_IT+0x80>
 8108ba6:	687b      	ldr	r3, [r7, #4]
 8108ba8:	681b      	ldr	r3, [r3, #0]
 8108baa:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8108bae:	d01d      	beq.n	8108bec <HAL_TIM_Base_Start_IT+0x80>
 8108bb0:	687b      	ldr	r3, [r7, #4]
 8108bb2:	681b      	ldr	r3, [r3, #0]
 8108bb4:	4a22      	ldr	r2, [pc, #136]	@ (8108c40 <HAL_TIM_Base_Start_IT+0xd4>)
 8108bb6:	4293      	cmp	r3, r2
 8108bb8:	d018      	beq.n	8108bec <HAL_TIM_Base_Start_IT+0x80>
 8108bba:	687b      	ldr	r3, [r7, #4]
 8108bbc:	681b      	ldr	r3, [r3, #0]
 8108bbe:	4a21      	ldr	r2, [pc, #132]	@ (8108c44 <HAL_TIM_Base_Start_IT+0xd8>)
 8108bc0:	4293      	cmp	r3, r2
 8108bc2:	d013      	beq.n	8108bec <HAL_TIM_Base_Start_IT+0x80>
 8108bc4:	687b      	ldr	r3, [r7, #4]
 8108bc6:	681b      	ldr	r3, [r3, #0]
 8108bc8:	4a1f      	ldr	r2, [pc, #124]	@ (8108c48 <HAL_TIM_Base_Start_IT+0xdc>)
 8108bca:	4293      	cmp	r3, r2
 8108bcc:	d00e      	beq.n	8108bec <HAL_TIM_Base_Start_IT+0x80>
 8108bce:	687b      	ldr	r3, [r7, #4]
 8108bd0:	681b      	ldr	r3, [r3, #0]
 8108bd2:	4a1e      	ldr	r2, [pc, #120]	@ (8108c4c <HAL_TIM_Base_Start_IT+0xe0>)
 8108bd4:	4293      	cmp	r3, r2
 8108bd6:	d009      	beq.n	8108bec <HAL_TIM_Base_Start_IT+0x80>
 8108bd8:	687b      	ldr	r3, [r7, #4]
 8108bda:	681b      	ldr	r3, [r3, #0]
 8108bdc:	4a1c      	ldr	r2, [pc, #112]	@ (8108c50 <HAL_TIM_Base_Start_IT+0xe4>)
 8108bde:	4293      	cmp	r3, r2
 8108be0:	d004      	beq.n	8108bec <HAL_TIM_Base_Start_IT+0x80>
 8108be2:	687b      	ldr	r3, [r7, #4]
 8108be4:	681b      	ldr	r3, [r3, #0]
 8108be6:	4a1b      	ldr	r2, [pc, #108]	@ (8108c54 <HAL_TIM_Base_Start_IT+0xe8>)
 8108be8:	4293      	cmp	r3, r2
 8108bea:	d115      	bne.n	8108c18 <HAL_TIM_Base_Start_IT+0xac>
 8108bec:	687b      	ldr	r3, [r7, #4]
 8108bee:	681b      	ldr	r3, [r3, #0]
 8108bf0:	689a      	ldr	r2, [r3, #8]
 8108bf2:	4b19      	ldr	r3, [pc, #100]	@ (8108c58 <HAL_TIM_Base_Start_IT+0xec>)
 8108bf4:	4013      	ands	r3, r2
 8108bf6:	60fb      	str	r3, [r7, #12]
 8108bf8:	68fb      	ldr	r3, [r7, #12]
 8108bfa:	2b06      	cmp	r3, #6
 8108bfc:	d015      	beq.n	8108c2a <HAL_TIM_Base_Start_IT+0xbe>
 8108bfe:	68fb      	ldr	r3, [r7, #12]
 8108c00:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8108c04:	d011      	beq.n	8108c2a <HAL_TIM_Base_Start_IT+0xbe>
 8108c06:	687b      	ldr	r3, [r7, #4]
 8108c08:	681b      	ldr	r3, [r3, #0]
 8108c0a:	681a      	ldr	r2, [r3, #0]
 8108c0c:	687b      	ldr	r3, [r7, #4]
 8108c0e:	681b      	ldr	r3, [r3, #0]
 8108c10:	f042 0201 	orr.w	r2, r2, #1
 8108c14:	601a      	str	r2, [r3, #0]
 8108c16:	e008      	b.n	8108c2a <HAL_TIM_Base_Start_IT+0xbe>
 8108c18:	687b      	ldr	r3, [r7, #4]
 8108c1a:	681b      	ldr	r3, [r3, #0]
 8108c1c:	681a      	ldr	r2, [r3, #0]
 8108c1e:	687b      	ldr	r3, [r7, #4]
 8108c20:	681b      	ldr	r3, [r3, #0]
 8108c22:	f042 0201 	orr.w	r2, r2, #1
 8108c26:	601a      	str	r2, [r3, #0]
 8108c28:	e000      	b.n	8108c2c <HAL_TIM_Base_Start_IT+0xc0>
 8108c2a:	bf00      	nop
 8108c2c:	2300      	movs	r3, #0
 8108c2e:	4618      	mov	r0, r3
 8108c30:	3714      	adds	r7, #20
 8108c32:	46bd      	mov	sp, r7
 8108c34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8108c38:	4770      	bx	lr
 8108c3a:	bf00      	nop
 8108c3c:	40010000 	.word	0x40010000
 8108c40:	40000400 	.word	0x40000400
 8108c44:	40000800 	.word	0x40000800
 8108c48:	40000c00 	.word	0x40000c00
 8108c4c:	40010400 	.word	0x40010400
 8108c50:	40001800 	.word	0x40001800
 8108c54:	40014000 	.word	0x40014000
 8108c58:	00010007 	.word	0x00010007

08108c5c <HAL_TIM_IRQHandler>:
 8108c5c:	b580      	push	{r7, lr}
 8108c5e:	b084      	sub	sp, #16
 8108c60:	af00      	add	r7, sp, #0
 8108c62:	6078      	str	r0, [r7, #4]
 8108c64:	687b      	ldr	r3, [r7, #4]
 8108c66:	681b      	ldr	r3, [r3, #0]
 8108c68:	68db      	ldr	r3, [r3, #12]
 8108c6a:	60fb      	str	r3, [r7, #12]
 8108c6c:	687b      	ldr	r3, [r7, #4]
 8108c6e:	681b      	ldr	r3, [r3, #0]
 8108c70:	691b      	ldr	r3, [r3, #16]
 8108c72:	60bb      	str	r3, [r7, #8]
 8108c74:	68bb      	ldr	r3, [r7, #8]
 8108c76:	f003 0302 	and.w	r3, r3, #2
 8108c7a:	2b00      	cmp	r3, #0
 8108c7c:	d020      	beq.n	8108cc0 <HAL_TIM_IRQHandler+0x64>
 8108c7e:	68fb      	ldr	r3, [r7, #12]
 8108c80:	f003 0302 	and.w	r3, r3, #2
 8108c84:	2b00      	cmp	r3, #0
 8108c86:	d01b      	beq.n	8108cc0 <HAL_TIM_IRQHandler+0x64>
 8108c88:	687b      	ldr	r3, [r7, #4]
 8108c8a:	681b      	ldr	r3, [r3, #0]
 8108c8c:	f06f 0202 	mvn.w	r2, #2
 8108c90:	611a      	str	r2, [r3, #16]
 8108c92:	687b      	ldr	r3, [r7, #4]
 8108c94:	2201      	movs	r2, #1
 8108c96:	771a      	strb	r2, [r3, #28]
 8108c98:	687b      	ldr	r3, [r7, #4]
 8108c9a:	681b      	ldr	r3, [r3, #0]
 8108c9c:	699b      	ldr	r3, [r3, #24]
 8108c9e:	f003 0303 	and.w	r3, r3, #3
 8108ca2:	2b00      	cmp	r3, #0
 8108ca4:	d003      	beq.n	8108cae <HAL_TIM_IRQHandler+0x52>
 8108ca6:	6878      	ldr	r0, [r7, #4]
 8108ca8:	f000 f8e9 	bl	8108e7e <HAL_TIM_IC_CaptureCallback>
 8108cac:	e005      	b.n	8108cba <HAL_TIM_IRQHandler+0x5e>
 8108cae:	6878      	ldr	r0, [r7, #4]
 8108cb0:	f000 f8db 	bl	8108e6a <HAL_TIM_OC_DelayElapsedCallback>
 8108cb4:	6878      	ldr	r0, [r7, #4]
 8108cb6:	f000 f8ec 	bl	8108e92 <HAL_TIM_PWM_PulseFinishedCallback>
 8108cba:	687b      	ldr	r3, [r7, #4]
 8108cbc:	2200      	movs	r2, #0
 8108cbe:	771a      	strb	r2, [r3, #28]
 8108cc0:	68bb      	ldr	r3, [r7, #8]
 8108cc2:	f003 0304 	and.w	r3, r3, #4
 8108cc6:	2b00      	cmp	r3, #0
 8108cc8:	d020      	beq.n	8108d0c <HAL_TIM_IRQHandler+0xb0>
 8108cca:	68fb      	ldr	r3, [r7, #12]
 8108ccc:	f003 0304 	and.w	r3, r3, #4
 8108cd0:	2b00      	cmp	r3, #0
 8108cd2:	d01b      	beq.n	8108d0c <HAL_TIM_IRQHandler+0xb0>
 8108cd4:	687b      	ldr	r3, [r7, #4]
 8108cd6:	681b      	ldr	r3, [r3, #0]
 8108cd8:	f06f 0204 	mvn.w	r2, #4
 8108cdc:	611a      	str	r2, [r3, #16]
 8108cde:	687b      	ldr	r3, [r7, #4]
 8108ce0:	2202      	movs	r2, #2
 8108ce2:	771a      	strb	r2, [r3, #28]
 8108ce4:	687b      	ldr	r3, [r7, #4]
 8108ce6:	681b      	ldr	r3, [r3, #0]
 8108ce8:	699b      	ldr	r3, [r3, #24]
 8108cea:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8108cee:	2b00      	cmp	r3, #0
 8108cf0:	d003      	beq.n	8108cfa <HAL_TIM_IRQHandler+0x9e>
 8108cf2:	6878      	ldr	r0, [r7, #4]
 8108cf4:	f000 f8c3 	bl	8108e7e <HAL_TIM_IC_CaptureCallback>
 8108cf8:	e005      	b.n	8108d06 <HAL_TIM_IRQHandler+0xaa>
 8108cfa:	6878      	ldr	r0, [r7, #4]
 8108cfc:	f000 f8b5 	bl	8108e6a <HAL_TIM_OC_DelayElapsedCallback>
 8108d00:	6878      	ldr	r0, [r7, #4]
 8108d02:	f000 f8c6 	bl	8108e92 <HAL_TIM_PWM_PulseFinishedCallback>
 8108d06:	687b      	ldr	r3, [r7, #4]
 8108d08:	2200      	movs	r2, #0
 8108d0a:	771a      	strb	r2, [r3, #28]
 8108d0c:	68bb      	ldr	r3, [r7, #8]
 8108d0e:	f003 0308 	and.w	r3, r3, #8
 8108d12:	2b00      	cmp	r3, #0
 8108d14:	d020      	beq.n	8108d58 <HAL_TIM_IRQHandler+0xfc>
 8108d16:	68fb      	ldr	r3, [r7, #12]
 8108d18:	f003 0308 	and.w	r3, r3, #8
 8108d1c:	2b00      	cmp	r3, #0
 8108d1e:	d01b      	beq.n	8108d58 <HAL_TIM_IRQHandler+0xfc>
 8108d20:	687b      	ldr	r3, [r7, #4]
 8108d22:	681b      	ldr	r3, [r3, #0]
 8108d24:	f06f 0208 	mvn.w	r2, #8
 8108d28:	611a      	str	r2, [r3, #16]
 8108d2a:	687b      	ldr	r3, [r7, #4]
 8108d2c:	2204      	movs	r2, #4
 8108d2e:	771a      	strb	r2, [r3, #28]
 8108d30:	687b      	ldr	r3, [r7, #4]
 8108d32:	681b      	ldr	r3, [r3, #0]
 8108d34:	69db      	ldr	r3, [r3, #28]
 8108d36:	f003 0303 	and.w	r3, r3, #3
 8108d3a:	2b00      	cmp	r3, #0
 8108d3c:	d003      	beq.n	8108d46 <HAL_TIM_IRQHandler+0xea>
 8108d3e:	6878      	ldr	r0, [r7, #4]
 8108d40:	f000 f89d 	bl	8108e7e <HAL_TIM_IC_CaptureCallback>
 8108d44:	e005      	b.n	8108d52 <HAL_TIM_IRQHandler+0xf6>
 8108d46:	6878      	ldr	r0, [r7, #4]
 8108d48:	f000 f88f 	bl	8108e6a <HAL_TIM_OC_DelayElapsedCallback>
 8108d4c:	6878      	ldr	r0, [r7, #4]
 8108d4e:	f000 f8a0 	bl	8108e92 <HAL_TIM_PWM_PulseFinishedCallback>
 8108d52:	687b      	ldr	r3, [r7, #4]
 8108d54:	2200      	movs	r2, #0
 8108d56:	771a      	strb	r2, [r3, #28]
 8108d58:	68bb      	ldr	r3, [r7, #8]
 8108d5a:	f003 0310 	and.w	r3, r3, #16
 8108d5e:	2b00      	cmp	r3, #0
 8108d60:	d020      	beq.n	8108da4 <HAL_TIM_IRQHandler+0x148>
 8108d62:	68fb      	ldr	r3, [r7, #12]
 8108d64:	f003 0310 	and.w	r3, r3, #16
 8108d68:	2b00      	cmp	r3, #0
 8108d6a:	d01b      	beq.n	8108da4 <HAL_TIM_IRQHandler+0x148>
 8108d6c:	687b      	ldr	r3, [r7, #4]
 8108d6e:	681b      	ldr	r3, [r3, #0]
 8108d70:	f06f 0210 	mvn.w	r2, #16
 8108d74:	611a      	str	r2, [r3, #16]
 8108d76:	687b      	ldr	r3, [r7, #4]
 8108d78:	2208      	movs	r2, #8
 8108d7a:	771a      	strb	r2, [r3, #28]
 8108d7c:	687b      	ldr	r3, [r7, #4]
 8108d7e:	681b      	ldr	r3, [r3, #0]
 8108d80:	69db      	ldr	r3, [r3, #28]
 8108d82:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8108d86:	2b00      	cmp	r3, #0
 8108d88:	d003      	beq.n	8108d92 <HAL_TIM_IRQHandler+0x136>
 8108d8a:	6878      	ldr	r0, [r7, #4]
 8108d8c:	f000 f877 	bl	8108e7e <HAL_TIM_IC_CaptureCallback>
 8108d90:	e005      	b.n	8108d9e <HAL_TIM_IRQHandler+0x142>
 8108d92:	6878      	ldr	r0, [r7, #4]
 8108d94:	f000 f869 	bl	8108e6a <HAL_TIM_OC_DelayElapsedCallback>
 8108d98:	6878      	ldr	r0, [r7, #4]
 8108d9a:	f000 f87a 	bl	8108e92 <HAL_TIM_PWM_PulseFinishedCallback>
 8108d9e:	687b      	ldr	r3, [r7, #4]
 8108da0:	2200      	movs	r2, #0
 8108da2:	771a      	strb	r2, [r3, #28]
 8108da4:	68bb      	ldr	r3, [r7, #8]
 8108da6:	f003 0301 	and.w	r3, r3, #1
 8108daa:	2b00      	cmp	r3, #0
 8108dac:	d00c      	beq.n	8108dc8 <HAL_TIM_IRQHandler+0x16c>
 8108dae:	68fb      	ldr	r3, [r7, #12]
 8108db0:	f003 0301 	and.w	r3, r3, #1
 8108db4:	2b00      	cmp	r3, #0
 8108db6:	d007      	beq.n	8108dc8 <HAL_TIM_IRQHandler+0x16c>
 8108db8:	687b      	ldr	r3, [r7, #4]
 8108dba:	681b      	ldr	r3, [r3, #0]
 8108dbc:	f06f 0201 	mvn.w	r2, #1
 8108dc0:	611a      	str	r2, [r3, #16]
 8108dc2:	6878      	ldr	r0, [r7, #4]
 8108dc4:	f7fc f978 	bl	81050b8 <HAL_TIM_PeriodElapsedCallback>
 8108dc8:	68bb      	ldr	r3, [r7, #8]
 8108dca:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8108dce:	2b00      	cmp	r3, #0
 8108dd0:	d104      	bne.n	8108ddc <HAL_TIM_IRQHandler+0x180>
 8108dd2:	68bb      	ldr	r3, [r7, #8]
 8108dd4:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8108dd8:	2b00      	cmp	r3, #0
 8108dda:	d00c      	beq.n	8108df6 <HAL_TIM_IRQHandler+0x19a>
 8108ddc:	68fb      	ldr	r3, [r7, #12]
 8108dde:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8108de2:	2b00      	cmp	r3, #0
 8108de4:	d007      	beq.n	8108df6 <HAL_TIM_IRQHandler+0x19a>
 8108de6:	687b      	ldr	r3, [r7, #4]
 8108de8:	681b      	ldr	r3, [r3, #0]
 8108dea:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 8108dee:	611a      	str	r2, [r3, #16]
 8108df0:	6878      	ldr	r0, [r7, #4]
 8108df2:	f000 f90d 	bl	8109010 <HAL_TIMEx_BreakCallback>
 8108df6:	68bb      	ldr	r3, [r7, #8]
 8108df8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8108dfc:	2b00      	cmp	r3, #0
 8108dfe:	d00c      	beq.n	8108e1a <HAL_TIM_IRQHandler+0x1be>
 8108e00:	68fb      	ldr	r3, [r7, #12]
 8108e02:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8108e06:	2b00      	cmp	r3, #0
 8108e08:	d007      	beq.n	8108e1a <HAL_TIM_IRQHandler+0x1be>
 8108e0a:	687b      	ldr	r3, [r7, #4]
 8108e0c:	681b      	ldr	r3, [r3, #0]
 8108e0e:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 8108e12:	611a      	str	r2, [r3, #16]
 8108e14:	6878      	ldr	r0, [r7, #4]
 8108e16:	f000 f905 	bl	8109024 <HAL_TIMEx_Break2Callback>
 8108e1a:	68bb      	ldr	r3, [r7, #8]
 8108e1c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8108e20:	2b00      	cmp	r3, #0
 8108e22:	d00c      	beq.n	8108e3e <HAL_TIM_IRQHandler+0x1e2>
 8108e24:	68fb      	ldr	r3, [r7, #12]
 8108e26:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8108e2a:	2b00      	cmp	r3, #0
 8108e2c:	d007      	beq.n	8108e3e <HAL_TIM_IRQHandler+0x1e2>
 8108e2e:	687b      	ldr	r3, [r7, #4]
 8108e30:	681b      	ldr	r3, [r3, #0]
 8108e32:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8108e36:	611a      	str	r2, [r3, #16]
 8108e38:	6878      	ldr	r0, [r7, #4]
 8108e3a:	f000 f834 	bl	8108ea6 <HAL_TIM_TriggerCallback>
 8108e3e:	68bb      	ldr	r3, [r7, #8]
 8108e40:	f003 0320 	and.w	r3, r3, #32
 8108e44:	2b00      	cmp	r3, #0
 8108e46:	d00c      	beq.n	8108e62 <HAL_TIM_IRQHandler+0x206>
 8108e48:	68fb      	ldr	r3, [r7, #12]
 8108e4a:	f003 0320 	and.w	r3, r3, #32
 8108e4e:	2b00      	cmp	r3, #0
 8108e50:	d007      	beq.n	8108e62 <HAL_TIM_IRQHandler+0x206>
 8108e52:	687b      	ldr	r3, [r7, #4]
 8108e54:	681b      	ldr	r3, [r3, #0]
 8108e56:	f06f 0220 	mvn.w	r2, #32
 8108e5a:	611a      	str	r2, [r3, #16]
 8108e5c:	6878      	ldr	r0, [r7, #4]
 8108e5e:	f000 f8cd 	bl	8108ffc <HAL_TIMEx_CommutCallback>
 8108e62:	bf00      	nop
 8108e64:	3710      	adds	r7, #16
 8108e66:	46bd      	mov	sp, r7
 8108e68:	bd80      	pop	{r7, pc}

08108e6a <HAL_TIM_OC_DelayElapsedCallback>:
 8108e6a:	b480      	push	{r7}
 8108e6c:	b083      	sub	sp, #12
 8108e6e:	af00      	add	r7, sp, #0
 8108e70:	6078      	str	r0, [r7, #4]
 8108e72:	bf00      	nop
 8108e74:	370c      	adds	r7, #12
 8108e76:	46bd      	mov	sp, r7
 8108e78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8108e7c:	4770      	bx	lr

08108e7e <HAL_TIM_IC_CaptureCallback>:
 8108e7e:	b480      	push	{r7}
 8108e80:	b083      	sub	sp, #12
 8108e82:	af00      	add	r7, sp, #0
 8108e84:	6078      	str	r0, [r7, #4]
 8108e86:	bf00      	nop
 8108e88:	370c      	adds	r7, #12
 8108e8a:	46bd      	mov	sp, r7
 8108e8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8108e90:	4770      	bx	lr

08108e92 <HAL_TIM_PWM_PulseFinishedCallback>:
 8108e92:	b480      	push	{r7}
 8108e94:	b083      	sub	sp, #12
 8108e96:	af00      	add	r7, sp, #0
 8108e98:	6078      	str	r0, [r7, #4]
 8108e9a:	bf00      	nop
 8108e9c:	370c      	adds	r7, #12
 8108e9e:	46bd      	mov	sp, r7
 8108ea0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8108ea4:	4770      	bx	lr

08108ea6 <HAL_TIM_TriggerCallback>:
 8108ea6:	b480      	push	{r7}
 8108ea8:	b083      	sub	sp, #12
 8108eaa:	af00      	add	r7, sp, #0
 8108eac:	6078      	str	r0, [r7, #4]
 8108eae:	bf00      	nop
 8108eb0:	370c      	adds	r7, #12
 8108eb2:	46bd      	mov	sp, r7
 8108eb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8108eb8:	4770      	bx	lr
	...

08108ebc <TIM_Base_SetConfig>:
 8108ebc:	b480      	push	{r7}
 8108ebe:	b085      	sub	sp, #20
 8108ec0:	af00      	add	r7, sp, #0
 8108ec2:	6078      	str	r0, [r7, #4]
 8108ec4:	6039      	str	r1, [r7, #0]
 8108ec6:	687b      	ldr	r3, [r7, #4]
 8108ec8:	681b      	ldr	r3, [r3, #0]
 8108eca:	60fb      	str	r3, [r7, #12]
 8108ecc:	687b      	ldr	r3, [r7, #4]
 8108ece:	4a43      	ldr	r2, [pc, #268]	@ (8108fdc <TIM_Base_SetConfig+0x120>)
 8108ed0:	4293      	cmp	r3, r2
 8108ed2:	d013      	beq.n	8108efc <TIM_Base_SetConfig+0x40>
 8108ed4:	687b      	ldr	r3, [r7, #4]
 8108ed6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8108eda:	d00f      	beq.n	8108efc <TIM_Base_SetConfig+0x40>
 8108edc:	687b      	ldr	r3, [r7, #4]
 8108ede:	4a40      	ldr	r2, [pc, #256]	@ (8108fe0 <TIM_Base_SetConfig+0x124>)
 8108ee0:	4293      	cmp	r3, r2
 8108ee2:	d00b      	beq.n	8108efc <TIM_Base_SetConfig+0x40>
 8108ee4:	687b      	ldr	r3, [r7, #4]
 8108ee6:	4a3f      	ldr	r2, [pc, #252]	@ (8108fe4 <TIM_Base_SetConfig+0x128>)
 8108ee8:	4293      	cmp	r3, r2
 8108eea:	d007      	beq.n	8108efc <TIM_Base_SetConfig+0x40>
 8108eec:	687b      	ldr	r3, [r7, #4]
 8108eee:	4a3e      	ldr	r2, [pc, #248]	@ (8108fe8 <TIM_Base_SetConfig+0x12c>)
 8108ef0:	4293      	cmp	r3, r2
 8108ef2:	d003      	beq.n	8108efc <TIM_Base_SetConfig+0x40>
 8108ef4:	687b      	ldr	r3, [r7, #4]
 8108ef6:	4a3d      	ldr	r2, [pc, #244]	@ (8108fec <TIM_Base_SetConfig+0x130>)
 8108ef8:	4293      	cmp	r3, r2
 8108efa:	d108      	bne.n	8108f0e <TIM_Base_SetConfig+0x52>
 8108efc:	68fb      	ldr	r3, [r7, #12]
 8108efe:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8108f02:	60fb      	str	r3, [r7, #12]
 8108f04:	683b      	ldr	r3, [r7, #0]
 8108f06:	685b      	ldr	r3, [r3, #4]
 8108f08:	68fa      	ldr	r2, [r7, #12]
 8108f0a:	4313      	orrs	r3, r2
 8108f0c:	60fb      	str	r3, [r7, #12]
 8108f0e:	687b      	ldr	r3, [r7, #4]
 8108f10:	4a32      	ldr	r2, [pc, #200]	@ (8108fdc <TIM_Base_SetConfig+0x120>)
 8108f12:	4293      	cmp	r3, r2
 8108f14:	d01f      	beq.n	8108f56 <TIM_Base_SetConfig+0x9a>
 8108f16:	687b      	ldr	r3, [r7, #4]
 8108f18:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8108f1c:	d01b      	beq.n	8108f56 <TIM_Base_SetConfig+0x9a>
 8108f1e:	687b      	ldr	r3, [r7, #4]
 8108f20:	4a2f      	ldr	r2, [pc, #188]	@ (8108fe0 <TIM_Base_SetConfig+0x124>)
 8108f22:	4293      	cmp	r3, r2
 8108f24:	d017      	beq.n	8108f56 <TIM_Base_SetConfig+0x9a>
 8108f26:	687b      	ldr	r3, [r7, #4]
 8108f28:	4a2e      	ldr	r2, [pc, #184]	@ (8108fe4 <TIM_Base_SetConfig+0x128>)
 8108f2a:	4293      	cmp	r3, r2
 8108f2c:	d013      	beq.n	8108f56 <TIM_Base_SetConfig+0x9a>
 8108f2e:	687b      	ldr	r3, [r7, #4]
 8108f30:	4a2d      	ldr	r2, [pc, #180]	@ (8108fe8 <TIM_Base_SetConfig+0x12c>)
 8108f32:	4293      	cmp	r3, r2
 8108f34:	d00f      	beq.n	8108f56 <TIM_Base_SetConfig+0x9a>
 8108f36:	687b      	ldr	r3, [r7, #4]
 8108f38:	4a2c      	ldr	r2, [pc, #176]	@ (8108fec <TIM_Base_SetConfig+0x130>)
 8108f3a:	4293      	cmp	r3, r2
 8108f3c:	d00b      	beq.n	8108f56 <TIM_Base_SetConfig+0x9a>
 8108f3e:	687b      	ldr	r3, [r7, #4]
 8108f40:	4a2b      	ldr	r2, [pc, #172]	@ (8108ff0 <TIM_Base_SetConfig+0x134>)
 8108f42:	4293      	cmp	r3, r2
 8108f44:	d007      	beq.n	8108f56 <TIM_Base_SetConfig+0x9a>
 8108f46:	687b      	ldr	r3, [r7, #4]
 8108f48:	4a2a      	ldr	r2, [pc, #168]	@ (8108ff4 <TIM_Base_SetConfig+0x138>)
 8108f4a:	4293      	cmp	r3, r2
 8108f4c:	d003      	beq.n	8108f56 <TIM_Base_SetConfig+0x9a>
 8108f4e:	687b      	ldr	r3, [r7, #4]
 8108f50:	4a29      	ldr	r2, [pc, #164]	@ (8108ff8 <TIM_Base_SetConfig+0x13c>)
 8108f52:	4293      	cmp	r3, r2
 8108f54:	d108      	bne.n	8108f68 <TIM_Base_SetConfig+0xac>
 8108f56:	68fb      	ldr	r3, [r7, #12]
 8108f58:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8108f5c:	60fb      	str	r3, [r7, #12]
 8108f5e:	683b      	ldr	r3, [r7, #0]
 8108f60:	68db      	ldr	r3, [r3, #12]
 8108f62:	68fa      	ldr	r2, [r7, #12]
 8108f64:	4313      	orrs	r3, r2
 8108f66:	60fb      	str	r3, [r7, #12]
 8108f68:	68fb      	ldr	r3, [r7, #12]
 8108f6a:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8108f6e:	683b      	ldr	r3, [r7, #0]
 8108f70:	695b      	ldr	r3, [r3, #20]
 8108f72:	4313      	orrs	r3, r2
 8108f74:	60fb      	str	r3, [r7, #12]
 8108f76:	683b      	ldr	r3, [r7, #0]
 8108f78:	689a      	ldr	r2, [r3, #8]
 8108f7a:	687b      	ldr	r3, [r7, #4]
 8108f7c:	62da      	str	r2, [r3, #44]	@ 0x2c
 8108f7e:	683b      	ldr	r3, [r7, #0]
 8108f80:	681a      	ldr	r2, [r3, #0]
 8108f82:	687b      	ldr	r3, [r7, #4]
 8108f84:	629a      	str	r2, [r3, #40]	@ 0x28
 8108f86:	687b      	ldr	r3, [r7, #4]
 8108f88:	4a14      	ldr	r2, [pc, #80]	@ (8108fdc <TIM_Base_SetConfig+0x120>)
 8108f8a:	4293      	cmp	r3, r2
 8108f8c:	d00f      	beq.n	8108fae <TIM_Base_SetConfig+0xf2>
 8108f8e:	687b      	ldr	r3, [r7, #4]
 8108f90:	4a16      	ldr	r2, [pc, #88]	@ (8108fec <TIM_Base_SetConfig+0x130>)
 8108f92:	4293      	cmp	r3, r2
 8108f94:	d00b      	beq.n	8108fae <TIM_Base_SetConfig+0xf2>
 8108f96:	687b      	ldr	r3, [r7, #4]
 8108f98:	4a15      	ldr	r2, [pc, #84]	@ (8108ff0 <TIM_Base_SetConfig+0x134>)
 8108f9a:	4293      	cmp	r3, r2
 8108f9c:	d007      	beq.n	8108fae <TIM_Base_SetConfig+0xf2>
 8108f9e:	687b      	ldr	r3, [r7, #4]
 8108fa0:	4a14      	ldr	r2, [pc, #80]	@ (8108ff4 <TIM_Base_SetConfig+0x138>)
 8108fa2:	4293      	cmp	r3, r2
 8108fa4:	d003      	beq.n	8108fae <TIM_Base_SetConfig+0xf2>
 8108fa6:	687b      	ldr	r3, [r7, #4]
 8108fa8:	4a13      	ldr	r2, [pc, #76]	@ (8108ff8 <TIM_Base_SetConfig+0x13c>)
 8108faa:	4293      	cmp	r3, r2
 8108fac:	d103      	bne.n	8108fb6 <TIM_Base_SetConfig+0xfa>
 8108fae:	683b      	ldr	r3, [r7, #0]
 8108fb0:	691a      	ldr	r2, [r3, #16]
 8108fb2:	687b      	ldr	r3, [r7, #4]
 8108fb4:	631a      	str	r2, [r3, #48]	@ 0x30
 8108fb6:	687b      	ldr	r3, [r7, #4]
 8108fb8:	681b      	ldr	r3, [r3, #0]
 8108fba:	f043 0204 	orr.w	r2, r3, #4
 8108fbe:	687b      	ldr	r3, [r7, #4]
 8108fc0:	601a      	str	r2, [r3, #0]
 8108fc2:	687b      	ldr	r3, [r7, #4]
 8108fc4:	2201      	movs	r2, #1
 8108fc6:	615a      	str	r2, [r3, #20]
 8108fc8:	687b      	ldr	r3, [r7, #4]
 8108fca:	68fa      	ldr	r2, [r7, #12]
 8108fcc:	601a      	str	r2, [r3, #0]
 8108fce:	bf00      	nop
 8108fd0:	3714      	adds	r7, #20
 8108fd2:	46bd      	mov	sp, r7
 8108fd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8108fd8:	4770      	bx	lr
 8108fda:	bf00      	nop
 8108fdc:	40010000 	.word	0x40010000
 8108fe0:	40000400 	.word	0x40000400
 8108fe4:	40000800 	.word	0x40000800
 8108fe8:	40000c00 	.word	0x40000c00
 8108fec:	40010400 	.word	0x40010400
 8108ff0:	40014000 	.word	0x40014000
 8108ff4:	40014400 	.word	0x40014400
 8108ff8:	40014800 	.word	0x40014800

08108ffc <HAL_TIMEx_CommutCallback>:
 8108ffc:	b480      	push	{r7}
 8108ffe:	b083      	sub	sp, #12
 8109000:	af00      	add	r7, sp, #0
 8109002:	6078      	str	r0, [r7, #4]
 8109004:	bf00      	nop
 8109006:	370c      	adds	r7, #12
 8109008:	46bd      	mov	sp, r7
 810900a:	f85d 7b04 	ldr.w	r7, [sp], #4
 810900e:	4770      	bx	lr

08109010 <HAL_TIMEx_BreakCallback>:
 8109010:	b480      	push	{r7}
 8109012:	b083      	sub	sp, #12
 8109014:	af00      	add	r7, sp, #0
 8109016:	6078      	str	r0, [r7, #4]
 8109018:	bf00      	nop
 810901a:	370c      	adds	r7, #12
 810901c:	46bd      	mov	sp, r7
 810901e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8109022:	4770      	bx	lr

08109024 <HAL_TIMEx_Break2Callback>:
 8109024:	b480      	push	{r7}
 8109026:	b083      	sub	sp, #12
 8109028:	af00      	add	r7, sp, #0
 810902a:	6078      	str	r0, [r7, #4]
 810902c:	bf00      	nop
 810902e:	370c      	adds	r7, #12
 8109030:	46bd      	mov	sp, r7
 8109032:	f85d 7b04 	ldr.w	r7, [sp], #4
 8109036:	4770      	bx	lr

08109038 <HAL_UART_Init>:
 8109038:	b580      	push	{r7, lr}
 810903a:	b082      	sub	sp, #8
 810903c:	af00      	add	r7, sp, #0
 810903e:	6078      	str	r0, [r7, #4]
 8109040:	687b      	ldr	r3, [r7, #4]
 8109042:	2b00      	cmp	r3, #0
 8109044:	d101      	bne.n	810904a <HAL_UART_Init+0x12>
 8109046:	2301      	movs	r3, #1
 8109048:	e042      	b.n	81090d0 <HAL_UART_Init+0x98>
 810904a:	687b      	ldr	r3, [r7, #4]
 810904c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8109050:	2b00      	cmp	r3, #0
 8109052:	d106      	bne.n	8109062 <HAL_UART_Init+0x2a>
 8109054:	687b      	ldr	r3, [r7, #4]
 8109056:	2200      	movs	r2, #0
 8109058:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 810905c:	6878      	ldr	r0, [r7, #4]
 810905e:	f7fc f961 	bl	8105324 <HAL_UART_MspInit>
 8109062:	687b      	ldr	r3, [r7, #4]
 8109064:	2224      	movs	r2, #36	@ 0x24
 8109066:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 810906a:	687b      	ldr	r3, [r7, #4]
 810906c:	681b      	ldr	r3, [r3, #0]
 810906e:	681a      	ldr	r2, [r3, #0]
 8109070:	687b      	ldr	r3, [r7, #4]
 8109072:	681b      	ldr	r3, [r3, #0]
 8109074:	f022 0201 	bic.w	r2, r2, #1
 8109078:	601a      	str	r2, [r3, #0]
 810907a:	687b      	ldr	r3, [r7, #4]
 810907c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 810907e:	2b00      	cmp	r3, #0
 8109080:	d002      	beq.n	8109088 <HAL_UART_Init+0x50>
 8109082:	6878      	ldr	r0, [r7, #4]
 8109084:	f001 fa60 	bl	810a548 <UART_AdvFeatureConfig>
 8109088:	6878      	ldr	r0, [r7, #4]
 810908a:	f000 fcf5 	bl	8109a78 <UART_SetConfig>
 810908e:	4603      	mov	r3, r0
 8109090:	2b01      	cmp	r3, #1
 8109092:	d101      	bne.n	8109098 <HAL_UART_Init+0x60>
 8109094:	2301      	movs	r3, #1
 8109096:	e01b      	b.n	81090d0 <HAL_UART_Init+0x98>
 8109098:	687b      	ldr	r3, [r7, #4]
 810909a:	681b      	ldr	r3, [r3, #0]
 810909c:	685a      	ldr	r2, [r3, #4]
 810909e:	687b      	ldr	r3, [r7, #4]
 81090a0:	681b      	ldr	r3, [r3, #0]
 81090a2:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 81090a6:	605a      	str	r2, [r3, #4]
 81090a8:	687b      	ldr	r3, [r7, #4]
 81090aa:	681b      	ldr	r3, [r3, #0]
 81090ac:	689a      	ldr	r2, [r3, #8]
 81090ae:	687b      	ldr	r3, [r7, #4]
 81090b0:	681b      	ldr	r3, [r3, #0]
 81090b2:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 81090b6:	609a      	str	r2, [r3, #8]
 81090b8:	687b      	ldr	r3, [r7, #4]
 81090ba:	681b      	ldr	r3, [r3, #0]
 81090bc:	681a      	ldr	r2, [r3, #0]
 81090be:	687b      	ldr	r3, [r7, #4]
 81090c0:	681b      	ldr	r3, [r3, #0]
 81090c2:	f042 0201 	orr.w	r2, r2, #1
 81090c6:	601a      	str	r2, [r3, #0]
 81090c8:	6878      	ldr	r0, [r7, #4]
 81090ca:	f001 fadf 	bl	810a68c <UART_CheckIdleState>
 81090ce:	4603      	mov	r3, r0
 81090d0:	4618      	mov	r0, r3
 81090d2:	3708      	adds	r7, #8
 81090d4:	46bd      	mov	sp, r7
 81090d6:	bd80      	pop	{r7, pc}

081090d8 <HAL_UART_Transmit>:
 81090d8:	b580      	push	{r7, lr}
 81090da:	b08a      	sub	sp, #40	@ 0x28
 81090dc:	af02      	add	r7, sp, #8
 81090de:	60f8      	str	r0, [r7, #12]
 81090e0:	60b9      	str	r1, [r7, #8]
 81090e2:	603b      	str	r3, [r7, #0]
 81090e4:	4613      	mov	r3, r2
 81090e6:	80fb      	strh	r3, [r7, #6]
 81090e8:	68fb      	ldr	r3, [r7, #12]
 81090ea:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 81090ee:	2b20      	cmp	r3, #32
 81090f0:	d17b      	bne.n	81091ea <HAL_UART_Transmit+0x112>
 81090f2:	68bb      	ldr	r3, [r7, #8]
 81090f4:	2b00      	cmp	r3, #0
 81090f6:	d002      	beq.n	81090fe <HAL_UART_Transmit+0x26>
 81090f8:	88fb      	ldrh	r3, [r7, #6]
 81090fa:	2b00      	cmp	r3, #0
 81090fc:	d101      	bne.n	8109102 <HAL_UART_Transmit+0x2a>
 81090fe:	2301      	movs	r3, #1
 8109100:	e074      	b.n	81091ec <HAL_UART_Transmit+0x114>
 8109102:	68fb      	ldr	r3, [r7, #12]
 8109104:	2200      	movs	r2, #0
 8109106:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 810910a:	68fb      	ldr	r3, [r7, #12]
 810910c:	2221      	movs	r2, #33	@ 0x21
 810910e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8109112:	f7fc fc21 	bl	8105958 <HAL_GetTick>
 8109116:	6178      	str	r0, [r7, #20]
 8109118:	68fb      	ldr	r3, [r7, #12]
 810911a:	88fa      	ldrh	r2, [r7, #6]
 810911c:	f8a3 2054 	strh.w	r2, [r3, #84]	@ 0x54
 8109120:	68fb      	ldr	r3, [r7, #12]
 8109122:	88fa      	ldrh	r2, [r7, #6]
 8109124:	f8a3 2056 	strh.w	r2, [r3, #86]	@ 0x56
 8109128:	68fb      	ldr	r3, [r7, #12]
 810912a:	689b      	ldr	r3, [r3, #8]
 810912c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8109130:	d108      	bne.n	8109144 <HAL_UART_Transmit+0x6c>
 8109132:	68fb      	ldr	r3, [r7, #12]
 8109134:	691b      	ldr	r3, [r3, #16]
 8109136:	2b00      	cmp	r3, #0
 8109138:	d104      	bne.n	8109144 <HAL_UART_Transmit+0x6c>
 810913a:	2300      	movs	r3, #0
 810913c:	61fb      	str	r3, [r7, #28]
 810913e:	68bb      	ldr	r3, [r7, #8]
 8109140:	61bb      	str	r3, [r7, #24]
 8109142:	e003      	b.n	810914c <HAL_UART_Transmit+0x74>
 8109144:	68bb      	ldr	r3, [r7, #8]
 8109146:	61fb      	str	r3, [r7, #28]
 8109148:	2300      	movs	r3, #0
 810914a:	61bb      	str	r3, [r7, #24]
 810914c:	e030      	b.n	81091b0 <HAL_UART_Transmit+0xd8>
 810914e:	683b      	ldr	r3, [r7, #0]
 8109150:	9300      	str	r3, [sp, #0]
 8109152:	697b      	ldr	r3, [r7, #20]
 8109154:	2200      	movs	r2, #0
 8109156:	2180      	movs	r1, #128	@ 0x80
 8109158:	68f8      	ldr	r0, [r7, #12]
 810915a:	f001 fb41 	bl	810a7e0 <UART_WaitOnFlagUntilTimeout>
 810915e:	4603      	mov	r3, r0
 8109160:	2b00      	cmp	r3, #0
 8109162:	d005      	beq.n	8109170 <HAL_UART_Transmit+0x98>
 8109164:	68fb      	ldr	r3, [r7, #12]
 8109166:	2220      	movs	r2, #32
 8109168:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 810916c:	2303      	movs	r3, #3
 810916e:	e03d      	b.n	81091ec <HAL_UART_Transmit+0x114>
 8109170:	69fb      	ldr	r3, [r7, #28]
 8109172:	2b00      	cmp	r3, #0
 8109174:	d10b      	bne.n	810918e <HAL_UART_Transmit+0xb6>
 8109176:	69bb      	ldr	r3, [r7, #24]
 8109178:	881b      	ldrh	r3, [r3, #0]
 810917a:	461a      	mov	r2, r3
 810917c:	68fb      	ldr	r3, [r7, #12]
 810917e:	681b      	ldr	r3, [r3, #0]
 8109180:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8109184:	629a      	str	r2, [r3, #40]	@ 0x28
 8109186:	69bb      	ldr	r3, [r7, #24]
 8109188:	3302      	adds	r3, #2
 810918a:	61bb      	str	r3, [r7, #24]
 810918c:	e007      	b.n	810919e <HAL_UART_Transmit+0xc6>
 810918e:	69fb      	ldr	r3, [r7, #28]
 8109190:	781a      	ldrb	r2, [r3, #0]
 8109192:	68fb      	ldr	r3, [r7, #12]
 8109194:	681b      	ldr	r3, [r3, #0]
 8109196:	629a      	str	r2, [r3, #40]	@ 0x28
 8109198:	69fb      	ldr	r3, [r7, #28]
 810919a:	3301      	adds	r3, #1
 810919c:	61fb      	str	r3, [r7, #28]
 810919e:	68fb      	ldr	r3, [r7, #12]
 81091a0:	f8b3 3056 	ldrh.w	r3, [r3, #86]	@ 0x56
 81091a4:	b29b      	uxth	r3, r3
 81091a6:	3b01      	subs	r3, #1
 81091a8:	b29a      	uxth	r2, r3
 81091aa:	68fb      	ldr	r3, [r7, #12]
 81091ac:	f8a3 2056 	strh.w	r2, [r3, #86]	@ 0x56
 81091b0:	68fb      	ldr	r3, [r7, #12]
 81091b2:	f8b3 3056 	ldrh.w	r3, [r3, #86]	@ 0x56
 81091b6:	b29b      	uxth	r3, r3
 81091b8:	2b00      	cmp	r3, #0
 81091ba:	d1c8      	bne.n	810914e <HAL_UART_Transmit+0x76>
 81091bc:	683b      	ldr	r3, [r7, #0]
 81091be:	9300      	str	r3, [sp, #0]
 81091c0:	697b      	ldr	r3, [r7, #20]
 81091c2:	2200      	movs	r2, #0
 81091c4:	2140      	movs	r1, #64	@ 0x40
 81091c6:	68f8      	ldr	r0, [r7, #12]
 81091c8:	f001 fb0a 	bl	810a7e0 <UART_WaitOnFlagUntilTimeout>
 81091cc:	4603      	mov	r3, r0
 81091ce:	2b00      	cmp	r3, #0
 81091d0:	d005      	beq.n	81091de <HAL_UART_Transmit+0x106>
 81091d2:	68fb      	ldr	r3, [r7, #12]
 81091d4:	2220      	movs	r2, #32
 81091d6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 81091da:	2303      	movs	r3, #3
 81091dc:	e006      	b.n	81091ec <HAL_UART_Transmit+0x114>
 81091de:	68fb      	ldr	r3, [r7, #12]
 81091e0:	2220      	movs	r2, #32
 81091e2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 81091e6:	2300      	movs	r3, #0
 81091e8:	e000      	b.n	81091ec <HAL_UART_Transmit+0x114>
 81091ea:	2302      	movs	r3, #2
 81091ec:	4618      	mov	r0, r3
 81091ee:	3720      	adds	r7, #32
 81091f0:	46bd      	mov	sp, r7
 81091f2:	bd80      	pop	{r7, pc}

081091f4 <HAL_UART_Receive_IT>:
 81091f4:	b580      	push	{r7, lr}
 81091f6:	b08a      	sub	sp, #40	@ 0x28
 81091f8:	af00      	add	r7, sp, #0
 81091fa:	60f8      	str	r0, [r7, #12]
 81091fc:	60b9      	str	r1, [r7, #8]
 81091fe:	4613      	mov	r3, r2
 8109200:	80fb      	strh	r3, [r7, #6]
 8109202:	68fb      	ldr	r3, [r7, #12]
 8109204:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8109208:	2b20      	cmp	r3, #32
 810920a:	d137      	bne.n	810927c <HAL_UART_Receive_IT+0x88>
 810920c:	68bb      	ldr	r3, [r7, #8]
 810920e:	2b00      	cmp	r3, #0
 8109210:	d002      	beq.n	8109218 <HAL_UART_Receive_IT+0x24>
 8109212:	88fb      	ldrh	r3, [r7, #6]
 8109214:	2b00      	cmp	r3, #0
 8109216:	d101      	bne.n	810921c <HAL_UART_Receive_IT+0x28>
 8109218:	2301      	movs	r3, #1
 810921a:	e030      	b.n	810927e <HAL_UART_Receive_IT+0x8a>
 810921c:	68fb      	ldr	r3, [r7, #12]
 810921e:	2200      	movs	r2, #0
 8109220:	66da      	str	r2, [r3, #108]	@ 0x6c
 8109222:	68fb      	ldr	r3, [r7, #12]
 8109224:	681b      	ldr	r3, [r3, #0]
 8109226:	4a18      	ldr	r2, [pc, #96]	@ (8109288 <HAL_UART_Receive_IT+0x94>)
 8109228:	4293      	cmp	r3, r2
 810922a:	d01f      	beq.n	810926c <HAL_UART_Receive_IT+0x78>
 810922c:	68fb      	ldr	r3, [r7, #12]
 810922e:	681b      	ldr	r3, [r3, #0]
 8109230:	685b      	ldr	r3, [r3, #4]
 8109232:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8109236:	2b00      	cmp	r3, #0
 8109238:	d018      	beq.n	810926c <HAL_UART_Receive_IT+0x78>
 810923a:	68fb      	ldr	r3, [r7, #12]
 810923c:	681b      	ldr	r3, [r3, #0]
 810923e:	617b      	str	r3, [r7, #20]
 8109240:	697b      	ldr	r3, [r7, #20]
 8109242:	e853 3f00 	ldrex	r3, [r3]
 8109246:	613b      	str	r3, [r7, #16]
 8109248:	693b      	ldr	r3, [r7, #16]
 810924a:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 810924e:	627b      	str	r3, [r7, #36]	@ 0x24
 8109250:	68fb      	ldr	r3, [r7, #12]
 8109252:	681b      	ldr	r3, [r3, #0]
 8109254:	461a      	mov	r2, r3
 8109256:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8109258:	623b      	str	r3, [r7, #32]
 810925a:	61fa      	str	r2, [r7, #28]
 810925c:	69f9      	ldr	r1, [r7, #28]
 810925e:	6a3a      	ldr	r2, [r7, #32]
 8109260:	e841 2300 	strex	r3, r2, [r1]
 8109264:	61bb      	str	r3, [r7, #24]
 8109266:	69bb      	ldr	r3, [r7, #24]
 8109268:	2b00      	cmp	r3, #0
 810926a:	d1e6      	bne.n	810923a <HAL_UART_Receive_IT+0x46>
 810926c:	88fb      	ldrh	r3, [r7, #6]
 810926e:	461a      	mov	r2, r3
 8109270:	68b9      	ldr	r1, [r7, #8]
 8109272:	68f8      	ldr	r0, [r7, #12]
 8109274:	f001 fb22 	bl	810a8bc <UART_Start_Receive_IT>
 8109278:	4603      	mov	r3, r0
 810927a:	e000      	b.n	810927e <HAL_UART_Receive_IT+0x8a>
 810927c:	2302      	movs	r3, #2
 810927e:	4618      	mov	r0, r3
 8109280:	3728      	adds	r7, #40	@ 0x28
 8109282:	46bd      	mov	sp, r7
 8109284:	bd80      	pop	{r7, pc}
 8109286:	bf00      	nop
 8109288:	58000c00 	.word	0x58000c00

0810928c <HAL_UART_IRQHandler>:
 810928c:	b580      	push	{r7, lr}
 810928e:	b0ba      	sub	sp, #232	@ 0xe8
 8109290:	af00      	add	r7, sp, #0
 8109292:	6078      	str	r0, [r7, #4]
 8109294:	687b      	ldr	r3, [r7, #4]
 8109296:	681b      	ldr	r3, [r3, #0]
 8109298:	69db      	ldr	r3, [r3, #28]
 810929a:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 810929e:	687b      	ldr	r3, [r7, #4]
 81092a0:	681b      	ldr	r3, [r3, #0]
 81092a2:	681b      	ldr	r3, [r3, #0]
 81092a4:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 81092a8:	687b      	ldr	r3, [r7, #4]
 81092aa:	681b      	ldr	r3, [r3, #0]
 81092ac:	689b      	ldr	r3, [r3, #8]
 81092ae:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 81092b2:	f8d7 20e4 	ldr.w	r2, [r7, #228]	@ 0xe4
 81092b6:	f640 030f 	movw	r3, #2063	@ 0x80f
 81092ba:	4013      	ands	r3, r2
 81092bc:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 81092c0:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 81092c4:	2b00      	cmp	r3, #0
 81092c6:	d11b      	bne.n	8109300 <HAL_UART_IRQHandler+0x74>
 81092c8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 81092cc:	f003 0320 	and.w	r3, r3, #32
 81092d0:	2b00      	cmp	r3, #0
 81092d2:	d015      	beq.n	8109300 <HAL_UART_IRQHandler+0x74>
 81092d4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 81092d8:	f003 0320 	and.w	r3, r3, #32
 81092dc:	2b00      	cmp	r3, #0
 81092de:	d105      	bne.n	81092ec <HAL_UART_IRQHandler+0x60>
 81092e0:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 81092e4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 81092e8:	2b00      	cmp	r3, #0
 81092ea:	d009      	beq.n	8109300 <HAL_UART_IRQHandler+0x74>
 81092ec:	687b      	ldr	r3, [r7, #4]
 81092ee:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 81092f0:	2b00      	cmp	r3, #0
 81092f2:	f000 8395 	beq.w	8109a20 <HAL_UART_IRQHandler+0x794>
 81092f6:	687b      	ldr	r3, [r7, #4]
 81092f8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 81092fa:	6878      	ldr	r0, [r7, #4]
 81092fc:	4798      	blx	r3
 81092fe:	e38f      	b.n	8109a20 <HAL_UART_IRQHandler+0x794>
 8109300:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8109304:	2b00      	cmp	r3, #0
 8109306:	f000 8123 	beq.w	8109550 <HAL_UART_IRQHandler+0x2c4>
 810930a:	f8d7 20dc 	ldr.w	r2, [r7, #220]	@ 0xdc
 810930e:	4b8d      	ldr	r3, [pc, #564]	@ (8109544 <HAL_UART_IRQHandler+0x2b8>)
 8109310:	4013      	ands	r3, r2
 8109312:	2b00      	cmp	r3, #0
 8109314:	d106      	bne.n	8109324 <HAL_UART_IRQHandler+0x98>
 8109316:	f8d7 20e0 	ldr.w	r2, [r7, #224]	@ 0xe0
 810931a:	4b8b      	ldr	r3, [pc, #556]	@ (8109548 <HAL_UART_IRQHandler+0x2bc>)
 810931c:	4013      	ands	r3, r2
 810931e:	2b00      	cmp	r3, #0
 8109320:	f000 8116 	beq.w	8109550 <HAL_UART_IRQHandler+0x2c4>
 8109324:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8109328:	f003 0301 	and.w	r3, r3, #1
 810932c:	2b00      	cmp	r3, #0
 810932e:	d011      	beq.n	8109354 <HAL_UART_IRQHandler+0xc8>
 8109330:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8109334:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8109338:	2b00      	cmp	r3, #0
 810933a:	d00b      	beq.n	8109354 <HAL_UART_IRQHandler+0xc8>
 810933c:	687b      	ldr	r3, [r7, #4]
 810933e:	681b      	ldr	r3, [r3, #0]
 8109340:	2201      	movs	r2, #1
 8109342:	621a      	str	r2, [r3, #32]
 8109344:	687b      	ldr	r3, [r7, #4]
 8109346:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 810934a:	f043 0201 	orr.w	r2, r3, #1
 810934e:	687b      	ldr	r3, [r7, #4]
 8109350:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8109354:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8109358:	f003 0302 	and.w	r3, r3, #2
 810935c:	2b00      	cmp	r3, #0
 810935e:	d011      	beq.n	8109384 <HAL_UART_IRQHandler+0xf8>
 8109360:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8109364:	f003 0301 	and.w	r3, r3, #1
 8109368:	2b00      	cmp	r3, #0
 810936a:	d00b      	beq.n	8109384 <HAL_UART_IRQHandler+0xf8>
 810936c:	687b      	ldr	r3, [r7, #4]
 810936e:	681b      	ldr	r3, [r3, #0]
 8109370:	2202      	movs	r2, #2
 8109372:	621a      	str	r2, [r3, #32]
 8109374:	687b      	ldr	r3, [r7, #4]
 8109376:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 810937a:	f043 0204 	orr.w	r2, r3, #4
 810937e:	687b      	ldr	r3, [r7, #4]
 8109380:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8109384:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8109388:	f003 0304 	and.w	r3, r3, #4
 810938c:	2b00      	cmp	r3, #0
 810938e:	d011      	beq.n	81093b4 <HAL_UART_IRQHandler+0x128>
 8109390:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8109394:	f003 0301 	and.w	r3, r3, #1
 8109398:	2b00      	cmp	r3, #0
 810939a:	d00b      	beq.n	81093b4 <HAL_UART_IRQHandler+0x128>
 810939c:	687b      	ldr	r3, [r7, #4]
 810939e:	681b      	ldr	r3, [r3, #0]
 81093a0:	2204      	movs	r2, #4
 81093a2:	621a      	str	r2, [r3, #32]
 81093a4:	687b      	ldr	r3, [r7, #4]
 81093a6:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 81093aa:	f043 0202 	orr.w	r2, r3, #2
 81093ae:	687b      	ldr	r3, [r7, #4]
 81093b0:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 81093b4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 81093b8:	f003 0308 	and.w	r3, r3, #8
 81093bc:	2b00      	cmp	r3, #0
 81093be:	d017      	beq.n	81093f0 <HAL_UART_IRQHandler+0x164>
 81093c0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 81093c4:	f003 0320 	and.w	r3, r3, #32
 81093c8:	2b00      	cmp	r3, #0
 81093ca:	d105      	bne.n	81093d8 <HAL_UART_IRQHandler+0x14c>
 81093cc:	f8d7 20dc 	ldr.w	r2, [r7, #220]	@ 0xdc
 81093d0:	4b5c      	ldr	r3, [pc, #368]	@ (8109544 <HAL_UART_IRQHandler+0x2b8>)
 81093d2:	4013      	ands	r3, r2
 81093d4:	2b00      	cmp	r3, #0
 81093d6:	d00b      	beq.n	81093f0 <HAL_UART_IRQHandler+0x164>
 81093d8:	687b      	ldr	r3, [r7, #4]
 81093da:	681b      	ldr	r3, [r3, #0]
 81093dc:	2208      	movs	r2, #8
 81093de:	621a      	str	r2, [r3, #32]
 81093e0:	687b      	ldr	r3, [r7, #4]
 81093e2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 81093e6:	f043 0208 	orr.w	r2, r3, #8
 81093ea:	687b      	ldr	r3, [r7, #4]
 81093ec:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 81093f0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 81093f4:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 81093f8:	2b00      	cmp	r3, #0
 81093fa:	d012      	beq.n	8109422 <HAL_UART_IRQHandler+0x196>
 81093fc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8109400:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8109404:	2b00      	cmp	r3, #0
 8109406:	d00c      	beq.n	8109422 <HAL_UART_IRQHandler+0x196>
 8109408:	687b      	ldr	r3, [r7, #4]
 810940a:	681b      	ldr	r3, [r3, #0]
 810940c:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8109410:	621a      	str	r2, [r3, #32]
 8109412:	687b      	ldr	r3, [r7, #4]
 8109414:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8109418:	f043 0220 	orr.w	r2, r3, #32
 810941c:	687b      	ldr	r3, [r7, #4]
 810941e:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8109422:	687b      	ldr	r3, [r7, #4]
 8109424:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8109428:	2b00      	cmp	r3, #0
 810942a:	f000 82fb 	beq.w	8109a24 <HAL_UART_IRQHandler+0x798>
 810942e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8109432:	f003 0320 	and.w	r3, r3, #32
 8109436:	2b00      	cmp	r3, #0
 8109438:	d013      	beq.n	8109462 <HAL_UART_IRQHandler+0x1d6>
 810943a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 810943e:	f003 0320 	and.w	r3, r3, #32
 8109442:	2b00      	cmp	r3, #0
 8109444:	d105      	bne.n	8109452 <HAL_UART_IRQHandler+0x1c6>
 8109446:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 810944a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 810944e:	2b00      	cmp	r3, #0
 8109450:	d007      	beq.n	8109462 <HAL_UART_IRQHandler+0x1d6>
 8109452:	687b      	ldr	r3, [r7, #4]
 8109454:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8109456:	2b00      	cmp	r3, #0
 8109458:	d003      	beq.n	8109462 <HAL_UART_IRQHandler+0x1d6>
 810945a:	687b      	ldr	r3, [r7, #4]
 810945c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 810945e:	6878      	ldr	r0, [r7, #4]
 8109460:	4798      	blx	r3
 8109462:	687b      	ldr	r3, [r7, #4]
 8109464:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8109468:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 810946c:	687b      	ldr	r3, [r7, #4]
 810946e:	681b      	ldr	r3, [r3, #0]
 8109470:	689b      	ldr	r3, [r3, #8]
 8109472:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8109476:	2b40      	cmp	r3, #64	@ 0x40
 8109478:	d005      	beq.n	8109486 <HAL_UART_IRQHandler+0x1fa>
 810947a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 810947e:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 8109482:	2b00      	cmp	r3, #0
 8109484:	d054      	beq.n	8109530 <HAL_UART_IRQHandler+0x2a4>
 8109486:	6878      	ldr	r0, [r7, #4]
 8109488:	f001 fb3a 	bl	810ab00 <UART_EndRxTransfer>
 810948c:	687b      	ldr	r3, [r7, #4]
 810948e:	681b      	ldr	r3, [r3, #0]
 8109490:	689b      	ldr	r3, [r3, #8]
 8109492:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8109496:	2b40      	cmp	r3, #64	@ 0x40
 8109498:	d146      	bne.n	8109528 <HAL_UART_IRQHandler+0x29c>
 810949a:	687b      	ldr	r3, [r7, #4]
 810949c:	681b      	ldr	r3, [r3, #0]
 810949e:	3308      	adds	r3, #8
 81094a0:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 81094a4:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 81094a8:	e853 3f00 	ldrex	r3, [r3]
 81094ac:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 81094b0:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 81094b4:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 81094b8:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 81094bc:	687b      	ldr	r3, [r7, #4]
 81094be:	681b      	ldr	r3, [r3, #0]
 81094c0:	3308      	adds	r3, #8
 81094c2:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 81094c6:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 81094ca:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 81094ce:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 81094d2:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 81094d6:	e841 2300 	strex	r3, r2, [r1]
 81094da:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 81094de:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 81094e2:	2b00      	cmp	r3, #0
 81094e4:	d1d9      	bne.n	810949a <HAL_UART_IRQHandler+0x20e>
 81094e6:	687b      	ldr	r3, [r7, #4]
 81094e8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 81094ec:	2b00      	cmp	r3, #0
 81094ee:	d017      	beq.n	8109520 <HAL_UART_IRQHandler+0x294>
 81094f0:	687b      	ldr	r3, [r7, #4]
 81094f2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 81094f6:	4a15      	ldr	r2, [pc, #84]	@ (810954c <HAL_UART_IRQHandler+0x2c0>)
 81094f8:	651a      	str	r2, [r3, #80]	@ 0x50
 81094fa:	687b      	ldr	r3, [r7, #4]
 81094fc:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8109500:	4618      	mov	r0, r3
 8109502:	f7fc fe33 	bl	810616c <HAL_DMA_Abort_IT>
 8109506:	4603      	mov	r3, r0
 8109508:	2b00      	cmp	r3, #0
 810950a:	d019      	beq.n	8109540 <HAL_UART_IRQHandler+0x2b4>
 810950c:	687b      	ldr	r3, [r7, #4]
 810950e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8109512:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8109514:	687a      	ldr	r2, [r7, #4]
 8109516:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 810951a:	4610      	mov	r0, r2
 810951c:	4798      	blx	r3
 810951e:	e00f      	b.n	8109540 <HAL_UART_IRQHandler+0x2b4>
 8109520:	6878      	ldr	r0, [r7, #4]
 8109522:	f000 fa93 	bl	8109a4c <HAL_UART_ErrorCallback>
 8109526:	e00b      	b.n	8109540 <HAL_UART_IRQHandler+0x2b4>
 8109528:	6878      	ldr	r0, [r7, #4]
 810952a:	f000 fa8f 	bl	8109a4c <HAL_UART_ErrorCallback>
 810952e:	e007      	b.n	8109540 <HAL_UART_IRQHandler+0x2b4>
 8109530:	6878      	ldr	r0, [r7, #4]
 8109532:	f000 fa8b 	bl	8109a4c <HAL_UART_ErrorCallback>
 8109536:	687b      	ldr	r3, [r7, #4]
 8109538:	2200      	movs	r2, #0
 810953a:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 810953e:	e271      	b.n	8109a24 <HAL_UART_IRQHandler+0x798>
 8109540:	bf00      	nop
 8109542:	e26f      	b.n	8109a24 <HAL_UART_IRQHandler+0x798>
 8109544:	10000001 	.word	0x10000001
 8109548:	04000120 	.word	0x04000120
 810954c:	0810abcd 	.word	0x0810abcd
 8109550:	687b      	ldr	r3, [r7, #4]
 8109552:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8109554:	2b01      	cmp	r3, #1
 8109556:	f040 8205 	bne.w	8109964 <HAL_UART_IRQHandler+0x6d8>
 810955a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 810955e:	f003 0310 	and.w	r3, r3, #16
 8109562:	2b00      	cmp	r3, #0
 8109564:	f000 81fe 	beq.w	8109964 <HAL_UART_IRQHandler+0x6d8>
 8109568:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 810956c:	f003 0310 	and.w	r3, r3, #16
 8109570:	2b00      	cmp	r3, #0
 8109572:	f000 81f7 	beq.w	8109964 <HAL_UART_IRQHandler+0x6d8>
 8109576:	687b      	ldr	r3, [r7, #4]
 8109578:	681b      	ldr	r3, [r3, #0]
 810957a:	2210      	movs	r2, #16
 810957c:	621a      	str	r2, [r3, #32]
 810957e:	687b      	ldr	r3, [r7, #4]
 8109580:	681b      	ldr	r3, [r3, #0]
 8109582:	689b      	ldr	r3, [r3, #8]
 8109584:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8109588:	2b40      	cmp	r3, #64	@ 0x40
 810958a:	f040 816d 	bne.w	8109868 <HAL_UART_IRQHandler+0x5dc>
 810958e:	687b      	ldr	r3, [r7, #4]
 8109590:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8109594:	681b      	ldr	r3, [r3, #0]
 8109596:	4aa4      	ldr	r2, [pc, #656]	@ (8109828 <HAL_UART_IRQHandler+0x59c>)
 8109598:	4293      	cmp	r3, r2
 810959a:	d068      	beq.n	810966e <HAL_UART_IRQHandler+0x3e2>
 810959c:	687b      	ldr	r3, [r7, #4]
 810959e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 81095a2:	681b      	ldr	r3, [r3, #0]
 81095a4:	4aa1      	ldr	r2, [pc, #644]	@ (810982c <HAL_UART_IRQHandler+0x5a0>)
 81095a6:	4293      	cmp	r3, r2
 81095a8:	d061      	beq.n	810966e <HAL_UART_IRQHandler+0x3e2>
 81095aa:	687b      	ldr	r3, [r7, #4]
 81095ac:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 81095b0:	681b      	ldr	r3, [r3, #0]
 81095b2:	4a9f      	ldr	r2, [pc, #636]	@ (8109830 <HAL_UART_IRQHandler+0x5a4>)
 81095b4:	4293      	cmp	r3, r2
 81095b6:	d05a      	beq.n	810966e <HAL_UART_IRQHandler+0x3e2>
 81095b8:	687b      	ldr	r3, [r7, #4]
 81095ba:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 81095be:	681b      	ldr	r3, [r3, #0]
 81095c0:	4a9c      	ldr	r2, [pc, #624]	@ (8109834 <HAL_UART_IRQHandler+0x5a8>)
 81095c2:	4293      	cmp	r3, r2
 81095c4:	d053      	beq.n	810966e <HAL_UART_IRQHandler+0x3e2>
 81095c6:	687b      	ldr	r3, [r7, #4]
 81095c8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 81095cc:	681b      	ldr	r3, [r3, #0]
 81095ce:	4a9a      	ldr	r2, [pc, #616]	@ (8109838 <HAL_UART_IRQHandler+0x5ac>)
 81095d0:	4293      	cmp	r3, r2
 81095d2:	d04c      	beq.n	810966e <HAL_UART_IRQHandler+0x3e2>
 81095d4:	687b      	ldr	r3, [r7, #4]
 81095d6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 81095da:	681b      	ldr	r3, [r3, #0]
 81095dc:	4a97      	ldr	r2, [pc, #604]	@ (810983c <HAL_UART_IRQHandler+0x5b0>)
 81095de:	4293      	cmp	r3, r2
 81095e0:	d045      	beq.n	810966e <HAL_UART_IRQHandler+0x3e2>
 81095e2:	687b      	ldr	r3, [r7, #4]
 81095e4:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 81095e8:	681b      	ldr	r3, [r3, #0]
 81095ea:	4a95      	ldr	r2, [pc, #596]	@ (8109840 <HAL_UART_IRQHandler+0x5b4>)
 81095ec:	4293      	cmp	r3, r2
 81095ee:	d03e      	beq.n	810966e <HAL_UART_IRQHandler+0x3e2>
 81095f0:	687b      	ldr	r3, [r7, #4]
 81095f2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 81095f6:	681b      	ldr	r3, [r3, #0]
 81095f8:	4a92      	ldr	r2, [pc, #584]	@ (8109844 <HAL_UART_IRQHandler+0x5b8>)
 81095fa:	4293      	cmp	r3, r2
 81095fc:	d037      	beq.n	810966e <HAL_UART_IRQHandler+0x3e2>
 81095fe:	687b      	ldr	r3, [r7, #4]
 8109600:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8109604:	681b      	ldr	r3, [r3, #0]
 8109606:	4a90      	ldr	r2, [pc, #576]	@ (8109848 <HAL_UART_IRQHandler+0x5bc>)
 8109608:	4293      	cmp	r3, r2
 810960a:	d030      	beq.n	810966e <HAL_UART_IRQHandler+0x3e2>
 810960c:	687b      	ldr	r3, [r7, #4]
 810960e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8109612:	681b      	ldr	r3, [r3, #0]
 8109614:	4a8d      	ldr	r2, [pc, #564]	@ (810984c <HAL_UART_IRQHandler+0x5c0>)
 8109616:	4293      	cmp	r3, r2
 8109618:	d029      	beq.n	810966e <HAL_UART_IRQHandler+0x3e2>
 810961a:	687b      	ldr	r3, [r7, #4]
 810961c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8109620:	681b      	ldr	r3, [r3, #0]
 8109622:	4a8b      	ldr	r2, [pc, #556]	@ (8109850 <HAL_UART_IRQHandler+0x5c4>)
 8109624:	4293      	cmp	r3, r2
 8109626:	d022      	beq.n	810966e <HAL_UART_IRQHandler+0x3e2>
 8109628:	687b      	ldr	r3, [r7, #4]
 810962a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 810962e:	681b      	ldr	r3, [r3, #0]
 8109630:	4a88      	ldr	r2, [pc, #544]	@ (8109854 <HAL_UART_IRQHandler+0x5c8>)
 8109632:	4293      	cmp	r3, r2
 8109634:	d01b      	beq.n	810966e <HAL_UART_IRQHandler+0x3e2>
 8109636:	687b      	ldr	r3, [r7, #4]
 8109638:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 810963c:	681b      	ldr	r3, [r3, #0]
 810963e:	4a86      	ldr	r2, [pc, #536]	@ (8109858 <HAL_UART_IRQHandler+0x5cc>)
 8109640:	4293      	cmp	r3, r2
 8109642:	d014      	beq.n	810966e <HAL_UART_IRQHandler+0x3e2>
 8109644:	687b      	ldr	r3, [r7, #4]
 8109646:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 810964a:	681b      	ldr	r3, [r3, #0]
 810964c:	4a83      	ldr	r2, [pc, #524]	@ (810985c <HAL_UART_IRQHandler+0x5d0>)
 810964e:	4293      	cmp	r3, r2
 8109650:	d00d      	beq.n	810966e <HAL_UART_IRQHandler+0x3e2>
 8109652:	687b      	ldr	r3, [r7, #4]
 8109654:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8109658:	681b      	ldr	r3, [r3, #0]
 810965a:	4a81      	ldr	r2, [pc, #516]	@ (8109860 <HAL_UART_IRQHandler+0x5d4>)
 810965c:	4293      	cmp	r3, r2
 810965e:	d006      	beq.n	810966e <HAL_UART_IRQHandler+0x3e2>
 8109660:	687b      	ldr	r3, [r7, #4]
 8109662:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8109666:	681b      	ldr	r3, [r3, #0]
 8109668:	4a7e      	ldr	r2, [pc, #504]	@ (8109864 <HAL_UART_IRQHandler+0x5d8>)
 810966a:	4293      	cmp	r3, r2
 810966c:	d106      	bne.n	810967c <HAL_UART_IRQHandler+0x3f0>
 810966e:	687b      	ldr	r3, [r7, #4]
 8109670:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8109674:	681b      	ldr	r3, [r3, #0]
 8109676:	685b      	ldr	r3, [r3, #4]
 8109678:	b29b      	uxth	r3, r3
 810967a:	e005      	b.n	8109688 <HAL_UART_IRQHandler+0x3fc>
 810967c:	687b      	ldr	r3, [r7, #4]
 810967e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8109682:	681b      	ldr	r3, [r3, #0]
 8109684:	685b      	ldr	r3, [r3, #4]
 8109686:	b29b      	uxth	r3, r3
 8109688:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 810968c:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8109690:	2b00      	cmp	r3, #0
 8109692:	f000 80ad 	beq.w	81097f0 <HAL_UART_IRQHandler+0x564>
 8109696:	687b      	ldr	r3, [r7, #4]
 8109698:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 810969c:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 81096a0:	429a      	cmp	r2, r3
 81096a2:	f080 80a5 	bcs.w	81097f0 <HAL_UART_IRQHandler+0x564>
 81096a6:	687b      	ldr	r3, [r7, #4]
 81096a8:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 81096ac:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 81096b0:	687b      	ldr	r3, [r7, #4]
 81096b2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 81096b6:	69db      	ldr	r3, [r3, #28]
 81096b8:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 81096bc:	f000 8087 	beq.w	81097ce <HAL_UART_IRQHandler+0x542>
 81096c0:	687b      	ldr	r3, [r7, #4]
 81096c2:	681b      	ldr	r3, [r3, #0]
 81096c4:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 81096c8:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 81096cc:	e853 3f00 	ldrex	r3, [r3]
 81096d0:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 81096d4:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 81096d8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 81096dc:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 81096e0:	687b      	ldr	r3, [r7, #4]
 81096e2:	681b      	ldr	r3, [r3, #0]
 81096e4:	461a      	mov	r2, r3
 81096e6:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 81096ea:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 81096ee:	f8c7 2090 	str.w	r2, [r7, #144]	@ 0x90
 81096f2:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 81096f6:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 81096fa:	e841 2300 	strex	r3, r2, [r1]
 81096fe:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8109702:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8109706:	2b00      	cmp	r3, #0
 8109708:	d1da      	bne.n	81096c0 <HAL_UART_IRQHandler+0x434>
 810970a:	687b      	ldr	r3, [r7, #4]
 810970c:	681b      	ldr	r3, [r3, #0]
 810970e:	3308      	adds	r3, #8
 8109710:	677b      	str	r3, [r7, #116]	@ 0x74
 8109712:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8109714:	e853 3f00 	ldrex	r3, [r3]
 8109718:	673b      	str	r3, [r7, #112]	@ 0x70
 810971a:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 810971c:	f023 0301 	bic.w	r3, r3, #1
 8109720:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8109724:	687b      	ldr	r3, [r7, #4]
 8109726:	681b      	ldr	r3, [r3, #0]
 8109728:	3308      	adds	r3, #8
 810972a:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 810972e:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8109732:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8109734:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8109736:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 810973a:	e841 2300 	strex	r3, r2, [r1]
 810973e:	67bb      	str	r3, [r7, #120]	@ 0x78
 8109740:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8109742:	2b00      	cmp	r3, #0
 8109744:	d1e1      	bne.n	810970a <HAL_UART_IRQHandler+0x47e>
 8109746:	687b      	ldr	r3, [r7, #4]
 8109748:	681b      	ldr	r3, [r3, #0]
 810974a:	3308      	adds	r3, #8
 810974c:	663b      	str	r3, [r7, #96]	@ 0x60
 810974e:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8109750:	e853 3f00 	ldrex	r3, [r3]
 8109754:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8109756:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8109758:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 810975c:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8109760:	687b      	ldr	r3, [r7, #4]
 8109762:	681b      	ldr	r3, [r3, #0]
 8109764:	3308      	adds	r3, #8
 8109766:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 810976a:	66fa      	str	r2, [r7, #108]	@ 0x6c
 810976c:	66bb      	str	r3, [r7, #104]	@ 0x68
 810976e:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8109770:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8109772:	e841 2300 	strex	r3, r2, [r1]
 8109776:	667b      	str	r3, [r7, #100]	@ 0x64
 8109778:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 810977a:	2b00      	cmp	r3, #0
 810977c:	d1e3      	bne.n	8109746 <HAL_UART_IRQHandler+0x4ba>
 810977e:	687b      	ldr	r3, [r7, #4]
 8109780:	2220      	movs	r2, #32
 8109782:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8109786:	687b      	ldr	r3, [r7, #4]
 8109788:	2200      	movs	r2, #0
 810978a:	66da      	str	r2, [r3, #108]	@ 0x6c
 810978c:	687b      	ldr	r3, [r7, #4]
 810978e:	681b      	ldr	r3, [r3, #0]
 8109790:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8109792:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8109794:	e853 3f00 	ldrex	r3, [r3]
 8109798:	64bb      	str	r3, [r7, #72]	@ 0x48
 810979a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 810979c:	f023 0310 	bic.w	r3, r3, #16
 81097a0:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 81097a4:	687b      	ldr	r3, [r7, #4]
 81097a6:	681b      	ldr	r3, [r3, #0]
 81097a8:	461a      	mov	r2, r3
 81097aa:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 81097ae:	65bb      	str	r3, [r7, #88]	@ 0x58
 81097b0:	657a      	str	r2, [r7, #84]	@ 0x54
 81097b2:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 81097b4:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 81097b6:	e841 2300 	strex	r3, r2, [r1]
 81097ba:	653b      	str	r3, [r7, #80]	@ 0x50
 81097bc:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 81097be:	2b00      	cmp	r3, #0
 81097c0:	d1e4      	bne.n	810978c <HAL_UART_IRQHandler+0x500>
 81097c2:	687b      	ldr	r3, [r7, #4]
 81097c4:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 81097c8:	4618      	mov	r0, r3
 81097ca:	f7fc f9b1 	bl	8105b30 <HAL_DMA_Abort>
 81097ce:	687b      	ldr	r3, [r7, #4]
 81097d0:	2202      	movs	r2, #2
 81097d2:	671a      	str	r2, [r3, #112]	@ 0x70
 81097d4:	687b      	ldr	r3, [r7, #4]
 81097d6:	f8b3 205c 	ldrh.w	r2, [r3, #92]	@ 0x5c
 81097da:	687b      	ldr	r3, [r7, #4]
 81097dc:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 81097e0:	b29b      	uxth	r3, r3
 81097e2:	1ad3      	subs	r3, r2, r3
 81097e4:	b29b      	uxth	r3, r3
 81097e6:	4619      	mov	r1, r3
 81097e8:	6878      	ldr	r0, [r7, #4]
 81097ea:	f000 f939 	bl	8109a60 <HAL_UARTEx_RxEventCallback>
 81097ee:	e11b      	b.n	8109a28 <HAL_UART_IRQHandler+0x79c>
 81097f0:	687b      	ldr	r3, [r7, #4]
 81097f2:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 81097f6:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 81097fa:	429a      	cmp	r2, r3
 81097fc:	f040 8114 	bne.w	8109a28 <HAL_UART_IRQHandler+0x79c>
 8109800:	687b      	ldr	r3, [r7, #4]
 8109802:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8109806:	69db      	ldr	r3, [r3, #28]
 8109808:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 810980c:	f040 810c 	bne.w	8109a28 <HAL_UART_IRQHandler+0x79c>
 8109810:	687b      	ldr	r3, [r7, #4]
 8109812:	2202      	movs	r2, #2
 8109814:	671a      	str	r2, [r3, #112]	@ 0x70
 8109816:	687b      	ldr	r3, [r7, #4]
 8109818:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 810981c:	4619      	mov	r1, r3
 810981e:	6878      	ldr	r0, [r7, #4]
 8109820:	f000 f91e 	bl	8109a60 <HAL_UARTEx_RxEventCallback>
 8109824:	e100      	b.n	8109a28 <HAL_UART_IRQHandler+0x79c>
 8109826:	bf00      	nop
 8109828:	40020010 	.word	0x40020010
 810982c:	40020028 	.word	0x40020028
 8109830:	40020040 	.word	0x40020040
 8109834:	40020058 	.word	0x40020058
 8109838:	40020070 	.word	0x40020070
 810983c:	40020088 	.word	0x40020088
 8109840:	400200a0 	.word	0x400200a0
 8109844:	400200b8 	.word	0x400200b8
 8109848:	40020410 	.word	0x40020410
 810984c:	40020428 	.word	0x40020428
 8109850:	40020440 	.word	0x40020440
 8109854:	40020458 	.word	0x40020458
 8109858:	40020470 	.word	0x40020470
 810985c:	40020488 	.word	0x40020488
 8109860:	400204a0 	.word	0x400204a0
 8109864:	400204b8 	.word	0x400204b8
 8109868:	687b      	ldr	r3, [r7, #4]
 810986a:	f8b3 205c 	ldrh.w	r2, [r3, #92]	@ 0x5c
 810986e:	687b      	ldr	r3, [r7, #4]
 8109870:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 8109874:	b29b      	uxth	r3, r3
 8109876:	1ad3      	subs	r3, r2, r3
 8109878:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 810987c:	687b      	ldr	r3, [r7, #4]
 810987e:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 8109882:	b29b      	uxth	r3, r3
 8109884:	2b00      	cmp	r3, #0
 8109886:	f000 80d1 	beq.w	8109a2c <HAL_UART_IRQHandler+0x7a0>
 810988a:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 810988e:	2b00      	cmp	r3, #0
 8109890:	f000 80cc 	beq.w	8109a2c <HAL_UART_IRQHandler+0x7a0>
 8109894:	687b      	ldr	r3, [r7, #4]
 8109896:	681b      	ldr	r3, [r3, #0]
 8109898:	63bb      	str	r3, [r7, #56]	@ 0x38
 810989a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810989c:	e853 3f00 	ldrex	r3, [r3]
 81098a0:	637b      	str	r3, [r7, #52]	@ 0x34
 81098a2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 81098a4:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 81098a8:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 81098ac:	687b      	ldr	r3, [r7, #4]
 81098ae:	681b      	ldr	r3, [r3, #0]
 81098b0:	461a      	mov	r2, r3
 81098b2:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 81098b6:	647b      	str	r3, [r7, #68]	@ 0x44
 81098b8:	643a      	str	r2, [r7, #64]	@ 0x40
 81098ba:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 81098bc:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 81098be:	e841 2300 	strex	r3, r2, [r1]
 81098c2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 81098c4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 81098c6:	2b00      	cmp	r3, #0
 81098c8:	d1e4      	bne.n	8109894 <HAL_UART_IRQHandler+0x608>
 81098ca:	687b      	ldr	r3, [r7, #4]
 81098cc:	681b      	ldr	r3, [r3, #0]
 81098ce:	3308      	adds	r3, #8
 81098d0:	627b      	str	r3, [r7, #36]	@ 0x24
 81098d2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 81098d4:	e853 3f00 	ldrex	r3, [r3]
 81098d8:	623b      	str	r3, [r7, #32]
 81098da:	6a3b      	ldr	r3, [r7, #32]
 81098dc:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 81098e0:	f023 0301 	bic.w	r3, r3, #1
 81098e4:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 81098e8:	687b      	ldr	r3, [r7, #4]
 81098ea:	681b      	ldr	r3, [r3, #0]
 81098ec:	3308      	adds	r3, #8
 81098ee:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 81098f2:	633a      	str	r2, [r7, #48]	@ 0x30
 81098f4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 81098f6:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 81098f8:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 81098fa:	e841 2300 	strex	r3, r2, [r1]
 81098fe:	62bb      	str	r3, [r7, #40]	@ 0x28
 8109900:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8109902:	2b00      	cmp	r3, #0
 8109904:	d1e1      	bne.n	81098ca <HAL_UART_IRQHandler+0x63e>
 8109906:	687b      	ldr	r3, [r7, #4]
 8109908:	2220      	movs	r2, #32
 810990a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 810990e:	687b      	ldr	r3, [r7, #4]
 8109910:	2200      	movs	r2, #0
 8109912:	66da      	str	r2, [r3, #108]	@ 0x6c
 8109914:	687b      	ldr	r3, [r7, #4]
 8109916:	2200      	movs	r2, #0
 8109918:	675a      	str	r2, [r3, #116]	@ 0x74
 810991a:	687b      	ldr	r3, [r7, #4]
 810991c:	681b      	ldr	r3, [r3, #0]
 810991e:	613b      	str	r3, [r7, #16]
 8109920:	693b      	ldr	r3, [r7, #16]
 8109922:	e853 3f00 	ldrex	r3, [r3]
 8109926:	60fb      	str	r3, [r7, #12]
 8109928:	68fb      	ldr	r3, [r7, #12]
 810992a:	f023 0310 	bic.w	r3, r3, #16
 810992e:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8109932:	687b      	ldr	r3, [r7, #4]
 8109934:	681b      	ldr	r3, [r3, #0]
 8109936:	461a      	mov	r2, r3
 8109938:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 810993c:	61fb      	str	r3, [r7, #28]
 810993e:	61ba      	str	r2, [r7, #24]
 8109940:	69b9      	ldr	r1, [r7, #24]
 8109942:	69fa      	ldr	r2, [r7, #28]
 8109944:	e841 2300 	strex	r3, r2, [r1]
 8109948:	617b      	str	r3, [r7, #20]
 810994a:	697b      	ldr	r3, [r7, #20]
 810994c:	2b00      	cmp	r3, #0
 810994e:	d1e4      	bne.n	810991a <HAL_UART_IRQHandler+0x68e>
 8109950:	687b      	ldr	r3, [r7, #4]
 8109952:	2202      	movs	r2, #2
 8109954:	671a      	str	r2, [r3, #112]	@ 0x70
 8109956:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 810995a:	4619      	mov	r1, r3
 810995c:	6878      	ldr	r0, [r7, #4]
 810995e:	f000 f87f 	bl	8109a60 <HAL_UARTEx_RxEventCallback>
 8109962:	e063      	b.n	8109a2c <HAL_UART_IRQHandler+0x7a0>
 8109964:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8109968:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 810996c:	2b00      	cmp	r3, #0
 810996e:	d00e      	beq.n	810998e <HAL_UART_IRQHandler+0x702>
 8109970:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8109974:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8109978:	2b00      	cmp	r3, #0
 810997a:	d008      	beq.n	810998e <HAL_UART_IRQHandler+0x702>
 810997c:	687b      	ldr	r3, [r7, #4]
 810997e:	681b      	ldr	r3, [r3, #0]
 8109980:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 8109984:	621a      	str	r2, [r3, #32]
 8109986:	6878      	ldr	r0, [r7, #4]
 8109988:	f001 fe7e 	bl	810b688 <HAL_UARTEx_WakeupCallback>
 810998c:	e051      	b.n	8109a32 <HAL_UART_IRQHandler+0x7a6>
 810998e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8109992:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8109996:	2b00      	cmp	r3, #0
 8109998:	d014      	beq.n	81099c4 <HAL_UART_IRQHandler+0x738>
 810999a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 810999e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 81099a2:	2b00      	cmp	r3, #0
 81099a4:	d105      	bne.n	81099b2 <HAL_UART_IRQHandler+0x726>
 81099a6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 81099aa:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 81099ae:	2b00      	cmp	r3, #0
 81099b0:	d008      	beq.n	81099c4 <HAL_UART_IRQHandler+0x738>
 81099b2:	687b      	ldr	r3, [r7, #4]
 81099b4:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 81099b6:	2b00      	cmp	r3, #0
 81099b8:	d03a      	beq.n	8109a30 <HAL_UART_IRQHandler+0x7a4>
 81099ba:	687b      	ldr	r3, [r7, #4]
 81099bc:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 81099be:	6878      	ldr	r0, [r7, #4]
 81099c0:	4798      	blx	r3
 81099c2:	e035      	b.n	8109a30 <HAL_UART_IRQHandler+0x7a4>
 81099c4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 81099c8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 81099cc:	2b00      	cmp	r3, #0
 81099ce:	d009      	beq.n	81099e4 <HAL_UART_IRQHandler+0x758>
 81099d0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 81099d4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 81099d8:	2b00      	cmp	r3, #0
 81099da:	d003      	beq.n	81099e4 <HAL_UART_IRQHandler+0x758>
 81099dc:	6878      	ldr	r0, [r7, #4]
 81099de:	f001 f907 	bl	810abf0 <UART_EndTransmit_IT>
 81099e2:	e026      	b.n	8109a32 <HAL_UART_IRQHandler+0x7a6>
 81099e4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 81099e8:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 81099ec:	2b00      	cmp	r3, #0
 81099ee:	d009      	beq.n	8109a04 <HAL_UART_IRQHandler+0x778>
 81099f0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 81099f4:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 81099f8:	2b00      	cmp	r3, #0
 81099fa:	d003      	beq.n	8109a04 <HAL_UART_IRQHandler+0x778>
 81099fc:	6878      	ldr	r0, [r7, #4]
 81099fe:	f001 fe57 	bl	810b6b0 <HAL_UARTEx_TxFifoEmptyCallback>
 8109a02:	e016      	b.n	8109a32 <HAL_UART_IRQHandler+0x7a6>
 8109a04:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8109a08:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8109a0c:	2b00      	cmp	r3, #0
 8109a0e:	d010      	beq.n	8109a32 <HAL_UART_IRQHandler+0x7a6>
 8109a10:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8109a14:	2b00      	cmp	r3, #0
 8109a16:	da0c      	bge.n	8109a32 <HAL_UART_IRQHandler+0x7a6>
 8109a18:	6878      	ldr	r0, [r7, #4]
 8109a1a:	f001 fe3f 	bl	810b69c <HAL_UARTEx_RxFifoFullCallback>
 8109a1e:	e008      	b.n	8109a32 <HAL_UART_IRQHandler+0x7a6>
 8109a20:	bf00      	nop
 8109a22:	e006      	b.n	8109a32 <HAL_UART_IRQHandler+0x7a6>
 8109a24:	bf00      	nop
 8109a26:	e004      	b.n	8109a32 <HAL_UART_IRQHandler+0x7a6>
 8109a28:	bf00      	nop
 8109a2a:	e002      	b.n	8109a32 <HAL_UART_IRQHandler+0x7a6>
 8109a2c:	bf00      	nop
 8109a2e:	e000      	b.n	8109a32 <HAL_UART_IRQHandler+0x7a6>
 8109a30:	bf00      	nop
 8109a32:	37e8      	adds	r7, #232	@ 0xe8
 8109a34:	46bd      	mov	sp, r7
 8109a36:	bd80      	pop	{r7, pc}

08109a38 <HAL_UART_TxCpltCallback>:
 8109a38:	b480      	push	{r7}
 8109a3a:	b083      	sub	sp, #12
 8109a3c:	af00      	add	r7, sp, #0
 8109a3e:	6078      	str	r0, [r7, #4]
 8109a40:	bf00      	nop
 8109a42:	370c      	adds	r7, #12
 8109a44:	46bd      	mov	sp, r7
 8109a46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8109a4a:	4770      	bx	lr

08109a4c <HAL_UART_ErrorCallback>:
 8109a4c:	b480      	push	{r7}
 8109a4e:	b083      	sub	sp, #12
 8109a50:	af00      	add	r7, sp, #0
 8109a52:	6078      	str	r0, [r7, #4]
 8109a54:	bf00      	nop
 8109a56:	370c      	adds	r7, #12
 8109a58:	46bd      	mov	sp, r7
 8109a5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8109a5e:	4770      	bx	lr

08109a60 <HAL_UARTEx_RxEventCallback>:
 8109a60:	b480      	push	{r7}
 8109a62:	b083      	sub	sp, #12
 8109a64:	af00      	add	r7, sp, #0
 8109a66:	6078      	str	r0, [r7, #4]
 8109a68:	460b      	mov	r3, r1
 8109a6a:	807b      	strh	r3, [r7, #2]
 8109a6c:	bf00      	nop
 8109a6e:	370c      	adds	r7, #12
 8109a70:	46bd      	mov	sp, r7
 8109a72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8109a76:	4770      	bx	lr

08109a78 <UART_SetConfig>:
 8109a78:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8109a7c:	b092      	sub	sp, #72	@ 0x48
 8109a7e:	af00      	add	r7, sp, #0
 8109a80:	6178      	str	r0, [r7, #20]
 8109a82:	2300      	movs	r3, #0
 8109a84:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 8109a88:	697b      	ldr	r3, [r7, #20]
 8109a8a:	689a      	ldr	r2, [r3, #8]
 8109a8c:	697b      	ldr	r3, [r7, #20]
 8109a8e:	691b      	ldr	r3, [r3, #16]
 8109a90:	431a      	orrs	r2, r3
 8109a92:	697b      	ldr	r3, [r7, #20]
 8109a94:	695b      	ldr	r3, [r3, #20]
 8109a96:	431a      	orrs	r2, r3
 8109a98:	697b      	ldr	r3, [r7, #20]
 8109a9a:	69db      	ldr	r3, [r3, #28]
 8109a9c:	4313      	orrs	r3, r2
 8109a9e:	647b      	str	r3, [r7, #68]	@ 0x44
 8109aa0:	697b      	ldr	r3, [r7, #20]
 8109aa2:	681b      	ldr	r3, [r3, #0]
 8109aa4:	681a      	ldr	r2, [r3, #0]
 8109aa6:	4bbd      	ldr	r3, [pc, #756]	@ (8109d9c <UART_SetConfig+0x324>)
 8109aa8:	4013      	ands	r3, r2
 8109aaa:	697a      	ldr	r2, [r7, #20]
 8109aac:	6812      	ldr	r2, [r2, #0]
 8109aae:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 8109ab0:	430b      	orrs	r3, r1
 8109ab2:	6013      	str	r3, [r2, #0]
 8109ab4:	697b      	ldr	r3, [r7, #20]
 8109ab6:	681b      	ldr	r3, [r3, #0]
 8109ab8:	685b      	ldr	r3, [r3, #4]
 8109aba:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 8109abe:	697b      	ldr	r3, [r7, #20]
 8109ac0:	68da      	ldr	r2, [r3, #12]
 8109ac2:	697b      	ldr	r3, [r7, #20]
 8109ac4:	681b      	ldr	r3, [r3, #0]
 8109ac6:	430a      	orrs	r2, r1
 8109ac8:	605a      	str	r2, [r3, #4]
 8109aca:	697b      	ldr	r3, [r7, #20]
 8109acc:	699b      	ldr	r3, [r3, #24]
 8109ace:	647b      	str	r3, [r7, #68]	@ 0x44
 8109ad0:	697b      	ldr	r3, [r7, #20]
 8109ad2:	681b      	ldr	r3, [r3, #0]
 8109ad4:	4ab2      	ldr	r2, [pc, #712]	@ (8109da0 <UART_SetConfig+0x328>)
 8109ad6:	4293      	cmp	r3, r2
 8109ad8:	d004      	beq.n	8109ae4 <UART_SetConfig+0x6c>
 8109ada:	697b      	ldr	r3, [r7, #20]
 8109adc:	6a1b      	ldr	r3, [r3, #32]
 8109ade:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8109ae0:	4313      	orrs	r3, r2
 8109ae2:	647b      	str	r3, [r7, #68]	@ 0x44
 8109ae4:	697b      	ldr	r3, [r7, #20]
 8109ae6:	681b      	ldr	r3, [r3, #0]
 8109ae8:	689b      	ldr	r3, [r3, #8]
 8109aea:	f023 436e 	bic.w	r3, r3, #3992977408	@ 0xee000000
 8109aee:	f423 6330 	bic.w	r3, r3, #2816	@ 0xb00
 8109af2:	697a      	ldr	r2, [r7, #20]
 8109af4:	6812      	ldr	r2, [r2, #0]
 8109af6:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 8109af8:	430b      	orrs	r3, r1
 8109afa:	6093      	str	r3, [r2, #8]
 8109afc:	697b      	ldr	r3, [r7, #20]
 8109afe:	681b      	ldr	r3, [r3, #0]
 8109b00:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8109b02:	f023 010f 	bic.w	r1, r3, #15
 8109b06:	697b      	ldr	r3, [r7, #20]
 8109b08:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8109b0a:	697b      	ldr	r3, [r7, #20]
 8109b0c:	681b      	ldr	r3, [r3, #0]
 8109b0e:	430a      	orrs	r2, r1
 8109b10:	62da      	str	r2, [r3, #44]	@ 0x2c
 8109b12:	697b      	ldr	r3, [r7, #20]
 8109b14:	681b      	ldr	r3, [r3, #0]
 8109b16:	4aa3      	ldr	r2, [pc, #652]	@ (8109da4 <UART_SetConfig+0x32c>)
 8109b18:	4293      	cmp	r3, r2
 8109b1a:	d177      	bne.n	8109c0c <UART_SetConfig+0x194>
 8109b1c:	4ba2      	ldr	r3, [pc, #648]	@ (8109da8 <UART_SetConfig+0x330>)
 8109b1e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8109b20:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8109b24:	2b28      	cmp	r3, #40	@ 0x28
 8109b26:	d86d      	bhi.n	8109c04 <UART_SetConfig+0x18c>
 8109b28:	a201      	add	r2, pc, #4	@ (adr r2, 8109b30 <UART_SetConfig+0xb8>)
 8109b2a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8109b2e:	bf00      	nop
 8109b30:	08109bd5 	.word	0x08109bd5
 8109b34:	08109c05 	.word	0x08109c05
 8109b38:	08109c05 	.word	0x08109c05
 8109b3c:	08109c05 	.word	0x08109c05
 8109b40:	08109c05 	.word	0x08109c05
 8109b44:	08109c05 	.word	0x08109c05
 8109b48:	08109c05 	.word	0x08109c05
 8109b4c:	08109c05 	.word	0x08109c05
 8109b50:	08109bdd 	.word	0x08109bdd
 8109b54:	08109c05 	.word	0x08109c05
 8109b58:	08109c05 	.word	0x08109c05
 8109b5c:	08109c05 	.word	0x08109c05
 8109b60:	08109c05 	.word	0x08109c05
 8109b64:	08109c05 	.word	0x08109c05
 8109b68:	08109c05 	.word	0x08109c05
 8109b6c:	08109c05 	.word	0x08109c05
 8109b70:	08109be5 	.word	0x08109be5
 8109b74:	08109c05 	.word	0x08109c05
 8109b78:	08109c05 	.word	0x08109c05
 8109b7c:	08109c05 	.word	0x08109c05
 8109b80:	08109c05 	.word	0x08109c05
 8109b84:	08109c05 	.word	0x08109c05
 8109b88:	08109c05 	.word	0x08109c05
 8109b8c:	08109c05 	.word	0x08109c05
 8109b90:	08109bed 	.word	0x08109bed
 8109b94:	08109c05 	.word	0x08109c05
 8109b98:	08109c05 	.word	0x08109c05
 8109b9c:	08109c05 	.word	0x08109c05
 8109ba0:	08109c05 	.word	0x08109c05
 8109ba4:	08109c05 	.word	0x08109c05
 8109ba8:	08109c05 	.word	0x08109c05
 8109bac:	08109c05 	.word	0x08109c05
 8109bb0:	08109bf5 	.word	0x08109bf5
 8109bb4:	08109c05 	.word	0x08109c05
 8109bb8:	08109c05 	.word	0x08109c05
 8109bbc:	08109c05 	.word	0x08109c05
 8109bc0:	08109c05 	.word	0x08109c05
 8109bc4:	08109c05 	.word	0x08109c05
 8109bc8:	08109c05 	.word	0x08109c05
 8109bcc:	08109c05 	.word	0x08109c05
 8109bd0:	08109bfd 	.word	0x08109bfd
 8109bd4:	2301      	movs	r3, #1
 8109bd6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109bda:	e220      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109bdc:	2304      	movs	r3, #4
 8109bde:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109be2:	e21c      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109be4:	2308      	movs	r3, #8
 8109be6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109bea:	e218      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109bec:	2310      	movs	r3, #16
 8109bee:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109bf2:	e214      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109bf4:	2320      	movs	r3, #32
 8109bf6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109bfa:	e210      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109bfc:	2340      	movs	r3, #64	@ 0x40
 8109bfe:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109c02:	e20c      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109c04:	2380      	movs	r3, #128	@ 0x80
 8109c06:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109c0a:	e208      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109c0c:	697b      	ldr	r3, [r7, #20]
 8109c0e:	681b      	ldr	r3, [r3, #0]
 8109c10:	4a66      	ldr	r2, [pc, #408]	@ (8109dac <UART_SetConfig+0x334>)
 8109c12:	4293      	cmp	r3, r2
 8109c14:	d130      	bne.n	8109c78 <UART_SetConfig+0x200>
 8109c16:	4b64      	ldr	r3, [pc, #400]	@ (8109da8 <UART_SetConfig+0x330>)
 8109c18:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8109c1a:	f003 0307 	and.w	r3, r3, #7
 8109c1e:	2b05      	cmp	r3, #5
 8109c20:	d826      	bhi.n	8109c70 <UART_SetConfig+0x1f8>
 8109c22:	a201      	add	r2, pc, #4	@ (adr r2, 8109c28 <UART_SetConfig+0x1b0>)
 8109c24:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8109c28:	08109c41 	.word	0x08109c41
 8109c2c:	08109c49 	.word	0x08109c49
 8109c30:	08109c51 	.word	0x08109c51
 8109c34:	08109c59 	.word	0x08109c59
 8109c38:	08109c61 	.word	0x08109c61
 8109c3c:	08109c69 	.word	0x08109c69
 8109c40:	2300      	movs	r3, #0
 8109c42:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109c46:	e1ea      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109c48:	2304      	movs	r3, #4
 8109c4a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109c4e:	e1e6      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109c50:	2308      	movs	r3, #8
 8109c52:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109c56:	e1e2      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109c58:	2310      	movs	r3, #16
 8109c5a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109c5e:	e1de      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109c60:	2320      	movs	r3, #32
 8109c62:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109c66:	e1da      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109c68:	2340      	movs	r3, #64	@ 0x40
 8109c6a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109c6e:	e1d6      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109c70:	2380      	movs	r3, #128	@ 0x80
 8109c72:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109c76:	e1d2      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109c78:	697b      	ldr	r3, [r7, #20]
 8109c7a:	681b      	ldr	r3, [r3, #0]
 8109c7c:	4a4c      	ldr	r2, [pc, #304]	@ (8109db0 <UART_SetConfig+0x338>)
 8109c7e:	4293      	cmp	r3, r2
 8109c80:	d130      	bne.n	8109ce4 <UART_SetConfig+0x26c>
 8109c82:	4b49      	ldr	r3, [pc, #292]	@ (8109da8 <UART_SetConfig+0x330>)
 8109c84:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8109c86:	f003 0307 	and.w	r3, r3, #7
 8109c8a:	2b05      	cmp	r3, #5
 8109c8c:	d826      	bhi.n	8109cdc <UART_SetConfig+0x264>
 8109c8e:	a201      	add	r2, pc, #4	@ (adr r2, 8109c94 <UART_SetConfig+0x21c>)
 8109c90:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8109c94:	08109cad 	.word	0x08109cad
 8109c98:	08109cb5 	.word	0x08109cb5
 8109c9c:	08109cbd 	.word	0x08109cbd
 8109ca0:	08109cc5 	.word	0x08109cc5
 8109ca4:	08109ccd 	.word	0x08109ccd
 8109ca8:	08109cd5 	.word	0x08109cd5
 8109cac:	2300      	movs	r3, #0
 8109cae:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109cb2:	e1b4      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109cb4:	2304      	movs	r3, #4
 8109cb6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109cba:	e1b0      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109cbc:	2308      	movs	r3, #8
 8109cbe:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109cc2:	e1ac      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109cc4:	2310      	movs	r3, #16
 8109cc6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109cca:	e1a8      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109ccc:	2320      	movs	r3, #32
 8109cce:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109cd2:	e1a4      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109cd4:	2340      	movs	r3, #64	@ 0x40
 8109cd6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109cda:	e1a0      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109cdc:	2380      	movs	r3, #128	@ 0x80
 8109cde:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109ce2:	e19c      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109ce4:	697b      	ldr	r3, [r7, #20]
 8109ce6:	681b      	ldr	r3, [r3, #0]
 8109ce8:	4a32      	ldr	r2, [pc, #200]	@ (8109db4 <UART_SetConfig+0x33c>)
 8109cea:	4293      	cmp	r3, r2
 8109cec:	d130      	bne.n	8109d50 <UART_SetConfig+0x2d8>
 8109cee:	4b2e      	ldr	r3, [pc, #184]	@ (8109da8 <UART_SetConfig+0x330>)
 8109cf0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8109cf2:	f003 0307 	and.w	r3, r3, #7
 8109cf6:	2b05      	cmp	r3, #5
 8109cf8:	d826      	bhi.n	8109d48 <UART_SetConfig+0x2d0>
 8109cfa:	a201      	add	r2, pc, #4	@ (adr r2, 8109d00 <UART_SetConfig+0x288>)
 8109cfc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8109d00:	08109d19 	.word	0x08109d19
 8109d04:	08109d21 	.word	0x08109d21
 8109d08:	08109d29 	.word	0x08109d29
 8109d0c:	08109d31 	.word	0x08109d31
 8109d10:	08109d39 	.word	0x08109d39
 8109d14:	08109d41 	.word	0x08109d41
 8109d18:	2300      	movs	r3, #0
 8109d1a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109d1e:	e17e      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109d20:	2304      	movs	r3, #4
 8109d22:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109d26:	e17a      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109d28:	2308      	movs	r3, #8
 8109d2a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109d2e:	e176      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109d30:	2310      	movs	r3, #16
 8109d32:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109d36:	e172      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109d38:	2320      	movs	r3, #32
 8109d3a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109d3e:	e16e      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109d40:	2340      	movs	r3, #64	@ 0x40
 8109d42:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109d46:	e16a      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109d48:	2380      	movs	r3, #128	@ 0x80
 8109d4a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109d4e:	e166      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109d50:	697b      	ldr	r3, [r7, #20]
 8109d52:	681b      	ldr	r3, [r3, #0]
 8109d54:	4a18      	ldr	r2, [pc, #96]	@ (8109db8 <UART_SetConfig+0x340>)
 8109d56:	4293      	cmp	r3, r2
 8109d58:	d140      	bne.n	8109ddc <UART_SetConfig+0x364>
 8109d5a:	4b13      	ldr	r3, [pc, #76]	@ (8109da8 <UART_SetConfig+0x330>)
 8109d5c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8109d5e:	f003 0307 	and.w	r3, r3, #7
 8109d62:	2b05      	cmp	r3, #5
 8109d64:	d836      	bhi.n	8109dd4 <UART_SetConfig+0x35c>
 8109d66:	a201      	add	r2, pc, #4	@ (adr r2, 8109d6c <UART_SetConfig+0x2f4>)
 8109d68:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8109d6c:	08109d85 	.word	0x08109d85
 8109d70:	08109d8d 	.word	0x08109d8d
 8109d74:	08109d95 	.word	0x08109d95
 8109d78:	08109dbd 	.word	0x08109dbd
 8109d7c:	08109dc5 	.word	0x08109dc5
 8109d80:	08109dcd 	.word	0x08109dcd
 8109d84:	2300      	movs	r3, #0
 8109d86:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109d8a:	e148      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109d8c:	2304      	movs	r3, #4
 8109d8e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109d92:	e144      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109d94:	2308      	movs	r3, #8
 8109d96:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109d9a:	e140      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109d9c:	cfff69f3 	.word	0xcfff69f3
 8109da0:	58000c00 	.word	0x58000c00
 8109da4:	40011000 	.word	0x40011000
 8109da8:	58024400 	.word	0x58024400
 8109dac:	40004400 	.word	0x40004400
 8109db0:	40004800 	.word	0x40004800
 8109db4:	40004c00 	.word	0x40004c00
 8109db8:	40005000 	.word	0x40005000
 8109dbc:	2310      	movs	r3, #16
 8109dbe:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109dc2:	e12c      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109dc4:	2320      	movs	r3, #32
 8109dc6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109dca:	e128      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109dcc:	2340      	movs	r3, #64	@ 0x40
 8109dce:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109dd2:	e124      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109dd4:	2380      	movs	r3, #128	@ 0x80
 8109dd6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109dda:	e120      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109ddc:	697b      	ldr	r3, [r7, #20]
 8109dde:	681b      	ldr	r3, [r3, #0]
 8109de0:	4acb      	ldr	r2, [pc, #812]	@ (810a110 <UART_SetConfig+0x698>)
 8109de2:	4293      	cmp	r3, r2
 8109de4:	d176      	bne.n	8109ed4 <UART_SetConfig+0x45c>
 8109de6:	4bcb      	ldr	r3, [pc, #812]	@ (810a114 <UART_SetConfig+0x69c>)
 8109de8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8109dea:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8109dee:	2b28      	cmp	r3, #40	@ 0x28
 8109df0:	d86c      	bhi.n	8109ecc <UART_SetConfig+0x454>
 8109df2:	a201      	add	r2, pc, #4	@ (adr r2, 8109df8 <UART_SetConfig+0x380>)
 8109df4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8109df8:	08109e9d 	.word	0x08109e9d
 8109dfc:	08109ecd 	.word	0x08109ecd
 8109e00:	08109ecd 	.word	0x08109ecd
 8109e04:	08109ecd 	.word	0x08109ecd
 8109e08:	08109ecd 	.word	0x08109ecd
 8109e0c:	08109ecd 	.word	0x08109ecd
 8109e10:	08109ecd 	.word	0x08109ecd
 8109e14:	08109ecd 	.word	0x08109ecd
 8109e18:	08109ea5 	.word	0x08109ea5
 8109e1c:	08109ecd 	.word	0x08109ecd
 8109e20:	08109ecd 	.word	0x08109ecd
 8109e24:	08109ecd 	.word	0x08109ecd
 8109e28:	08109ecd 	.word	0x08109ecd
 8109e2c:	08109ecd 	.word	0x08109ecd
 8109e30:	08109ecd 	.word	0x08109ecd
 8109e34:	08109ecd 	.word	0x08109ecd
 8109e38:	08109ead 	.word	0x08109ead
 8109e3c:	08109ecd 	.word	0x08109ecd
 8109e40:	08109ecd 	.word	0x08109ecd
 8109e44:	08109ecd 	.word	0x08109ecd
 8109e48:	08109ecd 	.word	0x08109ecd
 8109e4c:	08109ecd 	.word	0x08109ecd
 8109e50:	08109ecd 	.word	0x08109ecd
 8109e54:	08109ecd 	.word	0x08109ecd
 8109e58:	08109eb5 	.word	0x08109eb5
 8109e5c:	08109ecd 	.word	0x08109ecd
 8109e60:	08109ecd 	.word	0x08109ecd
 8109e64:	08109ecd 	.word	0x08109ecd
 8109e68:	08109ecd 	.word	0x08109ecd
 8109e6c:	08109ecd 	.word	0x08109ecd
 8109e70:	08109ecd 	.word	0x08109ecd
 8109e74:	08109ecd 	.word	0x08109ecd
 8109e78:	08109ebd 	.word	0x08109ebd
 8109e7c:	08109ecd 	.word	0x08109ecd
 8109e80:	08109ecd 	.word	0x08109ecd
 8109e84:	08109ecd 	.word	0x08109ecd
 8109e88:	08109ecd 	.word	0x08109ecd
 8109e8c:	08109ecd 	.word	0x08109ecd
 8109e90:	08109ecd 	.word	0x08109ecd
 8109e94:	08109ecd 	.word	0x08109ecd
 8109e98:	08109ec5 	.word	0x08109ec5
 8109e9c:	2301      	movs	r3, #1
 8109e9e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109ea2:	e0bc      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109ea4:	2304      	movs	r3, #4
 8109ea6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109eaa:	e0b8      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109eac:	2308      	movs	r3, #8
 8109eae:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109eb2:	e0b4      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109eb4:	2310      	movs	r3, #16
 8109eb6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109eba:	e0b0      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109ebc:	2320      	movs	r3, #32
 8109ebe:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109ec2:	e0ac      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109ec4:	2340      	movs	r3, #64	@ 0x40
 8109ec6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109eca:	e0a8      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109ecc:	2380      	movs	r3, #128	@ 0x80
 8109ece:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109ed2:	e0a4      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109ed4:	697b      	ldr	r3, [r7, #20]
 8109ed6:	681b      	ldr	r3, [r3, #0]
 8109ed8:	4a8f      	ldr	r2, [pc, #572]	@ (810a118 <UART_SetConfig+0x6a0>)
 8109eda:	4293      	cmp	r3, r2
 8109edc:	d130      	bne.n	8109f40 <UART_SetConfig+0x4c8>
 8109ede:	4b8d      	ldr	r3, [pc, #564]	@ (810a114 <UART_SetConfig+0x69c>)
 8109ee0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8109ee2:	f003 0307 	and.w	r3, r3, #7
 8109ee6:	2b05      	cmp	r3, #5
 8109ee8:	d826      	bhi.n	8109f38 <UART_SetConfig+0x4c0>
 8109eea:	a201      	add	r2, pc, #4	@ (adr r2, 8109ef0 <UART_SetConfig+0x478>)
 8109eec:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8109ef0:	08109f09 	.word	0x08109f09
 8109ef4:	08109f11 	.word	0x08109f11
 8109ef8:	08109f19 	.word	0x08109f19
 8109efc:	08109f21 	.word	0x08109f21
 8109f00:	08109f29 	.word	0x08109f29
 8109f04:	08109f31 	.word	0x08109f31
 8109f08:	2300      	movs	r3, #0
 8109f0a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109f0e:	e086      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109f10:	2304      	movs	r3, #4
 8109f12:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109f16:	e082      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109f18:	2308      	movs	r3, #8
 8109f1a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109f1e:	e07e      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109f20:	2310      	movs	r3, #16
 8109f22:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109f26:	e07a      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109f28:	2320      	movs	r3, #32
 8109f2a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109f2e:	e076      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109f30:	2340      	movs	r3, #64	@ 0x40
 8109f32:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109f36:	e072      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109f38:	2380      	movs	r3, #128	@ 0x80
 8109f3a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109f3e:	e06e      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109f40:	697b      	ldr	r3, [r7, #20]
 8109f42:	681b      	ldr	r3, [r3, #0]
 8109f44:	4a75      	ldr	r2, [pc, #468]	@ (810a11c <UART_SetConfig+0x6a4>)
 8109f46:	4293      	cmp	r3, r2
 8109f48:	d130      	bne.n	8109fac <UART_SetConfig+0x534>
 8109f4a:	4b72      	ldr	r3, [pc, #456]	@ (810a114 <UART_SetConfig+0x69c>)
 8109f4c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8109f4e:	f003 0307 	and.w	r3, r3, #7
 8109f52:	2b05      	cmp	r3, #5
 8109f54:	d826      	bhi.n	8109fa4 <UART_SetConfig+0x52c>
 8109f56:	a201      	add	r2, pc, #4	@ (adr r2, 8109f5c <UART_SetConfig+0x4e4>)
 8109f58:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8109f5c:	08109f75 	.word	0x08109f75
 8109f60:	08109f7d 	.word	0x08109f7d
 8109f64:	08109f85 	.word	0x08109f85
 8109f68:	08109f8d 	.word	0x08109f8d
 8109f6c:	08109f95 	.word	0x08109f95
 8109f70:	08109f9d 	.word	0x08109f9d
 8109f74:	2300      	movs	r3, #0
 8109f76:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109f7a:	e050      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109f7c:	2304      	movs	r3, #4
 8109f7e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109f82:	e04c      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109f84:	2308      	movs	r3, #8
 8109f86:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109f8a:	e048      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109f8c:	2310      	movs	r3, #16
 8109f8e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109f92:	e044      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109f94:	2320      	movs	r3, #32
 8109f96:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109f9a:	e040      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109f9c:	2340      	movs	r3, #64	@ 0x40
 8109f9e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109fa2:	e03c      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109fa4:	2380      	movs	r3, #128	@ 0x80
 8109fa6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109faa:	e038      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109fac:	697b      	ldr	r3, [r7, #20]
 8109fae:	681b      	ldr	r3, [r3, #0]
 8109fb0:	4a5b      	ldr	r2, [pc, #364]	@ (810a120 <UART_SetConfig+0x6a8>)
 8109fb2:	4293      	cmp	r3, r2
 8109fb4:	d130      	bne.n	810a018 <UART_SetConfig+0x5a0>
 8109fb6:	4b57      	ldr	r3, [pc, #348]	@ (810a114 <UART_SetConfig+0x69c>)
 8109fb8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8109fba:	f003 0307 	and.w	r3, r3, #7
 8109fbe:	2b05      	cmp	r3, #5
 8109fc0:	d826      	bhi.n	810a010 <UART_SetConfig+0x598>
 8109fc2:	a201      	add	r2, pc, #4	@ (adr r2, 8109fc8 <UART_SetConfig+0x550>)
 8109fc4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8109fc8:	08109fe1 	.word	0x08109fe1
 8109fcc:	08109fe9 	.word	0x08109fe9
 8109fd0:	08109ff1 	.word	0x08109ff1
 8109fd4:	08109ff9 	.word	0x08109ff9
 8109fd8:	0810a001 	.word	0x0810a001
 8109fdc:	0810a009 	.word	0x0810a009
 8109fe0:	2302      	movs	r3, #2
 8109fe2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109fe6:	e01a      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109fe8:	2304      	movs	r3, #4
 8109fea:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109fee:	e016      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109ff0:	2308      	movs	r3, #8
 8109ff2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109ff6:	e012      	b.n	810a01e <UART_SetConfig+0x5a6>
 8109ff8:	2310      	movs	r3, #16
 8109ffa:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8109ffe:	e00e      	b.n	810a01e <UART_SetConfig+0x5a6>
 810a000:	2320      	movs	r3, #32
 810a002:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 810a006:	e00a      	b.n	810a01e <UART_SetConfig+0x5a6>
 810a008:	2340      	movs	r3, #64	@ 0x40
 810a00a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 810a00e:	e006      	b.n	810a01e <UART_SetConfig+0x5a6>
 810a010:	2380      	movs	r3, #128	@ 0x80
 810a012:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 810a016:	e002      	b.n	810a01e <UART_SetConfig+0x5a6>
 810a018:	2380      	movs	r3, #128	@ 0x80
 810a01a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 810a01e:	697b      	ldr	r3, [r7, #20]
 810a020:	681b      	ldr	r3, [r3, #0]
 810a022:	4a3f      	ldr	r2, [pc, #252]	@ (810a120 <UART_SetConfig+0x6a8>)
 810a024:	4293      	cmp	r3, r2
 810a026:	f040 80f8 	bne.w	810a21a <UART_SetConfig+0x7a2>
 810a02a:	f897 3043 	ldrb.w	r3, [r7, #67]	@ 0x43
 810a02e:	2b20      	cmp	r3, #32
 810a030:	dc46      	bgt.n	810a0c0 <UART_SetConfig+0x648>
 810a032:	2b02      	cmp	r3, #2
 810a034:	f2c0 8082 	blt.w	810a13c <UART_SetConfig+0x6c4>
 810a038:	3b02      	subs	r3, #2
 810a03a:	2b1e      	cmp	r3, #30
 810a03c:	d87e      	bhi.n	810a13c <UART_SetConfig+0x6c4>
 810a03e:	a201      	add	r2, pc, #4	@ (adr r2, 810a044 <UART_SetConfig+0x5cc>)
 810a040:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 810a044:	0810a0c7 	.word	0x0810a0c7
 810a048:	0810a13d 	.word	0x0810a13d
 810a04c:	0810a0cf 	.word	0x0810a0cf
 810a050:	0810a13d 	.word	0x0810a13d
 810a054:	0810a13d 	.word	0x0810a13d
 810a058:	0810a13d 	.word	0x0810a13d
 810a05c:	0810a0df 	.word	0x0810a0df
 810a060:	0810a13d 	.word	0x0810a13d
 810a064:	0810a13d 	.word	0x0810a13d
 810a068:	0810a13d 	.word	0x0810a13d
 810a06c:	0810a13d 	.word	0x0810a13d
 810a070:	0810a13d 	.word	0x0810a13d
 810a074:	0810a13d 	.word	0x0810a13d
 810a078:	0810a13d 	.word	0x0810a13d
 810a07c:	0810a0ef 	.word	0x0810a0ef
 810a080:	0810a13d 	.word	0x0810a13d
 810a084:	0810a13d 	.word	0x0810a13d
 810a088:	0810a13d 	.word	0x0810a13d
 810a08c:	0810a13d 	.word	0x0810a13d
 810a090:	0810a13d 	.word	0x0810a13d
 810a094:	0810a13d 	.word	0x0810a13d
 810a098:	0810a13d 	.word	0x0810a13d
 810a09c:	0810a13d 	.word	0x0810a13d
 810a0a0:	0810a13d 	.word	0x0810a13d
 810a0a4:	0810a13d 	.word	0x0810a13d
 810a0a8:	0810a13d 	.word	0x0810a13d
 810a0ac:	0810a13d 	.word	0x0810a13d
 810a0b0:	0810a13d 	.word	0x0810a13d
 810a0b4:	0810a13d 	.word	0x0810a13d
 810a0b8:	0810a13d 	.word	0x0810a13d
 810a0bc:	0810a12f 	.word	0x0810a12f
 810a0c0:	2b40      	cmp	r3, #64	@ 0x40
 810a0c2:	d037      	beq.n	810a134 <UART_SetConfig+0x6bc>
 810a0c4:	e03a      	b.n	810a13c <UART_SetConfig+0x6c4>
 810a0c6:	f7fe f8cd 	bl	8108264 <HAL_RCCEx_GetD3PCLK1Freq>
 810a0ca:	63f8      	str	r0, [r7, #60]	@ 0x3c
 810a0cc:	e03c      	b.n	810a148 <UART_SetConfig+0x6d0>
 810a0ce:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 810a0d2:	4618      	mov	r0, r3
 810a0d4:	f7fe f8dc 	bl	8108290 <HAL_RCCEx_GetPLL2ClockFreq>
 810a0d8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810a0da:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810a0dc:	e034      	b.n	810a148 <UART_SetConfig+0x6d0>
 810a0de:	f107 0318 	add.w	r3, r7, #24
 810a0e2:	4618      	mov	r0, r3
 810a0e4:	f7fe fa28 	bl	8108538 <HAL_RCCEx_GetPLL3ClockFreq>
 810a0e8:	69fb      	ldr	r3, [r7, #28]
 810a0ea:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810a0ec:	e02c      	b.n	810a148 <UART_SetConfig+0x6d0>
 810a0ee:	4b09      	ldr	r3, [pc, #36]	@ (810a114 <UART_SetConfig+0x69c>)
 810a0f0:	681b      	ldr	r3, [r3, #0]
 810a0f2:	f003 0320 	and.w	r3, r3, #32
 810a0f6:	2b00      	cmp	r3, #0
 810a0f8:	d016      	beq.n	810a128 <UART_SetConfig+0x6b0>
 810a0fa:	4b06      	ldr	r3, [pc, #24]	@ (810a114 <UART_SetConfig+0x69c>)
 810a0fc:	681b      	ldr	r3, [r3, #0]
 810a0fe:	08db      	lsrs	r3, r3, #3
 810a100:	f003 0303 	and.w	r3, r3, #3
 810a104:	4a07      	ldr	r2, [pc, #28]	@ (810a124 <UART_SetConfig+0x6ac>)
 810a106:	fa22 f303 	lsr.w	r3, r2, r3
 810a10a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810a10c:	e01c      	b.n	810a148 <UART_SetConfig+0x6d0>
 810a10e:	bf00      	nop
 810a110:	40011400 	.word	0x40011400
 810a114:	58024400 	.word	0x58024400
 810a118:	40007800 	.word	0x40007800
 810a11c:	40007c00 	.word	0x40007c00
 810a120:	58000c00 	.word	0x58000c00
 810a124:	03d09000 	.word	0x03d09000
 810a128:	4b9d      	ldr	r3, [pc, #628]	@ (810a3a0 <UART_SetConfig+0x928>)
 810a12a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810a12c:	e00c      	b.n	810a148 <UART_SetConfig+0x6d0>
 810a12e:	4b9d      	ldr	r3, [pc, #628]	@ (810a3a4 <UART_SetConfig+0x92c>)
 810a130:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810a132:	e009      	b.n	810a148 <UART_SetConfig+0x6d0>
 810a134:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 810a138:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810a13a:	e005      	b.n	810a148 <UART_SetConfig+0x6d0>
 810a13c:	2300      	movs	r3, #0
 810a13e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810a140:	2301      	movs	r3, #1
 810a142:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 810a146:	bf00      	nop
 810a148:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 810a14a:	2b00      	cmp	r3, #0
 810a14c:	f000 81de 	beq.w	810a50c <UART_SetConfig+0xa94>
 810a150:	697b      	ldr	r3, [r7, #20]
 810a152:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 810a154:	4a94      	ldr	r2, [pc, #592]	@ (810a3a8 <UART_SetConfig+0x930>)
 810a156:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 810a15a:	461a      	mov	r2, r3
 810a15c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 810a15e:	fbb3 f3f2 	udiv	r3, r3, r2
 810a162:	633b      	str	r3, [r7, #48]	@ 0x30
 810a164:	697b      	ldr	r3, [r7, #20]
 810a166:	685a      	ldr	r2, [r3, #4]
 810a168:	4613      	mov	r3, r2
 810a16a:	005b      	lsls	r3, r3, #1
 810a16c:	4413      	add	r3, r2
 810a16e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 810a170:	429a      	cmp	r2, r3
 810a172:	d305      	bcc.n	810a180 <UART_SetConfig+0x708>
 810a174:	697b      	ldr	r3, [r7, #20]
 810a176:	685b      	ldr	r3, [r3, #4]
 810a178:	031b      	lsls	r3, r3, #12
 810a17a:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 810a17c:	429a      	cmp	r2, r3
 810a17e:	d903      	bls.n	810a188 <UART_SetConfig+0x710>
 810a180:	2301      	movs	r3, #1
 810a182:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 810a186:	e1c1      	b.n	810a50c <UART_SetConfig+0xa94>
 810a188:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 810a18a:	2200      	movs	r2, #0
 810a18c:	60bb      	str	r3, [r7, #8]
 810a18e:	60fa      	str	r2, [r7, #12]
 810a190:	697b      	ldr	r3, [r7, #20]
 810a192:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 810a194:	4a84      	ldr	r2, [pc, #528]	@ (810a3a8 <UART_SetConfig+0x930>)
 810a196:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 810a19a:	b29b      	uxth	r3, r3
 810a19c:	2200      	movs	r2, #0
 810a19e:	603b      	str	r3, [r7, #0]
 810a1a0:	607a      	str	r2, [r7, #4]
 810a1a2:	e9d7 2300 	ldrd	r2, r3, [r7]
 810a1a6:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 810a1aa:	f7f6 fd85 	bl	8100cb8 <__aeabi_uldivmod>
 810a1ae:	4602      	mov	r2, r0
 810a1b0:	460b      	mov	r3, r1
 810a1b2:	4610      	mov	r0, r2
 810a1b4:	4619      	mov	r1, r3
 810a1b6:	f04f 0200 	mov.w	r2, #0
 810a1ba:	f04f 0300 	mov.w	r3, #0
 810a1be:	020b      	lsls	r3, r1, #8
 810a1c0:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
 810a1c4:	0202      	lsls	r2, r0, #8
 810a1c6:	6979      	ldr	r1, [r7, #20]
 810a1c8:	6849      	ldr	r1, [r1, #4]
 810a1ca:	0849      	lsrs	r1, r1, #1
 810a1cc:	2000      	movs	r0, #0
 810a1ce:	460c      	mov	r4, r1
 810a1d0:	4605      	mov	r5, r0
 810a1d2:	eb12 0804 	adds.w	r8, r2, r4
 810a1d6:	eb43 0905 	adc.w	r9, r3, r5
 810a1da:	697b      	ldr	r3, [r7, #20]
 810a1dc:	685b      	ldr	r3, [r3, #4]
 810a1de:	2200      	movs	r2, #0
 810a1e0:	469a      	mov	sl, r3
 810a1e2:	4693      	mov	fp, r2
 810a1e4:	4652      	mov	r2, sl
 810a1e6:	465b      	mov	r3, fp
 810a1e8:	4640      	mov	r0, r8
 810a1ea:	4649      	mov	r1, r9
 810a1ec:	f7f6 fd64 	bl	8100cb8 <__aeabi_uldivmod>
 810a1f0:	4602      	mov	r2, r0
 810a1f2:	460b      	mov	r3, r1
 810a1f4:	4613      	mov	r3, r2
 810a1f6:	63bb      	str	r3, [r7, #56]	@ 0x38
 810a1f8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810a1fa:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 810a1fe:	d308      	bcc.n	810a212 <UART_SetConfig+0x79a>
 810a200:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810a202:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 810a206:	d204      	bcs.n	810a212 <UART_SetConfig+0x79a>
 810a208:	697b      	ldr	r3, [r7, #20]
 810a20a:	681b      	ldr	r3, [r3, #0]
 810a20c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 810a20e:	60da      	str	r2, [r3, #12]
 810a210:	e17c      	b.n	810a50c <UART_SetConfig+0xa94>
 810a212:	2301      	movs	r3, #1
 810a214:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 810a218:	e178      	b.n	810a50c <UART_SetConfig+0xa94>
 810a21a:	697b      	ldr	r3, [r7, #20]
 810a21c:	69db      	ldr	r3, [r3, #28]
 810a21e:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 810a222:	f040 80c5 	bne.w	810a3b0 <UART_SetConfig+0x938>
 810a226:	f897 3043 	ldrb.w	r3, [r7, #67]	@ 0x43
 810a22a:	2b20      	cmp	r3, #32
 810a22c:	dc48      	bgt.n	810a2c0 <UART_SetConfig+0x848>
 810a22e:	2b00      	cmp	r3, #0
 810a230:	db7b      	blt.n	810a32a <UART_SetConfig+0x8b2>
 810a232:	2b20      	cmp	r3, #32
 810a234:	d879      	bhi.n	810a32a <UART_SetConfig+0x8b2>
 810a236:	a201      	add	r2, pc, #4	@ (adr r2, 810a23c <UART_SetConfig+0x7c4>)
 810a238:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 810a23c:	0810a2c7 	.word	0x0810a2c7
 810a240:	0810a2cf 	.word	0x0810a2cf
 810a244:	0810a32b 	.word	0x0810a32b
 810a248:	0810a32b 	.word	0x0810a32b
 810a24c:	0810a2d7 	.word	0x0810a2d7
 810a250:	0810a32b 	.word	0x0810a32b
 810a254:	0810a32b 	.word	0x0810a32b
 810a258:	0810a32b 	.word	0x0810a32b
 810a25c:	0810a2e7 	.word	0x0810a2e7
 810a260:	0810a32b 	.word	0x0810a32b
 810a264:	0810a32b 	.word	0x0810a32b
 810a268:	0810a32b 	.word	0x0810a32b
 810a26c:	0810a32b 	.word	0x0810a32b
 810a270:	0810a32b 	.word	0x0810a32b
 810a274:	0810a32b 	.word	0x0810a32b
 810a278:	0810a32b 	.word	0x0810a32b
 810a27c:	0810a2f7 	.word	0x0810a2f7
 810a280:	0810a32b 	.word	0x0810a32b
 810a284:	0810a32b 	.word	0x0810a32b
 810a288:	0810a32b 	.word	0x0810a32b
 810a28c:	0810a32b 	.word	0x0810a32b
 810a290:	0810a32b 	.word	0x0810a32b
 810a294:	0810a32b 	.word	0x0810a32b
 810a298:	0810a32b 	.word	0x0810a32b
 810a29c:	0810a32b 	.word	0x0810a32b
 810a2a0:	0810a32b 	.word	0x0810a32b
 810a2a4:	0810a32b 	.word	0x0810a32b
 810a2a8:	0810a32b 	.word	0x0810a32b
 810a2ac:	0810a32b 	.word	0x0810a32b
 810a2b0:	0810a32b 	.word	0x0810a32b
 810a2b4:	0810a32b 	.word	0x0810a32b
 810a2b8:	0810a32b 	.word	0x0810a32b
 810a2bc:	0810a31d 	.word	0x0810a31d
 810a2c0:	2b40      	cmp	r3, #64	@ 0x40
 810a2c2:	d02e      	beq.n	810a322 <UART_SetConfig+0x8aa>
 810a2c4:	e031      	b.n	810a32a <UART_SetConfig+0x8b2>
 810a2c6:	f7fc fd55 	bl	8106d74 <HAL_RCC_GetPCLK1Freq>
 810a2ca:	63f8      	str	r0, [r7, #60]	@ 0x3c
 810a2cc:	e033      	b.n	810a336 <UART_SetConfig+0x8be>
 810a2ce:	f7fc fd67 	bl	8106da0 <HAL_RCC_GetPCLK2Freq>
 810a2d2:	63f8      	str	r0, [r7, #60]	@ 0x3c
 810a2d4:	e02f      	b.n	810a336 <UART_SetConfig+0x8be>
 810a2d6:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 810a2da:	4618      	mov	r0, r3
 810a2dc:	f7fd ffd8 	bl	8108290 <HAL_RCCEx_GetPLL2ClockFreq>
 810a2e0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810a2e2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810a2e4:	e027      	b.n	810a336 <UART_SetConfig+0x8be>
 810a2e6:	f107 0318 	add.w	r3, r7, #24
 810a2ea:	4618      	mov	r0, r3
 810a2ec:	f7fe f924 	bl	8108538 <HAL_RCCEx_GetPLL3ClockFreq>
 810a2f0:	69fb      	ldr	r3, [r7, #28]
 810a2f2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810a2f4:	e01f      	b.n	810a336 <UART_SetConfig+0x8be>
 810a2f6:	4b2d      	ldr	r3, [pc, #180]	@ (810a3ac <UART_SetConfig+0x934>)
 810a2f8:	681b      	ldr	r3, [r3, #0]
 810a2fa:	f003 0320 	and.w	r3, r3, #32
 810a2fe:	2b00      	cmp	r3, #0
 810a300:	d009      	beq.n	810a316 <UART_SetConfig+0x89e>
 810a302:	4b2a      	ldr	r3, [pc, #168]	@ (810a3ac <UART_SetConfig+0x934>)
 810a304:	681b      	ldr	r3, [r3, #0]
 810a306:	08db      	lsrs	r3, r3, #3
 810a308:	f003 0303 	and.w	r3, r3, #3
 810a30c:	4a24      	ldr	r2, [pc, #144]	@ (810a3a0 <UART_SetConfig+0x928>)
 810a30e:	fa22 f303 	lsr.w	r3, r2, r3
 810a312:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810a314:	e00f      	b.n	810a336 <UART_SetConfig+0x8be>
 810a316:	4b22      	ldr	r3, [pc, #136]	@ (810a3a0 <UART_SetConfig+0x928>)
 810a318:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810a31a:	e00c      	b.n	810a336 <UART_SetConfig+0x8be>
 810a31c:	4b21      	ldr	r3, [pc, #132]	@ (810a3a4 <UART_SetConfig+0x92c>)
 810a31e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810a320:	e009      	b.n	810a336 <UART_SetConfig+0x8be>
 810a322:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 810a326:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810a328:	e005      	b.n	810a336 <UART_SetConfig+0x8be>
 810a32a:	2300      	movs	r3, #0
 810a32c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810a32e:	2301      	movs	r3, #1
 810a330:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 810a334:	bf00      	nop
 810a336:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 810a338:	2b00      	cmp	r3, #0
 810a33a:	f000 80e7 	beq.w	810a50c <UART_SetConfig+0xa94>
 810a33e:	697b      	ldr	r3, [r7, #20]
 810a340:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 810a342:	4a19      	ldr	r2, [pc, #100]	@ (810a3a8 <UART_SetConfig+0x930>)
 810a344:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 810a348:	461a      	mov	r2, r3
 810a34a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 810a34c:	fbb3 f3f2 	udiv	r3, r3, r2
 810a350:	005a      	lsls	r2, r3, #1
 810a352:	697b      	ldr	r3, [r7, #20]
 810a354:	685b      	ldr	r3, [r3, #4]
 810a356:	085b      	lsrs	r3, r3, #1
 810a358:	441a      	add	r2, r3
 810a35a:	697b      	ldr	r3, [r7, #20]
 810a35c:	685b      	ldr	r3, [r3, #4]
 810a35e:	fbb2 f3f3 	udiv	r3, r2, r3
 810a362:	63bb      	str	r3, [r7, #56]	@ 0x38
 810a364:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810a366:	2b0f      	cmp	r3, #15
 810a368:	d916      	bls.n	810a398 <UART_SetConfig+0x920>
 810a36a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810a36c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 810a370:	d212      	bcs.n	810a398 <UART_SetConfig+0x920>
 810a372:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810a374:	b29b      	uxth	r3, r3
 810a376:	f023 030f 	bic.w	r3, r3, #15
 810a37a:	86fb      	strh	r3, [r7, #54]	@ 0x36
 810a37c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810a37e:	085b      	lsrs	r3, r3, #1
 810a380:	b29b      	uxth	r3, r3
 810a382:	f003 0307 	and.w	r3, r3, #7
 810a386:	b29a      	uxth	r2, r3
 810a388:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 810a38a:	4313      	orrs	r3, r2
 810a38c:	86fb      	strh	r3, [r7, #54]	@ 0x36
 810a38e:	697b      	ldr	r3, [r7, #20]
 810a390:	681b      	ldr	r3, [r3, #0]
 810a392:	8efa      	ldrh	r2, [r7, #54]	@ 0x36
 810a394:	60da      	str	r2, [r3, #12]
 810a396:	e0b9      	b.n	810a50c <UART_SetConfig+0xa94>
 810a398:	2301      	movs	r3, #1
 810a39a:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 810a39e:	e0b5      	b.n	810a50c <UART_SetConfig+0xa94>
 810a3a0:	03d09000 	.word	0x03d09000
 810a3a4:	003d0900 	.word	0x003d0900
 810a3a8:	08111878 	.word	0x08111878
 810a3ac:	58024400 	.word	0x58024400
 810a3b0:	f897 3043 	ldrb.w	r3, [r7, #67]	@ 0x43
 810a3b4:	2b20      	cmp	r3, #32
 810a3b6:	dc49      	bgt.n	810a44c <UART_SetConfig+0x9d4>
 810a3b8:	2b00      	cmp	r3, #0
 810a3ba:	db7c      	blt.n	810a4b6 <UART_SetConfig+0xa3e>
 810a3bc:	2b20      	cmp	r3, #32
 810a3be:	d87a      	bhi.n	810a4b6 <UART_SetConfig+0xa3e>
 810a3c0:	a201      	add	r2, pc, #4	@ (adr r2, 810a3c8 <UART_SetConfig+0x950>)
 810a3c2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 810a3c6:	bf00      	nop
 810a3c8:	0810a453 	.word	0x0810a453
 810a3cc:	0810a45b 	.word	0x0810a45b
 810a3d0:	0810a4b7 	.word	0x0810a4b7
 810a3d4:	0810a4b7 	.word	0x0810a4b7
 810a3d8:	0810a463 	.word	0x0810a463
 810a3dc:	0810a4b7 	.word	0x0810a4b7
 810a3e0:	0810a4b7 	.word	0x0810a4b7
 810a3e4:	0810a4b7 	.word	0x0810a4b7
 810a3e8:	0810a473 	.word	0x0810a473
 810a3ec:	0810a4b7 	.word	0x0810a4b7
 810a3f0:	0810a4b7 	.word	0x0810a4b7
 810a3f4:	0810a4b7 	.word	0x0810a4b7
 810a3f8:	0810a4b7 	.word	0x0810a4b7
 810a3fc:	0810a4b7 	.word	0x0810a4b7
 810a400:	0810a4b7 	.word	0x0810a4b7
 810a404:	0810a4b7 	.word	0x0810a4b7
 810a408:	0810a483 	.word	0x0810a483
 810a40c:	0810a4b7 	.word	0x0810a4b7
 810a410:	0810a4b7 	.word	0x0810a4b7
 810a414:	0810a4b7 	.word	0x0810a4b7
 810a418:	0810a4b7 	.word	0x0810a4b7
 810a41c:	0810a4b7 	.word	0x0810a4b7
 810a420:	0810a4b7 	.word	0x0810a4b7
 810a424:	0810a4b7 	.word	0x0810a4b7
 810a428:	0810a4b7 	.word	0x0810a4b7
 810a42c:	0810a4b7 	.word	0x0810a4b7
 810a430:	0810a4b7 	.word	0x0810a4b7
 810a434:	0810a4b7 	.word	0x0810a4b7
 810a438:	0810a4b7 	.word	0x0810a4b7
 810a43c:	0810a4b7 	.word	0x0810a4b7
 810a440:	0810a4b7 	.word	0x0810a4b7
 810a444:	0810a4b7 	.word	0x0810a4b7
 810a448:	0810a4a9 	.word	0x0810a4a9
 810a44c:	2b40      	cmp	r3, #64	@ 0x40
 810a44e:	d02e      	beq.n	810a4ae <UART_SetConfig+0xa36>
 810a450:	e031      	b.n	810a4b6 <UART_SetConfig+0xa3e>
 810a452:	f7fc fc8f 	bl	8106d74 <HAL_RCC_GetPCLK1Freq>
 810a456:	63f8      	str	r0, [r7, #60]	@ 0x3c
 810a458:	e033      	b.n	810a4c2 <UART_SetConfig+0xa4a>
 810a45a:	f7fc fca1 	bl	8106da0 <HAL_RCC_GetPCLK2Freq>
 810a45e:	63f8      	str	r0, [r7, #60]	@ 0x3c
 810a460:	e02f      	b.n	810a4c2 <UART_SetConfig+0xa4a>
 810a462:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 810a466:	4618      	mov	r0, r3
 810a468:	f7fd ff12 	bl	8108290 <HAL_RCCEx_GetPLL2ClockFreq>
 810a46c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810a46e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810a470:	e027      	b.n	810a4c2 <UART_SetConfig+0xa4a>
 810a472:	f107 0318 	add.w	r3, r7, #24
 810a476:	4618      	mov	r0, r3
 810a478:	f7fe f85e 	bl	8108538 <HAL_RCCEx_GetPLL3ClockFreq>
 810a47c:	69fb      	ldr	r3, [r7, #28]
 810a47e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810a480:	e01f      	b.n	810a4c2 <UART_SetConfig+0xa4a>
 810a482:	4b2d      	ldr	r3, [pc, #180]	@ (810a538 <UART_SetConfig+0xac0>)
 810a484:	681b      	ldr	r3, [r3, #0]
 810a486:	f003 0320 	and.w	r3, r3, #32
 810a48a:	2b00      	cmp	r3, #0
 810a48c:	d009      	beq.n	810a4a2 <UART_SetConfig+0xa2a>
 810a48e:	4b2a      	ldr	r3, [pc, #168]	@ (810a538 <UART_SetConfig+0xac0>)
 810a490:	681b      	ldr	r3, [r3, #0]
 810a492:	08db      	lsrs	r3, r3, #3
 810a494:	f003 0303 	and.w	r3, r3, #3
 810a498:	4a28      	ldr	r2, [pc, #160]	@ (810a53c <UART_SetConfig+0xac4>)
 810a49a:	fa22 f303 	lsr.w	r3, r2, r3
 810a49e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810a4a0:	e00f      	b.n	810a4c2 <UART_SetConfig+0xa4a>
 810a4a2:	4b26      	ldr	r3, [pc, #152]	@ (810a53c <UART_SetConfig+0xac4>)
 810a4a4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810a4a6:	e00c      	b.n	810a4c2 <UART_SetConfig+0xa4a>
 810a4a8:	4b25      	ldr	r3, [pc, #148]	@ (810a540 <UART_SetConfig+0xac8>)
 810a4aa:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810a4ac:	e009      	b.n	810a4c2 <UART_SetConfig+0xa4a>
 810a4ae:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 810a4b2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810a4b4:	e005      	b.n	810a4c2 <UART_SetConfig+0xa4a>
 810a4b6:	2300      	movs	r3, #0
 810a4b8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810a4ba:	2301      	movs	r3, #1
 810a4bc:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 810a4c0:	bf00      	nop
 810a4c2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 810a4c4:	2b00      	cmp	r3, #0
 810a4c6:	d021      	beq.n	810a50c <UART_SetConfig+0xa94>
 810a4c8:	697b      	ldr	r3, [r7, #20]
 810a4ca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 810a4cc:	4a1d      	ldr	r2, [pc, #116]	@ (810a544 <UART_SetConfig+0xacc>)
 810a4ce:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 810a4d2:	461a      	mov	r2, r3
 810a4d4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 810a4d6:	fbb3 f2f2 	udiv	r2, r3, r2
 810a4da:	697b      	ldr	r3, [r7, #20]
 810a4dc:	685b      	ldr	r3, [r3, #4]
 810a4de:	085b      	lsrs	r3, r3, #1
 810a4e0:	441a      	add	r2, r3
 810a4e2:	697b      	ldr	r3, [r7, #20]
 810a4e4:	685b      	ldr	r3, [r3, #4]
 810a4e6:	fbb2 f3f3 	udiv	r3, r2, r3
 810a4ea:	63bb      	str	r3, [r7, #56]	@ 0x38
 810a4ec:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810a4ee:	2b0f      	cmp	r3, #15
 810a4f0:	d909      	bls.n	810a506 <UART_SetConfig+0xa8e>
 810a4f2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810a4f4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 810a4f8:	d205      	bcs.n	810a506 <UART_SetConfig+0xa8e>
 810a4fa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810a4fc:	b29a      	uxth	r2, r3
 810a4fe:	697b      	ldr	r3, [r7, #20]
 810a500:	681b      	ldr	r3, [r3, #0]
 810a502:	60da      	str	r2, [r3, #12]
 810a504:	e002      	b.n	810a50c <UART_SetConfig+0xa94>
 810a506:	2301      	movs	r3, #1
 810a508:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 810a50c:	697b      	ldr	r3, [r7, #20]
 810a50e:	2201      	movs	r2, #1
 810a510:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 810a514:	697b      	ldr	r3, [r7, #20]
 810a516:	2201      	movs	r2, #1
 810a518:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 810a51c:	697b      	ldr	r3, [r7, #20]
 810a51e:	2200      	movs	r2, #0
 810a520:	675a      	str	r2, [r3, #116]	@ 0x74
 810a522:	697b      	ldr	r3, [r7, #20]
 810a524:	2200      	movs	r2, #0
 810a526:	679a      	str	r2, [r3, #120]	@ 0x78
 810a528:	f897 3042 	ldrb.w	r3, [r7, #66]	@ 0x42
 810a52c:	4618      	mov	r0, r3
 810a52e:	3748      	adds	r7, #72	@ 0x48
 810a530:	46bd      	mov	sp, r7
 810a532:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 810a536:	bf00      	nop
 810a538:	58024400 	.word	0x58024400
 810a53c:	03d09000 	.word	0x03d09000
 810a540:	003d0900 	.word	0x003d0900
 810a544:	08111878 	.word	0x08111878

0810a548 <UART_AdvFeatureConfig>:
 810a548:	b480      	push	{r7}
 810a54a:	b083      	sub	sp, #12
 810a54c:	af00      	add	r7, sp, #0
 810a54e:	6078      	str	r0, [r7, #4]
 810a550:	687b      	ldr	r3, [r7, #4]
 810a552:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 810a554:	f003 0308 	and.w	r3, r3, #8
 810a558:	2b00      	cmp	r3, #0
 810a55a:	d00a      	beq.n	810a572 <UART_AdvFeatureConfig+0x2a>
 810a55c:	687b      	ldr	r3, [r7, #4]
 810a55e:	681b      	ldr	r3, [r3, #0]
 810a560:	685b      	ldr	r3, [r3, #4]
 810a562:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 810a566:	687b      	ldr	r3, [r7, #4]
 810a568:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 810a56a:	687b      	ldr	r3, [r7, #4]
 810a56c:	681b      	ldr	r3, [r3, #0]
 810a56e:	430a      	orrs	r2, r1
 810a570:	605a      	str	r2, [r3, #4]
 810a572:	687b      	ldr	r3, [r7, #4]
 810a574:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 810a576:	f003 0301 	and.w	r3, r3, #1
 810a57a:	2b00      	cmp	r3, #0
 810a57c:	d00a      	beq.n	810a594 <UART_AdvFeatureConfig+0x4c>
 810a57e:	687b      	ldr	r3, [r7, #4]
 810a580:	681b      	ldr	r3, [r3, #0]
 810a582:	685b      	ldr	r3, [r3, #4]
 810a584:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 810a588:	687b      	ldr	r3, [r7, #4]
 810a58a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 810a58c:	687b      	ldr	r3, [r7, #4]
 810a58e:	681b      	ldr	r3, [r3, #0]
 810a590:	430a      	orrs	r2, r1
 810a592:	605a      	str	r2, [r3, #4]
 810a594:	687b      	ldr	r3, [r7, #4]
 810a596:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 810a598:	f003 0302 	and.w	r3, r3, #2
 810a59c:	2b00      	cmp	r3, #0
 810a59e:	d00a      	beq.n	810a5b6 <UART_AdvFeatureConfig+0x6e>
 810a5a0:	687b      	ldr	r3, [r7, #4]
 810a5a2:	681b      	ldr	r3, [r3, #0]
 810a5a4:	685b      	ldr	r3, [r3, #4]
 810a5a6:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 810a5aa:	687b      	ldr	r3, [r7, #4]
 810a5ac:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 810a5ae:	687b      	ldr	r3, [r7, #4]
 810a5b0:	681b      	ldr	r3, [r3, #0]
 810a5b2:	430a      	orrs	r2, r1
 810a5b4:	605a      	str	r2, [r3, #4]
 810a5b6:	687b      	ldr	r3, [r7, #4]
 810a5b8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 810a5ba:	f003 0304 	and.w	r3, r3, #4
 810a5be:	2b00      	cmp	r3, #0
 810a5c0:	d00a      	beq.n	810a5d8 <UART_AdvFeatureConfig+0x90>
 810a5c2:	687b      	ldr	r3, [r7, #4]
 810a5c4:	681b      	ldr	r3, [r3, #0]
 810a5c6:	685b      	ldr	r3, [r3, #4]
 810a5c8:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 810a5cc:	687b      	ldr	r3, [r7, #4]
 810a5ce:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 810a5d0:	687b      	ldr	r3, [r7, #4]
 810a5d2:	681b      	ldr	r3, [r3, #0]
 810a5d4:	430a      	orrs	r2, r1
 810a5d6:	605a      	str	r2, [r3, #4]
 810a5d8:	687b      	ldr	r3, [r7, #4]
 810a5da:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 810a5dc:	f003 0310 	and.w	r3, r3, #16
 810a5e0:	2b00      	cmp	r3, #0
 810a5e2:	d00a      	beq.n	810a5fa <UART_AdvFeatureConfig+0xb2>
 810a5e4:	687b      	ldr	r3, [r7, #4]
 810a5e6:	681b      	ldr	r3, [r3, #0]
 810a5e8:	689b      	ldr	r3, [r3, #8]
 810a5ea:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 810a5ee:	687b      	ldr	r3, [r7, #4]
 810a5f0:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 810a5f2:	687b      	ldr	r3, [r7, #4]
 810a5f4:	681b      	ldr	r3, [r3, #0]
 810a5f6:	430a      	orrs	r2, r1
 810a5f8:	609a      	str	r2, [r3, #8]
 810a5fa:	687b      	ldr	r3, [r7, #4]
 810a5fc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 810a5fe:	f003 0320 	and.w	r3, r3, #32
 810a602:	2b00      	cmp	r3, #0
 810a604:	d00a      	beq.n	810a61c <UART_AdvFeatureConfig+0xd4>
 810a606:	687b      	ldr	r3, [r7, #4]
 810a608:	681b      	ldr	r3, [r3, #0]
 810a60a:	689b      	ldr	r3, [r3, #8]
 810a60c:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 810a610:	687b      	ldr	r3, [r7, #4]
 810a612:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 810a614:	687b      	ldr	r3, [r7, #4]
 810a616:	681b      	ldr	r3, [r3, #0]
 810a618:	430a      	orrs	r2, r1
 810a61a:	609a      	str	r2, [r3, #8]
 810a61c:	687b      	ldr	r3, [r7, #4]
 810a61e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 810a620:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 810a624:	2b00      	cmp	r3, #0
 810a626:	d01a      	beq.n	810a65e <UART_AdvFeatureConfig+0x116>
 810a628:	687b      	ldr	r3, [r7, #4]
 810a62a:	681b      	ldr	r3, [r3, #0]
 810a62c:	685b      	ldr	r3, [r3, #4]
 810a62e:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 810a632:	687b      	ldr	r3, [r7, #4]
 810a634:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 810a636:	687b      	ldr	r3, [r7, #4]
 810a638:	681b      	ldr	r3, [r3, #0]
 810a63a:	430a      	orrs	r2, r1
 810a63c:	605a      	str	r2, [r3, #4]
 810a63e:	687b      	ldr	r3, [r7, #4]
 810a640:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 810a642:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 810a646:	d10a      	bne.n	810a65e <UART_AdvFeatureConfig+0x116>
 810a648:	687b      	ldr	r3, [r7, #4]
 810a64a:	681b      	ldr	r3, [r3, #0]
 810a64c:	685b      	ldr	r3, [r3, #4]
 810a64e:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 810a652:	687b      	ldr	r3, [r7, #4]
 810a654:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 810a656:	687b      	ldr	r3, [r7, #4]
 810a658:	681b      	ldr	r3, [r3, #0]
 810a65a:	430a      	orrs	r2, r1
 810a65c:	605a      	str	r2, [r3, #4]
 810a65e:	687b      	ldr	r3, [r7, #4]
 810a660:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 810a662:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 810a666:	2b00      	cmp	r3, #0
 810a668:	d00a      	beq.n	810a680 <UART_AdvFeatureConfig+0x138>
 810a66a:	687b      	ldr	r3, [r7, #4]
 810a66c:	681b      	ldr	r3, [r3, #0]
 810a66e:	685b      	ldr	r3, [r3, #4]
 810a670:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 810a674:	687b      	ldr	r3, [r7, #4]
 810a676:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 810a678:	687b      	ldr	r3, [r7, #4]
 810a67a:	681b      	ldr	r3, [r3, #0]
 810a67c:	430a      	orrs	r2, r1
 810a67e:	605a      	str	r2, [r3, #4]
 810a680:	bf00      	nop
 810a682:	370c      	adds	r7, #12
 810a684:	46bd      	mov	sp, r7
 810a686:	f85d 7b04 	ldr.w	r7, [sp], #4
 810a68a:	4770      	bx	lr

0810a68c <UART_CheckIdleState>:
 810a68c:	b580      	push	{r7, lr}
 810a68e:	b098      	sub	sp, #96	@ 0x60
 810a690:	af02      	add	r7, sp, #8
 810a692:	6078      	str	r0, [r7, #4]
 810a694:	687b      	ldr	r3, [r7, #4]
 810a696:	2200      	movs	r2, #0
 810a698:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 810a69c:	f7fb f95c 	bl	8105958 <HAL_GetTick>
 810a6a0:	6578      	str	r0, [r7, #84]	@ 0x54
 810a6a2:	687b      	ldr	r3, [r7, #4]
 810a6a4:	681b      	ldr	r3, [r3, #0]
 810a6a6:	681b      	ldr	r3, [r3, #0]
 810a6a8:	f003 0308 	and.w	r3, r3, #8
 810a6ac:	2b08      	cmp	r3, #8
 810a6ae:	d12f      	bne.n	810a710 <UART_CheckIdleState+0x84>
 810a6b0:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 810a6b4:	9300      	str	r3, [sp, #0]
 810a6b6:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 810a6b8:	2200      	movs	r2, #0
 810a6ba:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 810a6be:	6878      	ldr	r0, [r7, #4]
 810a6c0:	f000 f88e 	bl	810a7e0 <UART_WaitOnFlagUntilTimeout>
 810a6c4:	4603      	mov	r3, r0
 810a6c6:	2b00      	cmp	r3, #0
 810a6c8:	d022      	beq.n	810a710 <UART_CheckIdleState+0x84>
 810a6ca:	687b      	ldr	r3, [r7, #4]
 810a6cc:	681b      	ldr	r3, [r3, #0]
 810a6ce:	63bb      	str	r3, [r7, #56]	@ 0x38
 810a6d0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810a6d2:	e853 3f00 	ldrex	r3, [r3]
 810a6d6:	637b      	str	r3, [r7, #52]	@ 0x34
 810a6d8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 810a6da:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 810a6de:	653b      	str	r3, [r7, #80]	@ 0x50
 810a6e0:	687b      	ldr	r3, [r7, #4]
 810a6e2:	681b      	ldr	r3, [r3, #0]
 810a6e4:	461a      	mov	r2, r3
 810a6e6:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 810a6e8:	647b      	str	r3, [r7, #68]	@ 0x44
 810a6ea:	643a      	str	r2, [r7, #64]	@ 0x40
 810a6ec:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 810a6ee:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 810a6f0:	e841 2300 	strex	r3, r2, [r1]
 810a6f4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810a6f6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 810a6f8:	2b00      	cmp	r3, #0
 810a6fa:	d1e6      	bne.n	810a6ca <UART_CheckIdleState+0x3e>
 810a6fc:	687b      	ldr	r3, [r7, #4]
 810a6fe:	2220      	movs	r2, #32
 810a700:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 810a704:	687b      	ldr	r3, [r7, #4]
 810a706:	2200      	movs	r2, #0
 810a708:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 810a70c:	2303      	movs	r3, #3
 810a70e:	e063      	b.n	810a7d8 <UART_CheckIdleState+0x14c>
 810a710:	687b      	ldr	r3, [r7, #4]
 810a712:	681b      	ldr	r3, [r3, #0]
 810a714:	681b      	ldr	r3, [r3, #0]
 810a716:	f003 0304 	and.w	r3, r3, #4
 810a71a:	2b04      	cmp	r3, #4
 810a71c:	d149      	bne.n	810a7b2 <UART_CheckIdleState+0x126>
 810a71e:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 810a722:	9300      	str	r3, [sp, #0]
 810a724:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 810a726:	2200      	movs	r2, #0
 810a728:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 810a72c:	6878      	ldr	r0, [r7, #4]
 810a72e:	f000 f857 	bl	810a7e0 <UART_WaitOnFlagUntilTimeout>
 810a732:	4603      	mov	r3, r0
 810a734:	2b00      	cmp	r3, #0
 810a736:	d03c      	beq.n	810a7b2 <UART_CheckIdleState+0x126>
 810a738:	687b      	ldr	r3, [r7, #4]
 810a73a:	681b      	ldr	r3, [r3, #0]
 810a73c:	627b      	str	r3, [r7, #36]	@ 0x24
 810a73e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810a740:	e853 3f00 	ldrex	r3, [r3]
 810a744:	623b      	str	r3, [r7, #32]
 810a746:	6a3b      	ldr	r3, [r7, #32]
 810a748:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 810a74c:	64fb      	str	r3, [r7, #76]	@ 0x4c
 810a74e:	687b      	ldr	r3, [r7, #4]
 810a750:	681b      	ldr	r3, [r3, #0]
 810a752:	461a      	mov	r2, r3
 810a754:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 810a756:	633b      	str	r3, [r7, #48]	@ 0x30
 810a758:	62fa      	str	r2, [r7, #44]	@ 0x2c
 810a75a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 810a75c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 810a75e:	e841 2300 	strex	r3, r2, [r1]
 810a762:	62bb      	str	r3, [r7, #40]	@ 0x28
 810a764:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810a766:	2b00      	cmp	r3, #0
 810a768:	d1e6      	bne.n	810a738 <UART_CheckIdleState+0xac>
 810a76a:	687b      	ldr	r3, [r7, #4]
 810a76c:	681b      	ldr	r3, [r3, #0]
 810a76e:	3308      	adds	r3, #8
 810a770:	613b      	str	r3, [r7, #16]
 810a772:	693b      	ldr	r3, [r7, #16]
 810a774:	e853 3f00 	ldrex	r3, [r3]
 810a778:	60fb      	str	r3, [r7, #12]
 810a77a:	68fb      	ldr	r3, [r7, #12]
 810a77c:	f023 0301 	bic.w	r3, r3, #1
 810a780:	64bb      	str	r3, [r7, #72]	@ 0x48
 810a782:	687b      	ldr	r3, [r7, #4]
 810a784:	681b      	ldr	r3, [r3, #0]
 810a786:	3308      	adds	r3, #8
 810a788:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 810a78a:	61fa      	str	r2, [r7, #28]
 810a78c:	61bb      	str	r3, [r7, #24]
 810a78e:	69b9      	ldr	r1, [r7, #24]
 810a790:	69fa      	ldr	r2, [r7, #28]
 810a792:	e841 2300 	strex	r3, r2, [r1]
 810a796:	617b      	str	r3, [r7, #20]
 810a798:	697b      	ldr	r3, [r7, #20]
 810a79a:	2b00      	cmp	r3, #0
 810a79c:	d1e5      	bne.n	810a76a <UART_CheckIdleState+0xde>
 810a79e:	687b      	ldr	r3, [r7, #4]
 810a7a0:	2220      	movs	r2, #32
 810a7a2:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 810a7a6:	687b      	ldr	r3, [r7, #4]
 810a7a8:	2200      	movs	r2, #0
 810a7aa:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 810a7ae:	2303      	movs	r3, #3
 810a7b0:	e012      	b.n	810a7d8 <UART_CheckIdleState+0x14c>
 810a7b2:	687b      	ldr	r3, [r7, #4]
 810a7b4:	2220      	movs	r2, #32
 810a7b6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 810a7ba:	687b      	ldr	r3, [r7, #4]
 810a7bc:	2220      	movs	r2, #32
 810a7be:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 810a7c2:	687b      	ldr	r3, [r7, #4]
 810a7c4:	2200      	movs	r2, #0
 810a7c6:	66da      	str	r2, [r3, #108]	@ 0x6c
 810a7c8:	687b      	ldr	r3, [r7, #4]
 810a7ca:	2200      	movs	r2, #0
 810a7cc:	671a      	str	r2, [r3, #112]	@ 0x70
 810a7ce:	687b      	ldr	r3, [r7, #4]
 810a7d0:	2200      	movs	r2, #0
 810a7d2:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 810a7d6:	2300      	movs	r3, #0
 810a7d8:	4618      	mov	r0, r3
 810a7da:	3758      	adds	r7, #88	@ 0x58
 810a7dc:	46bd      	mov	sp, r7
 810a7de:	bd80      	pop	{r7, pc}

0810a7e0 <UART_WaitOnFlagUntilTimeout>:
 810a7e0:	b580      	push	{r7, lr}
 810a7e2:	b084      	sub	sp, #16
 810a7e4:	af00      	add	r7, sp, #0
 810a7e6:	60f8      	str	r0, [r7, #12]
 810a7e8:	60b9      	str	r1, [r7, #8]
 810a7ea:	603b      	str	r3, [r7, #0]
 810a7ec:	4613      	mov	r3, r2
 810a7ee:	71fb      	strb	r3, [r7, #7]
 810a7f0:	e04f      	b.n	810a892 <UART_WaitOnFlagUntilTimeout+0xb2>
 810a7f2:	69bb      	ldr	r3, [r7, #24]
 810a7f4:	f1b3 3fff 	cmp.w	r3, #4294967295
 810a7f8:	d04b      	beq.n	810a892 <UART_WaitOnFlagUntilTimeout+0xb2>
 810a7fa:	f7fb f8ad 	bl	8105958 <HAL_GetTick>
 810a7fe:	4602      	mov	r2, r0
 810a800:	683b      	ldr	r3, [r7, #0]
 810a802:	1ad3      	subs	r3, r2, r3
 810a804:	69ba      	ldr	r2, [r7, #24]
 810a806:	429a      	cmp	r2, r3
 810a808:	d302      	bcc.n	810a810 <UART_WaitOnFlagUntilTimeout+0x30>
 810a80a:	69bb      	ldr	r3, [r7, #24]
 810a80c:	2b00      	cmp	r3, #0
 810a80e:	d101      	bne.n	810a814 <UART_WaitOnFlagUntilTimeout+0x34>
 810a810:	2303      	movs	r3, #3
 810a812:	e04e      	b.n	810a8b2 <UART_WaitOnFlagUntilTimeout+0xd2>
 810a814:	68fb      	ldr	r3, [r7, #12]
 810a816:	681b      	ldr	r3, [r3, #0]
 810a818:	681b      	ldr	r3, [r3, #0]
 810a81a:	f003 0304 	and.w	r3, r3, #4
 810a81e:	2b00      	cmp	r3, #0
 810a820:	d037      	beq.n	810a892 <UART_WaitOnFlagUntilTimeout+0xb2>
 810a822:	68bb      	ldr	r3, [r7, #8]
 810a824:	2b80      	cmp	r3, #128	@ 0x80
 810a826:	d034      	beq.n	810a892 <UART_WaitOnFlagUntilTimeout+0xb2>
 810a828:	68bb      	ldr	r3, [r7, #8]
 810a82a:	2b40      	cmp	r3, #64	@ 0x40
 810a82c:	d031      	beq.n	810a892 <UART_WaitOnFlagUntilTimeout+0xb2>
 810a82e:	68fb      	ldr	r3, [r7, #12]
 810a830:	681b      	ldr	r3, [r3, #0]
 810a832:	69db      	ldr	r3, [r3, #28]
 810a834:	f003 0308 	and.w	r3, r3, #8
 810a838:	2b08      	cmp	r3, #8
 810a83a:	d110      	bne.n	810a85e <UART_WaitOnFlagUntilTimeout+0x7e>
 810a83c:	68fb      	ldr	r3, [r7, #12]
 810a83e:	681b      	ldr	r3, [r3, #0]
 810a840:	2208      	movs	r2, #8
 810a842:	621a      	str	r2, [r3, #32]
 810a844:	68f8      	ldr	r0, [r7, #12]
 810a846:	f000 f95b 	bl	810ab00 <UART_EndRxTransfer>
 810a84a:	68fb      	ldr	r3, [r7, #12]
 810a84c:	2208      	movs	r2, #8
 810a84e:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 810a852:	68fb      	ldr	r3, [r7, #12]
 810a854:	2200      	movs	r2, #0
 810a856:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 810a85a:	2301      	movs	r3, #1
 810a85c:	e029      	b.n	810a8b2 <UART_WaitOnFlagUntilTimeout+0xd2>
 810a85e:	68fb      	ldr	r3, [r7, #12]
 810a860:	681b      	ldr	r3, [r3, #0]
 810a862:	69db      	ldr	r3, [r3, #28]
 810a864:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 810a868:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 810a86c:	d111      	bne.n	810a892 <UART_WaitOnFlagUntilTimeout+0xb2>
 810a86e:	68fb      	ldr	r3, [r7, #12]
 810a870:	681b      	ldr	r3, [r3, #0]
 810a872:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 810a876:	621a      	str	r2, [r3, #32]
 810a878:	68f8      	ldr	r0, [r7, #12]
 810a87a:	f000 f941 	bl	810ab00 <UART_EndRxTransfer>
 810a87e:	68fb      	ldr	r3, [r7, #12]
 810a880:	2220      	movs	r2, #32
 810a882:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 810a886:	68fb      	ldr	r3, [r7, #12]
 810a888:	2200      	movs	r2, #0
 810a88a:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 810a88e:	2303      	movs	r3, #3
 810a890:	e00f      	b.n	810a8b2 <UART_WaitOnFlagUntilTimeout+0xd2>
 810a892:	68fb      	ldr	r3, [r7, #12]
 810a894:	681b      	ldr	r3, [r3, #0]
 810a896:	69da      	ldr	r2, [r3, #28]
 810a898:	68bb      	ldr	r3, [r7, #8]
 810a89a:	4013      	ands	r3, r2
 810a89c:	68ba      	ldr	r2, [r7, #8]
 810a89e:	429a      	cmp	r2, r3
 810a8a0:	bf0c      	ite	eq
 810a8a2:	2301      	moveq	r3, #1
 810a8a4:	2300      	movne	r3, #0
 810a8a6:	b2db      	uxtb	r3, r3
 810a8a8:	461a      	mov	r2, r3
 810a8aa:	79fb      	ldrb	r3, [r7, #7]
 810a8ac:	429a      	cmp	r2, r3
 810a8ae:	d0a0      	beq.n	810a7f2 <UART_WaitOnFlagUntilTimeout+0x12>
 810a8b0:	2300      	movs	r3, #0
 810a8b2:	4618      	mov	r0, r3
 810a8b4:	3710      	adds	r7, #16
 810a8b6:	46bd      	mov	sp, r7
 810a8b8:	bd80      	pop	{r7, pc}
	...

0810a8bc <UART_Start_Receive_IT>:
 810a8bc:	b480      	push	{r7}
 810a8be:	b0a3      	sub	sp, #140	@ 0x8c
 810a8c0:	af00      	add	r7, sp, #0
 810a8c2:	60f8      	str	r0, [r7, #12]
 810a8c4:	60b9      	str	r1, [r7, #8]
 810a8c6:	4613      	mov	r3, r2
 810a8c8:	80fb      	strh	r3, [r7, #6]
 810a8ca:	68fb      	ldr	r3, [r7, #12]
 810a8cc:	68ba      	ldr	r2, [r7, #8]
 810a8ce:	659a      	str	r2, [r3, #88]	@ 0x58
 810a8d0:	68fb      	ldr	r3, [r7, #12]
 810a8d2:	88fa      	ldrh	r2, [r7, #6]
 810a8d4:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 810a8d8:	68fb      	ldr	r3, [r7, #12]
 810a8da:	88fa      	ldrh	r2, [r7, #6]
 810a8dc:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 810a8e0:	68fb      	ldr	r3, [r7, #12]
 810a8e2:	2200      	movs	r2, #0
 810a8e4:	675a      	str	r2, [r3, #116]	@ 0x74
 810a8e6:	68fb      	ldr	r3, [r7, #12]
 810a8e8:	689b      	ldr	r3, [r3, #8]
 810a8ea:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 810a8ee:	d10e      	bne.n	810a90e <UART_Start_Receive_IT+0x52>
 810a8f0:	68fb      	ldr	r3, [r7, #12]
 810a8f2:	691b      	ldr	r3, [r3, #16]
 810a8f4:	2b00      	cmp	r3, #0
 810a8f6:	d105      	bne.n	810a904 <UART_Start_Receive_IT+0x48>
 810a8f8:	68fb      	ldr	r3, [r7, #12]
 810a8fa:	f240 12ff 	movw	r2, #511	@ 0x1ff
 810a8fe:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 810a902:	e02d      	b.n	810a960 <UART_Start_Receive_IT+0xa4>
 810a904:	68fb      	ldr	r3, [r7, #12]
 810a906:	22ff      	movs	r2, #255	@ 0xff
 810a908:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 810a90c:	e028      	b.n	810a960 <UART_Start_Receive_IT+0xa4>
 810a90e:	68fb      	ldr	r3, [r7, #12]
 810a910:	689b      	ldr	r3, [r3, #8]
 810a912:	2b00      	cmp	r3, #0
 810a914:	d10d      	bne.n	810a932 <UART_Start_Receive_IT+0x76>
 810a916:	68fb      	ldr	r3, [r7, #12]
 810a918:	691b      	ldr	r3, [r3, #16]
 810a91a:	2b00      	cmp	r3, #0
 810a91c:	d104      	bne.n	810a928 <UART_Start_Receive_IT+0x6c>
 810a91e:	68fb      	ldr	r3, [r7, #12]
 810a920:	22ff      	movs	r2, #255	@ 0xff
 810a922:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 810a926:	e01b      	b.n	810a960 <UART_Start_Receive_IT+0xa4>
 810a928:	68fb      	ldr	r3, [r7, #12]
 810a92a:	227f      	movs	r2, #127	@ 0x7f
 810a92c:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 810a930:	e016      	b.n	810a960 <UART_Start_Receive_IT+0xa4>
 810a932:	68fb      	ldr	r3, [r7, #12]
 810a934:	689b      	ldr	r3, [r3, #8]
 810a936:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 810a93a:	d10d      	bne.n	810a958 <UART_Start_Receive_IT+0x9c>
 810a93c:	68fb      	ldr	r3, [r7, #12]
 810a93e:	691b      	ldr	r3, [r3, #16]
 810a940:	2b00      	cmp	r3, #0
 810a942:	d104      	bne.n	810a94e <UART_Start_Receive_IT+0x92>
 810a944:	68fb      	ldr	r3, [r7, #12]
 810a946:	227f      	movs	r2, #127	@ 0x7f
 810a948:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 810a94c:	e008      	b.n	810a960 <UART_Start_Receive_IT+0xa4>
 810a94e:	68fb      	ldr	r3, [r7, #12]
 810a950:	223f      	movs	r2, #63	@ 0x3f
 810a952:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 810a956:	e003      	b.n	810a960 <UART_Start_Receive_IT+0xa4>
 810a958:	68fb      	ldr	r3, [r7, #12]
 810a95a:	2200      	movs	r2, #0
 810a95c:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 810a960:	68fb      	ldr	r3, [r7, #12]
 810a962:	2200      	movs	r2, #0
 810a964:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 810a968:	68fb      	ldr	r3, [r7, #12]
 810a96a:	2222      	movs	r2, #34	@ 0x22
 810a96c:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 810a970:	68fb      	ldr	r3, [r7, #12]
 810a972:	681b      	ldr	r3, [r3, #0]
 810a974:	3308      	adds	r3, #8
 810a976:	667b      	str	r3, [r7, #100]	@ 0x64
 810a978:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 810a97a:	e853 3f00 	ldrex	r3, [r3]
 810a97e:	663b      	str	r3, [r7, #96]	@ 0x60
 810a980:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 810a982:	f043 0301 	orr.w	r3, r3, #1
 810a986:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 810a98a:	68fb      	ldr	r3, [r7, #12]
 810a98c:	681b      	ldr	r3, [r3, #0]
 810a98e:	3308      	adds	r3, #8
 810a990:	f8d7 2084 	ldr.w	r2, [r7, #132]	@ 0x84
 810a994:	673a      	str	r2, [r7, #112]	@ 0x70
 810a996:	66fb      	str	r3, [r7, #108]	@ 0x6c
 810a998:	6ef9      	ldr	r1, [r7, #108]	@ 0x6c
 810a99a:	6f3a      	ldr	r2, [r7, #112]	@ 0x70
 810a99c:	e841 2300 	strex	r3, r2, [r1]
 810a9a0:	66bb      	str	r3, [r7, #104]	@ 0x68
 810a9a2:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 810a9a4:	2b00      	cmp	r3, #0
 810a9a6:	d1e3      	bne.n	810a970 <UART_Start_Receive_IT+0xb4>
 810a9a8:	68fb      	ldr	r3, [r7, #12]
 810a9aa:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 810a9ac:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 810a9b0:	d14f      	bne.n	810aa52 <UART_Start_Receive_IT+0x196>
 810a9b2:	68fb      	ldr	r3, [r7, #12]
 810a9b4:	f8b3 3068 	ldrh.w	r3, [r3, #104]	@ 0x68
 810a9b8:	88fa      	ldrh	r2, [r7, #6]
 810a9ba:	429a      	cmp	r2, r3
 810a9bc:	d349      	bcc.n	810aa52 <UART_Start_Receive_IT+0x196>
 810a9be:	68fb      	ldr	r3, [r7, #12]
 810a9c0:	689b      	ldr	r3, [r3, #8]
 810a9c2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 810a9c6:	d107      	bne.n	810a9d8 <UART_Start_Receive_IT+0x11c>
 810a9c8:	68fb      	ldr	r3, [r7, #12]
 810a9ca:	691b      	ldr	r3, [r3, #16]
 810a9cc:	2b00      	cmp	r3, #0
 810a9ce:	d103      	bne.n	810a9d8 <UART_Start_Receive_IT+0x11c>
 810a9d0:	68fb      	ldr	r3, [r7, #12]
 810a9d2:	4a47      	ldr	r2, [pc, #284]	@ (810aaf0 <UART_Start_Receive_IT+0x234>)
 810a9d4:	675a      	str	r2, [r3, #116]	@ 0x74
 810a9d6:	e002      	b.n	810a9de <UART_Start_Receive_IT+0x122>
 810a9d8:	68fb      	ldr	r3, [r7, #12]
 810a9da:	4a46      	ldr	r2, [pc, #280]	@ (810aaf4 <UART_Start_Receive_IT+0x238>)
 810a9dc:	675a      	str	r2, [r3, #116]	@ 0x74
 810a9de:	68fb      	ldr	r3, [r7, #12]
 810a9e0:	691b      	ldr	r3, [r3, #16]
 810a9e2:	2b00      	cmp	r3, #0
 810a9e4:	d01a      	beq.n	810aa1c <UART_Start_Receive_IT+0x160>
 810a9e6:	68fb      	ldr	r3, [r7, #12]
 810a9e8:	681b      	ldr	r3, [r3, #0]
 810a9ea:	653b      	str	r3, [r7, #80]	@ 0x50
 810a9ec:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 810a9ee:	e853 3f00 	ldrex	r3, [r3]
 810a9f2:	64fb      	str	r3, [r7, #76]	@ 0x4c
 810a9f4:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 810a9f6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 810a9fa:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 810a9fe:	68fb      	ldr	r3, [r7, #12]
 810aa00:	681b      	ldr	r3, [r3, #0]
 810aa02:	461a      	mov	r2, r3
 810aa04:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 810aa08:	65fb      	str	r3, [r7, #92]	@ 0x5c
 810aa0a:	65ba      	str	r2, [r7, #88]	@ 0x58
 810aa0c:	6db9      	ldr	r1, [r7, #88]	@ 0x58
 810aa0e:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 810aa10:	e841 2300 	strex	r3, r2, [r1]
 810aa14:	657b      	str	r3, [r7, #84]	@ 0x54
 810aa16:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 810aa18:	2b00      	cmp	r3, #0
 810aa1a:	d1e4      	bne.n	810a9e6 <UART_Start_Receive_IT+0x12a>
 810aa1c:	68fb      	ldr	r3, [r7, #12]
 810aa1e:	681b      	ldr	r3, [r3, #0]
 810aa20:	3308      	adds	r3, #8
 810aa22:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810aa24:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 810aa26:	e853 3f00 	ldrex	r3, [r3]
 810aa2a:	63bb      	str	r3, [r7, #56]	@ 0x38
 810aa2c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810aa2e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 810aa32:	67fb      	str	r3, [r7, #124]	@ 0x7c
 810aa34:	68fb      	ldr	r3, [r7, #12]
 810aa36:	681b      	ldr	r3, [r3, #0]
 810aa38:	3308      	adds	r3, #8
 810aa3a:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 810aa3c:	64ba      	str	r2, [r7, #72]	@ 0x48
 810aa3e:	647b      	str	r3, [r7, #68]	@ 0x44
 810aa40:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 810aa42:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 810aa44:	e841 2300 	strex	r3, r2, [r1]
 810aa48:	643b      	str	r3, [r7, #64]	@ 0x40
 810aa4a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 810aa4c:	2b00      	cmp	r3, #0
 810aa4e:	d1e5      	bne.n	810aa1c <UART_Start_Receive_IT+0x160>
 810aa50:	e046      	b.n	810aae0 <UART_Start_Receive_IT+0x224>
 810aa52:	68fb      	ldr	r3, [r7, #12]
 810aa54:	689b      	ldr	r3, [r3, #8]
 810aa56:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 810aa5a:	d107      	bne.n	810aa6c <UART_Start_Receive_IT+0x1b0>
 810aa5c:	68fb      	ldr	r3, [r7, #12]
 810aa5e:	691b      	ldr	r3, [r3, #16]
 810aa60:	2b00      	cmp	r3, #0
 810aa62:	d103      	bne.n	810aa6c <UART_Start_Receive_IT+0x1b0>
 810aa64:	68fb      	ldr	r3, [r7, #12]
 810aa66:	4a24      	ldr	r2, [pc, #144]	@ (810aaf8 <UART_Start_Receive_IT+0x23c>)
 810aa68:	675a      	str	r2, [r3, #116]	@ 0x74
 810aa6a:	e002      	b.n	810aa72 <UART_Start_Receive_IT+0x1b6>
 810aa6c:	68fb      	ldr	r3, [r7, #12]
 810aa6e:	4a23      	ldr	r2, [pc, #140]	@ (810aafc <UART_Start_Receive_IT+0x240>)
 810aa70:	675a      	str	r2, [r3, #116]	@ 0x74
 810aa72:	68fb      	ldr	r3, [r7, #12]
 810aa74:	691b      	ldr	r3, [r3, #16]
 810aa76:	2b00      	cmp	r3, #0
 810aa78:	d019      	beq.n	810aaae <UART_Start_Receive_IT+0x1f2>
 810aa7a:	68fb      	ldr	r3, [r7, #12]
 810aa7c:	681b      	ldr	r3, [r3, #0]
 810aa7e:	62bb      	str	r3, [r7, #40]	@ 0x28
 810aa80:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810aa82:	e853 3f00 	ldrex	r3, [r3]
 810aa86:	627b      	str	r3, [r7, #36]	@ 0x24
 810aa88:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810aa8a:	f443 7390 	orr.w	r3, r3, #288	@ 0x120
 810aa8e:	677b      	str	r3, [r7, #116]	@ 0x74
 810aa90:	68fb      	ldr	r3, [r7, #12]
 810aa92:	681b      	ldr	r3, [r3, #0]
 810aa94:	461a      	mov	r2, r3
 810aa96:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 810aa98:	637b      	str	r3, [r7, #52]	@ 0x34
 810aa9a:	633a      	str	r2, [r7, #48]	@ 0x30
 810aa9c:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 810aa9e:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 810aaa0:	e841 2300 	strex	r3, r2, [r1]
 810aaa4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 810aaa6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 810aaa8:	2b00      	cmp	r3, #0
 810aaaa:	d1e6      	bne.n	810aa7a <UART_Start_Receive_IT+0x1be>
 810aaac:	e018      	b.n	810aae0 <UART_Start_Receive_IT+0x224>
 810aaae:	68fb      	ldr	r3, [r7, #12]
 810aab0:	681b      	ldr	r3, [r3, #0]
 810aab2:	617b      	str	r3, [r7, #20]
 810aab4:	697b      	ldr	r3, [r7, #20]
 810aab6:	e853 3f00 	ldrex	r3, [r3]
 810aaba:	613b      	str	r3, [r7, #16]
 810aabc:	693b      	ldr	r3, [r7, #16]
 810aabe:	f043 0320 	orr.w	r3, r3, #32
 810aac2:	67bb      	str	r3, [r7, #120]	@ 0x78
 810aac4:	68fb      	ldr	r3, [r7, #12]
 810aac6:	681b      	ldr	r3, [r3, #0]
 810aac8:	461a      	mov	r2, r3
 810aaca:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 810aacc:	623b      	str	r3, [r7, #32]
 810aace:	61fa      	str	r2, [r7, #28]
 810aad0:	69f9      	ldr	r1, [r7, #28]
 810aad2:	6a3a      	ldr	r2, [r7, #32]
 810aad4:	e841 2300 	strex	r3, r2, [r1]
 810aad8:	61bb      	str	r3, [r7, #24]
 810aada:	69bb      	ldr	r3, [r7, #24]
 810aadc:	2b00      	cmp	r3, #0
 810aade:	d1e6      	bne.n	810aaae <UART_Start_Receive_IT+0x1f2>
 810aae0:	2300      	movs	r3, #0
 810aae2:	4618      	mov	r0, r3
 810aae4:	378c      	adds	r7, #140	@ 0x8c
 810aae6:	46bd      	mov	sp, r7
 810aae8:	f85d 7b04 	ldr.w	r7, [sp], #4
 810aaec:	4770      	bx	lr
 810aaee:	bf00      	nop
 810aaf0:	0810b31d 	.word	0x0810b31d
 810aaf4:	0810afb9 	.word	0x0810afb9
 810aaf8:	0810ae01 	.word	0x0810ae01
 810aafc:	0810ac49 	.word	0x0810ac49

0810ab00 <UART_EndRxTransfer>:
 810ab00:	b480      	push	{r7}
 810ab02:	b095      	sub	sp, #84	@ 0x54
 810ab04:	af00      	add	r7, sp, #0
 810ab06:	6078      	str	r0, [r7, #4]
 810ab08:	687b      	ldr	r3, [r7, #4]
 810ab0a:	681b      	ldr	r3, [r3, #0]
 810ab0c:	637b      	str	r3, [r7, #52]	@ 0x34
 810ab0e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 810ab10:	e853 3f00 	ldrex	r3, [r3]
 810ab14:	633b      	str	r3, [r7, #48]	@ 0x30
 810ab16:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810ab18:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 810ab1c:	64fb      	str	r3, [r7, #76]	@ 0x4c
 810ab1e:	687b      	ldr	r3, [r7, #4]
 810ab20:	681b      	ldr	r3, [r3, #0]
 810ab22:	461a      	mov	r2, r3
 810ab24:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 810ab26:	643b      	str	r3, [r7, #64]	@ 0x40
 810ab28:	63fa      	str	r2, [r7, #60]	@ 0x3c
 810ab2a:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 810ab2c:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 810ab2e:	e841 2300 	strex	r3, r2, [r1]
 810ab32:	63bb      	str	r3, [r7, #56]	@ 0x38
 810ab34:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810ab36:	2b00      	cmp	r3, #0
 810ab38:	d1e6      	bne.n	810ab08 <UART_EndRxTransfer+0x8>
 810ab3a:	687b      	ldr	r3, [r7, #4]
 810ab3c:	681b      	ldr	r3, [r3, #0]
 810ab3e:	3308      	adds	r3, #8
 810ab40:	623b      	str	r3, [r7, #32]
 810ab42:	6a3b      	ldr	r3, [r7, #32]
 810ab44:	e853 3f00 	ldrex	r3, [r3]
 810ab48:	61fb      	str	r3, [r7, #28]
 810ab4a:	69fb      	ldr	r3, [r7, #28]
 810ab4c:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 810ab50:	f023 0301 	bic.w	r3, r3, #1
 810ab54:	64bb      	str	r3, [r7, #72]	@ 0x48
 810ab56:	687b      	ldr	r3, [r7, #4]
 810ab58:	681b      	ldr	r3, [r3, #0]
 810ab5a:	3308      	adds	r3, #8
 810ab5c:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 810ab5e:	62fa      	str	r2, [r7, #44]	@ 0x2c
 810ab60:	62bb      	str	r3, [r7, #40]	@ 0x28
 810ab62:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 810ab64:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 810ab66:	e841 2300 	strex	r3, r2, [r1]
 810ab6a:	627b      	str	r3, [r7, #36]	@ 0x24
 810ab6c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810ab6e:	2b00      	cmp	r3, #0
 810ab70:	d1e3      	bne.n	810ab3a <UART_EndRxTransfer+0x3a>
 810ab72:	687b      	ldr	r3, [r7, #4]
 810ab74:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 810ab76:	2b01      	cmp	r3, #1
 810ab78:	d118      	bne.n	810abac <UART_EndRxTransfer+0xac>
 810ab7a:	687b      	ldr	r3, [r7, #4]
 810ab7c:	681b      	ldr	r3, [r3, #0]
 810ab7e:	60fb      	str	r3, [r7, #12]
 810ab80:	68fb      	ldr	r3, [r7, #12]
 810ab82:	e853 3f00 	ldrex	r3, [r3]
 810ab86:	60bb      	str	r3, [r7, #8]
 810ab88:	68bb      	ldr	r3, [r7, #8]
 810ab8a:	f023 0310 	bic.w	r3, r3, #16
 810ab8e:	647b      	str	r3, [r7, #68]	@ 0x44
 810ab90:	687b      	ldr	r3, [r7, #4]
 810ab92:	681b      	ldr	r3, [r3, #0]
 810ab94:	461a      	mov	r2, r3
 810ab96:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 810ab98:	61bb      	str	r3, [r7, #24]
 810ab9a:	617a      	str	r2, [r7, #20]
 810ab9c:	6979      	ldr	r1, [r7, #20]
 810ab9e:	69ba      	ldr	r2, [r7, #24]
 810aba0:	e841 2300 	strex	r3, r2, [r1]
 810aba4:	613b      	str	r3, [r7, #16]
 810aba6:	693b      	ldr	r3, [r7, #16]
 810aba8:	2b00      	cmp	r3, #0
 810abaa:	d1e6      	bne.n	810ab7a <UART_EndRxTransfer+0x7a>
 810abac:	687b      	ldr	r3, [r7, #4]
 810abae:	2220      	movs	r2, #32
 810abb0:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 810abb4:	687b      	ldr	r3, [r7, #4]
 810abb6:	2200      	movs	r2, #0
 810abb8:	66da      	str	r2, [r3, #108]	@ 0x6c
 810abba:	687b      	ldr	r3, [r7, #4]
 810abbc:	2200      	movs	r2, #0
 810abbe:	675a      	str	r2, [r3, #116]	@ 0x74
 810abc0:	bf00      	nop
 810abc2:	3754      	adds	r7, #84	@ 0x54
 810abc4:	46bd      	mov	sp, r7
 810abc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 810abca:	4770      	bx	lr

0810abcc <UART_DMAAbortOnError>:
 810abcc:	b580      	push	{r7, lr}
 810abce:	b084      	sub	sp, #16
 810abd0:	af00      	add	r7, sp, #0
 810abd2:	6078      	str	r0, [r7, #4]
 810abd4:	687b      	ldr	r3, [r7, #4]
 810abd6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 810abd8:	60fb      	str	r3, [r7, #12]
 810abda:	68fb      	ldr	r3, [r7, #12]
 810abdc:	2200      	movs	r2, #0
 810abde:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 810abe2:	68f8      	ldr	r0, [r7, #12]
 810abe4:	f7fe ff32 	bl	8109a4c <HAL_UART_ErrorCallback>
 810abe8:	bf00      	nop
 810abea:	3710      	adds	r7, #16
 810abec:	46bd      	mov	sp, r7
 810abee:	bd80      	pop	{r7, pc}

0810abf0 <UART_EndTransmit_IT>:
 810abf0:	b580      	push	{r7, lr}
 810abf2:	b088      	sub	sp, #32
 810abf4:	af00      	add	r7, sp, #0
 810abf6:	6078      	str	r0, [r7, #4]
 810abf8:	687b      	ldr	r3, [r7, #4]
 810abfa:	681b      	ldr	r3, [r3, #0]
 810abfc:	60fb      	str	r3, [r7, #12]
 810abfe:	68fb      	ldr	r3, [r7, #12]
 810ac00:	e853 3f00 	ldrex	r3, [r3]
 810ac04:	60bb      	str	r3, [r7, #8]
 810ac06:	68bb      	ldr	r3, [r7, #8]
 810ac08:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 810ac0c:	61fb      	str	r3, [r7, #28]
 810ac0e:	687b      	ldr	r3, [r7, #4]
 810ac10:	681b      	ldr	r3, [r3, #0]
 810ac12:	461a      	mov	r2, r3
 810ac14:	69fb      	ldr	r3, [r7, #28]
 810ac16:	61bb      	str	r3, [r7, #24]
 810ac18:	617a      	str	r2, [r7, #20]
 810ac1a:	6979      	ldr	r1, [r7, #20]
 810ac1c:	69ba      	ldr	r2, [r7, #24]
 810ac1e:	e841 2300 	strex	r3, r2, [r1]
 810ac22:	613b      	str	r3, [r7, #16]
 810ac24:	693b      	ldr	r3, [r7, #16]
 810ac26:	2b00      	cmp	r3, #0
 810ac28:	d1e6      	bne.n	810abf8 <UART_EndTransmit_IT+0x8>
 810ac2a:	687b      	ldr	r3, [r7, #4]
 810ac2c:	2220      	movs	r2, #32
 810ac2e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 810ac32:	687b      	ldr	r3, [r7, #4]
 810ac34:	2200      	movs	r2, #0
 810ac36:	679a      	str	r2, [r3, #120]	@ 0x78
 810ac38:	6878      	ldr	r0, [r7, #4]
 810ac3a:	f7fe fefd 	bl	8109a38 <HAL_UART_TxCpltCallback>
 810ac3e:	bf00      	nop
 810ac40:	3720      	adds	r7, #32
 810ac42:	46bd      	mov	sp, r7
 810ac44:	bd80      	pop	{r7, pc}
	...

0810ac48 <UART_RxISR_8BIT>:
 810ac48:	b580      	push	{r7, lr}
 810ac4a:	b09c      	sub	sp, #112	@ 0x70
 810ac4c:	af00      	add	r7, sp, #0
 810ac4e:	6078      	str	r0, [r7, #4]
 810ac50:	687b      	ldr	r3, [r7, #4]
 810ac52:	f8b3 3060 	ldrh.w	r3, [r3, #96]	@ 0x60
 810ac56:	f8a7 306e 	strh.w	r3, [r7, #110]	@ 0x6e
 810ac5a:	687b      	ldr	r3, [r7, #4]
 810ac5c:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 810ac60:	2b22      	cmp	r3, #34	@ 0x22
 810ac62:	f040 80be 	bne.w	810ade2 <UART_RxISR_8BIT+0x19a>
 810ac66:	687b      	ldr	r3, [r7, #4]
 810ac68:	681b      	ldr	r3, [r3, #0]
 810ac6a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 810ac6c:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 810ac70:	f8b7 306c 	ldrh.w	r3, [r7, #108]	@ 0x6c
 810ac74:	b2d9      	uxtb	r1, r3
 810ac76:	f8b7 306e 	ldrh.w	r3, [r7, #110]	@ 0x6e
 810ac7a:	b2da      	uxtb	r2, r3
 810ac7c:	687b      	ldr	r3, [r7, #4]
 810ac7e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 810ac80:	400a      	ands	r2, r1
 810ac82:	b2d2      	uxtb	r2, r2
 810ac84:	701a      	strb	r2, [r3, #0]
 810ac86:	687b      	ldr	r3, [r7, #4]
 810ac88:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 810ac8a:	1c5a      	adds	r2, r3, #1
 810ac8c:	687b      	ldr	r3, [r7, #4]
 810ac8e:	659a      	str	r2, [r3, #88]	@ 0x58
 810ac90:	687b      	ldr	r3, [r7, #4]
 810ac92:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 810ac96:	b29b      	uxth	r3, r3
 810ac98:	3b01      	subs	r3, #1
 810ac9a:	b29a      	uxth	r2, r3
 810ac9c:	687b      	ldr	r3, [r7, #4]
 810ac9e:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 810aca2:	687b      	ldr	r3, [r7, #4]
 810aca4:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 810aca8:	b29b      	uxth	r3, r3
 810acaa:	2b00      	cmp	r3, #0
 810acac:	f040 80a1 	bne.w	810adf2 <UART_RxISR_8BIT+0x1aa>
 810acb0:	687b      	ldr	r3, [r7, #4]
 810acb2:	681b      	ldr	r3, [r3, #0]
 810acb4:	64fb      	str	r3, [r7, #76]	@ 0x4c
 810acb6:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 810acb8:	e853 3f00 	ldrex	r3, [r3]
 810acbc:	64bb      	str	r3, [r7, #72]	@ 0x48
 810acbe:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 810acc0:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 810acc4:	66bb      	str	r3, [r7, #104]	@ 0x68
 810acc6:	687b      	ldr	r3, [r7, #4]
 810acc8:	681b      	ldr	r3, [r3, #0]
 810acca:	461a      	mov	r2, r3
 810accc:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 810acce:	65bb      	str	r3, [r7, #88]	@ 0x58
 810acd0:	657a      	str	r2, [r7, #84]	@ 0x54
 810acd2:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 810acd4:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 810acd6:	e841 2300 	strex	r3, r2, [r1]
 810acda:	653b      	str	r3, [r7, #80]	@ 0x50
 810acdc:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 810acde:	2b00      	cmp	r3, #0
 810ace0:	d1e6      	bne.n	810acb0 <UART_RxISR_8BIT+0x68>
 810ace2:	687b      	ldr	r3, [r7, #4]
 810ace4:	681b      	ldr	r3, [r3, #0]
 810ace6:	3308      	adds	r3, #8
 810ace8:	63bb      	str	r3, [r7, #56]	@ 0x38
 810acea:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810acec:	e853 3f00 	ldrex	r3, [r3]
 810acf0:	637b      	str	r3, [r7, #52]	@ 0x34
 810acf2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 810acf4:	f023 0301 	bic.w	r3, r3, #1
 810acf8:	667b      	str	r3, [r7, #100]	@ 0x64
 810acfa:	687b      	ldr	r3, [r7, #4]
 810acfc:	681b      	ldr	r3, [r3, #0]
 810acfe:	3308      	adds	r3, #8
 810ad00:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 810ad02:	647a      	str	r2, [r7, #68]	@ 0x44
 810ad04:	643b      	str	r3, [r7, #64]	@ 0x40
 810ad06:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 810ad08:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 810ad0a:	e841 2300 	strex	r3, r2, [r1]
 810ad0e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810ad10:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 810ad12:	2b00      	cmp	r3, #0
 810ad14:	d1e5      	bne.n	810ace2 <UART_RxISR_8BIT+0x9a>
 810ad16:	687b      	ldr	r3, [r7, #4]
 810ad18:	2220      	movs	r2, #32
 810ad1a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 810ad1e:	687b      	ldr	r3, [r7, #4]
 810ad20:	2200      	movs	r2, #0
 810ad22:	675a      	str	r2, [r3, #116]	@ 0x74
 810ad24:	687b      	ldr	r3, [r7, #4]
 810ad26:	2200      	movs	r2, #0
 810ad28:	671a      	str	r2, [r3, #112]	@ 0x70
 810ad2a:	687b      	ldr	r3, [r7, #4]
 810ad2c:	681b      	ldr	r3, [r3, #0]
 810ad2e:	4a33      	ldr	r2, [pc, #204]	@ (810adfc <UART_RxISR_8BIT+0x1b4>)
 810ad30:	4293      	cmp	r3, r2
 810ad32:	d01f      	beq.n	810ad74 <UART_RxISR_8BIT+0x12c>
 810ad34:	687b      	ldr	r3, [r7, #4]
 810ad36:	681b      	ldr	r3, [r3, #0]
 810ad38:	685b      	ldr	r3, [r3, #4]
 810ad3a:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 810ad3e:	2b00      	cmp	r3, #0
 810ad40:	d018      	beq.n	810ad74 <UART_RxISR_8BIT+0x12c>
 810ad42:	687b      	ldr	r3, [r7, #4]
 810ad44:	681b      	ldr	r3, [r3, #0]
 810ad46:	627b      	str	r3, [r7, #36]	@ 0x24
 810ad48:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810ad4a:	e853 3f00 	ldrex	r3, [r3]
 810ad4e:	623b      	str	r3, [r7, #32]
 810ad50:	6a3b      	ldr	r3, [r7, #32]
 810ad52:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 810ad56:	663b      	str	r3, [r7, #96]	@ 0x60
 810ad58:	687b      	ldr	r3, [r7, #4]
 810ad5a:	681b      	ldr	r3, [r3, #0]
 810ad5c:	461a      	mov	r2, r3
 810ad5e:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 810ad60:	633b      	str	r3, [r7, #48]	@ 0x30
 810ad62:	62fa      	str	r2, [r7, #44]	@ 0x2c
 810ad64:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 810ad66:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 810ad68:	e841 2300 	strex	r3, r2, [r1]
 810ad6c:	62bb      	str	r3, [r7, #40]	@ 0x28
 810ad6e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810ad70:	2b00      	cmp	r3, #0
 810ad72:	d1e6      	bne.n	810ad42 <UART_RxISR_8BIT+0xfa>
 810ad74:	687b      	ldr	r3, [r7, #4]
 810ad76:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 810ad78:	2b01      	cmp	r3, #1
 810ad7a:	d12e      	bne.n	810adda <UART_RxISR_8BIT+0x192>
 810ad7c:	687b      	ldr	r3, [r7, #4]
 810ad7e:	2200      	movs	r2, #0
 810ad80:	66da      	str	r2, [r3, #108]	@ 0x6c
 810ad82:	687b      	ldr	r3, [r7, #4]
 810ad84:	681b      	ldr	r3, [r3, #0]
 810ad86:	613b      	str	r3, [r7, #16]
 810ad88:	693b      	ldr	r3, [r7, #16]
 810ad8a:	e853 3f00 	ldrex	r3, [r3]
 810ad8e:	60fb      	str	r3, [r7, #12]
 810ad90:	68fb      	ldr	r3, [r7, #12]
 810ad92:	f023 0310 	bic.w	r3, r3, #16
 810ad96:	65fb      	str	r3, [r7, #92]	@ 0x5c
 810ad98:	687b      	ldr	r3, [r7, #4]
 810ad9a:	681b      	ldr	r3, [r3, #0]
 810ad9c:	461a      	mov	r2, r3
 810ad9e:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 810ada0:	61fb      	str	r3, [r7, #28]
 810ada2:	61ba      	str	r2, [r7, #24]
 810ada4:	69b9      	ldr	r1, [r7, #24]
 810ada6:	69fa      	ldr	r2, [r7, #28]
 810ada8:	e841 2300 	strex	r3, r2, [r1]
 810adac:	617b      	str	r3, [r7, #20]
 810adae:	697b      	ldr	r3, [r7, #20]
 810adb0:	2b00      	cmp	r3, #0
 810adb2:	d1e6      	bne.n	810ad82 <UART_RxISR_8BIT+0x13a>
 810adb4:	687b      	ldr	r3, [r7, #4]
 810adb6:	681b      	ldr	r3, [r3, #0]
 810adb8:	69db      	ldr	r3, [r3, #28]
 810adba:	f003 0310 	and.w	r3, r3, #16
 810adbe:	2b10      	cmp	r3, #16
 810adc0:	d103      	bne.n	810adca <UART_RxISR_8BIT+0x182>
 810adc2:	687b      	ldr	r3, [r7, #4]
 810adc4:	681b      	ldr	r3, [r3, #0]
 810adc6:	2210      	movs	r2, #16
 810adc8:	621a      	str	r2, [r3, #32]
 810adca:	687b      	ldr	r3, [r7, #4]
 810adcc:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 810add0:	4619      	mov	r1, r3
 810add2:	6878      	ldr	r0, [r7, #4]
 810add4:	f7fe fe44 	bl	8109a60 <HAL_UARTEx_RxEventCallback>
 810add8:	e00b      	b.n	810adf2 <UART_RxISR_8BIT+0x1aa>
 810adda:	6878      	ldr	r0, [r7, #4]
 810addc:	f7f8 fa4e 	bl	810327c <HAL_UART_RxCpltCallback>
 810ade0:	e007      	b.n	810adf2 <UART_RxISR_8BIT+0x1aa>
 810ade2:	687b      	ldr	r3, [r7, #4]
 810ade4:	681b      	ldr	r3, [r3, #0]
 810ade6:	699a      	ldr	r2, [r3, #24]
 810ade8:	687b      	ldr	r3, [r7, #4]
 810adea:	681b      	ldr	r3, [r3, #0]
 810adec:	f042 0208 	orr.w	r2, r2, #8
 810adf0:	619a      	str	r2, [r3, #24]
 810adf2:	bf00      	nop
 810adf4:	3770      	adds	r7, #112	@ 0x70
 810adf6:	46bd      	mov	sp, r7
 810adf8:	bd80      	pop	{r7, pc}
 810adfa:	bf00      	nop
 810adfc:	58000c00 	.word	0x58000c00

0810ae00 <UART_RxISR_16BIT>:
 810ae00:	b580      	push	{r7, lr}
 810ae02:	b09c      	sub	sp, #112	@ 0x70
 810ae04:	af00      	add	r7, sp, #0
 810ae06:	6078      	str	r0, [r7, #4]
 810ae08:	687b      	ldr	r3, [r7, #4]
 810ae0a:	f8b3 3060 	ldrh.w	r3, [r3, #96]	@ 0x60
 810ae0e:	f8a7 306e 	strh.w	r3, [r7, #110]	@ 0x6e
 810ae12:	687b      	ldr	r3, [r7, #4]
 810ae14:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 810ae18:	2b22      	cmp	r3, #34	@ 0x22
 810ae1a:	f040 80be 	bne.w	810af9a <UART_RxISR_16BIT+0x19a>
 810ae1e:	687b      	ldr	r3, [r7, #4]
 810ae20:	681b      	ldr	r3, [r3, #0]
 810ae22:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 810ae24:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 810ae28:	687b      	ldr	r3, [r7, #4]
 810ae2a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 810ae2c:	66bb      	str	r3, [r7, #104]	@ 0x68
 810ae2e:	f8b7 206c 	ldrh.w	r2, [r7, #108]	@ 0x6c
 810ae32:	f8b7 306e 	ldrh.w	r3, [r7, #110]	@ 0x6e
 810ae36:	4013      	ands	r3, r2
 810ae38:	b29a      	uxth	r2, r3
 810ae3a:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 810ae3c:	801a      	strh	r2, [r3, #0]
 810ae3e:	687b      	ldr	r3, [r7, #4]
 810ae40:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 810ae42:	1c9a      	adds	r2, r3, #2
 810ae44:	687b      	ldr	r3, [r7, #4]
 810ae46:	659a      	str	r2, [r3, #88]	@ 0x58
 810ae48:	687b      	ldr	r3, [r7, #4]
 810ae4a:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 810ae4e:	b29b      	uxth	r3, r3
 810ae50:	3b01      	subs	r3, #1
 810ae52:	b29a      	uxth	r2, r3
 810ae54:	687b      	ldr	r3, [r7, #4]
 810ae56:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 810ae5a:	687b      	ldr	r3, [r7, #4]
 810ae5c:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 810ae60:	b29b      	uxth	r3, r3
 810ae62:	2b00      	cmp	r3, #0
 810ae64:	f040 80a1 	bne.w	810afaa <UART_RxISR_16BIT+0x1aa>
 810ae68:	687b      	ldr	r3, [r7, #4]
 810ae6a:	681b      	ldr	r3, [r3, #0]
 810ae6c:	64bb      	str	r3, [r7, #72]	@ 0x48
 810ae6e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 810ae70:	e853 3f00 	ldrex	r3, [r3]
 810ae74:	647b      	str	r3, [r7, #68]	@ 0x44
 810ae76:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 810ae78:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 810ae7c:	667b      	str	r3, [r7, #100]	@ 0x64
 810ae7e:	687b      	ldr	r3, [r7, #4]
 810ae80:	681b      	ldr	r3, [r3, #0]
 810ae82:	461a      	mov	r2, r3
 810ae84:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 810ae86:	657b      	str	r3, [r7, #84]	@ 0x54
 810ae88:	653a      	str	r2, [r7, #80]	@ 0x50
 810ae8a:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 810ae8c:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 810ae8e:	e841 2300 	strex	r3, r2, [r1]
 810ae92:	64fb      	str	r3, [r7, #76]	@ 0x4c
 810ae94:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 810ae96:	2b00      	cmp	r3, #0
 810ae98:	d1e6      	bne.n	810ae68 <UART_RxISR_16BIT+0x68>
 810ae9a:	687b      	ldr	r3, [r7, #4]
 810ae9c:	681b      	ldr	r3, [r3, #0]
 810ae9e:	3308      	adds	r3, #8
 810aea0:	637b      	str	r3, [r7, #52]	@ 0x34
 810aea2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 810aea4:	e853 3f00 	ldrex	r3, [r3]
 810aea8:	633b      	str	r3, [r7, #48]	@ 0x30
 810aeaa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810aeac:	f023 0301 	bic.w	r3, r3, #1
 810aeb0:	663b      	str	r3, [r7, #96]	@ 0x60
 810aeb2:	687b      	ldr	r3, [r7, #4]
 810aeb4:	681b      	ldr	r3, [r3, #0]
 810aeb6:	3308      	adds	r3, #8
 810aeb8:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 810aeba:	643a      	str	r2, [r7, #64]	@ 0x40
 810aebc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810aebe:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 810aec0:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 810aec2:	e841 2300 	strex	r3, r2, [r1]
 810aec6:	63bb      	str	r3, [r7, #56]	@ 0x38
 810aec8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810aeca:	2b00      	cmp	r3, #0
 810aecc:	d1e5      	bne.n	810ae9a <UART_RxISR_16BIT+0x9a>
 810aece:	687b      	ldr	r3, [r7, #4]
 810aed0:	2220      	movs	r2, #32
 810aed2:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 810aed6:	687b      	ldr	r3, [r7, #4]
 810aed8:	2200      	movs	r2, #0
 810aeda:	675a      	str	r2, [r3, #116]	@ 0x74
 810aedc:	687b      	ldr	r3, [r7, #4]
 810aede:	2200      	movs	r2, #0
 810aee0:	671a      	str	r2, [r3, #112]	@ 0x70
 810aee2:	687b      	ldr	r3, [r7, #4]
 810aee4:	681b      	ldr	r3, [r3, #0]
 810aee6:	4a33      	ldr	r2, [pc, #204]	@ (810afb4 <UART_RxISR_16BIT+0x1b4>)
 810aee8:	4293      	cmp	r3, r2
 810aeea:	d01f      	beq.n	810af2c <UART_RxISR_16BIT+0x12c>
 810aeec:	687b      	ldr	r3, [r7, #4]
 810aeee:	681b      	ldr	r3, [r3, #0]
 810aef0:	685b      	ldr	r3, [r3, #4]
 810aef2:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 810aef6:	2b00      	cmp	r3, #0
 810aef8:	d018      	beq.n	810af2c <UART_RxISR_16BIT+0x12c>
 810aefa:	687b      	ldr	r3, [r7, #4]
 810aefc:	681b      	ldr	r3, [r3, #0]
 810aefe:	623b      	str	r3, [r7, #32]
 810af00:	6a3b      	ldr	r3, [r7, #32]
 810af02:	e853 3f00 	ldrex	r3, [r3]
 810af06:	61fb      	str	r3, [r7, #28]
 810af08:	69fb      	ldr	r3, [r7, #28]
 810af0a:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 810af0e:	65fb      	str	r3, [r7, #92]	@ 0x5c
 810af10:	687b      	ldr	r3, [r7, #4]
 810af12:	681b      	ldr	r3, [r3, #0]
 810af14:	461a      	mov	r2, r3
 810af16:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 810af18:	62fb      	str	r3, [r7, #44]	@ 0x2c
 810af1a:	62ba      	str	r2, [r7, #40]	@ 0x28
 810af1c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 810af1e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 810af20:	e841 2300 	strex	r3, r2, [r1]
 810af24:	627b      	str	r3, [r7, #36]	@ 0x24
 810af26:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810af28:	2b00      	cmp	r3, #0
 810af2a:	d1e6      	bne.n	810aefa <UART_RxISR_16BIT+0xfa>
 810af2c:	687b      	ldr	r3, [r7, #4]
 810af2e:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 810af30:	2b01      	cmp	r3, #1
 810af32:	d12e      	bne.n	810af92 <UART_RxISR_16BIT+0x192>
 810af34:	687b      	ldr	r3, [r7, #4]
 810af36:	2200      	movs	r2, #0
 810af38:	66da      	str	r2, [r3, #108]	@ 0x6c
 810af3a:	687b      	ldr	r3, [r7, #4]
 810af3c:	681b      	ldr	r3, [r3, #0]
 810af3e:	60fb      	str	r3, [r7, #12]
 810af40:	68fb      	ldr	r3, [r7, #12]
 810af42:	e853 3f00 	ldrex	r3, [r3]
 810af46:	60bb      	str	r3, [r7, #8]
 810af48:	68bb      	ldr	r3, [r7, #8]
 810af4a:	f023 0310 	bic.w	r3, r3, #16
 810af4e:	65bb      	str	r3, [r7, #88]	@ 0x58
 810af50:	687b      	ldr	r3, [r7, #4]
 810af52:	681b      	ldr	r3, [r3, #0]
 810af54:	461a      	mov	r2, r3
 810af56:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 810af58:	61bb      	str	r3, [r7, #24]
 810af5a:	617a      	str	r2, [r7, #20]
 810af5c:	6979      	ldr	r1, [r7, #20]
 810af5e:	69ba      	ldr	r2, [r7, #24]
 810af60:	e841 2300 	strex	r3, r2, [r1]
 810af64:	613b      	str	r3, [r7, #16]
 810af66:	693b      	ldr	r3, [r7, #16]
 810af68:	2b00      	cmp	r3, #0
 810af6a:	d1e6      	bne.n	810af3a <UART_RxISR_16BIT+0x13a>
 810af6c:	687b      	ldr	r3, [r7, #4]
 810af6e:	681b      	ldr	r3, [r3, #0]
 810af70:	69db      	ldr	r3, [r3, #28]
 810af72:	f003 0310 	and.w	r3, r3, #16
 810af76:	2b10      	cmp	r3, #16
 810af78:	d103      	bne.n	810af82 <UART_RxISR_16BIT+0x182>
 810af7a:	687b      	ldr	r3, [r7, #4]
 810af7c:	681b      	ldr	r3, [r3, #0]
 810af7e:	2210      	movs	r2, #16
 810af80:	621a      	str	r2, [r3, #32]
 810af82:	687b      	ldr	r3, [r7, #4]
 810af84:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 810af88:	4619      	mov	r1, r3
 810af8a:	6878      	ldr	r0, [r7, #4]
 810af8c:	f7fe fd68 	bl	8109a60 <HAL_UARTEx_RxEventCallback>
 810af90:	e00b      	b.n	810afaa <UART_RxISR_16BIT+0x1aa>
 810af92:	6878      	ldr	r0, [r7, #4]
 810af94:	f7f8 f972 	bl	810327c <HAL_UART_RxCpltCallback>
 810af98:	e007      	b.n	810afaa <UART_RxISR_16BIT+0x1aa>
 810af9a:	687b      	ldr	r3, [r7, #4]
 810af9c:	681b      	ldr	r3, [r3, #0]
 810af9e:	699a      	ldr	r2, [r3, #24]
 810afa0:	687b      	ldr	r3, [r7, #4]
 810afa2:	681b      	ldr	r3, [r3, #0]
 810afa4:	f042 0208 	orr.w	r2, r2, #8
 810afa8:	619a      	str	r2, [r3, #24]
 810afaa:	bf00      	nop
 810afac:	3770      	adds	r7, #112	@ 0x70
 810afae:	46bd      	mov	sp, r7
 810afb0:	bd80      	pop	{r7, pc}
 810afb2:	bf00      	nop
 810afb4:	58000c00 	.word	0x58000c00

0810afb8 <UART_RxISR_8BIT_FIFOEN>:
 810afb8:	b580      	push	{r7, lr}
 810afba:	b0ac      	sub	sp, #176	@ 0xb0
 810afbc:	af00      	add	r7, sp, #0
 810afbe:	6078      	str	r0, [r7, #4]
 810afc0:	687b      	ldr	r3, [r7, #4]
 810afc2:	f8b3 3060 	ldrh.w	r3, [r3, #96]	@ 0x60
 810afc6:	f8a7 30aa 	strh.w	r3, [r7, #170]	@ 0xaa
 810afca:	687b      	ldr	r3, [r7, #4]
 810afcc:	681b      	ldr	r3, [r3, #0]
 810afce:	69db      	ldr	r3, [r3, #28]
 810afd0:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 810afd4:	687b      	ldr	r3, [r7, #4]
 810afd6:	681b      	ldr	r3, [r3, #0]
 810afd8:	681b      	ldr	r3, [r3, #0]
 810afda:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 810afde:	687b      	ldr	r3, [r7, #4]
 810afe0:	681b      	ldr	r3, [r3, #0]
 810afe2:	689b      	ldr	r3, [r3, #8]
 810afe4:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 810afe8:	687b      	ldr	r3, [r7, #4]
 810afea:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 810afee:	2b22      	cmp	r3, #34	@ 0x22
 810aff0:	f040 8183 	bne.w	810b2fa <UART_RxISR_8BIT_FIFOEN+0x342>
 810aff4:	687b      	ldr	r3, [r7, #4]
 810aff6:	f8b3 3068 	ldrh.w	r3, [r3, #104]	@ 0x68
 810affa:	f8a7 309e 	strh.w	r3, [r7, #158]	@ 0x9e
 810affe:	e126      	b.n	810b24e <UART_RxISR_8BIT_FIFOEN+0x296>
 810b000:	687b      	ldr	r3, [r7, #4]
 810b002:	681b      	ldr	r3, [r3, #0]
 810b004:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 810b006:	f8a7 309c 	strh.w	r3, [r7, #156]	@ 0x9c
 810b00a:	f8b7 309c 	ldrh.w	r3, [r7, #156]	@ 0x9c
 810b00e:	b2d9      	uxtb	r1, r3
 810b010:	f8b7 30aa 	ldrh.w	r3, [r7, #170]	@ 0xaa
 810b014:	b2da      	uxtb	r2, r3
 810b016:	687b      	ldr	r3, [r7, #4]
 810b018:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 810b01a:	400a      	ands	r2, r1
 810b01c:	b2d2      	uxtb	r2, r2
 810b01e:	701a      	strb	r2, [r3, #0]
 810b020:	687b      	ldr	r3, [r7, #4]
 810b022:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 810b024:	1c5a      	adds	r2, r3, #1
 810b026:	687b      	ldr	r3, [r7, #4]
 810b028:	659a      	str	r2, [r3, #88]	@ 0x58
 810b02a:	687b      	ldr	r3, [r7, #4]
 810b02c:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 810b030:	b29b      	uxth	r3, r3
 810b032:	3b01      	subs	r3, #1
 810b034:	b29a      	uxth	r2, r3
 810b036:	687b      	ldr	r3, [r7, #4]
 810b038:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 810b03c:	687b      	ldr	r3, [r7, #4]
 810b03e:	681b      	ldr	r3, [r3, #0]
 810b040:	69db      	ldr	r3, [r3, #28]
 810b042:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 810b046:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 810b04a:	f003 0307 	and.w	r3, r3, #7
 810b04e:	2b00      	cmp	r3, #0
 810b050:	d053      	beq.n	810b0fa <UART_RxISR_8BIT_FIFOEN+0x142>
 810b052:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 810b056:	f003 0301 	and.w	r3, r3, #1
 810b05a:	2b00      	cmp	r3, #0
 810b05c:	d011      	beq.n	810b082 <UART_RxISR_8BIT_FIFOEN+0xca>
 810b05e:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 810b062:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 810b066:	2b00      	cmp	r3, #0
 810b068:	d00b      	beq.n	810b082 <UART_RxISR_8BIT_FIFOEN+0xca>
 810b06a:	687b      	ldr	r3, [r7, #4]
 810b06c:	681b      	ldr	r3, [r3, #0]
 810b06e:	2201      	movs	r2, #1
 810b070:	621a      	str	r2, [r3, #32]
 810b072:	687b      	ldr	r3, [r7, #4]
 810b074:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 810b078:	f043 0201 	orr.w	r2, r3, #1
 810b07c:	687b      	ldr	r3, [r7, #4]
 810b07e:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 810b082:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 810b086:	f003 0302 	and.w	r3, r3, #2
 810b08a:	2b00      	cmp	r3, #0
 810b08c:	d011      	beq.n	810b0b2 <UART_RxISR_8BIT_FIFOEN+0xfa>
 810b08e:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 810b092:	f003 0301 	and.w	r3, r3, #1
 810b096:	2b00      	cmp	r3, #0
 810b098:	d00b      	beq.n	810b0b2 <UART_RxISR_8BIT_FIFOEN+0xfa>
 810b09a:	687b      	ldr	r3, [r7, #4]
 810b09c:	681b      	ldr	r3, [r3, #0]
 810b09e:	2202      	movs	r2, #2
 810b0a0:	621a      	str	r2, [r3, #32]
 810b0a2:	687b      	ldr	r3, [r7, #4]
 810b0a4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 810b0a8:	f043 0204 	orr.w	r2, r3, #4
 810b0ac:	687b      	ldr	r3, [r7, #4]
 810b0ae:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 810b0b2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 810b0b6:	f003 0304 	and.w	r3, r3, #4
 810b0ba:	2b00      	cmp	r3, #0
 810b0bc:	d011      	beq.n	810b0e2 <UART_RxISR_8BIT_FIFOEN+0x12a>
 810b0be:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 810b0c2:	f003 0301 	and.w	r3, r3, #1
 810b0c6:	2b00      	cmp	r3, #0
 810b0c8:	d00b      	beq.n	810b0e2 <UART_RxISR_8BIT_FIFOEN+0x12a>
 810b0ca:	687b      	ldr	r3, [r7, #4]
 810b0cc:	681b      	ldr	r3, [r3, #0]
 810b0ce:	2204      	movs	r2, #4
 810b0d0:	621a      	str	r2, [r3, #32]
 810b0d2:	687b      	ldr	r3, [r7, #4]
 810b0d4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 810b0d8:	f043 0202 	orr.w	r2, r3, #2
 810b0dc:	687b      	ldr	r3, [r7, #4]
 810b0de:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 810b0e2:	687b      	ldr	r3, [r7, #4]
 810b0e4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 810b0e8:	2b00      	cmp	r3, #0
 810b0ea:	d006      	beq.n	810b0fa <UART_RxISR_8BIT_FIFOEN+0x142>
 810b0ec:	6878      	ldr	r0, [r7, #4]
 810b0ee:	f7fe fcad 	bl	8109a4c <HAL_UART_ErrorCallback>
 810b0f2:	687b      	ldr	r3, [r7, #4]
 810b0f4:	2200      	movs	r2, #0
 810b0f6:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 810b0fa:	687b      	ldr	r3, [r7, #4]
 810b0fc:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 810b100:	b29b      	uxth	r3, r3
 810b102:	2b00      	cmp	r3, #0
 810b104:	f040 80a3 	bne.w	810b24e <UART_RxISR_8BIT_FIFOEN+0x296>
 810b108:	687b      	ldr	r3, [r7, #4]
 810b10a:	681b      	ldr	r3, [r3, #0]
 810b10c:	673b      	str	r3, [r7, #112]	@ 0x70
 810b10e:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 810b110:	e853 3f00 	ldrex	r3, [r3]
 810b114:	66fb      	str	r3, [r7, #108]	@ 0x6c
 810b116:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 810b118:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 810b11c:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 810b120:	687b      	ldr	r3, [r7, #4]
 810b122:	681b      	ldr	r3, [r3, #0]
 810b124:	461a      	mov	r2, r3
 810b126:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 810b12a:	67fb      	str	r3, [r7, #124]	@ 0x7c
 810b12c:	67ba      	str	r2, [r7, #120]	@ 0x78
 810b12e:	6fb9      	ldr	r1, [r7, #120]	@ 0x78
 810b130:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 810b132:	e841 2300 	strex	r3, r2, [r1]
 810b136:	677b      	str	r3, [r7, #116]	@ 0x74
 810b138:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 810b13a:	2b00      	cmp	r3, #0
 810b13c:	d1e4      	bne.n	810b108 <UART_RxISR_8BIT_FIFOEN+0x150>
 810b13e:	687b      	ldr	r3, [r7, #4]
 810b140:	681b      	ldr	r3, [r3, #0]
 810b142:	3308      	adds	r3, #8
 810b144:	65fb      	str	r3, [r7, #92]	@ 0x5c
 810b146:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 810b148:	e853 3f00 	ldrex	r3, [r3]
 810b14c:	65bb      	str	r3, [r7, #88]	@ 0x58
 810b14e:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 810b150:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 810b154:	f023 0301 	bic.w	r3, r3, #1
 810b158:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 810b15c:	687b      	ldr	r3, [r7, #4]
 810b15e:	681b      	ldr	r3, [r3, #0]
 810b160:	3308      	adds	r3, #8
 810b162:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 810b166:	66ba      	str	r2, [r7, #104]	@ 0x68
 810b168:	667b      	str	r3, [r7, #100]	@ 0x64
 810b16a:	6e79      	ldr	r1, [r7, #100]	@ 0x64
 810b16c:	6eba      	ldr	r2, [r7, #104]	@ 0x68
 810b16e:	e841 2300 	strex	r3, r2, [r1]
 810b172:	663b      	str	r3, [r7, #96]	@ 0x60
 810b174:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 810b176:	2b00      	cmp	r3, #0
 810b178:	d1e1      	bne.n	810b13e <UART_RxISR_8BIT_FIFOEN+0x186>
 810b17a:	687b      	ldr	r3, [r7, #4]
 810b17c:	2220      	movs	r2, #32
 810b17e:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 810b182:	687b      	ldr	r3, [r7, #4]
 810b184:	2200      	movs	r2, #0
 810b186:	675a      	str	r2, [r3, #116]	@ 0x74
 810b188:	687b      	ldr	r3, [r7, #4]
 810b18a:	2200      	movs	r2, #0
 810b18c:	671a      	str	r2, [r3, #112]	@ 0x70
 810b18e:	687b      	ldr	r3, [r7, #4]
 810b190:	681b      	ldr	r3, [r3, #0]
 810b192:	4a60      	ldr	r2, [pc, #384]	@ (810b314 <UART_RxISR_8BIT_FIFOEN+0x35c>)
 810b194:	4293      	cmp	r3, r2
 810b196:	d021      	beq.n	810b1dc <UART_RxISR_8BIT_FIFOEN+0x224>
 810b198:	687b      	ldr	r3, [r7, #4]
 810b19a:	681b      	ldr	r3, [r3, #0]
 810b19c:	685b      	ldr	r3, [r3, #4]
 810b19e:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 810b1a2:	2b00      	cmp	r3, #0
 810b1a4:	d01a      	beq.n	810b1dc <UART_RxISR_8BIT_FIFOEN+0x224>
 810b1a6:	687b      	ldr	r3, [r7, #4]
 810b1a8:	681b      	ldr	r3, [r3, #0]
 810b1aa:	64bb      	str	r3, [r7, #72]	@ 0x48
 810b1ac:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 810b1ae:	e853 3f00 	ldrex	r3, [r3]
 810b1b2:	647b      	str	r3, [r7, #68]	@ 0x44
 810b1b4:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 810b1b6:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 810b1ba:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 810b1be:	687b      	ldr	r3, [r7, #4]
 810b1c0:	681b      	ldr	r3, [r3, #0]
 810b1c2:	461a      	mov	r2, r3
 810b1c4:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 810b1c8:	657b      	str	r3, [r7, #84]	@ 0x54
 810b1ca:	653a      	str	r2, [r7, #80]	@ 0x50
 810b1cc:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 810b1ce:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 810b1d0:	e841 2300 	strex	r3, r2, [r1]
 810b1d4:	64fb      	str	r3, [r7, #76]	@ 0x4c
 810b1d6:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 810b1d8:	2b00      	cmp	r3, #0
 810b1da:	d1e4      	bne.n	810b1a6 <UART_RxISR_8BIT_FIFOEN+0x1ee>
 810b1dc:	687b      	ldr	r3, [r7, #4]
 810b1de:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 810b1e0:	2b01      	cmp	r3, #1
 810b1e2:	d130      	bne.n	810b246 <UART_RxISR_8BIT_FIFOEN+0x28e>
 810b1e4:	687b      	ldr	r3, [r7, #4]
 810b1e6:	2200      	movs	r2, #0
 810b1e8:	66da      	str	r2, [r3, #108]	@ 0x6c
 810b1ea:	687b      	ldr	r3, [r7, #4]
 810b1ec:	681b      	ldr	r3, [r3, #0]
 810b1ee:	637b      	str	r3, [r7, #52]	@ 0x34
 810b1f0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 810b1f2:	e853 3f00 	ldrex	r3, [r3]
 810b1f6:	633b      	str	r3, [r7, #48]	@ 0x30
 810b1f8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810b1fa:	f023 0310 	bic.w	r3, r3, #16
 810b1fe:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 810b202:	687b      	ldr	r3, [r7, #4]
 810b204:	681b      	ldr	r3, [r3, #0]
 810b206:	461a      	mov	r2, r3
 810b208:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 810b20c:	643b      	str	r3, [r7, #64]	@ 0x40
 810b20e:	63fa      	str	r2, [r7, #60]	@ 0x3c
 810b210:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 810b212:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 810b214:	e841 2300 	strex	r3, r2, [r1]
 810b218:	63bb      	str	r3, [r7, #56]	@ 0x38
 810b21a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810b21c:	2b00      	cmp	r3, #0
 810b21e:	d1e4      	bne.n	810b1ea <UART_RxISR_8BIT_FIFOEN+0x232>
 810b220:	687b      	ldr	r3, [r7, #4]
 810b222:	681b      	ldr	r3, [r3, #0]
 810b224:	69db      	ldr	r3, [r3, #28]
 810b226:	f003 0310 	and.w	r3, r3, #16
 810b22a:	2b10      	cmp	r3, #16
 810b22c:	d103      	bne.n	810b236 <UART_RxISR_8BIT_FIFOEN+0x27e>
 810b22e:	687b      	ldr	r3, [r7, #4]
 810b230:	681b      	ldr	r3, [r3, #0]
 810b232:	2210      	movs	r2, #16
 810b234:	621a      	str	r2, [r3, #32]
 810b236:	687b      	ldr	r3, [r7, #4]
 810b238:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 810b23c:	4619      	mov	r1, r3
 810b23e:	6878      	ldr	r0, [r7, #4]
 810b240:	f7fe fc0e 	bl	8109a60 <HAL_UARTEx_RxEventCallback>
 810b244:	e00e      	b.n	810b264 <UART_RxISR_8BIT_FIFOEN+0x2ac>
 810b246:	6878      	ldr	r0, [r7, #4]
 810b248:	f7f8 f818 	bl	810327c <HAL_UART_RxCpltCallback>
 810b24c:	e00a      	b.n	810b264 <UART_RxISR_8BIT_FIFOEN+0x2ac>
 810b24e:	f8b7 309e 	ldrh.w	r3, [r7, #158]	@ 0x9e
 810b252:	2b00      	cmp	r3, #0
 810b254:	d006      	beq.n	810b264 <UART_RxISR_8BIT_FIFOEN+0x2ac>
 810b256:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 810b25a:	f003 0320 	and.w	r3, r3, #32
 810b25e:	2b00      	cmp	r3, #0
 810b260:	f47f aece 	bne.w	810b000 <UART_RxISR_8BIT_FIFOEN+0x48>
 810b264:	687b      	ldr	r3, [r7, #4]
 810b266:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 810b26a:	f8a7 308a 	strh.w	r3, [r7, #138]	@ 0x8a
 810b26e:	f8b7 308a 	ldrh.w	r3, [r7, #138]	@ 0x8a
 810b272:	2b00      	cmp	r3, #0
 810b274:	d049      	beq.n	810b30a <UART_RxISR_8BIT_FIFOEN+0x352>
 810b276:	687b      	ldr	r3, [r7, #4]
 810b278:	f8b3 3068 	ldrh.w	r3, [r3, #104]	@ 0x68
 810b27c:	f8b7 208a 	ldrh.w	r2, [r7, #138]	@ 0x8a
 810b280:	429a      	cmp	r2, r3
 810b282:	d242      	bcs.n	810b30a <UART_RxISR_8BIT_FIFOEN+0x352>
 810b284:	687b      	ldr	r3, [r7, #4]
 810b286:	681b      	ldr	r3, [r3, #0]
 810b288:	3308      	adds	r3, #8
 810b28a:	623b      	str	r3, [r7, #32]
 810b28c:	6a3b      	ldr	r3, [r7, #32]
 810b28e:	e853 3f00 	ldrex	r3, [r3]
 810b292:	61fb      	str	r3, [r7, #28]
 810b294:	69fb      	ldr	r3, [r7, #28]
 810b296:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 810b29a:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 810b29e:	687b      	ldr	r3, [r7, #4]
 810b2a0:	681b      	ldr	r3, [r3, #0]
 810b2a2:	3308      	adds	r3, #8
 810b2a4:	f8d7 2084 	ldr.w	r2, [r7, #132]	@ 0x84
 810b2a8:	62fa      	str	r2, [r7, #44]	@ 0x2c
 810b2aa:	62bb      	str	r3, [r7, #40]	@ 0x28
 810b2ac:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 810b2ae:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 810b2b0:	e841 2300 	strex	r3, r2, [r1]
 810b2b4:	627b      	str	r3, [r7, #36]	@ 0x24
 810b2b6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810b2b8:	2b00      	cmp	r3, #0
 810b2ba:	d1e3      	bne.n	810b284 <UART_RxISR_8BIT_FIFOEN+0x2cc>
 810b2bc:	687b      	ldr	r3, [r7, #4]
 810b2be:	4a16      	ldr	r2, [pc, #88]	@ (810b318 <UART_RxISR_8BIT_FIFOEN+0x360>)
 810b2c0:	675a      	str	r2, [r3, #116]	@ 0x74
 810b2c2:	687b      	ldr	r3, [r7, #4]
 810b2c4:	681b      	ldr	r3, [r3, #0]
 810b2c6:	60fb      	str	r3, [r7, #12]
 810b2c8:	68fb      	ldr	r3, [r7, #12]
 810b2ca:	e853 3f00 	ldrex	r3, [r3]
 810b2ce:	60bb      	str	r3, [r7, #8]
 810b2d0:	68bb      	ldr	r3, [r7, #8]
 810b2d2:	f043 0320 	orr.w	r3, r3, #32
 810b2d6:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 810b2da:	687b      	ldr	r3, [r7, #4]
 810b2dc:	681b      	ldr	r3, [r3, #0]
 810b2de:	461a      	mov	r2, r3
 810b2e0:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 810b2e4:	61bb      	str	r3, [r7, #24]
 810b2e6:	617a      	str	r2, [r7, #20]
 810b2e8:	6979      	ldr	r1, [r7, #20]
 810b2ea:	69ba      	ldr	r2, [r7, #24]
 810b2ec:	e841 2300 	strex	r3, r2, [r1]
 810b2f0:	613b      	str	r3, [r7, #16]
 810b2f2:	693b      	ldr	r3, [r7, #16]
 810b2f4:	2b00      	cmp	r3, #0
 810b2f6:	d1e4      	bne.n	810b2c2 <UART_RxISR_8BIT_FIFOEN+0x30a>
 810b2f8:	e007      	b.n	810b30a <UART_RxISR_8BIT_FIFOEN+0x352>
 810b2fa:	687b      	ldr	r3, [r7, #4]
 810b2fc:	681b      	ldr	r3, [r3, #0]
 810b2fe:	699a      	ldr	r2, [r3, #24]
 810b300:	687b      	ldr	r3, [r7, #4]
 810b302:	681b      	ldr	r3, [r3, #0]
 810b304:	f042 0208 	orr.w	r2, r2, #8
 810b308:	619a      	str	r2, [r3, #24]
 810b30a:	bf00      	nop
 810b30c:	37b0      	adds	r7, #176	@ 0xb0
 810b30e:	46bd      	mov	sp, r7
 810b310:	bd80      	pop	{r7, pc}
 810b312:	bf00      	nop
 810b314:	58000c00 	.word	0x58000c00
 810b318:	0810ac49 	.word	0x0810ac49

0810b31c <UART_RxISR_16BIT_FIFOEN>:
 810b31c:	b580      	push	{r7, lr}
 810b31e:	b0ae      	sub	sp, #184	@ 0xb8
 810b320:	af00      	add	r7, sp, #0
 810b322:	6078      	str	r0, [r7, #4]
 810b324:	687b      	ldr	r3, [r7, #4]
 810b326:	f8b3 3060 	ldrh.w	r3, [r3, #96]	@ 0x60
 810b32a:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 810b32e:	687b      	ldr	r3, [r7, #4]
 810b330:	681b      	ldr	r3, [r3, #0]
 810b332:	69db      	ldr	r3, [r3, #28]
 810b334:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 810b338:	687b      	ldr	r3, [r7, #4]
 810b33a:	681b      	ldr	r3, [r3, #0]
 810b33c:	681b      	ldr	r3, [r3, #0]
 810b33e:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 810b342:	687b      	ldr	r3, [r7, #4]
 810b344:	681b      	ldr	r3, [r3, #0]
 810b346:	689b      	ldr	r3, [r3, #8]
 810b348:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 810b34c:	687b      	ldr	r3, [r7, #4]
 810b34e:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 810b352:	2b22      	cmp	r3, #34	@ 0x22
 810b354:	f040 8187 	bne.w	810b666 <UART_RxISR_16BIT_FIFOEN+0x34a>
 810b358:	687b      	ldr	r3, [r7, #4]
 810b35a:	f8b3 3068 	ldrh.w	r3, [r3, #104]	@ 0x68
 810b35e:	f8a7 30a6 	strh.w	r3, [r7, #166]	@ 0xa6
 810b362:	e12a      	b.n	810b5ba <UART_RxISR_16BIT_FIFOEN+0x29e>
 810b364:	687b      	ldr	r3, [r7, #4]
 810b366:	681b      	ldr	r3, [r3, #0]
 810b368:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 810b36a:	f8a7 30a4 	strh.w	r3, [r7, #164]	@ 0xa4
 810b36e:	687b      	ldr	r3, [r7, #4]
 810b370:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 810b372:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 810b376:	f8b7 20a4 	ldrh.w	r2, [r7, #164]	@ 0xa4
 810b37a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 810b37e:	4013      	ands	r3, r2
 810b380:	b29a      	uxth	r2, r3
 810b382:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 810b386:	801a      	strh	r2, [r3, #0]
 810b388:	687b      	ldr	r3, [r7, #4]
 810b38a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 810b38c:	1c9a      	adds	r2, r3, #2
 810b38e:	687b      	ldr	r3, [r7, #4]
 810b390:	659a      	str	r2, [r3, #88]	@ 0x58
 810b392:	687b      	ldr	r3, [r7, #4]
 810b394:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 810b398:	b29b      	uxth	r3, r3
 810b39a:	3b01      	subs	r3, #1
 810b39c:	b29a      	uxth	r2, r3
 810b39e:	687b      	ldr	r3, [r7, #4]
 810b3a0:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 810b3a4:	687b      	ldr	r3, [r7, #4]
 810b3a6:	681b      	ldr	r3, [r3, #0]
 810b3a8:	69db      	ldr	r3, [r3, #28]
 810b3aa:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 810b3ae:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 810b3b2:	f003 0307 	and.w	r3, r3, #7
 810b3b6:	2b00      	cmp	r3, #0
 810b3b8:	d053      	beq.n	810b462 <UART_RxISR_16BIT_FIFOEN+0x146>
 810b3ba:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 810b3be:	f003 0301 	and.w	r3, r3, #1
 810b3c2:	2b00      	cmp	r3, #0
 810b3c4:	d011      	beq.n	810b3ea <UART_RxISR_16BIT_FIFOEN+0xce>
 810b3c6:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 810b3ca:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 810b3ce:	2b00      	cmp	r3, #0
 810b3d0:	d00b      	beq.n	810b3ea <UART_RxISR_16BIT_FIFOEN+0xce>
 810b3d2:	687b      	ldr	r3, [r7, #4]
 810b3d4:	681b      	ldr	r3, [r3, #0]
 810b3d6:	2201      	movs	r2, #1
 810b3d8:	621a      	str	r2, [r3, #32]
 810b3da:	687b      	ldr	r3, [r7, #4]
 810b3dc:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 810b3e0:	f043 0201 	orr.w	r2, r3, #1
 810b3e4:	687b      	ldr	r3, [r7, #4]
 810b3e6:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 810b3ea:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 810b3ee:	f003 0302 	and.w	r3, r3, #2
 810b3f2:	2b00      	cmp	r3, #0
 810b3f4:	d011      	beq.n	810b41a <UART_RxISR_16BIT_FIFOEN+0xfe>
 810b3f6:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 810b3fa:	f003 0301 	and.w	r3, r3, #1
 810b3fe:	2b00      	cmp	r3, #0
 810b400:	d00b      	beq.n	810b41a <UART_RxISR_16BIT_FIFOEN+0xfe>
 810b402:	687b      	ldr	r3, [r7, #4]
 810b404:	681b      	ldr	r3, [r3, #0]
 810b406:	2202      	movs	r2, #2
 810b408:	621a      	str	r2, [r3, #32]
 810b40a:	687b      	ldr	r3, [r7, #4]
 810b40c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 810b410:	f043 0204 	orr.w	r2, r3, #4
 810b414:	687b      	ldr	r3, [r7, #4]
 810b416:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 810b41a:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 810b41e:	f003 0304 	and.w	r3, r3, #4
 810b422:	2b00      	cmp	r3, #0
 810b424:	d011      	beq.n	810b44a <UART_RxISR_16BIT_FIFOEN+0x12e>
 810b426:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 810b42a:	f003 0301 	and.w	r3, r3, #1
 810b42e:	2b00      	cmp	r3, #0
 810b430:	d00b      	beq.n	810b44a <UART_RxISR_16BIT_FIFOEN+0x12e>
 810b432:	687b      	ldr	r3, [r7, #4]
 810b434:	681b      	ldr	r3, [r3, #0]
 810b436:	2204      	movs	r2, #4
 810b438:	621a      	str	r2, [r3, #32]
 810b43a:	687b      	ldr	r3, [r7, #4]
 810b43c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 810b440:	f043 0202 	orr.w	r2, r3, #2
 810b444:	687b      	ldr	r3, [r7, #4]
 810b446:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 810b44a:	687b      	ldr	r3, [r7, #4]
 810b44c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 810b450:	2b00      	cmp	r3, #0
 810b452:	d006      	beq.n	810b462 <UART_RxISR_16BIT_FIFOEN+0x146>
 810b454:	6878      	ldr	r0, [r7, #4]
 810b456:	f7fe faf9 	bl	8109a4c <HAL_UART_ErrorCallback>
 810b45a:	687b      	ldr	r3, [r7, #4]
 810b45c:	2200      	movs	r2, #0
 810b45e:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 810b462:	687b      	ldr	r3, [r7, #4]
 810b464:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 810b468:	b29b      	uxth	r3, r3
 810b46a:	2b00      	cmp	r3, #0
 810b46c:	f040 80a5 	bne.w	810b5ba <UART_RxISR_16BIT_FIFOEN+0x29e>
 810b470:	687b      	ldr	r3, [r7, #4]
 810b472:	681b      	ldr	r3, [r3, #0]
 810b474:	677b      	str	r3, [r7, #116]	@ 0x74
 810b476:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 810b478:	e853 3f00 	ldrex	r3, [r3]
 810b47c:	673b      	str	r3, [r7, #112]	@ 0x70
 810b47e:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 810b480:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 810b484:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 810b488:	687b      	ldr	r3, [r7, #4]
 810b48a:	681b      	ldr	r3, [r3, #0]
 810b48c:	461a      	mov	r2, r3
 810b48e:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 810b492:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 810b496:	67fa      	str	r2, [r7, #124]	@ 0x7c
 810b498:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 810b49a:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 810b49e:	e841 2300 	strex	r3, r2, [r1]
 810b4a2:	67bb      	str	r3, [r7, #120]	@ 0x78
 810b4a4:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 810b4a6:	2b00      	cmp	r3, #0
 810b4a8:	d1e2      	bne.n	810b470 <UART_RxISR_16BIT_FIFOEN+0x154>
 810b4aa:	687b      	ldr	r3, [r7, #4]
 810b4ac:	681b      	ldr	r3, [r3, #0]
 810b4ae:	3308      	adds	r3, #8
 810b4b0:	663b      	str	r3, [r7, #96]	@ 0x60
 810b4b2:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 810b4b4:	e853 3f00 	ldrex	r3, [r3]
 810b4b8:	65fb      	str	r3, [r7, #92]	@ 0x5c
 810b4ba:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 810b4bc:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 810b4c0:	f023 0301 	bic.w	r3, r3, #1
 810b4c4:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 810b4c8:	687b      	ldr	r3, [r7, #4]
 810b4ca:	681b      	ldr	r3, [r3, #0]
 810b4cc:	3308      	adds	r3, #8
 810b4ce:	f8d7 2098 	ldr.w	r2, [r7, #152]	@ 0x98
 810b4d2:	66fa      	str	r2, [r7, #108]	@ 0x6c
 810b4d4:	66bb      	str	r3, [r7, #104]	@ 0x68
 810b4d6:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 810b4d8:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 810b4da:	e841 2300 	strex	r3, r2, [r1]
 810b4de:	667b      	str	r3, [r7, #100]	@ 0x64
 810b4e0:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 810b4e2:	2b00      	cmp	r3, #0
 810b4e4:	d1e1      	bne.n	810b4aa <UART_RxISR_16BIT_FIFOEN+0x18e>
 810b4e6:	687b      	ldr	r3, [r7, #4]
 810b4e8:	2220      	movs	r2, #32
 810b4ea:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 810b4ee:	687b      	ldr	r3, [r7, #4]
 810b4f0:	2200      	movs	r2, #0
 810b4f2:	675a      	str	r2, [r3, #116]	@ 0x74
 810b4f4:	687b      	ldr	r3, [r7, #4]
 810b4f6:	2200      	movs	r2, #0
 810b4f8:	671a      	str	r2, [r3, #112]	@ 0x70
 810b4fa:	687b      	ldr	r3, [r7, #4]
 810b4fc:	681b      	ldr	r3, [r3, #0]
 810b4fe:	4a60      	ldr	r2, [pc, #384]	@ (810b680 <UART_RxISR_16BIT_FIFOEN+0x364>)
 810b500:	4293      	cmp	r3, r2
 810b502:	d021      	beq.n	810b548 <UART_RxISR_16BIT_FIFOEN+0x22c>
 810b504:	687b      	ldr	r3, [r7, #4]
 810b506:	681b      	ldr	r3, [r3, #0]
 810b508:	685b      	ldr	r3, [r3, #4]
 810b50a:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 810b50e:	2b00      	cmp	r3, #0
 810b510:	d01a      	beq.n	810b548 <UART_RxISR_16BIT_FIFOEN+0x22c>
 810b512:	687b      	ldr	r3, [r7, #4]
 810b514:	681b      	ldr	r3, [r3, #0]
 810b516:	64fb      	str	r3, [r7, #76]	@ 0x4c
 810b518:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 810b51a:	e853 3f00 	ldrex	r3, [r3]
 810b51e:	64bb      	str	r3, [r7, #72]	@ 0x48
 810b520:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 810b522:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 810b526:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 810b52a:	687b      	ldr	r3, [r7, #4]
 810b52c:	681b      	ldr	r3, [r3, #0]
 810b52e:	461a      	mov	r2, r3
 810b530:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 810b534:	65bb      	str	r3, [r7, #88]	@ 0x58
 810b536:	657a      	str	r2, [r7, #84]	@ 0x54
 810b538:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 810b53a:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 810b53c:	e841 2300 	strex	r3, r2, [r1]
 810b540:	653b      	str	r3, [r7, #80]	@ 0x50
 810b542:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 810b544:	2b00      	cmp	r3, #0
 810b546:	d1e4      	bne.n	810b512 <UART_RxISR_16BIT_FIFOEN+0x1f6>
 810b548:	687b      	ldr	r3, [r7, #4]
 810b54a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 810b54c:	2b01      	cmp	r3, #1
 810b54e:	d130      	bne.n	810b5b2 <UART_RxISR_16BIT_FIFOEN+0x296>
 810b550:	687b      	ldr	r3, [r7, #4]
 810b552:	2200      	movs	r2, #0
 810b554:	66da      	str	r2, [r3, #108]	@ 0x6c
 810b556:	687b      	ldr	r3, [r7, #4]
 810b558:	681b      	ldr	r3, [r3, #0]
 810b55a:	63bb      	str	r3, [r7, #56]	@ 0x38
 810b55c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810b55e:	e853 3f00 	ldrex	r3, [r3]
 810b562:	637b      	str	r3, [r7, #52]	@ 0x34
 810b564:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 810b566:	f023 0310 	bic.w	r3, r3, #16
 810b56a:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 810b56e:	687b      	ldr	r3, [r7, #4]
 810b570:	681b      	ldr	r3, [r3, #0]
 810b572:	461a      	mov	r2, r3
 810b574:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 810b578:	647b      	str	r3, [r7, #68]	@ 0x44
 810b57a:	643a      	str	r2, [r7, #64]	@ 0x40
 810b57c:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 810b57e:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 810b580:	e841 2300 	strex	r3, r2, [r1]
 810b584:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810b586:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 810b588:	2b00      	cmp	r3, #0
 810b58a:	d1e4      	bne.n	810b556 <UART_RxISR_16BIT_FIFOEN+0x23a>
 810b58c:	687b      	ldr	r3, [r7, #4]
 810b58e:	681b      	ldr	r3, [r3, #0]
 810b590:	69db      	ldr	r3, [r3, #28]
 810b592:	f003 0310 	and.w	r3, r3, #16
 810b596:	2b10      	cmp	r3, #16
 810b598:	d103      	bne.n	810b5a2 <UART_RxISR_16BIT_FIFOEN+0x286>
 810b59a:	687b      	ldr	r3, [r7, #4]
 810b59c:	681b      	ldr	r3, [r3, #0]
 810b59e:	2210      	movs	r2, #16
 810b5a0:	621a      	str	r2, [r3, #32]
 810b5a2:	687b      	ldr	r3, [r7, #4]
 810b5a4:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 810b5a8:	4619      	mov	r1, r3
 810b5aa:	6878      	ldr	r0, [r7, #4]
 810b5ac:	f7fe fa58 	bl	8109a60 <HAL_UARTEx_RxEventCallback>
 810b5b0:	e00e      	b.n	810b5d0 <UART_RxISR_16BIT_FIFOEN+0x2b4>
 810b5b2:	6878      	ldr	r0, [r7, #4]
 810b5b4:	f7f7 fe62 	bl	810327c <HAL_UART_RxCpltCallback>
 810b5b8:	e00a      	b.n	810b5d0 <UART_RxISR_16BIT_FIFOEN+0x2b4>
 810b5ba:	f8b7 30a6 	ldrh.w	r3, [r7, #166]	@ 0xa6
 810b5be:	2b00      	cmp	r3, #0
 810b5c0:	d006      	beq.n	810b5d0 <UART_RxISR_16BIT_FIFOEN+0x2b4>
 810b5c2:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 810b5c6:	f003 0320 	and.w	r3, r3, #32
 810b5ca:	2b00      	cmp	r3, #0
 810b5cc:	f47f aeca 	bne.w	810b364 <UART_RxISR_16BIT_FIFOEN+0x48>
 810b5d0:	687b      	ldr	r3, [r7, #4]
 810b5d2:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 810b5d6:	f8a7 308e 	strh.w	r3, [r7, #142]	@ 0x8e
 810b5da:	f8b7 308e 	ldrh.w	r3, [r7, #142]	@ 0x8e
 810b5de:	2b00      	cmp	r3, #0
 810b5e0:	d049      	beq.n	810b676 <UART_RxISR_16BIT_FIFOEN+0x35a>
 810b5e2:	687b      	ldr	r3, [r7, #4]
 810b5e4:	f8b3 3068 	ldrh.w	r3, [r3, #104]	@ 0x68
 810b5e8:	f8b7 208e 	ldrh.w	r2, [r7, #142]	@ 0x8e
 810b5ec:	429a      	cmp	r2, r3
 810b5ee:	d242      	bcs.n	810b676 <UART_RxISR_16BIT_FIFOEN+0x35a>
 810b5f0:	687b      	ldr	r3, [r7, #4]
 810b5f2:	681b      	ldr	r3, [r3, #0]
 810b5f4:	3308      	adds	r3, #8
 810b5f6:	627b      	str	r3, [r7, #36]	@ 0x24
 810b5f8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810b5fa:	e853 3f00 	ldrex	r3, [r3]
 810b5fe:	623b      	str	r3, [r7, #32]
 810b600:	6a3b      	ldr	r3, [r7, #32]
 810b602:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 810b606:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 810b60a:	687b      	ldr	r3, [r7, #4]
 810b60c:	681b      	ldr	r3, [r3, #0]
 810b60e:	3308      	adds	r3, #8
 810b610:	f8d7 2088 	ldr.w	r2, [r7, #136]	@ 0x88
 810b614:	633a      	str	r2, [r7, #48]	@ 0x30
 810b616:	62fb      	str	r3, [r7, #44]	@ 0x2c
 810b618:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 810b61a:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 810b61c:	e841 2300 	strex	r3, r2, [r1]
 810b620:	62bb      	str	r3, [r7, #40]	@ 0x28
 810b622:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810b624:	2b00      	cmp	r3, #0
 810b626:	d1e3      	bne.n	810b5f0 <UART_RxISR_16BIT_FIFOEN+0x2d4>
 810b628:	687b      	ldr	r3, [r7, #4]
 810b62a:	4a16      	ldr	r2, [pc, #88]	@ (810b684 <UART_RxISR_16BIT_FIFOEN+0x368>)
 810b62c:	675a      	str	r2, [r3, #116]	@ 0x74
 810b62e:	687b      	ldr	r3, [r7, #4]
 810b630:	681b      	ldr	r3, [r3, #0]
 810b632:	613b      	str	r3, [r7, #16]
 810b634:	693b      	ldr	r3, [r7, #16]
 810b636:	e853 3f00 	ldrex	r3, [r3]
 810b63a:	60fb      	str	r3, [r7, #12]
 810b63c:	68fb      	ldr	r3, [r7, #12]
 810b63e:	f043 0320 	orr.w	r3, r3, #32
 810b642:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 810b646:	687b      	ldr	r3, [r7, #4]
 810b648:	681b      	ldr	r3, [r3, #0]
 810b64a:	461a      	mov	r2, r3
 810b64c:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 810b650:	61fb      	str	r3, [r7, #28]
 810b652:	61ba      	str	r2, [r7, #24]
 810b654:	69b9      	ldr	r1, [r7, #24]
 810b656:	69fa      	ldr	r2, [r7, #28]
 810b658:	e841 2300 	strex	r3, r2, [r1]
 810b65c:	617b      	str	r3, [r7, #20]
 810b65e:	697b      	ldr	r3, [r7, #20]
 810b660:	2b00      	cmp	r3, #0
 810b662:	d1e4      	bne.n	810b62e <UART_RxISR_16BIT_FIFOEN+0x312>
 810b664:	e007      	b.n	810b676 <UART_RxISR_16BIT_FIFOEN+0x35a>
 810b666:	687b      	ldr	r3, [r7, #4]
 810b668:	681b      	ldr	r3, [r3, #0]
 810b66a:	699a      	ldr	r2, [r3, #24]
 810b66c:	687b      	ldr	r3, [r7, #4]
 810b66e:	681b      	ldr	r3, [r3, #0]
 810b670:	f042 0208 	orr.w	r2, r2, #8
 810b674:	619a      	str	r2, [r3, #24]
 810b676:	bf00      	nop
 810b678:	37b8      	adds	r7, #184	@ 0xb8
 810b67a:	46bd      	mov	sp, r7
 810b67c:	bd80      	pop	{r7, pc}
 810b67e:	bf00      	nop
 810b680:	58000c00 	.word	0x58000c00
 810b684:	0810ae01 	.word	0x0810ae01

0810b688 <HAL_UARTEx_WakeupCallback>:
 810b688:	b480      	push	{r7}
 810b68a:	b083      	sub	sp, #12
 810b68c:	af00      	add	r7, sp, #0
 810b68e:	6078      	str	r0, [r7, #4]
 810b690:	bf00      	nop
 810b692:	370c      	adds	r7, #12
 810b694:	46bd      	mov	sp, r7
 810b696:	f85d 7b04 	ldr.w	r7, [sp], #4
 810b69a:	4770      	bx	lr

0810b69c <HAL_UARTEx_RxFifoFullCallback>:
 810b69c:	b480      	push	{r7}
 810b69e:	b083      	sub	sp, #12
 810b6a0:	af00      	add	r7, sp, #0
 810b6a2:	6078      	str	r0, [r7, #4]
 810b6a4:	bf00      	nop
 810b6a6:	370c      	adds	r7, #12
 810b6a8:	46bd      	mov	sp, r7
 810b6aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 810b6ae:	4770      	bx	lr

0810b6b0 <HAL_UARTEx_TxFifoEmptyCallback>:
 810b6b0:	b480      	push	{r7}
 810b6b2:	b083      	sub	sp, #12
 810b6b4:	af00      	add	r7, sp, #0
 810b6b6:	6078      	str	r0, [r7, #4]
 810b6b8:	bf00      	nop
 810b6ba:	370c      	adds	r7, #12
 810b6bc:	46bd      	mov	sp, r7
 810b6be:	f85d 7b04 	ldr.w	r7, [sp], #4
 810b6c2:	4770      	bx	lr

0810b6c4 <HAL_UARTEx_DisableFifoMode>:
 810b6c4:	b480      	push	{r7}
 810b6c6:	b085      	sub	sp, #20
 810b6c8:	af00      	add	r7, sp, #0
 810b6ca:	6078      	str	r0, [r7, #4]
 810b6cc:	687b      	ldr	r3, [r7, #4]
 810b6ce:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 810b6d2:	2b01      	cmp	r3, #1
 810b6d4:	d101      	bne.n	810b6da <HAL_UARTEx_DisableFifoMode+0x16>
 810b6d6:	2302      	movs	r3, #2
 810b6d8:	e027      	b.n	810b72a <HAL_UARTEx_DisableFifoMode+0x66>
 810b6da:	687b      	ldr	r3, [r7, #4]
 810b6dc:	2201      	movs	r2, #1
 810b6de:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 810b6e2:	687b      	ldr	r3, [r7, #4]
 810b6e4:	2224      	movs	r2, #36	@ 0x24
 810b6e6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 810b6ea:	687b      	ldr	r3, [r7, #4]
 810b6ec:	681b      	ldr	r3, [r3, #0]
 810b6ee:	681b      	ldr	r3, [r3, #0]
 810b6f0:	60fb      	str	r3, [r7, #12]
 810b6f2:	687b      	ldr	r3, [r7, #4]
 810b6f4:	681b      	ldr	r3, [r3, #0]
 810b6f6:	681a      	ldr	r2, [r3, #0]
 810b6f8:	687b      	ldr	r3, [r7, #4]
 810b6fa:	681b      	ldr	r3, [r3, #0]
 810b6fc:	f022 0201 	bic.w	r2, r2, #1
 810b700:	601a      	str	r2, [r3, #0]
 810b702:	68fb      	ldr	r3, [r7, #12]
 810b704:	f023 5300 	bic.w	r3, r3, #536870912	@ 0x20000000
 810b708:	60fb      	str	r3, [r7, #12]
 810b70a:	687b      	ldr	r3, [r7, #4]
 810b70c:	2200      	movs	r2, #0
 810b70e:	665a      	str	r2, [r3, #100]	@ 0x64
 810b710:	687b      	ldr	r3, [r7, #4]
 810b712:	681b      	ldr	r3, [r3, #0]
 810b714:	68fa      	ldr	r2, [r7, #12]
 810b716:	601a      	str	r2, [r3, #0]
 810b718:	687b      	ldr	r3, [r7, #4]
 810b71a:	2220      	movs	r2, #32
 810b71c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 810b720:	687b      	ldr	r3, [r7, #4]
 810b722:	2200      	movs	r2, #0
 810b724:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 810b728:	2300      	movs	r3, #0
 810b72a:	4618      	mov	r0, r3
 810b72c:	3714      	adds	r7, #20
 810b72e:	46bd      	mov	sp, r7
 810b730:	f85d 7b04 	ldr.w	r7, [sp], #4
 810b734:	4770      	bx	lr

0810b736 <HAL_UARTEx_SetTxFifoThreshold>:
 810b736:	b580      	push	{r7, lr}
 810b738:	b084      	sub	sp, #16
 810b73a:	af00      	add	r7, sp, #0
 810b73c:	6078      	str	r0, [r7, #4]
 810b73e:	6039      	str	r1, [r7, #0]
 810b740:	687b      	ldr	r3, [r7, #4]
 810b742:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 810b746:	2b01      	cmp	r3, #1
 810b748:	d101      	bne.n	810b74e <HAL_UARTEx_SetTxFifoThreshold+0x18>
 810b74a:	2302      	movs	r3, #2
 810b74c:	e02d      	b.n	810b7aa <HAL_UARTEx_SetTxFifoThreshold+0x74>
 810b74e:	687b      	ldr	r3, [r7, #4]
 810b750:	2201      	movs	r2, #1
 810b752:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 810b756:	687b      	ldr	r3, [r7, #4]
 810b758:	2224      	movs	r2, #36	@ 0x24
 810b75a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 810b75e:	687b      	ldr	r3, [r7, #4]
 810b760:	681b      	ldr	r3, [r3, #0]
 810b762:	681b      	ldr	r3, [r3, #0]
 810b764:	60fb      	str	r3, [r7, #12]
 810b766:	687b      	ldr	r3, [r7, #4]
 810b768:	681b      	ldr	r3, [r3, #0]
 810b76a:	681a      	ldr	r2, [r3, #0]
 810b76c:	687b      	ldr	r3, [r7, #4]
 810b76e:	681b      	ldr	r3, [r3, #0]
 810b770:	f022 0201 	bic.w	r2, r2, #1
 810b774:	601a      	str	r2, [r3, #0]
 810b776:	687b      	ldr	r3, [r7, #4]
 810b778:	681b      	ldr	r3, [r3, #0]
 810b77a:	689b      	ldr	r3, [r3, #8]
 810b77c:	f023 4160 	bic.w	r1, r3, #3758096384	@ 0xe0000000
 810b780:	687b      	ldr	r3, [r7, #4]
 810b782:	681b      	ldr	r3, [r3, #0]
 810b784:	683a      	ldr	r2, [r7, #0]
 810b786:	430a      	orrs	r2, r1
 810b788:	609a      	str	r2, [r3, #8]
 810b78a:	6878      	ldr	r0, [r7, #4]
 810b78c:	f000 f850 	bl	810b830 <UARTEx_SetNbDataToProcess>
 810b790:	687b      	ldr	r3, [r7, #4]
 810b792:	681b      	ldr	r3, [r3, #0]
 810b794:	68fa      	ldr	r2, [r7, #12]
 810b796:	601a      	str	r2, [r3, #0]
 810b798:	687b      	ldr	r3, [r7, #4]
 810b79a:	2220      	movs	r2, #32
 810b79c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 810b7a0:	687b      	ldr	r3, [r7, #4]
 810b7a2:	2200      	movs	r2, #0
 810b7a4:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 810b7a8:	2300      	movs	r3, #0
 810b7aa:	4618      	mov	r0, r3
 810b7ac:	3710      	adds	r7, #16
 810b7ae:	46bd      	mov	sp, r7
 810b7b0:	bd80      	pop	{r7, pc}

0810b7b2 <HAL_UARTEx_SetRxFifoThreshold>:
 810b7b2:	b580      	push	{r7, lr}
 810b7b4:	b084      	sub	sp, #16
 810b7b6:	af00      	add	r7, sp, #0
 810b7b8:	6078      	str	r0, [r7, #4]
 810b7ba:	6039      	str	r1, [r7, #0]
 810b7bc:	687b      	ldr	r3, [r7, #4]
 810b7be:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 810b7c2:	2b01      	cmp	r3, #1
 810b7c4:	d101      	bne.n	810b7ca <HAL_UARTEx_SetRxFifoThreshold+0x18>
 810b7c6:	2302      	movs	r3, #2
 810b7c8:	e02d      	b.n	810b826 <HAL_UARTEx_SetRxFifoThreshold+0x74>
 810b7ca:	687b      	ldr	r3, [r7, #4]
 810b7cc:	2201      	movs	r2, #1
 810b7ce:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 810b7d2:	687b      	ldr	r3, [r7, #4]
 810b7d4:	2224      	movs	r2, #36	@ 0x24
 810b7d6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 810b7da:	687b      	ldr	r3, [r7, #4]
 810b7dc:	681b      	ldr	r3, [r3, #0]
 810b7de:	681b      	ldr	r3, [r3, #0]
 810b7e0:	60fb      	str	r3, [r7, #12]
 810b7e2:	687b      	ldr	r3, [r7, #4]
 810b7e4:	681b      	ldr	r3, [r3, #0]
 810b7e6:	681a      	ldr	r2, [r3, #0]
 810b7e8:	687b      	ldr	r3, [r7, #4]
 810b7ea:	681b      	ldr	r3, [r3, #0]
 810b7ec:	f022 0201 	bic.w	r2, r2, #1
 810b7f0:	601a      	str	r2, [r3, #0]
 810b7f2:	687b      	ldr	r3, [r7, #4]
 810b7f4:	681b      	ldr	r3, [r3, #0]
 810b7f6:	689b      	ldr	r3, [r3, #8]
 810b7f8:	f023 6160 	bic.w	r1, r3, #234881024	@ 0xe000000
 810b7fc:	687b      	ldr	r3, [r7, #4]
 810b7fe:	681b      	ldr	r3, [r3, #0]
 810b800:	683a      	ldr	r2, [r7, #0]
 810b802:	430a      	orrs	r2, r1
 810b804:	609a      	str	r2, [r3, #8]
 810b806:	6878      	ldr	r0, [r7, #4]
 810b808:	f000 f812 	bl	810b830 <UARTEx_SetNbDataToProcess>
 810b80c:	687b      	ldr	r3, [r7, #4]
 810b80e:	681b      	ldr	r3, [r3, #0]
 810b810:	68fa      	ldr	r2, [r7, #12]
 810b812:	601a      	str	r2, [r3, #0]
 810b814:	687b      	ldr	r3, [r7, #4]
 810b816:	2220      	movs	r2, #32
 810b818:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 810b81c:	687b      	ldr	r3, [r7, #4]
 810b81e:	2200      	movs	r2, #0
 810b820:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 810b824:	2300      	movs	r3, #0
 810b826:	4618      	mov	r0, r3
 810b828:	3710      	adds	r7, #16
 810b82a:	46bd      	mov	sp, r7
 810b82c:	bd80      	pop	{r7, pc}
	...

0810b830 <UARTEx_SetNbDataToProcess>:
 810b830:	b480      	push	{r7}
 810b832:	b085      	sub	sp, #20
 810b834:	af00      	add	r7, sp, #0
 810b836:	6078      	str	r0, [r7, #4]
 810b838:	687b      	ldr	r3, [r7, #4]
 810b83a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 810b83c:	2b00      	cmp	r3, #0
 810b83e:	d108      	bne.n	810b852 <UARTEx_SetNbDataToProcess+0x22>
 810b840:	687b      	ldr	r3, [r7, #4]
 810b842:	2201      	movs	r2, #1
 810b844:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 810b848:	687b      	ldr	r3, [r7, #4]
 810b84a:	2201      	movs	r2, #1
 810b84c:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 810b850:	e031      	b.n	810b8b6 <UARTEx_SetNbDataToProcess+0x86>
 810b852:	2310      	movs	r3, #16
 810b854:	73fb      	strb	r3, [r7, #15]
 810b856:	2310      	movs	r3, #16
 810b858:	73bb      	strb	r3, [r7, #14]
 810b85a:	687b      	ldr	r3, [r7, #4]
 810b85c:	681b      	ldr	r3, [r3, #0]
 810b85e:	689b      	ldr	r3, [r3, #8]
 810b860:	0e5b      	lsrs	r3, r3, #25
 810b862:	b2db      	uxtb	r3, r3
 810b864:	f003 0307 	and.w	r3, r3, #7
 810b868:	737b      	strb	r3, [r7, #13]
 810b86a:	687b      	ldr	r3, [r7, #4]
 810b86c:	681b      	ldr	r3, [r3, #0]
 810b86e:	689b      	ldr	r3, [r3, #8]
 810b870:	0f5b      	lsrs	r3, r3, #29
 810b872:	b2db      	uxtb	r3, r3
 810b874:	f003 0307 	and.w	r3, r3, #7
 810b878:	733b      	strb	r3, [r7, #12]
 810b87a:	7bbb      	ldrb	r3, [r7, #14]
 810b87c:	7b3a      	ldrb	r2, [r7, #12]
 810b87e:	4911      	ldr	r1, [pc, #68]	@ (810b8c4 <UARTEx_SetNbDataToProcess+0x94>)
 810b880:	5c8a      	ldrb	r2, [r1, r2]
 810b882:	fb02 f303 	mul.w	r3, r2, r3
 810b886:	7b3a      	ldrb	r2, [r7, #12]
 810b888:	490f      	ldr	r1, [pc, #60]	@ (810b8c8 <UARTEx_SetNbDataToProcess+0x98>)
 810b88a:	5c8a      	ldrb	r2, [r1, r2]
 810b88c:	fb93 f3f2 	sdiv	r3, r3, r2
 810b890:	b29a      	uxth	r2, r3
 810b892:	687b      	ldr	r3, [r7, #4]
 810b894:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 810b898:	7bfb      	ldrb	r3, [r7, #15]
 810b89a:	7b7a      	ldrb	r2, [r7, #13]
 810b89c:	4909      	ldr	r1, [pc, #36]	@ (810b8c4 <UARTEx_SetNbDataToProcess+0x94>)
 810b89e:	5c8a      	ldrb	r2, [r1, r2]
 810b8a0:	fb02 f303 	mul.w	r3, r2, r3
 810b8a4:	7b7a      	ldrb	r2, [r7, #13]
 810b8a6:	4908      	ldr	r1, [pc, #32]	@ (810b8c8 <UARTEx_SetNbDataToProcess+0x98>)
 810b8a8:	5c8a      	ldrb	r2, [r1, r2]
 810b8aa:	fb93 f3f2 	sdiv	r3, r3, r2
 810b8ae:	b29a      	uxth	r2, r3
 810b8b0:	687b      	ldr	r3, [r7, #4]
 810b8b2:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 810b8b6:	bf00      	nop
 810b8b8:	3714      	adds	r7, #20
 810b8ba:	46bd      	mov	sp, r7
 810b8bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 810b8c0:	4770      	bx	lr
 810b8c2:	bf00      	nop
 810b8c4:	08111890 	.word	0x08111890
 810b8c8:	08111898 	.word	0x08111898

0810b8cc <__NVIC_SetPriority>:
 810b8cc:	b480      	push	{r7}
 810b8ce:	b083      	sub	sp, #12
 810b8d0:	af00      	add	r7, sp, #0
 810b8d2:	4603      	mov	r3, r0
 810b8d4:	6039      	str	r1, [r7, #0]
 810b8d6:	80fb      	strh	r3, [r7, #6]
 810b8d8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 810b8dc:	2b00      	cmp	r3, #0
 810b8de:	db0a      	blt.n	810b8f6 <__NVIC_SetPriority+0x2a>
 810b8e0:	683b      	ldr	r3, [r7, #0]
 810b8e2:	b2da      	uxtb	r2, r3
 810b8e4:	490c      	ldr	r1, [pc, #48]	@ (810b918 <__NVIC_SetPriority+0x4c>)
 810b8e6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 810b8ea:	0112      	lsls	r2, r2, #4
 810b8ec:	b2d2      	uxtb	r2, r2
 810b8ee:	440b      	add	r3, r1
 810b8f0:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 810b8f4:	e00a      	b.n	810b90c <__NVIC_SetPriority+0x40>
 810b8f6:	683b      	ldr	r3, [r7, #0]
 810b8f8:	b2da      	uxtb	r2, r3
 810b8fa:	4908      	ldr	r1, [pc, #32]	@ (810b91c <__NVIC_SetPriority+0x50>)
 810b8fc:	88fb      	ldrh	r3, [r7, #6]
 810b8fe:	f003 030f 	and.w	r3, r3, #15
 810b902:	3b04      	subs	r3, #4
 810b904:	0112      	lsls	r2, r2, #4
 810b906:	b2d2      	uxtb	r2, r2
 810b908:	440b      	add	r3, r1
 810b90a:	761a      	strb	r2, [r3, #24]
 810b90c:	bf00      	nop
 810b90e:	370c      	adds	r7, #12
 810b910:	46bd      	mov	sp, r7
 810b912:	f85d 7b04 	ldr.w	r7, [sp], #4
 810b916:	4770      	bx	lr
 810b918:	e000e100 	.word	0xe000e100
 810b91c:	e000ed00 	.word	0xe000ed00

0810b920 <SysTick_Handler>:
 810b920:	b580      	push	{r7, lr}
 810b922:	af00      	add	r7, sp, #0
 810b924:	4b05      	ldr	r3, [pc, #20]	@ (810b93c <SysTick_Handler+0x1c>)
 810b926:	681b      	ldr	r3, [r3, #0]
 810b928:	f002 f992 	bl	810dc50 <xTaskGetSchedulerState>
 810b92c:	4603      	mov	r3, r0
 810b92e:	2b01      	cmp	r3, #1
 810b930:	d001      	beq.n	810b936 <SysTick_Handler+0x16>
 810b932:	f000 fda9 	bl	810c488 <xPortSysTickHandler>
 810b936:	bf00      	nop
 810b938:	bd80      	pop	{r7, pc}
 810b93a:	bf00      	nop
 810b93c:	e000e010 	.word	0xe000e010

0810b940 <SVC_Setup>:
 810b940:	b580      	push	{r7, lr}
 810b942:	af00      	add	r7, sp, #0
 810b944:	2100      	movs	r1, #0
 810b946:	f06f 0004 	mvn.w	r0, #4
 810b94a:	f7ff ffbf 	bl	810b8cc <__NVIC_SetPriority>
 810b94e:	bf00      	nop
 810b950:	bd80      	pop	{r7, pc}
	...

0810b954 <osKernelInitialize>:
 810b954:	b480      	push	{r7}
 810b956:	b083      	sub	sp, #12
 810b958:	af00      	add	r7, sp, #0
 810b95a:	f3ef 8305 	mrs	r3, IPSR
 810b95e:	603b      	str	r3, [r7, #0]
 810b960:	683b      	ldr	r3, [r7, #0]
 810b962:	2b00      	cmp	r3, #0
 810b964:	d003      	beq.n	810b96e <osKernelInitialize+0x1a>
 810b966:	f06f 0305 	mvn.w	r3, #5
 810b96a:	607b      	str	r3, [r7, #4]
 810b96c:	e00c      	b.n	810b988 <osKernelInitialize+0x34>
 810b96e:	4b0a      	ldr	r3, [pc, #40]	@ (810b998 <osKernelInitialize+0x44>)
 810b970:	681b      	ldr	r3, [r3, #0]
 810b972:	2b00      	cmp	r3, #0
 810b974:	d105      	bne.n	810b982 <osKernelInitialize+0x2e>
 810b976:	4b08      	ldr	r3, [pc, #32]	@ (810b998 <osKernelInitialize+0x44>)
 810b978:	2201      	movs	r2, #1
 810b97a:	601a      	str	r2, [r3, #0]
 810b97c:	2300      	movs	r3, #0
 810b97e:	607b      	str	r3, [r7, #4]
 810b980:	e002      	b.n	810b988 <osKernelInitialize+0x34>
 810b982:	f04f 33ff 	mov.w	r3, #4294967295
 810b986:	607b      	str	r3, [r7, #4]
 810b988:	687b      	ldr	r3, [r7, #4]
 810b98a:	4618      	mov	r0, r3
 810b98c:	370c      	adds	r7, #12
 810b98e:	46bd      	mov	sp, r7
 810b990:	f85d 7b04 	ldr.w	r7, [sp], #4
 810b994:	4770      	bx	lr
 810b996:	bf00      	nop
 810b998:	100005f0 	.word	0x100005f0

0810b99c <osKernelStart>:
 810b99c:	b580      	push	{r7, lr}
 810b99e:	b082      	sub	sp, #8
 810b9a0:	af00      	add	r7, sp, #0
 810b9a2:	f3ef 8305 	mrs	r3, IPSR
 810b9a6:	603b      	str	r3, [r7, #0]
 810b9a8:	683b      	ldr	r3, [r7, #0]
 810b9aa:	2b00      	cmp	r3, #0
 810b9ac:	d003      	beq.n	810b9b6 <osKernelStart+0x1a>
 810b9ae:	f06f 0305 	mvn.w	r3, #5
 810b9b2:	607b      	str	r3, [r7, #4]
 810b9b4:	e010      	b.n	810b9d8 <osKernelStart+0x3c>
 810b9b6:	4b0b      	ldr	r3, [pc, #44]	@ (810b9e4 <osKernelStart+0x48>)
 810b9b8:	681b      	ldr	r3, [r3, #0]
 810b9ba:	2b01      	cmp	r3, #1
 810b9bc:	d109      	bne.n	810b9d2 <osKernelStart+0x36>
 810b9be:	f7ff ffbf 	bl	810b940 <SVC_Setup>
 810b9c2:	4b08      	ldr	r3, [pc, #32]	@ (810b9e4 <osKernelStart+0x48>)
 810b9c4:	2202      	movs	r2, #2
 810b9c6:	601a      	str	r2, [r3, #0]
 810b9c8:	f001 fcde 	bl	810d388 <vTaskStartScheduler>
 810b9cc:	2300      	movs	r3, #0
 810b9ce:	607b      	str	r3, [r7, #4]
 810b9d0:	e002      	b.n	810b9d8 <osKernelStart+0x3c>
 810b9d2:	f04f 33ff 	mov.w	r3, #4294967295
 810b9d6:	607b      	str	r3, [r7, #4]
 810b9d8:	687b      	ldr	r3, [r7, #4]
 810b9da:	4618      	mov	r0, r3
 810b9dc:	3708      	adds	r7, #8
 810b9de:	46bd      	mov	sp, r7
 810b9e0:	bd80      	pop	{r7, pc}
 810b9e2:	bf00      	nop
 810b9e4:	100005f0 	.word	0x100005f0

0810b9e8 <osThreadNew>:
 810b9e8:	b580      	push	{r7, lr}
 810b9ea:	b08e      	sub	sp, #56	@ 0x38
 810b9ec:	af04      	add	r7, sp, #16
 810b9ee:	60f8      	str	r0, [r7, #12]
 810b9f0:	60b9      	str	r1, [r7, #8]
 810b9f2:	607a      	str	r2, [r7, #4]
 810b9f4:	2300      	movs	r3, #0
 810b9f6:	613b      	str	r3, [r7, #16]
 810b9f8:	f3ef 8305 	mrs	r3, IPSR
 810b9fc:	617b      	str	r3, [r7, #20]
 810b9fe:	697b      	ldr	r3, [r7, #20]
 810ba00:	2b00      	cmp	r3, #0
 810ba02:	d17e      	bne.n	810bb02 <osThreadNew+0x11a>
 810ba04:	68fb      	ldr	r3, [r7, #12]
 810ba06:	2b00      	cmp	r3, #0
 810ba08:	d07b      	beq.n	810bb02 <osThreadNew+0x11a>
 810ba0a:	2380      	movs	r3, #128	@ 0x80
 810ba0c:	623b      	str	r3, [r7, #32]
 810ba0e:	2318      	movs	r3, #24
 810ba10:	61fb      	str	r3, [r7, #28]
 810ba12:	2300      	movs	r3, #0
 810ba14:	627b      	str	r3, [r7, #36]	@ 0x24
 810ba16:	f04f 33ff 	mov.w	r3, #4294967295
 810ba1a:	61bb      	str	r3, [r7, #24]
 810ba1c:	687b      	ldr	r3, [r7, #4]
 810ba1e:	2b00      	cmp	r3, #0
 810ba20:	d045      	beq.n	810baae <osThreadNew+0xc6>
 810ba22:	687b      	ldr	r3, [r7, #4]
 810ba24:	681b      	ldr	r3, [r3, #0]
 810ba26:	2b00      	cmp	r3, #0
 810ba28:	d002      	beq.n	810ba30 <osThreadNew+0x48>
 810ba2a:	687b      	ldr	r3, [r7, #4]
 810ba2c:	681b      	ldr	r3, [r3, #0]
 810ba2e:	627b      	str	r3, [r7, #36]	@ 0x24
 810ba30:	687b      	ldr	r3, [r7, #4]
 810ba32:	699b      	ldr	r3, [r3, #24]
 810ba34:	2b00      	cmp	r3, #0
 810ba36:	d002      	beq.n	810ba3e <osThreadNew+0x56>
 810ba38:	687b      	ldr	r3, [r7, #4]
 810ba3a:	699b      	ldr	r3, [r3, #24]
 810ba3c:	61fb      	str	r3, [r7, #28]
 810ba3e:	69fb      	ldr	r3, [r7, #28]
 810ba40:	2b00      	cmp	r3, #0
 810ba42:	d008      	beq.n	810ba56 <osThreadNew+0x6e>
 810ba44:	69fb      	ldr	r3, [r7, #28]
 810ba46:	2b38      	cmp	r3, #56	@ 0x38
 810ba48:	d805      	bhi.n	810ba56 <osThreadNew+0x6e>
 810ba4a:	687b      	ldr	r3, [r7, #4]
 810ba4c:	685b      	ldr	r3, [r3, #4]
 810ba4e:	f003 0301 	and.w	r3, r3, #1
 810ba52:	2b00      	cmp	r3, #0
 810ba54:	d001      	beq.n	810ba5a <osThreadNew+0x72>
 810ba56:	2300      	movs	r3, #0
 810ba58:	e054      	b.n	810bb04 <osThreadNew+0x11c>
 810ba5a:	687b      	ldr	r3, [r7, #4]
 810ba5c:	695b      	ldr	r3, [r3, #20]
 810ba5e:	2b00      	cmp	r3, #0
 810ba60:	d003      	beq.n	810ba6a <osThreadNew+0x82>
 810ba62:	687b      	ldr	r3, [r7, #4]
 810ba64:	695b      	ldr	r3, [r3, #20]
 810ba66:	089b      	lsrs	r3, r3, #2
 810ba68:	623b      	str	r3, [r7, #32]
 810ba6a:	687b      	ldr	r3, [r7, #4]
 810ba6c:	689b      	ldr	r3, [r3, #8]
 810ba6e:	2b00      	cmp	r3, #0
 810ba70:	d00e      	beq.n	810ba90 <osThreadNew+0xa8>
 810ba72:	687b      	ldr	r3, [r7, #4]
 810ba74:	68db      	ldr	r3, [r3, #12]
 810ba76:	2ba7      	cmp	r3, #167	@ 0xa7
 810ba78:	d90a      	bls.n	810ba90 <osThreadNew+0xa8>
 810ba7a:	687b      	ldr	r3, [r7, #4]
 810ba7c:	691b      	ldr	r3, [r3, #16]
 810ba7e:	2b00      	cmp	r3, #0
 810ba80:	d006      	beq.n	810ba90 <osThreadNew+0xa8>
 810ba82:	687b      	ldr	r3, [r7, #4]
 810ba84:	695b      	ldr	r3, [r3, #20]
 810ba86:	2b00      	cmp	r3, #0
 810ba88:	d002      	beq.n	810ba90 <osThreadNew+0xa8>
 810ba8a:	2301      	movs	r3, #1
 810ba8c:	61bb      	str	r3, [r7, #24]
 810ba8e:	e010      	b.n	810bab2 <osThreadNew+0xca>
 810ba90:	687b      	ldr	r3, [r7, #4]
 810ba92:	689b      	ldr	r3, [r3, #8]
 810ba94:	2b00      	cmp	r3, #0
 810ba96:	d10c      	bne.n	810bab2 <osThreadNew+0xca>
 810ba98:	687b      	ldr	r3, [r7, #4]
 810ba9a:	68db      	ldr	r3, [r3, #12]
 810ba9c:	2b00      	cmp	r3, #0
 810ba9e:	d108      	bne.n	810bab2 <osThreadNew+0xca>
 810baa0:	687b      	ldr	r3, [r7, #4]
 810baa2:	691b      	ldr	r3, [r3, #16]
 810baa4:	2b00      	cmp	r3, #0
 810baa6:	d104      	bne.n	810bab2 <osThreadNew+0xca>
 810baa8:	2300      	movs	r3, #0
 810baaa:	61bb      	str	r3, [r7, #24]
 810baac:	e001      	b.n	810bab2 <osThreadNew+0xca>
 810baae:	2300      	movs	r3, #0
 810bab0:	61bb      	str	r3, [r7, #24]
 810bab2:	69bb      	ldr	r3, [r7, #24]
 810bab4:	2b01      	cmp	r3, #1
 810bab6:	d110      	bne.n	810bada <osThreadNew+0xf2>
 810bab8:	687b      	ldr	r3, [r7, #4]
 810baba:	691b      	ldr	r3, [r3, #16]
 810babc:	687a      	ldr	r2, [r7, #4]
 810babe:	6892      	ldr	r2, [r2, #8]
 810bac0:	9202      	str	r2, [sp, #8]
 810bac2:	9301      	str	r3, [sp, #4]
 810bac4:	69fb      	ldr	r3, [r7, #28]
 810bac6:	9300      	str	r3, [sp, #0]
 810bac8:	68bb      	ldr	r3, [r7, #8]
 810baca:	6a3a      	ldr	r2, [r7, #32]
 810bacc:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 810bace:	68f8      	ldr	r0, [r7, #12]
 810bad0:	f001 fa66 	bl	810cfa0 <xTaskCreateStatic>
 810bad4:	4603      	mov	r3, r0
 810bad6:	613b      	str	r3, [r7, #16]
 810bad8:	e013      	b.n	810bb02 <osThreadNew+0x11a>
 810bada:	69bb      	ldr	r3, [r7, #24]
 810badc:	2b00      	cmp	r3, #0
 810bade:	d110      	bne.n	810bb02 <osThreadNew+0x11a>
 810bae0:	6a3b      	ldr	r3, [r7, #32]
 810bae2:	b29a      	uxth	r2, r3
 810bae4:	f107 0310 	add.w	r3, r7, #16
 810bae8:	9301      	str	r3, [sp, #4]
 810baea:	69fb      	ldr	r3, [r7, #28]
 810baec:	9300      	str	r3, [sp, #0]
 810baee:	68bb      	ldr	r3, [r7, #8]
 810baf0:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 810baf2:	68f8      	ldr	r0, [r7, #12]
 810baf4:	f001 fab4 	bl	810d060 <xTaskCreate>
 810baf8:	4603      	mov	r3, r0
 810bafa:	2b01      	cmp	r3, #1
 810bafc:	d001      	beq.n	810bb02 <osThreadNew+0x11a>
 810bafe:	2300      	movs	r3, #0
 810bb00:	613b      	str	r3, [r7, #16]
 810bb02:	693b      	ldr	r3, [r7, #16]
 810bb04:	4618      	mov	r0, r3
 810bb06:	3728      	adds	r7, #40	@ 0x28
 810bb08:	46bd      	mov	sp, r7
 810bb0a:	bd80      	pop	{r7, pc}

0810bb0c <osDelay>:
 810bb0c:	b580      	push	{r7, lr}
 810bb0e:	b084      	sub	sp, #16
 810bb10:	af00      	add	r7, sp, #0
 810bb12:	6078      	str	r0, [r7, #4]
 810bb14:	f3ef 8305 	mrs	r3, IPSR
 810bb18:	60bb      	str	r3, [r7, #8]
 810bb1a:	68bb      	ldr	r3, [r7, #8]
 810bb1c:	2b00      	cmp	r3, #0
 810bb1e:	d003      	beq.n	810bb28 <osDelay+0x1c>
 810bb20:	f06f 0305 	mvn.w	r3, #5
 810bb24:	60fb      	str	r3, [r7, #12]
 810bb26:	e007      	b.n	810bb38 <osDelay+0x2c>
 810bb28:	2300      	movs	r3, #0
 810bb2a:	60fb      	str	r3, [r7, #12]
 810bb2c:	687b      	ldr	r3, [r7, #4]
 810bb2e:	2b00      	cmp	r3, #0
 810bb30:	d002      	beq.n	810bb38 <osDelay+0x2c>
 810bb32:	6878      	ldr	r0, [r7, #4]
 810bb34:	f001 fbf2 	bl	810d31c <vTaskDelay>
 810bb38:	68fb      	ldr	r3, [r7, #12]
 810bb3a:	4618      	mov	r0, r3
 810bb3c:	3710      	adds	r7, #16
 810bb3e:	46bd      	mov	sp, r7
 810bb40:	bd80      	pop	{r7, pc}
	...

0810bb44 <vApplicationGetIdleTaskMemory>:
 810bb44:	b480      	push	{r7}
 810bb46:	b085      	sub	sp, #20
 810bb48:	af00      	add	r7, sp, #0
 810bb4a:	60f8      	str	r0, [r7, #12]
 810bb4c:	60b9      	str	r1, [r7, #8]
 810bb4e:	607a      	str	r2, [r7, #4]
 810bb50:	68fb      	ldr	r3, [r7, #12]
 810bb52:	4a07      	ldr	r2, [pc, #28]	@ (810bb70 <vApplicationGetIdleTaskMemory+0x2c>)
 810bb54:	601a      	str	r2, [r3, #0]
 810bb56:	68bb      	ldr	r3, [r7, #8]
 810bb58:	4a06      	ldr	r2, [pc, #24]	@ (810bb74 <vApplicationGetIdleTaskMemory+0x30>)
 810bb5a:	601a      	str	r2, [r3, #0]
 810bb5c:	687b      	ldr	r3, [r7, #4]
 810bb5e:	2280      	movs	r2, #128	@ 0x80
 810bb60:	601a      	str	r2, [r3, #0]
 810bb62:	bf00      	nop
 810bb64:	3714      	adds	r7, #20
 810bb66:	46bd      	mov	sp, r7
 810bb68:	f85d 7b04 	ldr.w	r7, [sp], #4
 810bb6c:	4770      	bx	lr
 810bb6e:	bf00      	nop
 810bb70:	100005f4 	.word	0x100005f4
 810bb74:	1000069c 	.word	0x1000069c

0810bb78 <vApplicationGetTimerTaskMemory>:
 810bb78:	b480      	push	{r7}
 810bb7a:	b085      	sub	sp, #20
 810bb7c:	af00      	add	r7, sp, #0
 810bb7e:	60f8      	str	r0, [r7, #12]
 810bb80:	60b9      	str	r1, [r7, #8]
 810bb82:	607a      	str	r2, [r7, #4]
 810bb84:	68fb      	ldr	r3, [r7, #12]
 810bb86:	4a07      	ldr	r2, [pc, #28]	@ (810bba4 <vApplicationGetTimerTaskMemory+0x2c>)
 810bb88:	601a      	str	r2, [r3, #0]
 810bb8a:	68bb      	ldr	r3, [r7, #8]
 810bb8c:	4a06      	ldr	r2, [pc, #24]	@ (810bba8 <vApplicationGetTimerTaskMemory+0x30>)
 810bb8e:	601a      	str	r2, [r3, #0]
 810bb90:	687b      	ldr	r3, [r7, #4]
 810bb92:	f44f 7280 	mov.w	r2, #256	@ 0x100
 810bb96:	601a      	str	r2, [r3, #0]
 810bb98:	bf00      	nop
 810bb9a:	3714      	adds	r7, #20
 810bb9c:	46bd      	mov	sp, r7
 810bb9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 810bba2:	4770      	bx	lr
 810bba4:	1000089c 	.word	0x1000089c
 810bba8:	10000944 	.word	0x10000944

0810bbac <pvPortMalloc>:
 810bbac:	b580      	push	{r7, lr}
 810bbae:	b08a      	sub	sp, #40	@ 0x28
 810bbb0:	af00      	add	r7, sp, #0
 810bbb2:	6078      	str	r0, [r7, #4]
 810bbb4:	2300      	movs	r3, #0
 810bbb6:	61fb      	str	r3, [r7, #28]
 810bbb8:	f001 fc56 	bl	810d468 <vTaskSuspendAll>
 810bbbc:	4b5c      	ldr	r3, [pc, #368]	@ (810bd30 <pvPortMalloc+0x184>)
 810bbbe:	681b      	ldr	r3, [r3, #0]
 810bbc0:	2b00      	cmp	r3, #0
 810bbc2:	d101      	bne.n	810bbc8 <pvPortMalloc+0x1c>
 810bbc4:	f000 f930 	bl	810be28 <prvHeapInit>
 810bbc8:	4b5a      	ldr	r3, [pc, #360]	@ (810bd34 <pvPortMalloc+0x188>)
 810bbca:	681a      	ldr	r2, [r3, #0]
 810bbcc:	687b      	ldr	r3, [r7, #4]
 810bbce:	4013      	ands	r3, r2
 810bbd0:	2b00      	cmp	r3, #0
 810bbd2:	f040 8095 	bne.w	810bd00 <pvPortMalloc+0x154>
 810bbd6:	687b      	ldr	r3, [r7, #4]
 810bbd8:	2b00      	cmp	r3, #0
 810bbda:	d01e      	beq.n	810bc1a <pvPortMalloc+0x6e>
 810bbdc:	2208      	movs	r2, #8
 810bbde:	687b      	ldr	r3, [r7, #4]
 810bbe0:	4413      	add	r3, r2
 810bbe2:	607b      	str	r3, [r7, #4]
 810bbe4:	687b      	ldr	r3, [r7, #4]
 810bbe6:	f003 0307 	and.w	r3, r3, #7
 810bbea:	2b00      	cmp	r3, #0
 810bbec:	d015      	beq.n	810bc1a <pvPortMalloc+0x6e>
 810bbee:	687b      	ldr	r3, [r7, #4]
 810bbf0:	f023 0307 	bic.w	r3, r3, #7
 810bbf4:	3308      	adds	r3, #8
 810bbf6:	607b      	str	r3, [r7, #4]
 810bbf8:	687b      	ldr	r3, [r7, #4]
 810bbfa:	f003 0307 	and.w	r3, r3, #7
 810bbfe:	2b00      	cmp	r3, #0
 810bc00:	d00b      	beq.n	810bc1a <pvPortMalloc+0x6e>
 810bc02:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810bc06:	f383 8811 	msr	BASEPRI, r3
 810bc0a:	f3bf 8f6f 	isb	sy
 810bc0e:	f3bf 8f4f 	dsb	sy
 810bc12:	617b      	str	r3, [r7, #20]
 810bc14:	bf00      	nop
 810bc16:	bf00      	nop
 810bc18:	e7fd      	b.n	810bc16 <pvPortMalloc+0x6a>
 810bc1a:	687b      	ldr	r3, [r7, #4]
 810bc1c:	2b00      	cmp	r3, #0
 810bc1e:	d06f      	beq.n	810bd00 <pvPortMalloc+0x154>
 810bc20:	4b45      	ldr	r3, [pc, #276]	@ (810bd38 <pvPortMalloc+0x18c>)
 810bc22:	681b      	ldr	r3, [r3, #0]
 810bc24:	687a      	ldr	r2, [r7, #4]
 810bc26:	429a      	cmp	r2, r3
 810bc28:	d86a      	bhi.n	810bd00 <pvPortMalloc+0x154>
 810bc2a:	4b44      	ldr	r3, [pc, #272]	@ (810bd3c <pvPortMalloc+0x190>)
 810bc2c:	623b      	str	r3, [r7, #32]
 810bc2e:	4b43      	ldr	r3, [pc, #268]	@ (810bd3c <pvPortMalloc+0x190>)
 810bc30:	681b      	ldr	r3, [r3, #0]
 810bc32:	627b      	str	r3, [r7, #36]	@ 0x24
 810bc34:	e004      	b.n	810bc40 <pvPortMalloc+0x94>
 810bc36:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810bc38:	623b      	str	r3, [r7, #32]
 810bc3a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810bc3c:	681b      	ldr	r3, [r3, #0]
 810bc3e:	627b      	str	r3, [r7, #36]	@ 0x24
 810bc40:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810bc42:	685b      	ldr	r3, [r3, #4]
 810bc44:	687a      	ldr	r2, [r7, #4]
 810bc46:	429a      	cmp	r2, r3
 810bc48:	d903      	bls.n	810bc52 <pvPortMalloc+0xa6>
 810bc4a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810bc4c:	681b      	ldr	r3, [r3, #0]
 810bc4e:	2b00      	cmp	r3, #0
 810bc50:	d1f1      	bne.n	810bc36 <pvPortMalloc+0x8a>
 810bc52:	4b37      	ldr	r3, [pc, #220]	@ (810bd30 <pvPortMalloc+0x184>)
 810bc54:	681b      	ldr	r3, [r3, #0]
 810bc56:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 810bc58:	429a      	cmp	r2, r3
 810bc5a:	d051      	beq.n	810bd00 <pvPortMalloc+0x154>
 810bc5c:	6a3b      	ldr	r3, [r7, #32]
 810bc5e:	681b      	ldr	r3, [r3, #0]
 810bc60:	2208      	movs	r2, #8
 810bc62:	4413      	add	r3, r2
 810bc64:	61fb      	str	r3, [r7, #28]
 810bc66:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810bc68:	681a      	ldr	r2, [r3, #0]
 810bc6a:	6a3b      	ldr	r3, [r7, #32]
 810bc6c:	601a      	str	r2, [r3, #0]
 810bc6e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810bc70:	685a      	ldr	r2, [r3, #4]
 810bc72:	687b      	ldr	r3, [r7, #4]
 810bc74:	1ad2      	subs	r2, r2, r3
 810bc76:	2308      	movs	r3, #8
 810bc78:	005b      	lsls	r3, r3, #1
 810bc7a:	429a      	cmp	r2, r3
 810bc7c:	d920      	bls.n	810bcc0 <pvPortMalloc+0x114>
 810bc7e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 810bc80:	687b      	ldr	r3, [r7, #4]
 810bc82:	4413      	add	r3, r2
 810bc84:	61bb      	str	r3, [r7, #24]
 810bc86:	69bb      	ldr	r3, [r7, #24]
 810bc88:	f003 0307 	and.w	r3, r3, #7
 810bc8c:	2b00      	cmp	r3, #0
 810bc8e:	d00b      	beq.n	810bca8 <pvPortMalloc+0xfc>
 810bc90:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810bc94:	f383 8811 	msr	BASEPRI, r3
 810bc98:	f3bf 8f6f 	isb	sy
 810bc9c:	f3bf 8f4f 	dsb	sy
 810bca0:	613b      	str	r3, [r7, #16]
 810bca2:	bf00      	nop
 810bca4:	bf00      	nop
 810bca6:	e7fd      	b.n	810bca4 <pvPortMalloc+0xf8>
 810bca8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810bcaa:	685a      	ldr	r2, [r3, #4]
 810bcac:	687b      	ldr	r3, [r7, #4]
 810bcae:	1ad2      	subs	r2, r2, r3
 810bcb0:	69bb      	ldr	r3, [r7, #24]
 810bcb2:	605a      	str	r2, [r3, #4]
 810bcb4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810bcb6:	687a      	ldr	r2, [r7, #4]
 810bcb8:	605a      	str	r2, [r3, #4]
 810bcba:	69b8      	ldr	r0, [r7, #24]
 810bcbc:	f000 f916 	bl	810beec <prvInsertBlockIntoFreeList>
 810bcc0:	4b1d      	ldr	r3, [pc, #116]	@ (810bd38 <pvPortMalloc+0x18c>)
 810bcc2:	681a      	ldr	r2, [r3, #0]
 810bcc4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810bcc6:	685b      	ldr	r3, [r3, #4]
 810bcc8:	1ad3      	subs	r3, r2, r3
 810bcca:	4a1b      	ldr	r2, [pc, #108]	@ (810bd38 <pvPortMalloc+0x18c>)
 810bccc:	6013      	str	r3, [r2, #0]
 810bcce:	4b1a      	ldr	r3, [pc, #104]	@ (810bd38 <pvPortMalloc+0x18c>)
 810bcd0:	681a      	ldr	r2, [r3, #0]
 810bcd2:	4b1b      	ldr	r3, [pc, #108]	@ (810bd40 <pvPortMalloc+0x194>)
 810bcd4:	681b      	ldr	r3, [r3, #0]
 810bcd6:	429a      	cmp	r2, r3
 810bcd8:	d203      	bcs.n	810bce2 <pvPortMalloc+0x136>
 810bcda:	4b17      	ldr	r3, [pc, #92]	@ (810bd38 <pvPortMalloc+0x18c>)
 810bcdc:	681b      	ldr	r3, [r3, #0]
 810bcde:	4a18      	ldr	r2, [pc, #96]	@ (810bd40 <pvPortMalloc+0x194>)
 810bce0:	6013      	str	r3, [r2, #0]
 810bce2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810bce4:	685a      	ldr	r2, [r3, #4]
 810bce6:	4b13      	ldr	r3, [pc, #76]	@ (810bd34 <pvPortMalloc+0x188>)
 810bce8:	681b      	ldr	r3, [r3, #0]
 810bcea:	431a      	orrs	r2, r3
 810bcec:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810bcee:	605a      	str	r2, [r3, #4]
 810bcf0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810bcf2:	2200      	movs	r2, #0
 810bcf4:	601a      	str	r2, [r3, #0]
 810bcf6:	4b13      	ldr	r3, [pc, #76]	@ (810bd44 <pvPortMalloc+0x198>)
 810bcf8:	681b      	ldr	r3, [r3, #0]
 810bcfa:	3301      	adds	r3, #1
 810bcfc:	4a11      	ldr	r2, [pc, #68]	@ (810bd44 <pvPortMalloc+0x198>)
 810bcfe:	6013      	str	r3, [r2, #0]
 810bd00:	f001 fbc0 	bl	810d484 <xTaskResumeAll>
 810bd04:	69fb      	ldr	r3, [r7, #28]
 810bd06:	f003 0307 	and.w	r3, r3, #7
 810bd0a:	2b00      	cmp	r3, #0
 810bd0c:	d00b      	beq.n	810bd26 <pvPortMalloc+0x17a>
 810bd0e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810bd12:	f383 8811 	msr	BASEPRI, r3
 810bd16:	f3bf 8f6f 	isb	sy
 810bd1a:	f3bf 8f4f 	dsb	sy
 810bd1e:	60fb      	str	r3, [r7, #12]
 810bd20:	bf00      	nop
 810bd22:	bf00      	nop
 810bd24:	e7fd      	b.n	810bd22 <pvPortMalloc+0x176>
 810bd26:	69fb      	ldr	r3, [r7, #28]
 810bd28:	4618      	mov	r0, r3
 810bd2a:	3728      	adds	r7, #40	@ 0x28
 810bd2c:	46bd      	mov	sp, r7
 810bd2e:	bd80      	pop	{r7, pc}
 810bd30:	1000494c 	.word	0x1000494c
 810bd34:	10004960 	.word	0x10004960
 810bd38:	10004950 	.word	0x10004950
 810bd3c:	10004944 	.word	0x10004944
 810bd40:	10004954 	.word	0x10004954
 810bd44:	10004958 	.word	0x10004958

0810bd48 <vPortFree>:
 810bd48:	b580      	push	{r7, lr}
 810bd4a:	b086      	sub	sp, #24
 810bd4c:	af00      	add	r7, sp, #0
 810bd4e:	6078      	str	r0, [r7, #4]
 810bd50:	687b      	ldr	r3, [r7, #4]
 810bd52:	617b      	str	r3, [r7, #20]
 810bd54:	687b      	ldr	r3, [r7, #4]
 810bd56:	2b00      	cmp	r3, #0
 810bd58:	d04f      	beq.n	810bdfa <vPortFree+0xb2>
 810bd5a:	2308      	movs	r3, #8
 810bd5c:	425b      	negs	r3, r3
 810bd5e:	697a      	ldr	r2, [r7, #20]
 810bd60:	4413      	add	r3, r2
 810bd62:	617b      	str	r3, [r7, #20]
 810bd64:	697b      	ldr	r3, [r7, #20]
 810bd66:	613b      	str	r3, [r7, #16]
 810bd68:	693b      	ldr	r3, [r7, #16]
 810bd6a:	685a      	ldr	r2, [r3, #4]
 810bd6c:	4b25      	ldr	r3, [pc, #148]	@ (810be04 <vPortFree+0xbc>)
 810bd6e:	681b      	ldr	r3, [r3, #0]
 810bd70:	4013      	ands	r3, r2
 810bd72:	2b00      	cmp	r3, #0
 810bd74:	d10b      	bne.n	810bd8e <vPortFree+0x46>
 810bd76:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810bd7a:	f383 8811 	msr	BASEPRI, r3
 810bd7e:	f3bf 8f6f 	isb	sy
 810bd82:	f3bf 8f4f 	dsb	sy
 810bd86:	60fb      	str	r3, [r7, #12]
 810bd88:	bf00      	nop
 810bd8a:	bf00      	nop
 810bd8c:	e7fd      	b.n	810bd8a <vPortFree+0x42>
 810bd8e:	693b      	ldr	r3, [r7, #16]
 810bd90:	681b      	ldr	r3, [r3, #0]
 810bd92:	2b00      	cmp	r3, #0
 810bd94:	d00b      	beq.n	810bdae <vPortFree+0x66>
 810bd96:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810bd9a:	f383 8811 	msr	BASEPRI, r3
 810bd9e:	f3bf 8f6f 	isb	sy
 810bda2:	f3bf 8f4f 	dsb	sy
 810bda6:	60bb      	str	r3, [r7, #8]
 810bda8:	bf00      	nop
 810bdaa:	bf00      	nop
 810bdac:	e7fd      	b.n	810bdaa <vPortFree+0x62>
 810bdae:	693b      	ldr	r3, [r7, #16]
 810bdb0:	685a      	ldr	r2, [r3, #4]
 810bdb2:	4b14      	ldr	r3, [pc, #80]	@ (810be04 <vPortFree+0xbc>)
 810bdb4:	681b      	ldr	r3, [r3, #0]
 810bdb6:	4013      	ands	r3, r2
 810bdb8:	2b00      	cmp	r3, #0
 810bdba:	d01e      	beq.n	810bdfa <vPortFree+0xb2>
 810bdbc:	693b      	ldr	r3, [r7, #16]
 810bdbe:	681b      	ldr	r3, [r3, #0]
 810bdc0:	2b00      	cmp	r3, #0
 810bdc2:	d11a      	bne.n	810bdfa <vPortFree+0xb2>
 810bdc4:	693b      	ldr	r3, [r7, #16]
 810bdc6:	685a      	ldr	r2, [r3, #4]
 810bdc8:	4b0e      	ldr	r3, [pc, #56]	@ (810be04 <vPortFree+0xbc>)
 810bdca:	681b      	ldr	r3, [r3, #0]
 810bdcc:	43db      	mvns	r3, r3
 810bdce:	401a      	ands	r2, r3
 810bdd0:	693b      	ldr	r3, [r7, #16]
 810bdd2:	605a      	str	r2, [r3, #4]
 810bdd4:	f001 fb48 	bl	810d468 <vTaskSuspendAll>
 810bdd8:	693b      	ldr	r3, [r7, #16]
 810bdda:	685a      	ldr	r2, [r3, #4]
 810bddc:	4b0a      	ldr	r3, [pc, #40]	@ (810be08 <vPortFree+0xc0>)
 810bdde:	681b      	ldr	r3, [r3, #0]
 810bde0:	4413      	add	r3, r2
 810bde2:	4a09      	ldr	r2, [pc, #36]	@ (810be08 <vPortFree+0xc0>)
 810bde4:	6013      	str	r3, [r2, #0]
 810bde6:	6938      	ldr	r0, [r7, #16]
 810bde8:	f000 f880 	bl	810beec <prvInsertBlockIntoFreeList>
 810bdec:	4b07      	ldr	r3, [pc, #28]	@ (810be0c <vPortFree+0xc4>)
 810bdee:	681b      	ldr	r3, [r3, #0]
 810bdf0:	3301      	adds	r3, #1
 810bdf2:	4a06      	ldr	r2, [pc, #24]	@ (810be0c <vPortFree+0xc4>)
 810bdf4:	6013      	str	r3, [r2, #0]
 810bdf6:	f001 fb45 	bl	810d484 <xTaskResumeAll>
 810bdfa:	bf00      	nop
 810bdfc:	3718      	adds	r7, #24
 810bdfe:	46bd      	mov	sp, r7
 810be00:	bd80      	pop	{r7, pc}
 810be02:	bf00      	nop
 810be04:	10004960 	.word	0x10004960
 810be08:	10004950 	.word	0x10004950
 810be0c:	1000495c 	.word	0x1000495c

0810be10 <xPortGetFreeHeapSize>:
 810be10:	b480      	push	{r7}
 810be12:	af00      	add	r7, sp, #0
 810be14:	4b03      	ldr	r3, [pc, #12]	@ (810be24 <xPortGetFreeHeapSize+0x14>)
 810be16:	681b      	ldr	r3, [r3, #0]
 810be18:	4618      	mov	r0, r3
 810be1a:	46bd      	mov	sp, r7
 810be1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 810be20:	4770      	bx	lr
 810be22:	bf00      	nop
 810be24:	10004950 	.word	0x10004950

0810be28 <prvHeapInit>:
 810be28:	b480      	push	{r7}
 810be2a:	b085      	sub	sp, #20
 810be2c:	af00      	add	r7, sp, #0
 810be2e:	f44f 5370 	mov.w	r3, #15360	@ 0x3c00
 810be32:	60bb      	str	r3, [r7, #8]
 810be34:	4b27      	ldr	r3, [pc, #156]	@ (810bed4 <prvHeapInit+0xac>)
 810be36:	60fb      	str	r3, [r7, #12]
 810be38:	68fb      	ldr	r3, [r7, #12]
 810be3a:	f003 0307 	and.w	r3, r3, #7
 810be3e:	2b00      	cmp	r3, #0
 810be40:	d00c      	beq.n	810be5c <prvHeapInit+0x34>
 810be42:	68fb      	ldr	r3, [r7, #12]
 810be44:	3307      	adds	r3, #7
 810be46:	60fb      	str	r3, [r7, #12]
 810be48:	68fb      	ldr	r3, [r7, #12]
 810be4a:	f023 0307 	bic.w	r3, r3, #7
 810be4e:	60fb      	str	r3, [r7, #12]
 810be50:	68ba      	ldr	r2, [r7, #8]
 810be52:	68fb      	ldr	r3, [r7, #12]
 810be54:	1ad3      	subs	r3, r2, r3
 810be56:	4a1f      	ldr	r2, [pc, #124]	@ (810bed4 <prvHeapInit+0xac>)
 810be58:	4413      	add	r3, r2
 810be5a:	60bb      	str	r3, [r7, #8]
 810be5c:	68fb      	ldr	r3, [r7, #12]
 810be5e:	607b      	str	r3, [r7, #4]
 810be60:	4a1d      	ldr	r2, [pc, #116]	@ (810bed8 <prvHeapInit+0xb0>)
 810be62:	687b      	ldr	r3, [r7, #4]
 810be64:	6013      	str	r3, [r2, #0]
 810be66:	4b1c      	ldr	r3, [pc, #112]	@ (810bed8 <prvHeapInit+0xb0>)
 810be68:	2200      	movs	r2, #0
 810be6a:	605a      	str	r2, [r3, #4]
 810be6c:	687b      	ldr	r3, [r7, #4]
 810be6e:	68ba      	ldr	r2, [r7, #8]
 810be70:	4413      	add	r3, r2
 810be72:	60fb      	str	r3, [r7, #12]
 810be74:	2208      	movs	r2, #8
 810be76:	68fb      	ldr	r3, [r7, #12]
 810be78:	1a9b      	subs	r3, r3, r2
 810be7a:	60fb      	str	r3, [r7, #12]
 810be7c:	68fb      	ldr	r3, [r7, #12]
 810be7e:	f023 0307 	bic.w	r3, r3, #7
 810be82:	60fb      	str	r3, [r7, #12]
 810be84:	68fb      	ldr	r3, [r7, #12]
 810be86:	4a15      	ldr	r2, [pc, #84]	@ (810bedc <prvHeapInit+0xb4>)
 810be88:	6013      	str	r3, [r2, #0]
 810be8a:	4b14      	ldr	r3, [pc, #80]	@ (810bedc <prvHeapInit+0xb4>)
 810be8c:	681b      	ldr	r3, [r3, #0]
 810be8e:	2200      	movs	r2, #0
 810be90:	605a      	str	r2, [r3, #4]
 810be92:	4b12      	ldr	r3, [pc, #72]	@ (810bedc <prvHeapInit+0xb4>)
 810be94:	681b      	ldr	r3, [r3, #0]
 810be96:	2200      	movs	r2, #0
 810be98:	601a      	str	r2, [r3, #0]
 810be9a:	687b      	ldr	r3, [r7, #4]
 810be9c:	603b      	str	r3, [r7, #0]
 810be9e:	683b      	ldr	r3, [r7, #0]
 810bea0:	68fa      	ldr	r2, [r7, #12]
 810bea2:	1ad2      	subs	r2, r2, r3
 810bea4:	683b      	ldr	r3, [r7, #0]
 810bea6:	605a      	str	r2, [r3, #4]
 810bea8:	4b0c      	ldr	r3, [pc, #48]	@ (810bedc <prvHeapInit+0xb4>)
 810beaa:	681a      	ldr	r2, [r3, #0]
 810beac:	683b      	ldr	r3, [r7, #0]
 810beae:	601a      	str	r2, [r3, #0]
 810beb0:	683b      	ldr	r3, [r7, #0]
 810beb2:	685b      	ldr	r3, [r3, #4]
 810beb4:	4a0a      	ldr	r2, [pc, #40]	@ (810bee0 <prvHeapInit+0xb8>)
 810beb6:	6013      	str	r3, [r2, #0]
 810beb8:	683b      	ldr	r3, [r7, #0]
 810beba:	685b      	ldr	r3, [r3, #4]
 810bebc:	4a09      	ldr	r2, [pc, #36]	@ (810bee4 <prvHeapInit+0xbc>)
 810bebe:	6013      	str	r3, [r2, #0]
 810bec0:	4b09      	ldr	r3, [pc, #36]	@ (810bee8 <prvHeapInit+0xc0>)
 810bec2:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 810bec6:	601a      	str	r2, [r3, #0]
 810bec8:	bf00      	nop
 810beca:	3714      	adds	r7, #20
 810becc:	46bd      	mov	sp, r7
 810bece:	f85d 7b04 	ldr.w	r7, [sp], #4
 810bed2:	4770      	bx	lr
 810bed4:	10000d44 	.word	0x10000d44
 810bed8:	10004944 	.word	0x10004944
 810bedc:	1000494c 	.word	0x1000494c
 810bee0:	10004954 	.word	0x10004954
 810bee4:	10004950 	.word	0x10004950
 810bee8:	10004960 	.word	0x10004960

0810beec <prvInsertBlockIntoFreeList>:
 810beec:	b480      	push	{r7}
 810beee:	b085      	sub	sp, #20
 810bef0:	af00      	add	r7, sp, #0
 810bef2:	6078      	str	r0, [r7, #4]
 810bef4:	4b28      	ldr	r3, [pc, #160]	@ (810bf98 <prvInsertBlockIntoFreeList+0xac>)
 810bef6:	60fb      	str	r3, [r7, #12]
 810bef8:	e002      	b.n	810bf00 <prvInsertBlockIntoFreeList+0x14>
 810befa:	68fb      	ldr	r3, [r7, #12]
 810befc:	681b      	ldr	r3, [r3, #0]
 810befe:	60fb      	str	r3, [r7, #12]
 810bf00:	68fb      	ldr	r3, [r7, #12]
 810bf02:	681b      	ldr	r3, [r3, #0]
 810bf04:	687a      	ldr	r2, [r7, #4]
 810bf06:	429a      	cmp	r2, r3
 810bf08:	d8f7      	bhi.n	810befa <prvInsertBlockIntoFreeList+0xe>
 810bf0a:	68fb      	ldr	r3, [r7, #12]
 810bf0c:	60bb      	str	r3, [r7, #8]
 810bf0e:	68fb      	ldr	r3, [r7, #12]
 810bf10:	685b      	ldr	r3, [r3, #4]
 810bf12:	68ba      	ldr	r2, [r7, #8]
 810bf14:	4413      	add	r3, r2
 810bf16:	687a      	ldr	r2, [r7, #4]
 810bf18:	429a      	cmp	r2, r3
 810bf1a:	d108      	bne.n	810bf2e <prvInsertBlockIntoFreeList+0x42>
 810bf1c:	68fb      	ldr	r3, [r7, #12]
 810bf1e:	685a      	ldr	r2, [r3, #4]
 810bf20:	687b      	ldr	r3, [r7, #4]
 810bf22:	685b      	ldr	r3, [r3, #4]
 810bf24:	441a      	add	r2, r3
 810bf26:	68fb      	ldr	r3, [r7, #12]
 810bf28:	605a      	str	r2, [r3, #4]
 810bf2a:	68fb      	ldr	r3, [r7, #12]
 810bf2c:	607b      	str	r3, [r7, #4]
 810bf2e:	687b      	ldr	r3, [r7, #4]
 810bf30:	60bb      	str	r3, [r7, #8]
 810bf32:	687b      	ldr	r3, [r7, #4]
 810bf34:	685b      	ldr	r3, [r3, #4]
 810bf36:	68ba      	ldr	r2, [r7, #8]
 810bf38:	441a      	add	r2, r3
 810bf3a:	68fb      	ldr	r3, [r7, #12]
 810bf3c:	681b      	ldr	r3, [r3, #0]
 810bf3e:	429a      	cmp	r2, r3
 810bf40:	d118      	bne.n	810bf74 <prvInsertBlockIntoFreeList+0x88>
 810bf42:	68fb      	ldr	r3, [r7, #12]
 810bf44:	681a      	ldr	r2, [r3, #0]
 810bf46:	4b15      	ldr	r3, [pc, #84]	@ (810bf9c <prvInsertBlockIntoFreeList+0xb0>)
 810bf48:	681b      	ldr	r3, [r3, #0]
 810bf4a:	429a      	cmp	r2, r3
 810bf4c:	d00d      	beq.n	810bf6a <prvInsertBlockIntoFreeList+0x7e>
 810bf4e:	687b      	ldr	r3, [r7, #4]
 810bf50:	685a      	ldr	r2, [r3, #4]
 810bf52:	68fb      	ldr	r3, [r7, #12]
 810bf54:	681b      	ldr	r3, [r3, #0]
 810bf56:	685b      	ldr	r3, [r3, #4]
 810bf58:	441a      	add	r2, r3
 810bf5a:	687b      	ldr	r3, [r7, #4]
 810bf5c:	605a      	str	r2, [r3, #4]
 810bf5e:	68fb      	ldr	r3, [r7, #12]
 810bf60:	681b      	ldr	r3, [r3, #0]
 810bf62:	681a      	ldr	r2, [r3, #0]
 810bf64:	687b      	ldr	r3, [r7, #4]
 810bf66:	601a      	str	r2, [r3, #0]
 810bf68:	e008      	b.n	810bf7c <prvInsertBlockIntoFreeList+0x90>
 810bf6a:	4b0c      	ldr	r3, [pc, #48]	@ (810bf9c <prvInsertBlockIntoFreeList+0xb0>)
 810bf6c:	681a      	ldr	r2, [r3, #0]
 810bf6e:	687b      	ldr	r3, [r7, #4]
 810bf70:	601a      	str	r2, [r3, #0]
 810bf72:	e003      	b.n	810bf7c <prvInsertBlockIntoFreeList+0x90>
 810bf74:	68fb      	ldr	r3, [r7, #12]
 810bf76:	681a      	ldr	r2, [r3, #0]
 810bf78:	687b      	ldr	r3, [r7, #4]
 810bf7a:	601a      	str	r2, [r3, #0]
 810bf7c:	68fa      	ldr	r2, [r7, #12]
 810bf7e:	687b      	ldr	r3, [r7, #4]
 810bf80:	429a      	cmp	r2, r3
 810bf82:	d002      	beq.n	810bf8a <prvInsertBlockIntoFreeList+0x9e>
 810bf84:	68fb      	ldr	r3, [r7, #12]
 810bf86:	687a      	ldr	r2, [r7, #4]
 810bf88:	601a      	str	r2, [r3, #0]
 810bf8a:	bf00      	nop
 810bf8c:	3714      	adds	r7, #20
 810bf8e:	46bd      	mov	sp, r7
 810bf90:	f85d 7b04 	ldr.w	r7, [sp], #4
 810bf94:	4770      	bx	lr
 810bf96:	bf00      	nop
 810bf98:	10004944 	.word	0x10004944
 810bf9c:	1000494c 	.word	0x1000494c

0810bfa0 <vListInitialise>:
 810bfa0:	b480      	push	{r7}
 810bfa2:	b083      	sub	sp, #12
 810bfa4:	af00      	add	r7, sp, #0
 810bfa6:	6078      	str	r0, [r7, #4]
 810bfa8:	687b      	ldr	r3, [r7, #4]
 810bfaa:	f103 0208 	add.w	r2, r3, #8
 810bfae:	687b      	ldr	r3, [r7, #4]
 810bfb0:	605a      	str	r2, [r3, #4]
 810bfb2:	687b      	ldr	r3, [r7, #4]
 810bfb4:	f04f 32ff 	mov.w	r2, #4294967295
 810bfb8:	609a      	str	r2, [r3, #8]
 810bfba:	687b      	ldr	r3, [r7, #4]
 810bfbc:	f103 0208 	add.w	r2, r3, #8
 810bfc0:	687b      	ldr	r3, [r7, #4]
 810bfc2:	60da      	str	r2, [r3, #12]
 810bfc4:	687b      	ldr	r3, [r7, #4]
 810bfc6:	f103 0208 	add.w	r2, r3, #8
 810bfca:	687b      	ldr	r3, [r7, #4]
 810bfcc:	611a      	str	r2, [r3, #16]
 810bfce:	687b      	ldr	r3, [r7, #4]
 810bfd0:	2200      	movs	r2, #0
 810bfd2:	601a      	str	r2, [r3, #0]
 810bfd4:	bf00      	nop
 810bfd6:	370c      	adds	r7, #12
 810bfd8:	46bd      	mov	sp, r7
 810bfda:	f85d 7b04 	ldr.w	r7, [sp], #4
 810bfde:	4770      	bx	lr

0810bfe0 <vListInitialiseItem>:
 810bfe0:	b480      	push	{r7}
 810bfe2:	b083      	sub	sp, #12
 810bfe4:	af00      	add	r7, sp, #0
 810bfe6:	6078      	str	r0, [r7, #4]
 810bfe8:	687b      	ldr	r3, [r7, #4]
 810bfea:	2200      	movs	r2, #0
 810bfec:	611a      	str	r2, [r3, #16]
 810bfee:	bf00      	nop
 810bff0:	370c      	adds	r7, #12
 810bff2:	46bd      	mov	sp, r7
 810bff4:	f85d 7b04 	ldr.w	r7, [sp], #4
 810bff8:	4770      	bx	lr

0810bffa <vListInsertEnd>:
 810bffa:	b480      	push	{r7}
 810bffc:	b085      	sub	sp, #20
 810bffe:	af00      	add	r7, sp, #0
 810c000:	6078      	str	r0, [r7, #4]
 810c002:	6039      	str	r1, [r7, #0]
 810c004:	687b      	ldr	r3, [r7, #4]
 810c006:	685b      	ldr	r3, [r3, #4]
 810c008:	60fb      	str	r3, [r7, #12]
 810c00a:	683b      	ldr	r3, [r7, #0]
 810c00c:	68fa      	ldr	r2, [r7, #12]
 810c00e:	605a      	str	r2, [r3, #4]
 810c010:	68fb      	ldr	r3, [r7, #12]
 810c012:	689a      	ldr	r2, [r3, #8]
 810c014:	683b      	ldr	r3, [r7, #0]
 810c016:	609a      	str	r2, [r3, #8]
 810c018:	68fb      	ldr	r3, [r7, #12]
 810c01a:	689b      	ldr	r3, [r3, #8]
 810c01c:	683a      	ldr	r2, [r7, #0]
 810c01e:	605a      	str	r2, [r3, #4]
 810c020:	68fb      	ldr	r3, [r7, #12]
 810c022:	683a      	ldr	r2, [r7, #0]
 810c024:	609a      	str	r2, [r3, #8]
 810c026:	683b      	ldr	r3, [r7, #0]
 810c028:	687a      	ldr	r2, [r7, #4]
 810c02a:	611a      	str	r2, [r3, #16]
 810c02c:	687b      	ldr	r3, [r7, #4]
 810c02e:	681b      	ldr	r3, [r3, #0]
 810c030:	1c5a      	adds	r2, r3, #1
 810c032:	687b      	ldr	r3, [r7, #4]
 810c034:	601a      	str	r2, [r3, #0]
 810c036:	bf00      	nop
 810c038:	3714      	adds	r7, #20
 810c03a:	46bd      	mov	sp, r7
 810c03c:	f85d 7b04 	ldr.w	r7, [sp], #4
 810c040:	4770      	bx	lr

0810c042 <vListInsert>:
 810c042:	b480      	push	{r7}
 810c044:	b085      	sub	sp, #20
 810c046:	af00      	add	r7, sp, #0
 810c048:	6078      	str	r0, [r7, #4]
 810c04a:	6039      	str	r1, [r7, #0]
 810c04c:	683b      	ldr	r3, [r7, #0]
 810c04e:	681b      	ldr	r3, [r3, #0]
 810c050:	60bb      	str	r3, [r7, #8]
 810c052:	68bb      	ldr	r3, [r7, #8]
 810c054:	f1b3 3fff 	cmp.w	r3, #4294967295
 810c058:	d103      	bne.n	810c062 <vListInsert+0x20>
 810c05a:	687b      	ldr	r3, [r7, #4]
 810c05c:	691b      	ldr	r3, [r3, #16]
 810c05e:	60fb      	str	r3, [r7, #12]
 810c060:	e00c      	b.n	810c07c <vListInsert+0x3a>
 810c062:	687b      	ldr	r3, [r7, #4]
 810c064:	3308      	adds	r3, #8
 810c066:	60fb      	str	r3, [r7, #12]
 810c068:	e002      	b.n	810c070 <vListInsert+0x2e>
 810c06a:	68fb      	ldr	r3, [r7, #12]
 810c06c:	685b      	ldr	r3, [r3, #4]
 810c06e:	60fb      	str	r3, [r7, #12]
 810c070:	68fb      	ldr	r3, [r7, #12]
 810c072:	685b      	ldr	r3, [r3, #4]
 810c074:	681b      	ldr	r3, [r3, #0]
 810c076:	68ba      	ldr	r2, [r7, #8]
 810c078:	429a      	cmp	r2, r3
 810c07a:	d2f6      	bcs.n	810c06a <vListInsert+0x28>
 810c07c:	68fb      	ldr	r3, [r7, #12]
 810c07e:	685a      	ldr	r2, [r3, #4]
 810c080:	683b      	ldr	r3, [r7, #0]
 810c082:	605a      	str	r2, [r3, #4]
 810c084:	683b      	ldr	r3, [r7, #0]
 810c086:	685b      	ldr	r3, [r3, #4]
 810c088:	683a      	ldr	r2, [r7, #0]
 810c08a:	609a      	str	r2, [r3, #8]
 810c08c:	683b      	ldr	r3, [r7, #0]
 810c08e:	68fa      	ldr	r2, [r7, #12]
 810c090:	609a      	str	r2, [r3, #8]
 810c092:	68fb      	ldr	r3, [r7, #12]
 810c094:	683a      	ldr	r2, [r7, #0]
 810c096:	605a      	str	r2, [r3, #4]
 810c098:	683b      	ldr	r3, [r7, #0]
 810c09a:	687a      	ldr	r2, [r7, #4]
 810c09c:	611a      	str	r2, [r3, #16]
 810c09e:	687b      	ldr	r3, [r7, #4]
 810c0a0:	681b      	ldr	r3, [r3, #0]
 810c0a2:	1c5a      	adds	r2, r3, #1
 810c0a4:	687b      	ldr	r3, [r7, #4]
 810c0a6:	601a      	str	r2, [r3, #0]
 810c0a8:	bf00      	nop
 810c0aa:	3714      	adds	r7, #20
 810c0ac:	46bd      	mov	sp, r7
 810c0ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 810c0b2:	4770      	bx	lr

0810c0b4 <uxListRemove>:
 810c0b4:	b480      	push	{r7}
 810c0b6:	b085      	sub	sp, #20
 810c0b8:	af00      	add	r7, sp, #0
 810c0ba:	6078      	str	r0, [r7, #4]
 810c0bc:	687b      	ldr	r3, [r7, #4]
 810c0be:	691b      	ldr	r3, [r3, #16]
 810c0c0:	60fb      	str	r3, [r7, #12]
 810c0c2:	687b      	ldr	r3, [r7, #4]
 810c0c4:	685b      	ldr	r3, [r3, #4]
 810c0c6:	687a      	ldr	r2, [r7, #4]
 810c0c8:	6892      	ldr	r2, [r2, #8]
 810c0ca:	609a      	str	r2, [r3, #8]
 810c0cc:	687b      	ldr	r3, [r7, #4]
 810c0ce:	689b      	ldr	r3, [r3, #8]
 810c0d0:	687a      	ldr	r2, [r7, #4]
 810c0d2:	6852      	ldr	r2, [r2, #4]
 810c0d4:	605a      	str	r2, [r3, #4]
 810c0d6:	68fb      	ldr	r3, [r7, #12]
 810c0d8:	685b      	ldr	r3, [r3, #4]
 810c0da:	687a      	ldr	r2, [r7, #4]
 810c0dc:	429a      	cmp	r2, r3
 810c0de:	d103      	bne.n	810c0e8 <uxListRemove+0x34>
 810c0e0:	687b      	ldr	r3, [r7, #4]
 810c0e2:	689a      	ldr	r2, [r3, #8]
 810c0e4:	68fb      	ldr	r3, [r7, #12]
 810c0e6:	605a      	str	r2, [r3, #4]
 810c0e8:	687b      	ldr	r3, [r7, #4]
 810c0ea:	2200      	movs	r2, #0
 810c0ec:	611a      	str	r2, [r3, #16]
 810c0ee:	68fb      	ldr	r3, [r7, #12]
 810c0f0:	681b      	ldr	r3, [r3, #0]
 810c0f2:	1e5a      	subs	r2, r3, #1
 810c0f4:	68fb      	ldr	r3, [r7, #12]
 810c0f6:	601a      	str	r2, [r3, #0]
 810c0f8:	68fb      	ldr	r3, [r7, #12]
 810c0fa:	681b      	ldr	r3, [r3, #0]
 810c0fc:	4618      	mov	r0, r3
 810c0fe:	3714      	adds	r7, #20
 810c100:	46bd      	mov	sp, r7
 810c102:	f85d 7b04 	ldr.w	r7, [sp], #4
 810c106:	4770      	bx	lr

0810c108 <pxPortInitialiseStack>:
 810c108:	b480      	push	{r7}
 810c10a:	b085      	sub	sp, #20
 810c10c:	af00      	add	r7, sp, #0
 810c10e:	60f8      	str	r0, [r7, #12]
 810c110:	60b9      	str	r1, [r7, #8]
 810c112:	607a      	str	r2, [r7, #4]
 810c114:	68fb      	ldr	r3, [r7, #12]
 810c116:	3b04      	subs	r3, #4
 810c118:	60fb      	str	r3, [r7, #12]
 810c11a:	68fb      	ldr	r3, [r7, #12]
 810c11c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 810c120:	601a      	str	r2, [r3, #0]
 810c122:	68fb      	ldr	r3, [r7, #12]
 810c124:	3b04      	subs	r3, #4
 810c126:	60fb      	str	r3, [r7, #12]
 810c128:	68bb      	ldr	r3, [r7, #8]
 810c12a:	f023 0201 	bic.w	r2, r3, #1
 810c12e:	68fb      	ldr	r3, [r7, #12]
 810c130:	601a      	str	r2, [r3, #0]
 810c132:	68fb      	ldr	r3, [r7, #12]
 810c134:	3b04      	subs	r3, #4
 810c136:	60fb      	str	r3, [r7, #12]
 810c138:	4a0c      	ldr	r2, [pc, #48]	@ (810c16c <pxPortInitialiseStack+0x64>)
 810c13a:	68fb      	ldr	r3, [r7, #12]
 810c13c:	601a      	str	r2, [r3, #0]
 810c13e:	68fb      	ldr	r3, [r7, #12]
 810c140:	3b14      	subs	r3, #20
 810c142:	60fb      	str	r3, [r7, #12]
 810c144:	687a      	ldr	r2, [r7, #4]
 810c146:	68fb      	ldr	r3, [r7, #12]
 810c148:	601a      	str	r2, [r3, #0]
 810c14a:	68fb      	ldr	r3, [r7, #12]
 810c14c:	3b04      	subs	r3, #4
 810c14e:	60fb      	str	r3, [r7, #12]
 810c150:	68fb      	ldr	r3, [r7, #12]
 810c152:	f06f 0202 	mvn.w	r2, #2
 810c156:	601a      	str	r2, [r3, #0]
 810c158:	68fb      	ldr	r3, [r7, #12]
 810c15a:	3b20      	subs	r3, #32
 810c15c:	60fb      	str	r3, [r7, #12]
 810c15e:	68fb      	ldr	r3, [r7, #12]
 810c160:	4618      	mov	r0, r3
 810c162:	3714      	adds	r7, #20
 810c164:	46bd      	mov	sp, r7
 810c166:	f85d 7b04 	ldr.w	r7, [sp], #4
 810c16a:	4770      	bx	lr
 810c16c:	0810c171 	.word	0x0810c171

0810c170 <prvTaskExitError>:
 810c170:	b480      	push	{r7}
 810c172:	b085      	sub	sp, #20
 810c174:	af00      	add	r7, sp, #0
 810c176:	2300      	movs	r3, #0
 810c178:	607b      	str	r3, [r7, #4]
 810c17a:	4b13      	ldr	r3, [pc, #76]	@ (810c1c8 <prvTaskExitError+0x58>)
 810c17c:	681b      	ldr	r3, [r3, #0]
 810c17e:	f1b3 3fff 	cmp.w	r3, #4294967295
 810c182:	d00b      	beq.n	810c19c <prvTaskExitError+0x2c>
 810c184:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810c188:	f383 8811 	msr	BASEPRI, r3
 810c18c:	f3bf 8f6f 	isb	sy
 810c190:	f3bf 8f4f 	dsb	sy
 810c194:	60fb      	str	r3, [r7, #12]
 810c196:	bf00      	nop
 810c198:	bf00      	nop
 810c19a:	e7fd      	b.n	810c198 <prvTaskExitError+0x28>
 810c19c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810c1a0:	f383 8811 	msr	BASEPRI, r3
 810c1a4:	f3bf 8f6f 	isb	sy
 810c1a8:	f3bf 8f4f 	dsb	sy
 810c1ac:	60bb      	str	r3, [r7, #8]
 810c1ae:	bf00      	nop
 810c1b0:	bf00      	nop
 810c1b2:	687b      	ldr	r3, [r7, #4]
 810c1b4:	2b00      	cmp	r3, #0
 810c1b6:	d0fc      	beq.n	810c1b2 <prvTaskExitError+0x42>
 810c1b8:	bf00      	nop
 810c1ba:	bf00      	nop
 810c1bc:	3714      	adds	r7, #20
 810c1be:	46bd      	mov	sp, r7
 810c1c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 810c1c4:	4770      	bx	lr
 810c1c6:	bf00      	nop
 810c1c8:	10000010 	.word	0x10000010
 810c1cc:	00000000 	.word	0x00000000

0810c1d0 <SVC_Handler>:
 810c1d0:	4b07      	ldr	r3, [pc, #28]	@ (810c1f0 <pxCurrentTCBConst2>)
 810c1d2:	6819      	ldr	r1, [r3, #0]
 810c1d4:	6808      	ldr	r0, [r1, #0]
 810c1d6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 810c1da:	f380 8809 	msr	PSP, r0
 810c1de:	f3bf 8f6f 	isb	sy
 810c1e2:	f04f 0000 	mov.w	r0, #0
 810c1e6:	f380 8811 	msr	BASEPRI, r0
 810c1ea:	4770      	bx	lr
 810c1ec:	f3af 8000 	nop.w

0810c1f0 <pxCurrentTCBConst2>:
 810c1f0:	100049ac 	.word	0x100049ac
 810c1f4:	bf00      	nop
 810c1f6:	bf00      	nop

0810c1f8 <prvPortStartFirstTask>:
 810c1f8:	4808      	ldr	r0, [pc, #32]	@ (810c21c <prvPortStartFirstTask+0x24>)
 810c1fa:	6800      	ldr	r0, [r0, #0]
 810c1fc:	6800      	ldr	r0, [r0, #0]
 810c1fe:	f380 8808 	msr	MSP, r0
 810c202:	f04f 0000 	mov.w	r0, #0
 810c206:	f380 8814 	msr	CONTROL, r0
 810c20a:	b662      	cpsie	i
 810c20c:	b661      	cpsie	f
 810c20e:	f3bf 8f4f 	dsb	sy
 810c212:	f3bf 8f6f 	isb	sy
 810c216:	df00      	svc	0
 810c218:	bf00      	nop
 810c21a:	bf00      	nop
 810c21c:	e000ed08 	.word	0xe000ed08

0810c220 <xPortStartScheduler>:
 810c220:	b580      	push	{r7, lr}
 810c222:	b086      	sub	sp, #24
 810c224:	af00      	add	r7, sp, #0
 810c226:	4b47      	ldr	r3, [pc, #284]	@ (810c344 <xPortStartScheduler+0x124>)
 810c228:	681b      	ldr	r3, [r3, #0]
 810c22a:	4a47      	ldr	r2, [pc, #284]	@ (810c348 <xPortStartScheduler+0x128>)
 810c22c:	4293      	cmp	r3, r2
 810c22e:	d10b      	bne.n	810c248 <xPortStartScheduler+0x28>
 810c230:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810c234:	f383 8811 	msr	BASEPRI, r3
 810c238:	f3bf 8f6f 	isb	sy
 810c23c:	f3bf 8f4f 	dsb	sy
 810c240:	60fb      	str	r3, [r7, #12]
 810c242:	bf00      	nop
 810c244:	bf00      	nop
 810c246:	e7fd      	b.n	810c244 <xPortStartScheduler+0x24>
 810c248:	4b3e      	ldr	r3, [pc, #248]	@ (810c344 <xPortStartScheduler+0x124>)
 810c24a:	681b      	ldr	r3, [r3, #0]
 810c24c:	4a3f      	ldr	r2, [pc, #252]	@ (810c34c <xPortStartScheduler+0x12c>)
 810c24e:	4293      	cmp	r3, r2
 810c250:	d10b      	bne.n	810c26a <xPortStartScheduler+0x4a>
 810c252:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810c256:	f383 8811 	msr	BASEPRI, r3
 810c25a:	f3bf 8f6f 	isb	sy
 810c25e:	f3bf 8f4f 	dsb	sy
 810c262:	613b      	str	r3, [r7, #16]
 810c264:	bf00      	nop
 810c266:	bf00      	nop
 810c268:	e7fd      	b.n	810c266 <xPortStartScheduler+0x46>
 810c26a:	4b39      	ldr	r3, [pc, #228]	@ (810c350 <xPortStartScheduler+0x130>)
 810c26c:	617b      	str	r3, [r7, #20]
 810c26e:	697b      	ldr	r3, [r7, #20]
 810c270:	781b      	ldrb	r3, [r3, #0]
 810c272:	b2db      	uxtb	r3, r3
 810c274:	607b      	str	r3, [r7, #4]
 810c276:	697b      	ldr	r3, [r7, #20]
 810c278:	22ff      	movs	r2, #255	@ 0xff
 810c27a:	701a      	strb	r2, [r3, #0]
 810c27c:	697b      	ldr	r3, [r7, #20]
 810c27e:	781b      	ldrb	r3, [r3, #0]
 810c280:	b2db      	uxtb	r3, r3
 810c282:	70fb      	strb	r3, [r7, #3]
 810c284:	78fb      	ldrb	r3, [r7, #3]
 810c286:	b2db      	uxtb	r3, r3
 810c288:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 810c28c:	b2da      	uxtb	r2, r3
 810c28e:	4b31      	ldr	r3, [pc, #196]	@ (810c354 <xPortStartScheduler+0x134>)
 810c290:	701a      	strb	r2, [r3, #0]
 810c292:	4b31      	ldr	r3, [pc, #196]	@ (810c358 <xPortStartScheduler+0x138>)
 810c294:	2207      	movs	r2, #7
 810c296:	601a      	str	r2, [r3, #0]
 810c298:	e009      	b.n	810c2ae <xPortStartScheduler+0x8e>
 810c29a:	4b2f      	ldr	r3, [pc, #188]	@ (810c358 <xPortStartScheduler+0x138>)
 810c29c:	681b      	ldr	r3, [r3, #0]
 810c29e:	3b01      	subs	r3, #1
 810c2a0:	4a2d      	ldr	r2, [pc, #180]	@ (810c358 <xPortStartScheduler+0x138>)
 810c2a2:	6013      	str	r3, [r2, #0]
 810c2a4:	78fb      	ldrb	r3, [r7, #3]
 810c2a6:	b2db      	uxtb	r3, r3
 810c2a8:	005b      	lsls	r3, r3, #1
 810c2aa:	b2db      	uxtb	r3, r3
 810c2ac:	70fb      	strb	r3, [r7, #3]
 810c2ae:	78fb      	ldrb	r3, [r7, #3]
 810c2b0:	b2db      	uxtb	r3, r3
 810c2b2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 810c2b6:	2b80      	cmp	r3, #128	@ 0x80
 810c2b8:	d0ef      	beq.n	810c29a <xPortStartScheduler+0x7a>
 810c2ba:	4b27      	ldr	r3, [pc, #156]	@ (810c358 <xPortStartScheduler+0x138>)
 810c2bc:	681b      	ldr	r3, [r3, #0]
 810c2be:	f1c3 0307 	rsb	r3, r3, #7
 810c2c2:	2b04      	cmp	r3, #4
 810c2c4:	d00b      	beq.n	810c2de <xPortStartScheduler+0xbe>
 810c2c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810c2ca:	f383 8811 	msr	BASEPRI, r3
 810c2ce:	f3bf 8f6f 	isb	sy
 810c2d2:	f3bf 8f4f 	dsb	sy
 810c2d6:	60bb      	str	r3, [r7, #8]
 810c2d8:	bf00      	nop
 810c2da:	bf00      	nop
 810c2dc:	e7fd      	b.n	810c2da <xPortStartScheduler+0xba>
 810c2de:	4b1e      	ldr	r3, [pc, #120]	@ (810c358 <xPortStartScheduler+0x138>)
 810c2e0:	681b      	ldr	r3, [r3, #0]
 810c2e2:	021b      	lsls	r3, r3, #8
 810c2e4:	4a1c      	ldr	r2, [pc, #112]	@ (810c358 <xPortStartScheduler+0x138>)
 810c2e6:	6013      	str	r3, [r2, #0]
 810c2e8:	4b1b      	ldr	r3, [pc, #108]	@ (810c358 <xPortStartScheduler+0x138>)
 810c2ea:	681b      	ldr	r3, [r3, #0]
 810c2ec:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 810c2f0:	4a19      	ldr	r2, [pc, #100]	@ (810c358 <xPortStartScheduler+0x138>)
 810c2f2:	6013      	str	r3, [r2, #0]
 810c2f4:	687b      	ldr	r3, [r7, #4]
 810c2f6:	b2da      	uxtb	r2, r3
 810c2f8:	697b      	ldr	r3, [r7, #20]
 810c2fa:	701a      	strb	r2, [r3, #0]
 810c2fc:	4b17      	ldr	r3, [pc, #92]	@ (810c35c <xPortStartScheduler+0x13c>)
 810c2fe:	681b      	ldr	r3, [r3, #0]
 810c300:	4a16      	ldr	r2, [pc, #88]	@ (810c35c <xPortStartScheduler+0x13c>)
 810c302:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 810c306:	6013      	str	r3, [r2, #0]
 810c308:	4b14      	ldr	r3, [pc, #80]	@ (810c35c <xPortStartScheduler+0x13c>)
 810c30a:	681b      	ldr	r3, [r3, #0]
 810c30c:	4a13      	ldr	r2, [pc, #76]	@ (810c35c <xPortStartScheduler+0x13c>)
 810c30e:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 810c312:	6013      	str	r3, [r2, #0]
 810c314:	f000 f8da 	bl	810c4cc <vPortSetupTimerInterrupt>
 810c318:	4b11      	ldr	r3, [pc, #68]	@ (810c360 <xPortStartScheduler+0x140>)
 810c31a:	2200      	movs	r2, #0
 810c31c:	601a      	str	r2, [r3, #0]
 810c31e:	f000 f8f9 	bl	810c514 <vPortEnableVFP>
 810c322:	4b10      	ldr	r3, [pc, #64]	@ (810c364 <xPortStartScheduler+0x144>)
 810c324:	681b      	ldr	r3, [r3, #0]
 810c326:	4a0f      	ldr	r2, [pc, #60]	@ (810c364 <xPortStartScheduler+0x144>)
 810c328:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 810c32c:	6013      	str	r3, [r2, #0]
 810c32e:	f7ff ff63 	bl	810c1f8 <prvPortStartFirstTask>
 810c332:	f001 fa0f 	bl	810d754 <vTaskSwitchContext>
 810c336:	f7ff ff1b 	bl	810c170 <prvTaskExitError>
 810c33a:	2300      	movs	r3, #0
 810c33c:	4618      	mov	r0, r3
 810c33e:	3718      	adds	r7, #24
 810c340:	46bd      	mov	sp, r7
 810c342:	bd80      	pop	{r7, pc}
 810c344:	e000ed00 	.word	0xe000ed00
 810c348:	410fc271 	.word	0x410fc271
 810c34c:	410fc270 	.word	0x410fc270
 810c350:	e000e400 	.word	0xe000e400
 810c354:	10004964 	.word	0x10004964
 810c358:	10004968 	.word	0x10004968
 810c35c:	e000ed20 	.word	0xe000ed20
 810c360:	10000010 	.word	0x10000010
 810c364:	e000ef34 	.word	0xe000ef34

0810c368 <vPortEnterCritical>:
 810c368:	b480      	push	{r7}
 810c36a:	b083      	sub	sp, #12
 810c36c:	af00      	add	r7, sp, #0
 810c36e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810c372:	f383 8811 	msr	BASEPRI, r3
 810c376:	f3bf 8f6f 	isb	sy
 810c37a:	f3bf 8f4f 	dsb	sy
 810c37e:	607b      	str	r3, [r7, #4]
 810c380:	bf00      	nop
 810c382:	4b10      	ldr	r3, [pc, #64]	@ (810c3c4 <vPortEnterCritical+0x5c>)
 810c384:	681b      	ldr	r3, [r3, #0]
 810c386:	3301      	adds	r3, #1
 810c388:	4a0e      	ldr	r2, [pc, #56]	@ (810c3c4 <vPortEnterCritical+0x5c>)
 810c38a:	6013      	str	r3, [r2, #0]
 810c38c:	4b0d      	ldr	r3, [pc, #52]	@ (810c3c4 <vPortEnterCritical+0x5c>)
 810c38e:	681b      	ldr	r3, [r3, #0]
 810c390:	2b01      	cmp	r3, #1
 810c392:	d110      	bne.n	810c3b6 <vPortEnterCritical+0x4e>
 810c394:	4b0c      	ldr	r3, [pc, #48]	@ (810c3c8 <vPortEnterCritical+0x60>)
 810c396:	681b      	ldr	r3, [r3, #0]
 810c398:	b2db      	uxtb	r3, r3
 810c39a:	2b00      	cmp	r3, #0
 810c39c:	d00b      	beq.n	810c3b6 <vPortEnterCritical+0x4e>
 810c39e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810c3a2:	f383 8811 	msr	BASEPRI, r3
 810c3a6:	f3bf 8f6f 	isb	sy
 810c3aa:	f3bf 8f4f 	dsb	sy
 810c3ae:	603b      	str	r3, [r7, #0]
 810c3b0:	bf00      	nop
 810c3b2:	bf00      	nop
 810c3b4:	e7fd      	b.n	810c3b2 <vPortEnterCritical+0x4a>
 810c3b6:	bf00      	nop
 810c3b8:	370c      	adds	r7, #12
 810c3ba:	46bd      	mov	sp, r7
 810c3bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 810c3c0:	4770      	bx	lr
 810c3c2:	bf00      	nop
 810c3c4:	10000010 	.word	0x10000010
 810c3c8:	e000ed04 	.word	0xe000ed04

0810c3cc <vPortExitCritical>:
 810c3cc:	b480      	push	{r7}
 810c3ce:	b083      	sub	sp, #12
 810c3d0:	af00      	add	r7, sp, #0
 810c3d2:	4b12      	ldr	r3, [pc, #72]	@ (810c41c <vPortExitCritical+0x50>)
 810c3d4:	681b      	ldr	r3, [r3, #0]
 810c3d6:	2b00      	cmp	r3, #0
 810c3d8:	d10b      	bne.n	810c3f2 <vPortExitCritical+0x26>
 810c3da:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810c3de:	f383 8811 	msr	BASEPRI, r3
 810c3e2:	f3bf 8f6f 	isb	sy
 810c3e6:	f3bf 8f4f 	dsb	sy
 810c3ea:	607b      	str	r3, [r7, #4]
 810c3ec:	bf00      	nop
 810c3ee:	bf00      	nop
 810c3f0:	e7fd      	b.n	810c3ee <vPortExitCritical+0x22>
 810c3f2:	4b0a      	ldr	r3, [pc, #40]	@ (810c41c <vPortExitCritical+0x50>)
 810c3f4:	681b      	ldr	r3, [r3, #0]
 810c3f6:	3b01      	subs	r3, #1
 810c3f8:	4a08      	ldr	r2, [pc, #32]	@ (810c41c <vPortExitCritical+0x50>)
 810c3fa:	6013      	str	r3, [r2, #0]
 810c3fc:	4b07      	ldr	r3, [pc, #28]	@ (810c41c <vPortExitCritical+0x50>)
 810c3fe:	681b      	ldr	r3, [r3, #0]
 810c400:	2b00      	cmp	r3, #0
 810c402:	d105      	bne.n	810c410 <vPortExitCritical+0x44>
 810c404:	2300      	movs	r3, #0
 810c406:	603b      	str	r3, [r7, #0]
 810c408:	683b      	ldr	r3, [r7, #0]
 810c40a:	f383 8811 	msr	BASEPRI, r3
 810c40e:	bf00      	nop
 810c410:	bf00      	nop
 810c412:	370c      	adds	r7, #12
 810c414:	46bd      	mov	sp, r7
 810c416:	f85d 7b04 	ldr.w	r7, [sp], #4
 810c41a:	4770      	bx	lr
 810c41c:	10000010 	.word	0x10000010

0810c420 <PendSV_Handler>:
 810c420:	f3ef 8009 	mrs	r0, PSP
 810c424:	f3bf 8f6f 	isb	sy
 810c428:	4b15      	ldr	r3, [pc, #84]	@ (810c480 <pxCurrentTCBConst>)
 810c42a:	681a      	ldr	r2, [r3, #0]
 810c42c:	f01e 0f10 	tst.w	lr, #16
 810c430:	bf08      	it	eq
 810c432:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 810c436:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 810c43a:	6010      	str	r0, [r2, #0]
 810c43c:	e92d 0009 	stmdb	sp!, {r0, r3}
 810c440:	f04f 0050 	mov.w	r0, #80	@ 0x50
 810c444:	f380 8811 	msr	BASEPRI, r0
 810c448:	f3bf 8f4f 	dsb	sy
 810c44c:	f3bf 8f6f 	isb	sy
 810c450:	f001 f980 	bl	810d754 <vTaskSwitchContext>
 810c454:	f04f 0000 	mov.w	r0, #0
 810c458:	f380 8811 	msr	BASEPRI, r0
 810c45c:	bc09      	pop	{r0, r3}
 810c45e:	6819      	ldr	r1, [r3, #0]
 810c460:	6808      	ldr	r0, [r1, #0]
 810c462:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 810c466:	f01e 0f10 	tst.w	lr, #16
 810c46a:	bf08      	it	eq
 810c46c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 810c470:	f380 8809 	msr	PSP, r0
 810c474:	f3bf 8f6f 	isb	sy
 810c478:	4770      	bx	lr
 810c47a:	bf00      	nop
 810c47c:	f3af 8000 	nop.w

0810c480 <pxCurrentTCBConst>:
 810c480:	100049ac 	.word	0x100049ac
 810c484:	bf00      	nop
 810c486:	bf00      	nop

0810c488 <xPortSysTickHandler>:
 810c488:	b580      	push	{r7, lr}
 810c48a:	b082      	sub	sp, #8
 810c48c:	af00      	add	r7, sp, #0
 810c48e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810c492:	f383 8811 	msr	BASEPRI, r3
 810c496:	f3bf 8f6f 	isb	sy
 810c49a:	f3bf 8f4f 	dsb	sy
 810c49e:	607b      	str	r3, [r7, #4]
 810c4a0:	bf00      	nop
 810c4a2:	f001 f89d 	bl	810d5e0 <xTaskIncrementTick>
 810c4a6:	4603      	mov	r3, r0
 810c4a8:	2b00      	cmp	r3, #0
 810c4aa:	d003      	beq.n	810c4b4 <xPortSysTickHandler+0x2c>
 810c4ac:	4b06      	ldr	r3, [pc, #24]	@ (810c4c8 <xPortSysTickHandler+0x40>)
 810c4ae:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 810c4b2:	601a      	str	r2, [r3, #0]
 810c4b4:	2300      	movs	r3, #0
 810c4b6:	603b      	str	r3, [r7, #0]
 810c4b8:	683b      	ldr	r3, [r7, #0]
 810c4ba:	f383 8811 	msr	BASEPRI, r3
 810c4be:	bf00      	nop
 810c4c0:	bf00      	nop
 810c4c2:	3708      	adds	r7, #8
 810c4c4:	46bd      	mov	sp, r7
 810c4c6:	bd80      	pop	{r7, pc}
 810c4c8:	e000ed04 	.word	0xe000ed04

0810c4cc <vPortSetupTimerInterrupt>:
 810c4cc:	b480      	push	{r7}
 810c4ce:	af00      	add	r7, sp, #0
 810c4d0:	4b0b      	ldr	r3, [pc, #44]	@ (810c500 <vPortSetupTimerInterrupt+0x34>)
 810c4d2:	2200      	movs	r2, #0
 810c4d4:	601a      	str	r2, [r3, #0]
 810c4d6:	4b0b      	ldr	r3, [pc, #44]	@ (810c504 <vPortSetupTimerInterrupt+0x38>)
 810c4d8:	2200      	movs	r2, #0
 810c4da:	601a      	str	r2, [r3, #0]
 810c4dc:	4b0a      	ldr	r3, [pc, #40]	@ (810c508 <vPortSetupTimerInterrupt+0x3c>)
 810c4de:	681b      	ldr	r3, [r3, #0]
 810c4e0:	4a0a      	ldr	r2, [pc, #40]	@ (810c50c <vPortSetupTimerInterrupt+0x40>)
 810c4e2:	fba2 2303 	umull	r2, r3, r2, r3
 810c4e6:	099b      	lsrs	r3, r3, #6
 810c4e8:	4a09      	ldr	r2, [pc, #36]	@ (810c510 <vPortSetupTimerInterrupt+0x44>)
 810c4ea:	3b01      	subs	r3, #1
 810c4ec:	6013      	str	r3, [r2, #0]
 810c4ee:	4b04      	ldr	r3, [pc, #16]	@ (810c500 <vPortSetupTimerInterrupt+0x34>)
 810c4f0:	2207      	movs	r2, #7
 810c4f2:	601a      	str	r2, [r3, #0]
 810c4f4:	bf00      	nop
 810c4f6:	46bd      	mov	sp, r7
 810c4f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 810c4fc:	4770      	bx	lr
 810c4fe:	bf00      	nop
 810c500:	e000e010 	.word	0xe000e010
 810c504:	e000e018 	.word	0xe000e018
 810c508:	10000004 	.word	0x10000004
 810c50c:	10624dd3 	.word	0x10624dd3
 810c510:	e000e014 	.word	0xe000e014

0810c514 <vPortEnableVFP>:
 810c514:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 810c524 <vPortEnableVFP+0x10>
 810c518:	6801      	ldr	r1, [r0, #0]
 810c51a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 810c51e:	6001      	str	r1, [r0, #0]
 810c520:	4770      	bx	lr
 810c522:	bf00      	nop
 810c524:	e000ed88 	.word	0xe000ed88

0810c528 <vPortValidateInterruptPriority>:
 810c528:	b480      	push	{r7}
 810c52a:	b085      	sub	sp, #20
 810c52c:	af00      	add	r7, sp, #0
 810c52e:	f3ef 8305 	mrs	r3, IPSR
 810c532:	60fb      	str	r3, [r7, #12]
 810c534:	68fb      	ldr	r3, [r7, #12]
 810c536:	2b0f      	cmp	r3, #15
 810c538:	d915      	bls.n	810c566 <vPortValidateInterruptPriority+0x3e>
 810c53a:	4a18      	ldr	r2, [pc, #96]	@ (810c59c <vPortValidateInterruptPriority+0x74>)
 810c53c:	68fb      	ldr	r3, [r7, #12]
 810c53e:	4413      	add	r3, r2
 810c540:	781b      	ldrb	r3, [r3, #0]
 810c542:	72fb      	strb	r3, [r7, #11]
 810c544:	4b16      	ldr	r3, [pc, #88]	@ (810c5a0 <vPortValidateInterruptPriority+0x78>)
 810c546:	781b      	ldrb	r3, [r3, #0]
 810c548:	7afa      	ldrb	r2, [r7, #11]
 810c54a:	429a      	cmp	r2, r3
 810c54c:	d20b      	bcs.n	810c566 <vPortValidateInterruptPriority+0x3e>
 810c54e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810c552:	f383 8811 	msr	BASEPRI, r3
 810c556:	f3bf 8f6f 	isb	sy
 810c55a:	f3bf 8f4f 	dsb	sy
 810c55e:	607b      	str	r3, [r7, #4]
 810c560:	bf00      	nop
 810c562:	bf00      	nop
 810c564:	e7fd      	b.n	810c562 <vPortValidateInterruptPriority+0x3a>
 810c566:	4b0f      	ldr	r3, [pc, #60]	@ (810c5a4 <vPortValidateInterruptPriority+0x7c>)
 810c568:	681b      	ldr	r3, [r3, #0]
 810c56a:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 810c56e:	4b0e      	ldr	r3, [pc, #56]	@ (810c5a8 <vPortValidateInterruptPriority+0x80>)
 810c570:	681b      	ldr	r3, [r3, #0]
 810c572:	429a      	cmp	r2, r3
 810c574:	d90b      	bls.n	810c58e <vPortValidateInterruptPriority+0x66>
 810c576:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810c57a:	f383 8811 	msr	BASEPRI, r3
 810c57e:	f3bf 8f6f 	isb	sy
 810c582:	f3bf 8f4f 	dsb	sy
 810c586:	603b      	str	r3, [r7, #0]
 810c588:	bf00      	nop
 810c58a:	bf00      	nop
 810c58c:	e7fd      	b.n	810c58a <vPortValidateInterruptPriority+0x62>
 810c58e:	bf00      	nop
 810c590:	3714      	adds	r7, #20
 810c592:	46bd      	mov	sp, r7
 810c594:	f85d 7b04 	ldr.w	r7, [sp], #4
 810c598:	4770      	bx	lr
 810c59a:	bf00      	nop
 810c59c:	e000e3f0 	.word	0xe000e3f0
 810c5a0:	10004964 	.word	0x10004964
 810c5a4:	e000ed0c 	.word	0xe000ed0c
 810c5a8:	10004968 	.word	0x10004968

0810c5ac <xQueueGenericReset>:
 810c5ac:	b580      	push	{r7, lr}
 810c5ae:	b084      	sub	sp, #16
 810c5b0:	af00      	add	r7, sp, #0
 810c5b2:	6078      	str	r0, [r7, #4]
 810c5b4:	6039      	str	r1, [r7, #0]
 810c5b6:	687b      	ldr	r3, [r7, #4]
 810c5b8:	60fb      	str	r3, [r7, #12]
 810c5ba:	68fb      	ldr	r3, [r7, #12]
 810c5bc:	2b00      	cmp	r3, #0
 810c5be:	d10b      	bne.n	810c5d8 <xQueueGenericReset+0x2c>
 810c5c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810c5c4:	f383 8811 	msr	BASEPRI, r3
 810c5c8:	f3bf 8f6f 	isb	sy
 810c5cc:	f3bf 8f4f 	dsb	sy
 810c5d0:	60bb      	str	r3, [r7, #8]
 810c5d2:	bf00      	nop
 810c5d4:	bf00      	nop
 810c5d6:	e7fd      	b.n	810c5d4 <xQueueGenericReset+0x28>
 810c5d8:	f7ff fec6 	bl	810c368 <vPortEnterCritical>
 810c5dc:	68fb      	ldr	r3, [r7, #12]
 810c5de:	681a      	ldr	r2, [r3, #0]
 810c5e0:	68fb      	ldr	r3, [r7, #12]
 810c5e2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 810c5e4:	68f9      	ldr	r1, [r7, #12]
 810c5e6:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 810c5e8:	fb01 f303 	mul.w	r3, r1, r3
 810c5ec:	441a      	add	r2, r3
 810c5ee:	68fb      	ldr	r3, [r7, #12]
 810c5f0:	609a      	str	r2, [r3, #8]
 810c5f2:	68fb      	ldr	r3, [r7, #12]
 810c5f4:	2200      	movs	r2, #0
 810c5f6:	639a      	str	r2, [r3, #56]	@ 0x38
 810c5f8:	68fb      	ldr	r3, [r7, #12]
 810c5fa:	681a      	ldr	r2, [r3, #0]
 810c5fc:	68fb      	ldr	r3, [r7, #12]
 810c5fe:	605a      	str	r2, [r3, #4]
 810c600:	68fb      	ldr	r3, [r7, #12]
 810c602:	681a      	ldr	r2, [r3, #0]
 810c604:	68fb      	ldr	r3, [r7, #12]
 810c606:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 810c608:	3b01      	subs	r3, #1
 810c60a:	68f9      	ldr	r1, [r7, #12]
 810c60c:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 810c60e:	fb01 f303 	mul.w	r3, r1, r3
 810c612:	441a      	add	r2, r3
 810c614:	68fb      	ldr	r3, [r7, #12]
 810c616:	60da      	str	r2, [r3, #12]
 810c618:	68fb      	ldr	r3, [r7, #12]
 810c61a:	22ff      	movs	r2, #255	@ 0xff
 810c61c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 810c620:	68fb      	ldr	r3, [r7, #12]
 810c622:	22ff      	movs	r2, #255	@ 0xff
 810c624:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 810c628:	683b      	ldr	r3, [r7, #0]
 810c62a:	2b00      	cmp	r3, #0
 810c62c:	d114      	bne.n	810c658 <xQueueGenericReset+0xac>
 810c62e:	68fb      	ldr	r3, [r7, #12]
 810c630:	691b      	ldr	r3, [r3, #16]
 810c632:	2b00      	cmp	r3, #0
 810c634:	d01a      	beq.n	810c66c <xQueueGenericReset+0xc0>
 810c636:	68fb      	ldr	r3, [r7, #12]
 810c638:	3310      	adds	r3, #16
 810c63a:	4618      	mov	r0, r3
 810c63c:	f001 f942 	bl	810d8c4 <xTaskRemoveFromEventList>
 810c640:	4603      	mov	r3, r0
 810c642:	2b00      	cmp	r3, #0
 810c644:	d012      	beq.n	810c66c <xQueueGenericReset+0xc0>
 810c646:	4b0d      	ldr	r3, [pc, #52]	@ (810c67c <xQueueGenericReset+0xd0>)
 810c648:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 810c64c:	601a      	str	r2, [r3, #0]
 810c64e:	f3bf 8f4f 	dsb	sy
 810c652:	f3bf 8f6f 	isb	sy
 810c656:	e009      	b.n	810c66c <xQueueGenericReset+0xc0>
 810c658:	68fb      	ldr	r3, [r7, #12]
 810c65a:	3310      	adds	r3, #16
 810c65c:	4618      	mov	r0, r3
 810c65e:	f7ff fc9f 	bl	810bfa0 <vListInitialise>
 810c662:	68fb      	ldr	r3, [r7, #12]
 810c664:	3324      	adds	r3, #36	@ 0x24
 810c666:	4618      	mov	r0, r3
 810c668:	f7ff fc9a 	bl	810bfa0 <vListInitialise>
 810c66c:	f7ff feae 	bl	810c3cc <vPortExitCritical>
 810c670:	2301      	movs	r3, #1
 810c672:	4618      	mov	r0, r3
 810c674:	3710      	adds	r7, #16
 810c676:	46bd      	mov	sp, r7
 810c678:	bd80      	pop	{r7, pc}
 810c67a:	bf00      	nop
 810c67c:	e000ed04 	.word	0xe000ed04

0810c680 <xQueueGenericCreateStatic>:
 810c680:	b580      	push	{r7, lr}
 810c682:	b08e      	sub	sp, #56	@ 0x38
 810c684:	af02      	add	r7, sp, #8
 810c686:	60f8      	str	r0, [r7, #12]
 810c688:	60b9      	str	r1, [r7, #8]
 810c68a:	607a      	str	r2, [r7, #4]
 810c68c:	603b      	str	r3, [r7, #0]
 810c68e:	68fb      	ldr	r3, [r7, #12]
 810c690:	2b00      	cmp	r3, #0
 810c692:	d10b      	bne.n	810c6ac <xQueueGenericCreateStatic+0x2c>
 810c694:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810c698:	f383 8811 	msr	BASEPRI, r3
 810c69c:	f3bf 8f6f 	isb	sy
 810c6a0:	f3bf 8f4f 	dsb	sy
 810c6a4:	62bb      	str	r3, [r7, #40]	@ 0x28
 810c6a6:	bf00      	nop
 810c6a8:	bf00      	nop
 810c6aa:	e7fd      	b.n	810c6a8 <xQueueGenericCreateStatic+0x28>
 810c6ac:	683b      	ldr	r3, [r7, #0]
 810c6ae:	2b00      	cmp	r3, #0
 810c6b0:	d10b      	bne.n	810c6ca <xQueueGenericCreateStatic+0x4a>
 810c6b2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810c6b6:	f383 8811 	msr	BASEPRI, r3
 810c6ba:	f3bf 8f6f 	isb	sy
 810c6be:	f3bf 8f4f 	dsb	sy
 810c6c2:	627b      	str	r3, [r7, #36]	@ 0x24
 810c6c4:	bf00      	nop
 810c6c6:	bf00      	nop
 810c6c8:	e7fd      	b.n	810c6c6 <xQueueGenericCreateStatic+0x46>
 810c6ca:	687b      	ldr	r3, [r7, #4]
 810c6cc:	2b00      	cmp	r3, #0
 810c6ce:	d002      	beq.n	810c6d6 <xQueueGenericCreateStatic+0x56>
 810c6d0:	68bb      	ldr	r3, [r7, #8]
 810c6d2:	2b00      	cmp	r3, #0
 810c6d4:	d001      	beq.n	810c6da <xQueueGenericCreateStatic+0x5a>
 810c6d6:	2301      	movs	r3, #1
 810c6d8:	e000      	b.n	810c6dc <xQueueGenericCreateStatic+0x5c>
 810c6da:	2300      	movs	r3, #0
 810c6dc:	2b00      	cmp	r3, #0
 810c6de:	d10b      	bne.n	810c6f8 <xQueueGenericCreateStatic+0x78>
 810c6e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810c6e4:	f383 8811 	msr	BASEPRI, r3
 810c6e8:	f3bf 8f6f 	isb	sy
 810c6ec:	f3bf 8f4f 	dsb	sy
 810c6f0:	623b      	str	r3, [r7, #32]
 810c6f2:	bf00      	nop
 810c6f4:	bf00      	nop
 810c6f6:	e7fd      	b.n	810c6f4 <xQueueGenericCreateStatic+0x74>
 810c6f8:	687b      	ldr	r3, [r7, #4]
 810c6fa:	2b00      	cmp	r3, #0
 810c6fc:	d102      	bne.n	810c704 <xQueueGenericCreateStatic+0x84>
 810c6fe:	68bb      	ldr	r3, [r7, #8]
 810c700:	2b00      	cmp	r3, #0
 810c702:	d101      	bne.n	810c708 <xQueueGenericCreateStatic+0x88>
 810c704:	2301      	movs	r3, #1
 810c706:	e000      	b.n	810c70a <xQueueGenericCreateStatic+0x8a>
 810c708:	2300      	movs	r3, #0
 810c70a:	2b00      	cmp	r3, #0
 810c70c:	d10b      	bne.n	810c726 <xQueueGenericCreateStatic+0xa6>
 810c70e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810c712:	f383 8811 	msr	BASEPRI, r3
 810c716:	f3bf 8f6f 	isb	sy
 810c71a:	f3bf 8f4f 	dsb	sy
 810c71e:	61fb      	str	r3, [r7, #28]
 810c720:	bf00      	nop
 810c722:	bf00      	nop
 810c724:	e7fd      	b.n	810c722 <xQueueGenericCreateStatic+0xa2>
 810c726:	2350      	movs	r3, #80	@ 0x50
 810c728:	617b      	str	r3, [r7, #20]
 810c72a:	697b      	ldr	r3, [r7, #20]
 810c72c:	2b50      	cmp	r3, #80	@ 0x50
 810c72e:	d00b      	beq.n	810c748 <xQueueGenericCreateStatic+0xc8>
 810c730:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810c734:	f383 8811 	msr	BASEPRI, r3
 810c738:	f3bf 8f6f 	isb	sy
 810c73c:	f3bf 8f4f 	dsb	sy
 810c740:	61bb      	str	r3, [r7, #24]
 810c742:	bf00      	nop
 810c744:	bf00      	nop
 810c746:	e7fd      	b.n	810c744 <xQueueGenericCreateStatic+0xc4>
 810c748:	697b      	ldr	r3, [r7, #20]
 810c74a:	683b      	ldr	r3, [r7, #0]
 810c74c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 810c74e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 810c750:	2b00      	cmp	r3, #0
 810c752:	d00d      	beq.n	810c770 <xQueueGenericCreateStatic+0xf0>
 810c754:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 810c756:	2201      	movs	r2, #1
 810c758:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 810c75c:	f897 2038 	ldrb.w	r2, [r7, #56]	@ 0x38
 810c760:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 810c762:	9300      	str	r3, [sp, #0]
 810c764:	4613      	mov	r3, r2
 810c766:	687a      	ldr	r2, [r7, #4]
 810c768:	68b9      	ldr	r1, [r7, #8]
 810c76a:	68f8      	ldr	r0, [r7, #12]
 810c76c:	f000 f805 	bl	810c77a <prvInitialiseNewQueue>
 810c770:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 810c772:	4618      	mov	r0, r3
 810c774:	3730      	adds	r7, #48	@ 0x30
 810c776:	46bd      	mov	sp, r7
 810c778:	bd80      	pop	{r7, pc}

0810c77a <prvInitialiseNewQueue>:
 810c77a:	b580      	push	{r7, lr}
 810c77c:	b084      	sub	sp, #16
 810c77e:	af00      	add	r7, sp, #0
 810c780:	60f8      	str	r0, [r7, #12]
 810c782:	60b9      	str	r1, [r7, #8]
 810c784:	607a      	str	r2, [r7, #4]
 810c786:	70fb      	strb	r3, [r7, #3]
 810c788:	68bb      	ldr	r3, [r7, #8]
 810c78a:	2b00      	cmp	r3, #0
 810c78c:	d103      	bne.n	810c796 <prvInitialiseNewQueue+0x1c>
 810c78e:	69bb      	ldr	r3, [r7, #24]
 810c790:	69ba      	ldr	r2, [r7, #24]
 810c792:	601a      	str	r2, [r3, #0]
 810c794:	e002      	b.n	810c79c <prvInitialiseNewQueue+0x22>
 810c796:	69bb      	ldr	r3, [r7, #24]
 810c798:	687a      	ldr	r2, [r7, #4]
 810c79a:	601a      	str	r2, [r3, #0]
 810c79c:	69bb      	ldr	r3, [r7, #24]
 810c79e:	68fa      	ldr	r2, [r7, #12]
 810c7a0:	63da      	str	r2, [r3, #60]	@ 0x3c
 810c7a2:	69bb      	ldr	r3, [r7, #24]
 810c7a4:	68ba      	ldr	r2, [r7, #8]
 810c7a6:	641a      	str	r2, [r3, #64]	@ 0x40
 810c7a8:	2101      	movs	r1, #1
 810c7aa:	69b8      	ldr	r0, [r7, #24]
 810c7ac:	f7ff fefe 	bl	810c5ac <xQueueGenericReset>
 810c7b0:	69bb      	ldr	r3, [r7, #24]
 810c7b2:	78fa      	ldrb	r2, [r7, #3]
 810c7b4:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 810c7b8:	bf00      	nop
 810c7ba:	3710      	adds	r7, #16
 810c7bc:	46bd      	mov	sp, r7
 810c7be:	bd80      	pop	{r7, pc}

0810c7c0 <xQueueGenericSend>:
 810c7c0:	b580      	push	{r7, lr}
 810c7c2:	b08e      	sub	sp, #56	@ 0x38
 810c7c4:	af00      	add	r7, sp, #0
 810c7c6:	60f8      	str	r0, [r7, #12]
 810c7c8:	60b9      	str	r1, [r7, #8]
 810c7ca:	607a      	str	r2, [r7, #4]
 810c7cc:	603b      	str	r3, [r7, #0]
 810c7ce:	2300      	movs	r3, #0
 810c7d0:	637b      	str	r3, [r7, #52]	@ 0x34
 810c7d2:	68fb      	ldr	r3, [r7, #12]
 810c7d4:	633b      	str	r3, [r7, #48]	@ 0x30
 810c7d6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810c7d8:	2b00      	cmp	r3, #0
 810c7da:	d10b      	bne.n	810c7f4 <xQueueGenericSend+0x34>
 810c7dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810c7e0:	f383 8811 	msr	BASEPRI, r3
 810c7e4:	f3bf 8f6f 	isb	sy
 810c7e8:	f3bf 8f4f 	dsb	sy
 810c7ec:	62bb      	str	r3, [r7, #40]	@ 0x28
 810c7ee:	bf00      	nop
 810c7f0:	bf00      	nop
 810c7f2:	e7fd      	b.n	810c7f0 <xQueueGenericSend+0x30>
 810c7f4:	68bb      	ldr	r3, [r7, #8]
 810c7f6:	2b00      	cmp	r3, #0
 810c7f8:	d103      	bne.n	810c802 <xQueueGenericSend+0x42>
 810c7fa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810c7fc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 810c7fe:	2b00      	cmp	r3, #0
 810c800:	d101      	bne.n	810c806 <xQueueGenericSend+0x46>
 810c802:	2301      	movs	r3, #1
 810c804:	e000      	b.n	810c808 <xQueueGenericSend+0x48>
 810c806:	2300      	movs	r3, #0
 810c808:	2b00      	cmp	r3, #0
 810c80a:	d10b      	bne.n	810c824 <xQueueGenericSend+0x64>
 810c80c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810c810:	f383 8811 	msr	BASEPRI, r3
 810c814:	f3bf 8f6f 	isb	sy
 810c818:	f3bf 8f4f 	dsb	sy
 810c81c:	627b      	str	r3, [r7, #36]	@ 0x24
 810c81e:	bf00      	nop
 810c820:	bf00      	nop
 810c822:	e7fd      	b.n	810c820 <xQueueGenericSend+0x60>
 810c824:	683b      	ldr	r3, [r7, #0]
 810c826:	2b02      	cmp	r3, #2
 810c828:	d103      	bne.n	810c832 <xQueueGenericSend+0x72>
 810c82a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810c82c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 810c82e:	2b01      	cmp	r3, #1
 810c830:	d101      	bne.n	810c836 <xQueueGenericSend+0x76>
 810c832:	2301      	movs	r3, #1
 810c834:	e000      	b.n	810c838 <xQueueGenericSend+0x78>
 810c836:	2300      	movs	r3, #0
 810c838:	2b00      	cmp	r3, #0
 810c83a:	d10b      	bne.n	810c854 <xQueueGenericSend+0x94>
 810c83c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810c840:	f383 8811 	msr	BASEPRI, r3
 810c844:	f3bf 8f6f 	isb	sy
 810c848:	f3bf 8f4f 	dsb	sy
 810c84c:	623b      	str	r3, [r7, #32]
 810c84e:	bf00      	nop
 810c850:	bf00      	nop
 810c852:	e7fd      	b.n	810c850 <xQueueGenericSend+0x90>
 810c854:	f001 f9fc 	bl	810dc50 <xTaskGetSchedulerState>
 810c858:	4603      	mov	r3, r0
 810c85a:	2b00      	cmp	r3, #0
 810c85c:	d102      	bne.n	810c864 <xQueueGenericSend+0xa4>
 810c85e:	687b      	ldr	r3, [r7, #4]
 810c860:	2b00      	cmp	r3, #0
 810c862:	d101      	bne.n	810c868 <xQueueGenericSend+0xa8>
 810c864:	2301      	movs	r3, #1
 810c866:	e000      	b.n	810c86a <xQueueGenericSend+0xaa>
 810c868:	2300      	movs	r3, #0
 810c86a:	2b00      	cmp	r3, #0
 810c86c:	d10b      	bne.n	810c886 <xQueueGenericSend+0xc6>
 810c86e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810c872:	f383 8811 	msr	BASEPRI, r3
 810c876:	f3bf 8f6f 	isb	sy
 810c87a:	f3bf 8f4f 	dsb	sy
 810c87e:	61fb      	str	r3, [r7, #28]
 810c880:	bf00      	nop
 810c882:	bf00      	nop
 810c884:	e7fd      	b.n	810c882 <xQueueGenericSend+0xc2>
 810c886:	f7ff fd6f 	bl	810c368 <vPortEnterCritical>
 810c88a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810c88c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 810c88e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810c890:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 810c892:	429a      	cmp	r2, r3
 810c894:	d302      	bcc.n	810c89c <xQueueGenericSend+0xdc>
 810c896:	683b      	ldr	r3, [r7, #0]
 810c898:	2b02      	cmp	r3, #2
 810c89a:	d129      	bne.n	810c8f0 <xQueueGenericSend+0x130>
 810c89c:	683a      	ldr	r2, [r7, #0]
 810c89e:	68b9      	ldr	r1, [r7, #8]
 810c8a0:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 810c8a2:	f000 fa0f 	bl	810ccc4 <prvCopyDataToQueue>
 810c8a6:	62f8      	str	r0, [r7, #44]	@ 0x2c
 810c8a8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810c8aa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 810c8ac:	2b00      	cmp	r3, #0
 810c8ae:	d010      	beq.n	810c8d2 <xQueueGenericSend+0x112>
 810c8b0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810c8b2:	3324      	adds	r3, #36	@ 0x24
 810c8b4:	4618      	mov	r0, r3
 810c8b6:	f001 f805 	bl	810d8c4 <xTaskRemoveFromEventList>
 810c8ba:	4603      	mov	r3, r0
 810c8bc:	2b00      	cmp	r3, #0
 810c8be:	d013      	beq.n	810c8e8 <xQueueGenericSend+0x128>
 810c8c0:	4b3f      	ldr	r3, [pc, #252]	@ (810c9c0 <xQueueGenericSend+0x200>)
 810c8c2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 810c8c6:	601a      	str	r2, [r3, #0]
 810c8c8:	f3bf 8f4f 	dsb	sy
 810c8cc:	f3bf 8f6f 	isb	sy
 810c8d0:	e00a      	b.n	810c8e8 <xQueueGenericSend+0x128>
 810c8d2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 810c8d4:	2b00      	cmp	r3, #0
 810c8d6:	d007      	beq.n	810c8e8 <xQueueGenericSend+0x128>
 810c8d8:	4b39      	ldr	r3, [pc, #228]	@ (810c9c0 <xQueueGenericSend+0x200>)
 810c8da:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 810c8de:	601a      	str	r2, [r3, #0]
 810c8e0:	f3bf 8f4f 	dsb	sy
 810c8e4:	f3bf 8f6f 	isb	sy
 810c8e8:	f7ff fd70 	bl	810c3cc <vPortExitCritical>
 810c8ec:	2301      	movs	r3, #1
 810c8ee:	e063      	b.n	810c9b8 <xQueueGenericSend+0x1f8>
 810c8f0:	687b      	ldr	r3, [r7, #4]
 810c8f2:	2b00      	cmp	r3, #0
 810c8f4:	d103      	bne.n	810c8fe <xQueueGenericSend+0x13e>
 810c8f6:	f7ff fd69 	bl	810c3cc <vPortExitCritical>
 810c8fa:	2300      	movs	r3, #0
 810c8fc:	e05c      	b.n	810c9b8 <xQueueGenericSend+0x1f8>
 810c8fe:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 810c900:	2b00      	cmp	r3, #0
 810c902:	d106      	bne.n	810c912 <xQueueGenericSend+0x152>
 810c904:	f107 0314 	add.w	r3, r7, #20
 810c908:	4618      	mov	r0, r3
 810c90a:	f001 f83f 	bl	810d98c <vTaskInternalSetTimeOutState>
 810c90e:	2301      	movs	r3, #1
 810c910:	637b      	str	r3, [r7, #52]	@ 0x34
 810c912:	f7ff fd5b 	bl	810c3cc <vPortExitCritical>
 810c916:	f000 fda7 	bl	810d468 <vTaskSuspendAll>
 810c91a:	f7ff fd25 	bl	810c368 <vPortEnterCritical>
 810c91e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810c920:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 810c924:	b25b      	sxtb	r3, r3
 810c926:	f1b3 3fff 	cmp.w	r3, #4294967295
 810c92a:	d103      	bne.n	810c934 <xQueueGenericSend+0x174>
 810c92c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810c92e:	2200      	movs	r2, #0
 810c930:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 810c934:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810c936:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 810c93a:	b25b      	sxtb	r3, r3
 810c93c:	f1b3 3fff 	cmp.w	r3, #4294967295
 810c940:	d103      	bne.n	810c94a <xQueueGenericSend+0x18a>
 810c942:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810c944:	2200      	movs	r2, #0
 810c946:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 810c94a:	f7ff fd3f 	bl	810c3cc <vPortExitCritical>
 810c94e:	1d3a      	adds	r2, r7, #4
 810c950:	f107 0314 	add.w	r3, r7, #20
 810c954:	4611      	mov	r1, r2
 810c956:	4618      	mov	r0, r3
 810c958:	f001 f82e 	bl	810d9b8 <xTaskCheckForTimeOut>
 810c95c:	4603      	mov	r3, r0
 810c95e:	2b00      	cmp	r3, #0
 810c960:	d124      	bne.n	810c9ac <xQueueGenericSend+0x1ec>
 810c962:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 810c964:	f000 faa6 	bl	810ceb4 <prvIsQueueFull>
 810c968:	4603      	mov	r3, r0
 810c96a:	2b00      	cmp	r3, #0
 810c96c:	d018      	beq.n	810c9a0 <xQueueGenericSend+0x1e0>
 810c96e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810c970:	3310      	adds	r3, #16
 810c972:	687a      	ldr	r2, [r7, #4]
 810c974:	4611      	mov	r1, r2
 810c976:	4618      	mov	r0, r3
 810c978:	f000 ff52 	bl	810d820 <vTaskPlaceOnEventList>
 810c97c:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 810c97e:	f000 fa31 	bl	810cde4 <prvUnlockQueue>
 810c982:	f000 fd7f 	bl	810d484 <xTaskResumeAll>
 810c986:	4603      	mov	r3, r0
 810c988:	2b00      	cmp	r3, #0
 810c98a:	f47f af7c 	bne.w	810c886 <xQueueGenericSend+0xc6>
 810c98e:	4b0c      	ldr	r3, [pc, #48]	@ (810c9c0 <xQueueGenericSend+0x200>)
 810c990:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 810c994:	601a      	str	r2, [r3, #0]
 810c996:	f3bf 8f4f 	dsb	sy
 810c99a:	f3bf 8f6f 	isb	sy
 810c99e:	e772      	b.n	810c886 <xQueueGenericSend+0xc6>
 810c9a0:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 810c9a2:	f000 fa1f 	bl	810cde4 <prvUnlockQueue>
 810c9a6:	f000 fd6d 	bl	810d484 <xTaskResumeAll>
 810c9aa:	e76c      	b.n	810c886 <xQueueGenericSend+0xc6>
 810c9ac:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 810c9ae:	f000 fa19 	bl	810cde4 <prvUnlockQueue>
 810c9b2:	f000 fd67 	bl	810d484 <xTaskResumeAll>
 810c9b6:	2300      	movs	r3, #0
 810c9b8:	4618      	mov	r0, r3
 810c9ba:	3738      	adds	r7, #56	@ 0x38
 810c9bc:	46bd      	mov	sp, r7
 810c9be:	bd80      	pop	{r7, pc}
 810c9c0:	e000ed04 	.word	0xe000ed04

0810c9c4 <xQueueGenericSendFromISR>:
 810c9c4:	b580      	push	{r7, lr}
 810c9c6:	b090      	sub	sp, #64	@ 0x40
 810c9c8:	af00      	add	r7, sp, #0
 810c9ca:	60f8      	str	r0, [r7, #12]
 810c9cc:	60b9      	str	r1, [r7, #8]
 810c9ce:	607a      	str	r2, [r7, #4]
 810c9d0:	603b      	str	r3, [r7, #0]
 810c9d2:	68fb      	ldr	r3, [r7, #12]
 810c9d4:	63bb      	str	r3, [r7, #56]	@ 0x38
 810c9d6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810c9d8:	2b00      	cmp	r3, #0
 810c9da:	d10b      	bne.n	810c9f4 <xQueueGenericSendFromISR+0x30>
 810c9dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810c9e0:	f383 8811 	msr	BASEPRI, r3
 810c9e4:	f3bf 8f6f 	isb	sy
 810c9e8:	f3bf 8f4f 	dsb	sy
 810c9ec:	62bb      	str	r3, [r7, #40]	@ 0x28
 810c9ee:	bf00      	nop
 810c9f0:	bf00      	nop
 810c9f2:	e7fd      	b.n	810c9f0 <xQueueGenericSendFromISR+0x2c>
 810c9f4:	68bb      	ldr	r3, [r7, #8]
 810c9f6:	2b00      	cmp	r3, #0
 810c9f8:	d103      	bne.n	810ca02 <xQueueGenericSendFromISR+0x3e>
 810c9fa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810c9fc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 810c9fe:	2b00      	cmp	r3, #0
 810ca00:	d101      	bne.n	810ca06 <xQueueGenericSendFromISR+0x42>
 810ca02:	2301      	movs	r3, #1
 810ca04:	e000      	b.n	810ca08 <xQueueGenericSendFromISR+0x44>
 810ca06:	2300      	movs	r3, #0
 810ca08:	2b00      	cmp	r3, #0
 810ca0a:	d10b      	bne.n	810ca24 <xQueueGenericSendFromISR+0x60>
 810ca0c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810ca10:	f383 8811 	msr	BASEPRI, r3
 810ca14:	f3bf 8f6f 	isb	sy
 810ca18:	f3bf 8f4f 	dsb	sy
 810ca1c:	627b      	str	r3, [r7, #36]	@ 0x24
 810ca1e:	bf00      	nop
 810ca20:	bf00      	nop
 810ca22:	e7fd      	b.n	810ca20 <xQueueGenericSendFromISR+0x5c>
 810ca24:	683b      	ldr	r3, [r7, #0]
 810ca26:	2b02      	cmp	r3, #2
 810ca28:	d103      	bne.n	810ca32 <xQueueGenericSendFromISR+0x6e>
 810ca2a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810ca2c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 810ca2e:	2b01      	cmp	r3, #1
 810ca30:	d101      	bne.n	810ca36 <xQueueGenericSendFromISR+0x72>
 810ca32:	2301      	movs	r3, #1
 810ca34:	e000      	b.n	810ca38 <xQueueGenericSendFromISR+0x74>
 810ca36:	2300      	movs	r3, #0
 810ca38:	2b00      	cmp	r3, #0
 810ca3a:	d10b      	bne.n	810ca54 <xQueueGenericSendFromISR+0x90>
 810ca3c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810ca40:	f383 8811 	msr	BASEPRI, r3
 810ca44:	f3bf 8f6f 	isb	sy
 810ca48:	f3bf 8f4f 	dsb	sy
 810ca4c:	623b      	str	r3, [r7, #32]
 810ca4e:	bf00      	nop
 810ca50:	bf00      	nop
 810ca52:	e7fd      	b.n	810ca50 <xQueueGenericSendFromISR+0x8c>
 810ca54:	f7ff fd68 	bl	810c528 <vPortValidateInterruptPriority>
 810ca58:	f3ef 8211 	mrs	r2, BASEPRI
 810ca5c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810ca60:	f383 8811 	msr	BASEPRI, r3
 810ca64:	f3bf 8f6f 	isb	sy
 810ca68:	f3bf 8f4f 	dsb	sy
 810ca6c:	61fa      	str	r2, [r7, #28]
 810ca6e:	61bb      	str	r3, [r7, #24]
 810ca70:	69fb      	ldr	r3, [r7, #28]
 810ca72:	637b      	str	r3, [r7, #52]	@ 0x34
 810ca74:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810ca76:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 810ca78:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810ca7a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 810ca7c:	429a      	cmp	r2, r3
 810ca7e:	d302      	bcc.n	810ca86 <xQueueGenericSendFromISR+0xc2>
 810ca80:	683b      	ldr	r3, [r7, #0]
 810ca82:	2b02      	cmp	r3, #2
 810ca84:	d12f      	bne.n	810cae6 <xQueueGenericSendFromISR+0x122>
 810ca86:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810ca88:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 810ca8c:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 810ca90:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810ca92:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 810ca94:	62fb      	str	r3, [r7, #44]	@ 0x2c
 810ca96:	683a      	ldr	r2, [r7, #0]
 810ca98:	68b9      	ldr	r1, [r7, #8]
 810ca9a:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 810ca9c:	f000 f912 	bl	810ccc4 <prvCopyDataToQueue>
 810caa0:	f997 3033 	ldrsb.w	r3, [r7, #51]	@ 0x33
 810caa4:	f1b3 3fff 	cmp.w	r3, #4294967295
 810caa8:	d112      	bne.n	810cad0 <xQueueGenericSendFromISR+0x10c>
 810caaa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810caac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 810caae:	2b00      	cmp	r3, #0
 810cab0:	d016      	beq.n	810cae0 <xQueueGenericSendFromISR+0x11c>
 810cab2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810cab4:	3324      	adds	r3, #36	@ 0x24
 810cab6:	4618      	mov	r0, r3
 810cab8:	f000 ff04 	bl	810d8c4 <xTaskRemoveFromEventList>
 810cabc:	4603      	mov	r3, r0
 810cabe:	2b00      	cmp	r3, #0
 810cac0:	d00e      	beq.n	810cae0 <xQueueGenericSendFromISR+0x11c>
 810cac2:	687b      	ldr	r3, [r7, #4]
 810cac4:	2b00      	cmp	r3, #0
 810cac6:	d00b      	beq.n	810cae0 <xQueueGenericSendFromISR+0x11c>
 810cac8:	687b      	ldr	r3, [r7, #4]
 810caca:	2201      	movs	r2, #1
 810cacc:	601a      	str	r2, [r3, #0]
 810cace:	e007      	b.n	810cae0 <xQueueGenericSendFromISR+0x11c>
 810cad0:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 810cad4:	3301      	adds	r3, #1
 810cad6:	b2db      	uxtb	r3, r3
 810cad8:	b25a      	sxtb	r2, r3
 810cada:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810cadc:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 810cae0:	2301      	movs	r3, #1
 810cae2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810cae4:	e001      	b.n	810caea <xQueueGenericSendFromISR+0x126>
 810cae6:	2300      	movs	r3, #0
 810cae8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 810caea:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 810caec:	617b      	str	r3, [r7, #20]
 810caee:	697b      	ldr	r3, [r7, #20]
 810caf0:	f383 8811 	msr	BASEPRI, r3
 810caf4:	bf00      	nop
 810caf6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 810caf8:	4618      	mov	r0, r3
 810cafa:	3740      	adds	r7, #64	@ 0x40
 810cafc:	46bd      	mov	sp, r7
 810cafe:	bd80      	pop	{r7, pc}

0810cb00 <xQueueReceive>:
 810cb00:	b580      	push	{r7, lr}
 810cb02:	b08c      	sub	sp, #48	@ 0x30
 810cb04:	af00      	add	r7, sp, #0
 810cb06:	60f8      	str	r0, [r7, #12]
 810cb08:	60b9      	str	r1, [r7, #8]
 810cb0a:	607a      	str	r2, [r7, #4]
 810cb0c:	2300      	movs	r3, #0
 810cb0e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 810cb10:	68fb      	ldr	r3, [r7, #12]
 810cb12:	62bb      	str	r3, [r7, #40]	@ 0x28
 810cb14:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810cb16:	2b00      	cmp	r3, #0
 810cb18:	d10b      	bne.n	810cb32 <xQueueReceive+0x32>
 810cb1a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810cb1e:	f383 8811 	msr	BASEPRI, r3
 810cb22:	f3bf 8f6f 	isb	sy
 810cb26:	f3bf 8f4f 	dsb	sy
 810cb2a:	623b      	str	r3, [r7, #32]
 810cb2c:	bf00      	nop
 810cb2e:	bf00      	nop
 810cb30:	e7fd      	b.n	810cb2e <xQueueReceive+0x2e>
 810cb32:	68bb      	ldr	r3, [r7, #8]
 810cb34:	2b00      	cmp	r3, #0
 810cb36:	d103      	bne.n	810cb40 <xQueueReceive+0x40>
 810cb38:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810cb3a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 810cb3c:	2b00      	cmp	r3, #0
 810cb3e:	d101      	bne.n	810cb44 <xQueueReceive+0x44>
 810cb40:	2301      	movs	r3, #1
 810cb42:	e000      	b.n	810cb46 <xQueueReceive+0x46>
 810cb44:	2300      	movs	r3, #0
 810cb46:	2b00      	cmp	r3, #0
 810cb48:	d10b      	bne.n	810cb62 <xQueueReceive+0x62>
 810cb4a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810cb4e:	f383 8811 	msr	BASEPRI, r3
 810cb52:	f3bf 8f6f 	isb	sy
 810cb56:	f3bf 8f4f 	dsb	sy
 810cb5a:	61fb      	str	r3, [r7, #28]
 810cb5c:	bf00      	nop
 810cb5e:	bf00      	nop
 810cb60:	e7fd      	b.n	810cb5e <xQueueReceive+0x5e>
 810cb62:	f001 f875 	bl	810dc50 <xTaskGetSchedulerState>
 810cb66:	4603      	mov	r3, r0
 810cb68:	2b00      	cmp	r3, #0
 810cb6a:	d102      	bne.n	810cb72 <xQueueReceive+0x72>
 810cb6c:	687b      	ldr	r3, [r7, #4]
 810cb6e:	2b00      	cmp	r3, #0
 810cb70:	d101      	bne.n	810cb76 <xQueueReceive+0x76>
 810cb72:	2301      	movs	r3, #1
 810cb74:	e000      	b.n	810cb78 <xQueueReceive+0x78>
 810cb76:	2300      	movs	r3, #0
 810cb78:	2b00      	cmp	r3, #0
 810cb7a:	d10b      	bne.n	810cb94 <xQueueReceive+0x94>
 810cb7c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810cb80:	f383 8811 	msr	BASEPRI, r3
 810cb84:	f3bf 8f6f 	isb	sy
 810cb88:	f3bf 8f4f 	dsb	sy
 810cb8c:	61bb      	str	r3, [r7, #24]
 810cb8e:	bf00      	nop
 810cb90:	bf00      	nop
 810cb92:	e7fd      	b.n	810cb90 <xQueueReceive+0x90>
 810cb94:	f7ff fbe8 	bl	810c368 <vPortEnterCritical>
 810cb98:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810cb9a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 810cb9c:	627b      	str	r3, [r7, #36]	@ 0x24
 810cb9e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810cba0:	2b00      	cmp	r3, #0
 810cba2:	d01f      	beq.n	810cbe4 <xQueueReceive+0xe4>
 810cba4:	68b9      	ldr	r1, [r7, #8]
 810cba6:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 810cba8:	f000 f8f6 	bl	810cd98 <prvCopyDataFromQueue>
 810cbac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810cbae:	1e5a      	subs	r2, r3, #1
 810cbb0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810cbb2:	639a      	str	r2, [r3, #56]	@ 0x38
 810cbb4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810cbb6:	691b      	ldr	r3, [r3, #16]
 810cbb8:	2b00      	cmp	r3, #0
 810cbba:	d00f      	beq.n	810cbdc <xQueueReceive+0xdc>
 810cbbc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810cbbe:	3310      	adds	r3, #16
 810cbc0:	4618      	mov	r0, r3
 810cbc2:	f000 fe7f 	bl	810d8c4 <xTaskRemoveFromEventList>
 810cbc6:	4603      	mov	r3, r0
 810cbc8:	2b00      	cmp	r3, #0
 810cbca:	d007      	beq.n	810cbdc <xQueueReceive+0xdc>
 810cbcc:	4b3c      	ldr	r3, [pc, #240]	@ (810ccc0 <xQueueReceive+0x1c0>)
 810cbce:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 810cbd2:	601a      	str	r2, [r3, #0]
 810cbd4:	f3bf 8f4f 	dsb	sy
 810cbd8:	f3bf 8f6f 	isb	sy
 810cbdc:	f7ff fbf6 	bl	810c3cc <vPortExitCritical>
 810cbe0:	2301      	movs	r3, #1
 810cbe2:	e069      	b.n	810ccb8 <xQueueReceive+0x1b8>
 810cbe4:	687b      	ldr	r3, [r7, #4]
 810cbe6:	2b00      	cmp	r3, #0
 810cbe8:	d103      	bne.n	810cbf2 <xQueueReceive+0xf2>
 810cbea:	f7ff fbef 	bl	810c3cc <vPortExitCritical>
 810cbee:	2300      	movs	r3, #0
 810cbf0:	e062      	b.n	810ccb8 <xQueueReceive+0x1b8>
 810cbf2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 810cbf4:	2b00      	cmp	r3, #0
 810cbf6:	d106      	bne.n	810cc06 <xQueueReceive+0x106>
 810cbf8:	f107 0310 	add.w	r3, r7, #16
 810cbfc:	4618      	mov	r0, r3
 810cbfe:	f000 fec5 	bl	810d98c <vTaskInternalSetTimeOutState>
 810cc02:	2301      	movs	r3, #1
 810cc04:	62fb      	str	r3, [r7, #44]	@ 0x2c
 810cc06:	f7ff fbe1 	bl	810c3cc <vPortExitCritical>
 810cc0a:	f000 fc2d 	bl	810d468 <vTaskSuspendAll>
 810cc0e:	f7ff fbab 	bl	810c368 <vPortEnterCritical>
 810cc12:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810cc14:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 810cc18:	b25b      	sxtb	r3, r3
 810cc1a:	f1b3 3fff 	cmp.w	r3, #4294967295
 810cc1e:	d103      	bne.n	810cc28 <xQueueReceive+0x128>
 810cc20:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810cc22:	2200      	movs	r2, #0
 810cc24:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 810cc28:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810cc2a:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 810cc2e:	b25b      	sxtb	r3, r3
 810cc30:	f1b3 3fff 	cmp.w	r3, #4294967295
 810cc34:	d103      	bne.n	810cc3e <xQueueReceive+0x13e>
 810cc36:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810cc38:	2200      	movs	r2, #0
 810cc3a:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 810cc3e:	f7ff fbc5 	bl	810c3cc <vPortExitCritical>
 810cc42:	1d3a      	adds	r2, r7, #4
 810cc44:	f107 0310 	add.w	r3, r7, #16
 810cc48:	4611      	mov	r1, r2
 810cc4a:	4618      	mov	r0, r3
 810cc4c:	f000 feb4 	bl	810d9b8 <xTaskCheckForTimeOut>
 810cc50:	4603      	mov	r3, r0
 810cc52:	2b00      	cmp	r3, #0
 810cc54:	d123      	bne.n	810cc9e <xQueueReceive+0x19e>
 810cc56:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 810cc58:	f000 f916 	bl	810ce88 <prvIsQueueEmpty>
 810cc5c:	4603      	mov	r3, r0
 810cc5e:	2b00      	cmp	r3, #0
 810cc60:	d017      	beq.n	810cc92 <xQueueReceive+0x192>
 810cc62:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810cc64:	3324      	adds	r3, #36	@ 0x24
 810cc66:	687a      	ldr	r2, [r7, #4]
 810cc68:	4611      	mov	r1, r2
 810cc6a:	4618      	mov	r0, r3
 810cc6c:	f000 fdd8 	bl	810d820 <vTaskPlaceOnEventList>
 810cc70:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 810cc72:	f000 f8b7 	bl	810cde4 <prvUnlockQueue>
 810cc76:	f000 fc05 	bl	810d484 <xTaskResumeAll>
 810cc7a:	4603      	mov	r3, r0
 810cc7c:	2b00      	cmp	r3, #0
 810cc7e:	d189      	bne.n	810cb94 <xQueueReceive+0x94>
 810cc80:	4b0f      	ldr	r3, [pc, #60]	@ (810ccc0 <xQueueReceive+0x1c0>)
 810cc82:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 810cc86:	601a      	str	r2, [r3, #0]
 810cc88:	f3bf 8f4f 	dsb	sy
 810cc8c:	f3bf 8f6f 	isb	sy
 810cc90:	e780      	b.n	810cb94 <xQueueReceive+0x94>
 810cc92:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 810cc94:	f000 f8a6 	bl	810cde4 <prvUnlockQueue>
 810cc98:	f000 fbf4 	bl	810d484 <xTaskResumeAll>
 810cc9c:	e77a      	b.n	810cb94 <xQueueReceive+0x94>
 810cc9e:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 810cca0:	f000 f8a0 	bl	810cde4 <prvUnlockQueue>
 810cca4:	f000 fbee 	bl	810d484 <xTaskResumeAll>
 810cca8:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 810ccaa:	f000 f8ed 	bl	810ce88 <prvIsQueueEmpty>
 810ccae:	4603      	mov	r3, r0
 810ccb0:	2b00      	cmp	r3, #0
 810ccb2:	f43f af6f 	beq.w	810cb94 <xQueueReceive+0x94>
 810ccb6:	2300      	movs	r3, #0
 810ccb8:	4618      	mov	r0, r3
 810ccba:	3730      	adds	r7, #48	@ 0x30
 810ccbc:	46bd      	mov	sp, r7
 810ccbe:	bd80      	pop	{r7, pc}
 810ccc0:	e000ed04 	.word	0xe000ed04

0810ccc4 <prvCopyDataToQueue>:
 810ccc4:	b580      	push	{r7, lr}
 810ccc6:	b086      	sub	sp, #24
 810ccc8:	af00      	add	r7, sp, #0
 810ccca:	60f8      	str	r0, [r7, #12]
 810cccc:	60b9      	str	r1, [r7, #8]
 810ccce:	607a      	str	r2, [r7, #4]
 810ccd0:	2300      	movs	r3, #0
 810ccd2:	617b      	str	r3, [r7, #20]
 810ccd4:	68fb      	ldr	r3, [r7, #12]
 810ccd6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 810ccd8:	613b      	str	r3, [r7, #16]
 810ccda:	68fb      	ldr	r3, [r7, #12]
 810ccdc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 810ccde:	2b00      	cmp	r3, #0
 810cce0:	d10d      	bne.n	810ccfe <prvCopyDataToQueue+0x3a>
 810cce2:	68fb      	ldr	r3, [r7, #12]
 810cce4:	681b      	ldr	r3, [r3, #0]
 810cce6:	2b00      	cmp	r3, #0
 810cce8:	d14d      	bne.n	810cd86 <prvCopyDataToQueue+0xc2>
 810ccea:	68fb      	ldr	r3, [r7, #12]
 810ccec:	689b      	ldr	r3, [r3, #8]
 810ccee:	4618      	mov	r0, r3
 810ccf0:	f000 ffcc 	bl	810dc8c <xTaskPriorityDisinherit>
 810ccf4:	6178      	str	r0, [r7, #20]
 810ccf6:	68fb      	ldr	r3, [r7, #12]
 810ccf8:	2200      	movs	r2, #0
 810ccfa:	609a      	str	r2, [r3, #8]
 810ccfc:	e043      	b.n	810cd86 <prvCopyDataToQueue+0xc2>
 810ccfe:	687b      	ldr	r3, [r7, #4]
 810cd00:	2b00      	cmp	r3, #0
 810cd02:	d119      	bne.n	810cd38 <prvCopyDataToQueue+0x74>
 810cd04:	68fb      	ldr	r3, [r7, #12]
 810cd06:	6858      	ldr	r0, [r3, #4]
 810cd08:	68fb      	ldr	r3, [r7, #12]
 810cd0a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 810cd0c:	461a      	mov	r2, r3
 810cd0e:	68b9      	ldr	r1, [r7, #8]
 810cd10:	f002 fee5 	bl	810fade <memcpy>
 810cd14:	68fb      	ldr	r3, [r7, #12]
 810cd16:	685a      	ldr	r2, [r3, #4]
 810cd18:	68fb      	ldr	r3, [r7, #12]
 810cd1a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 810cd1c:	441a      	add	r2, r3
 810cd1e:	68fb      	ldr	r3, [r7, #12]
 810cd20:	605a      	str	r2, [r3, #4]
 810cd22:	68fb      	ldr	r3, [r7, #12]
 810cd24:	685a      	ldr	r2, [r3, #4]
 810cd26:	68fb      	ldr	r3, [r7, #12]
 810cd28:	689b      	ldr	r3, [r3, #8]
 810cd2a:	429a      	cmp	r2, r3
 810cd2c:	d32b      	bcc.n	810cd86 <prvCopyDataToQueue+0xc2>
 810cd2e:	68fb      	ldr	r3, [r7, #12]
 810cd30:	681a      	ldr	r2, [r3, #0]
 810cd32:	68fb      	ldr	r3, [r7, #12]
 810cd34:	605a      	str	r2, [r3, #4]
 810cd36:	e026      	b.n	810cd86 <prvCopyDataToQueue+0xc2>
 810cd38:	68fb      	ldr	r3, [r7, #12]
 810cd3a:	68d8      	ldr	r0, [r3, #12]
 810cd3c:	68fb      	ldr	r3, [r7, #12]
 810cd3e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 810cd40:	461a      	mov	r2, r3
 810cd42:	68b9      	ldr	r1, [r7, #8]
 810cd44:	f002 fecb 	bl	810fade <memcpy>
 810cd48:	68fb      	ldr	r3, [r7, #12]
 810cd4a:	68da      	ldr	r2, [r3, #12]
 810cd4c:	68fb      	ldr	r3, [r7, #12]
 810cd4e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 810cd50:	425b      	negs	r3, r3
 810cd52:	441a      	add	r2, r3
 810cd54:	68fb      	ldr	r3, [r7, #12]
 810cd56:	60da      	str	r2, [r3, #12]
 810cd58:	68fb      	ldr	r3, [r7, #12]
 810cd5a:	68da      	ldr	r2, [r3, #12]
 810cd5c:	68fb      	ldr	r3, [r7, #12]
 810cd5e:	681b      	ldr	r3, [r3, #0]
 810cd60:	429a      	cmp	r2, r3
 810cd62:	d207      	bcs.n	810cd74 <prvCopyDataToQueue+0xb0>
 810cd64:	68fb      	ldr	r3, [r7, #12]
 810cd66:	689a      	ldr	r2, [r3, #8]
 810cd68:	68fb      	ldr	r3, [r7, #12]
 810cd6a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 810cd6c:	425b      	negs	r3, r3
 810cd6e:	441a      	add	r2, r3
 810cd70:	68fb      	ldr	r3, [r7, #12]
 810cd72:	60da      	str	r2, [r3, #12]
 810cd74:	687b      	ldr	r3, [r7, #4]
 810cd76:	2b02      	cmp	r3, #2
 810cd78:	d105      	bne.n	810cd86 <prvCopyDataToQueue+0xc2>
 810cd7a:	693b      	ldr	r3, [r7, #16]
 810cd7c:	2b00      	cmp	r3, #0
 810cd7e:	d002      	beq.n	810cd86 <prvCopyDataToQueue+0xc2>
 810cd80:	693b      	ldr	r3, [r7, #16]
 810cd82:	3b01      	subs	r3, #1
 810cd84:	613b      	str	r3, [r7, #16]
 810cd86:	693b      	ldr	r3, [r7, #16]
 810cd88:	1c5a      	adds	r2, r3, #1
 810cd8a:	68fb      	ldr	r3, [r7, #12]
 810cd8c:	639a      	str	r2, [r3, #56]	@ 0x38
 810cd8e:	697b      	ldr	r3, [r7, #20]
 810cd90:	4618      	mov	r0, r3
 810cd92:	3718      	adds	r7, #24
 810cd94:	46bd      	mov	sp, r7
 810cd96:	bd80      	pop	{r7, pc}

0810cd98 <prvCopyDataFromQueue>:
 810cd98:	b580      	push	{r7, lr}
 810cd9a:	b082      	sub	sp, #8
 810cd9c:	af00      	add	r7, sp, #0
 810cd9e:	6078      	str	r0, [r7, #4]
 810cda0:	6039      	str	r1, [r7, #0]
 810cda2:	687b      	ldr	r3, [r7, #4]
 810cda4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 810cda6:	2b00      	cmp	r3, #0
 810cda8:	d018      	beq.n	810cddc <prvCopyDataFromQueue+0x44>
 810cdaa:	687b      	ldr	r3, [r7, #4]
 810cdac:	68da      	ldr	r2, [r3, #12]
 810cdae:	687b      	ldr	r3, [r7, #4]
 810cdb0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 810cdb2:	441a      	add	r2, r3
 810cdb4:	687b      	ldr	r3, [r7, #4]
 810cdb6:	60da      	str	r2, [r3, #12]
 810cdb8:	687b      	ldr	r3, [r7, #4]
 810cdba:	68da      	ldr	r2, [r3, #12]
 810cdbc:	687b      	ldr	r3, [r7, #4]
 810cdbe:	689b      	ldr	r3, [r3, #8]
 810cdc0:	429a      	cmp	r2, r3
 810cdc2:	d303      	bcc.n	810cdcc <prvCopyDataFromQueue+0x34>
 810cdc4:	687b      	ldr	r3, [r7, #4]
 810cdc6:	681a      	ldr	r2, [r3, #0]
 810cdc8:	687b      	ldr	r3, [r7, #4]
 810cdca:	60da      	str	r2, [r3, #12]
 810cdcc:	687b      	ldr	r3, [r7, #4]
 810cdce:	68d9      	ldr	r1, [r3, #12]
 810cdd0:	687b      	ldr	r3, [r7, #4]
 810cdd2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 810cdd4:	461a      	mov	r2, r3
 810cdd6:	6838      	ldr	r0, [r7, #0]
 810cdd8:	f002 fe81 	bl	810fade <memcpy>
 810cddc:	bf00      	nop
 810cdde:	3708      	adds	r7, #8
 810cde0:	46bd      	mov	sp, r7
 810cde2:	bd80      	pop	{r7, pc}

0810cde4 <prvUnlockQueue>:
 810cde4:	b580      	push	{r7, lr}
 810cde6:	b084      	sub	sp, #16
 810cde8:	af00      	add	r7, sp, #0
 810cdea:	6078      	str	r0, [r7, #4]
 810cdec:	f7ff fabc 	bl	810c368 <vPortEnterCritical>
 810cdf0:	687b      	ldr	r3, [r7, #4]
 810cdf2:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 810cdf6:	73fb      	strb	r3, [r7, #15]
 810cdf8:	e011      	b.n	810ce1e <prvUnlockQueue+0x3a>
 810cdfa:	687b      	ldr	r3, [r7, #4]
 810cdfc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 810cdfe:	2b00      	cmp	r3, #0
 810ce00:	d012      	beq.n	810ce28 <prvUnlockQueue+0x44>
 810ce02:	687b      	ldr	r3, [r7, #4]
 810ce04:	3324      	adds	r3, #36	@ 0x24
 810ce06:	4618      	mov	r0, r3
 810ce08:	f000 fd5c 	bl	810d8c4 <xTaskRemoveFromEventList>
 810ce0c:	4603      	mov	r3, r0
 810ce0e:	2b00      	cmp	r3, #0
 810ce10:	d001      	beq.n	810ce16 <prvUnlockQueue+0x32>
 810ce12:	f000 fe35 	bl	810da80 <vTaskMissedYield>
 810ce16:	7bfb      	ldrb	r3, [r7, #15]
 810ce18:	3b01      	subs	r3, #1
 810ce1a:	b2db      	uxtb	r3, r3
 810ce1c:	73fb      	strb	r3, [r7, #15]
 810ce1e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 810ce22:	2b00      	cmp	r3, #0
 810ce24:	dce9      	bgt.n	810cdfa <prvUnlockQueue+0x16>
 810ce26:	e000      	b.n	810ce2a <prvUnlockQueue+0x46>
 810ce28:	bf00      	nop
 810ce2a:	687b      	ldr	r3, [r7, #4]
 810ce2c:	22ff      	movs	r2, #255	@ 0xff
 810ce2e:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 810ce32:	f7ff facb 	bl	810c3cc <vPortExitCritical>
 810ce36:	f7ff fa97 	bl	810c368 <vPortEnterCritical>
 810ce3a:	687b      	ldr	r3, [r7, #4]
 810ce3c:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 810ce40:	73bb      	strb	r3, [r7, #14]
 810ce42:	e011      	b.n	810ce68 <prvUnlockQueue+0x84>
 810ce44:	687b      	ldr	r3, [r7, #4]
 810ce46:	691b      	ldr	r3, [r3, #16]
 810ce48:	2b00      	cmp	r3, #0
 810ce4a:	d012      	beq.n	810ce72 <prvUnlockQueue+0x8e>
 810ce4c:	687b      	ldr	r3, [r7, #4]
 810ce4e:	3310      	adds	r3, #16
 810ce50:	4618      	mov	r0, r3
 810ce52:	f000 fd37 	bl	810d8c4 <xTaskRemoveFromEventList>
 810ce56:	4603      	mov	r3, r0
 810ce58:	2b00      	cmp	r3, #0
 810ce5a:	d001      	beq.n	810ce60 <prvUnlockQueue+0x7c>
 810ce5c:	f000 fe10 	bl	810da80 <vTaskMissedYield>
 810ce60:	7bbb      	ldrb	r3, [r7, #14]
 810ce62:	3b01      	subs	r3, #1
 810ce64:	b2db      	uxtb	r3, r3
 810ce66:	73bb      	strb	r3, [r7, #14]
 810ce68:	f997 300e 	ldrsb.w	r3, [r7, #14]
 810ce6c:	2b00      	cmp	r3, #0
 810ce6e:	dce9      	bgt.n	810ce44 <prvUnlockQueue+0x60>
 810ce70:	e000      	b.n	810ce74 <prvUnlockQueue+0x90>
 810ce72:	bf00      	nop
 810ce74:	687b      	ldr	r3, [r7, #4]
 810ce76:	22ff      	movs	r2, #255	@ 0xff
 810ce78:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 810ce7c:	f7ff faa6 	bl	810c3cc <vPortExitCritical>
 810ce80:	bf00      	nop
 810ce82:	3710      	adds	r7, #16
 810ce84:	46bd      	mov	sp, r7
 810ce86:	bd80      	pop	{r7, pc}

0810ce88 <prvIsQueueEmpty>:
 810ce88:	b580      	push	{r7, lr}
 810ce8a:	b084      	sub	sp, #16
 810ce8c:	af00      	add	r7, sp, #0
 810ce8e:	6078      	str	r0, [r7, #4]
 810ce90:	f7ff fa6a 	bl	810c368 <vPortEnterCritical>
 810ce94:	687b      	ldr	r3, [r7, #4]
 810ce96:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 810ce98:	2b00      	cmp	r3, #0
 810ce9a:	d102      	bne.n	810cea2 <prvIsQueueEmpty+0x1a>
 810ce9c:	2301      	movs	r3, #1
 810ce9e:	60fb      	str	r3, [r7, #12]
 810cea0:	e001      	b.n	810cea6 <prvIsQueueEmpty+0x1e>
 810cea2:	2300      	movs	r3, #0
 810cea4:	60fb      	str	r3, [r7, #12]
 810cea6:	f7ff fa91 	bl	810c3cc <vPortExitCritical>
 810ceaa:	68fb      	ldr	r3, [r7, #12]
 810ceac:	4618      	mov	r0, r3
 810ceae:	3710      	adds	r7, #16
 810ceb0:	46bd      	mov	sp, r7
 810ceb2:	bd80      	pop	{r7, pc}

0810ceb4 <prvIsQueueFull>:
 810ceb4:	b580      	push	{r7, lr}
 810ceb6:	b084      	sub	sp, #16
 810ceb8:	af00      	add	r7, sp, #0
 810ceba:	6078      	str	r0, [r7, #4]
 810cebc:	f7ff fa54 	bl	810c368 <vPortEnterCritical>
 810cec0:	687b      	ldr	r3, [r7, #4]
 810cec2:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 810cec4:	687b      	ldr	r3, [r7, #4]
 810cec6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 810cec8:	429a      	cmp	r2, r3
 810ceca:	d102      	bne.n	810ced2 <prvIsQueueFull+0x1e>
 810cecc:	2301      	movs	r3, #1
 810cece:	60fb      	str	r3, [r7, #12]
 810ced0:	e001      	b.n	810ced6 <prvIsQueueFull+0x22>
 810ced2:	2300      	movs	r3, #0
 810ced4:	60fb      	str	r3, [r7, #12]
 810ced6:	f7ff fa79 	bl	810c3cc <vPortExitCritical>
 810ceda:	68fb      	ldr	r3, [r7, #12]
 810cedc:	4618      	mov	r0, r3
 810cede:	3710      	adds	r7, #16
 810cee0:	46bd      	mov	sp, r7
 810cee2:	bd80      	pop	{r7, pc}

0810cee4 <vQueueAddToRegistry>:
 810cee4:	b480      	push	{r7}
 810cee6:	b085      	sub	sp, #20
 810cee8:	af00      	add	r7, sp, #0
 810ceea:	6078      	str	r0, [r7, #4]
 810ceec:	6039      	str	r1, [r7, #0]
 810ceee:	2300      	movs	r3, #0
 810cef0:	60fb      	str	r3, [r7, #12]
 810cef2:	e014      	b.n	810cf1e <vQueueAddToRegistry+0x3a>
 810cef4:	4a0f      	ldr	r2, [pc, #60]	@ (810cf34 <vQueueAddToRegistry+0x50>)
 810cef6:	68fb      	ldr	r3, [r7, #12]
 810cef8:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 810cefc:	2b00      	cmp	r3, #0
 810cefe:	d10b      	bne.n	810cf18 <vQueueAddToRegistry+0x34>
 810cf00:	490c      	ldr	r1, [pc, #48]	@ (810cf34 <vQueueAddToRegistry+0x50>)
 810cf02:	68fb      	ldr	r3, [r7, #12]
 810cf04:	683a      	ldr	r2, [r7, #0]
 810cf06:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 810cf0a:	4a0a      	ldr	r2, [pc, #40]	@ (810cf34 <vQueueAddToRegistry+0x50>)
 810cf0c:	68fb      	ldr	r3, [r7, #12]
 810cf0e:	00db      	lsls	r3, r3, #3
 810cf10:	4413      	add	r3, r2
 810cf12:	687a      	ldr	r2, [r7, #4]
 810cf14:	605a      	str	r2, [r3, #4]
 810cf16:	e006      	b.n	810cf26 <vQueueAddToRegistry+0x42>
 810cf18:	68fb      	ldr	r3, [r7, #12]
 810cf1a:	3301      	adds	r3, #1
 810cf1c:	60fb      	str	r3, [r7, #12]
 810cf1e:	68fb      	ldr	r3, [r7, #12]
 810cf20:	2b07      	cmp	r3, #7
 810cf22:	d9e7      	bls.n	810cef4 <vQueueAddToRegistry+0x10>
 810cf24:	bf00      	nop
 810cf26:	bf00      	nop
 810cf28:	3714      	adds	r7, #20
 810cf2a:	46bd      	mov	sp, r7
 810cf2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 810cf30:	4770      	bx	lr
 810cf32:	bf00      	nop
 810cf34:	1000496c 	.word	0x1000496c

0810cf38 <vQueueWaitForMessageRestricted>:
 810cf38:	b580      	push	{r7, lr}
 810cf3a:	b086      	sub	sp, #24
 810cf3c:	af00      	add	r7, sp, #0
 810cf3e:	60f8      	str	r0, [r7, #12]
 810cf40:	60b9      	str	r1, [r7, #8]
 810cf42:	607a      	str	r2, [r7, #4]
 810cf44:	68fb      	ldr	r3, [r7, #12]
 810cf46:	617b      	str	r3, [r7, #20]
 810cf48:	f7ff fa0e 	bl	810c368 <vPortEnterCritical>
 810cf4c:	697b      	ldr	r3, [r7, #20]
 810cf4e:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 810cf52:	b25b      	sxtb	r3, r3
 810cf54:	f1b3 3fff 	cmp.w	r3, #4294967295
 810cf58:	d103      	bne.n	810cf62 <vQueueWaitForMessageRestricted+0x2a>
 810cf5a:	697b      	ldr	r3, [r7, #20]
 810cf5c:	2200      	movs	r2, #0
 810cf5e:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 810cf62:	697b      	ldr	r3, [r7, #20]
 810cf64:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 810cf68:	b25b      	sxtb	r3, r3
 810cf6a:	f1b3 3fff 	cmp.w	r3, #4294967295
 810cf6e:	d103      	bne.n	810cf78 <vQueueWaitForMessageRestricted+0x40>
 810cf70:	697b      	ldr	r3, [r7, #20]
 810cf72:	2200      	movs	r2, #0
 810cf74:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 810cf78:	f7ff fa28 	bl	810c3cc <vPortExitCritical>
 810cf7c:	697b      	ldr	r3, [r7, #20]
 810cf7e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 810cf80:	2b00      	cmp	r3, #0
 810cf82:	d106      	bne.n	810cf92 <vQueueWaitForMessageRestricted+0x5a>
 810cf84:	697b      	ldr	r3, [r7, #20]
 810cf86:	3324      	adds	r3, #36	@ 0x24
 810cf88:	687a      	ldr	r2, [r7, #4]
 810cf8a:	68b9      	ldr	r1, [r7, #8]
 810cf8c:	4618      	mov	r0, r3
 810cf8e:	f000 fc6d 	bl	810d86c <vTaskPlaceOnEventListRestricted>
 810cf92:	6978      	ldr	r0, [r7, #20]
 810cf94:	f7ff ff26 	bl	810cde4 <prvUnlockQueue>
 810cf98:	bf00      	nop
 810cf9a:	3718      	adds	r7, #24
 810cf9c:	46bd      	mov	sp, r7
 810cf9e:	bd80      	pop	{r7, pc}

0810cfa0 <xTaskCreateStatic>:
 810cfa0:	b580      	push	{r7, lr}
 810cfa2:	b08e      	sub	sp, #56	@ 0x38
 810cfa4:	af04      	add	r7, sp, #16
 810cfa6:	60f8      	str	r0, [r7, #12]
 810cfa8:	60b9      	str	r1, [r7, #8]
 810cfaa:	607a      	str	r2, [r7, #4]
 810cfac:	603b      	str	r3, [r7, #0]
 810cfae:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 810cfb0:	2b00      	cmp	r3, #0
 810cfb2:	d10b      	bne.n	810cfcc <xTaskCreateStatic+0x2c>
 810cfb4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810cfb8:	f383 8811 	msr	BASEPRI, r3
 810cfbc:	f3bf 8f6f 	isb	sy
 810cfc0:	f3bf 8f4f 	dsb	sy
 810cfc4:	623b      	str	r3, [r7, #32]
 810cfc6:	bf00      	nop
 810cfc8:	bf00      	nop
 810cfca:	e7fd      	b.n	810cfc8 <xTaskCreateStatic+0x28>
 810cfcc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810cfce:	2b00      	cmp	r3, #0
 810cfd0:	d10b      	bne.n	810cfea <xTaskCreateStatic+0x4a>
 810cfd2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810cfd6:	f383 8811 	msr	BASEPRI, r3
 810cfda:	f3bf 8f6f 	isb	sy
 810cfde:	f3bf 8f4f 	dsb	sy
 810cfe2:	61fb      	str	r3, [r7, #28]
 810cfe4:	bf00      	nop
 810cfe6:	bf00      	nop
 810cfe8:	e7fd      	b.n	810cfe6 <xTaskCreateStatic+0x46>
 810cfea:	23a8      	movs	r3, #168	@ 0xa8
 810cfec:	613b      	str	r3, [r7, #16]
 810cfee:	693b      	ldr	r3, [r7, #16]
 810cff0:	2ba8      	cmp	r3, #168	@ 0xa8
 810cff2:	d00b      	beq.n	810d00c <xTaskCreateStatic+0x6c>
 810cff4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810cff8:	f383 8811 	msr	BASEPRI, r3
 810cffc:	f3bf 8f6f 	isb	sy
 810d000:	f3bf 8f4f 	dsb	sy
 810d004:	61bb      	str	r3, [r7, #24]
 810d006:	bf00      	nop
 810d008:	bf00      	nop
 810d00a:	e7fd      	b.n	810d008 <xTaskCreateStatic+0x68>
 810d00c:	693b      	ldr	r3, [r7, #16]
 810d00e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810d010:	2b00      	cmp	r3, #0
 810d012:	d01e      	beq.n	810d052 <xTaskCreateStatic+0xb2>
 810d014:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 810d016:	2b00      	cmp	r3, #0
 810d018:	d01b      	beq.n	810d052 <xTaskCreateStatic+0xb2>
 810d01a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 810d01c:	627b      	str	r3, [r7, #36]	@ 0x24
 810d01e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810d020:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 810d022:	631a      	str	r2, [r3, #48]	@ 0x30
 810d024:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810d026:	2202      	movs	r2, #2
 810d028:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 810d02c:	2300      	movs	r3, #0
 810d02e:	9303      	str	r3, [sp, #12]
 810d030:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810d032:	9302      	str	r3, [sp, #8]
 810d034:	f107 0314 	add.w	r3, r7, #20
 810d038:	9301      	str	r3, [sp, #4]
 810d03a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810d03c:	9300      	str	r3, [sp, #0]
 810d03e:	683b      	ldr	r3, [r7, #0]
 810d040:	687a      	ldr	r2, [r7, #4]
 810d042:	68b9      	ldr	r1, [r7, #8]
 810d044:	68f8      	ldr	r0, [r7, #12]
 810d046:	f000 f851 	bl	810d0ec <prvInitialiseNewTask>
 810d04a:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 810d04c:	f000 f8f6 	bl	810d23c <prvAddNewTaskToReadyList>
 810d050:	e001      	b.n	810d056 <xTaskCreateStatic+0xb6>
 810d052:	2300      	movs	r3, #0
 810d054:	617b      	str	r3, [r7, #20]
 810d056:	697b      	ldr	r3, [r7, #20]
 810d058:	4618      	mov	r0, r3
 810d05a:	3728      	adds	r7, #40	@ 0x28
 810d05c:	46bd      	mov	sp, r7
 810d05e:	bd80      	pop	{r7, pc}

0810d060 <xTaskCreate>:
 810d060:	b580      	push	{r7, lr}
 810d062:	b08c      	sub	sp, #48	@ 0x30
 810d064:	af04      	add	r7, sp, #16
 810d066:	60f8      	str	r0, [r7, #12]
 810d068:	60b9      	str	r1, [r7, #8]
 810d06a:	603b      	str	r3, [r7, #0]
 810d06c:	4613      	mov	r3, r2
 810d06e:	80fb      	strh	r3, [r7, #6]
 810d070:	88fb      	ldrh	r3, [r7, #6]
 810d072:	009b      	lsls	r3, r3, #2
 810d074:	4618      	mov	r0, r3
 810d076:	f7fe fd99 	bl	810bbac <pvPortMalloc>
 810d07a:	6178      	str	r0, [r7, #20]
 810d07c:	697b      	ldr	r3, [r7, #20]
 810d07e:	2b00      	cmp	r3, #0
 810d080:	d00e      	beq.n	810d0a0 <xTaskCreate+0x40>
 810d082:	20a8      	movs	r0, #168	@ 0xa8
 810d084:	f7fe fd92 	bl	810bbac <pvPortMalloc>
 810d088:	61f8      	str	r0, [r7, #28]
 810d08a:	69fb      	ldr	r3, [r7, #28]
 810d08c:	2b00      	cmp	r3, #0
 810d08e:	d003      	beq.n	810d098 <xTaskCreate+0x38>
 810d090:	69fb      	ldr	r3, [r7, #28]
 810d092:	697a      	ldr	r2, [r7, #20]
 810d094:	631a      	str	r2, [r3, #48]	@ 0x30
 810d096:	e005      	b.n	810d0a4 <xTaskCreate+0x44>
 810d098:	6978      	ldr	r0, [r7, #20]
 810d09a:	f7fe fe55 	bl	810bd48 <vPortFree>
 810d09e:	e001      	b.n	810d0a4 <xTaskCreate+0x44>
 810d0a0:	2300      	movs	r3, #0
 810d0a2:	61fb      	str	r3, [r7, #28]
 810d0a4:	69fb      	ldr	r3, [r7, #28]
 810d0a6:	2b00      	cmp	r3, #0
 810d0a8:	d017      	beq.n	810d0da <xTaskCreate+0x7a>
 810d0aa:	69fb      	ldr	r3, [r7, #28]
 810d0ac:	2200      	movs	r2, #0
 810d0ae:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 810d0b2:	88fa      	ldrh	r2, [r7, #6]
 810d0b4:	2300      	movs	r3, #0
 810d0b6:	9303      	str	r3, [sp, #12]
 810d0b8:	69fb      	ldr	r3, [r7, #28]
 810d0ba:	9302      	str	r3, [sp, #8]
 810d0bc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 810d0be:	9301      	str	r3, [sp, #4]
 810d0c0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810d0c2:	9300      	str	r3, [sp, #0]
 810d0c4:	683b      	ldr	r3, [r7, #0]
 810d0c6:	68b9      	ldr	r1, [r7, #8]
 810d0c8:	68f8      	ldr	r0, [r7, #12]
 810d0ca:	f000 f80f 	bl	810d0ec <prvInitialiseNewTask>
 810d0ce:	69f8      	ldr	r0, [r7, #28]
 810d0d0:	f000 f8b4 	bl	810d23c <prvAddNewTaskToReadyList>
 810d0d4:	2301      	movs	r3, #1
 810d0d6:	61bb      	str	r3, [r7, #24]
 810d0d8:	e002      	b.n	810d0e0 <xTaskCreate+0x80>
 810d0da:	f04f 33ff 	mov.w	r3, #4294967295
 810d0de:	61bb      	str	r3, [r7, #24]
 810d0e0:	69bb      	ldr	r3, [r7, #24]
 810d0e2:	4618      	mov	r0, r3
 810d0e4:	3720      	adds	r7, #32
 810d0e6:	46bd      	mov	sp, r7
 810d0e8:	bd80      	pop	{r7, pc}
	...

0810d0ec <prvInitialiseNewTask>:
 810d0ec:	b580      	push	{r7, lr}
 810d0ee:	b088      	sub	sp, #32
 810d0f0:	af00      	add	r7, sp, #0
 810d0f2:	60f8      	str	r0, [r7, #12]
 810d0f4:	60b9      	str	r1, [r7, #8]
 810d0f6:	607a      	str	r2, [r7, #4]
 810d0f8:	603b      	str	r3, [r7, #0]
 810d0fa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810d0fc:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 810d0fe:	687b      	ldr	r3, [r7, #4]
 810d100:	009b      	lsls	r3, r3, #2
 810d102:	461a      	mov	r2, r3
 810d104:	21a5      	movs	r1, #165	@ 0xa5
 810d106:	f002 fbb9 	bl	810f87c <memset>
 810d10a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810d10c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 810d10e:	687b      	ldr	r3, [r7, #4]
 810d110:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 810d114:	3b01      	subs	r3, #1
 810d116:	009b      	lsls	r3, r3, #2
 810d118:	4413      	add	r3, r2
 810d11a:	61bb      	str	r3, [r7, #24]
 810d11c:	69bb      	ldr	r3, [r7, #24]
 810d11e:	f023 0307 	bic.w	r3, r3, #7
 810d122:	61bb      	str	r3, [r7, #24]
 810d124:	69bb      	ldr	r3, [r7, #24]
 810d126:	f003 0307 	and.w	r3, r3, #7
 810d12a:	2b00      	cmp	r3, #0
 810d12c:	d00b      	beq.n	810d146 <prvInitialiseNewTask+0x5a>
 810d12e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810d132:	f383 8811 	msr	BASEPRI, r3
 810d136:	f3bf 8f6f 	isb	sy
 810d13a:	f3bf 8f4f 	dsb	sy
 810d13e:	617b      	str	r3, [r7, #20]
 810d140:	bf00      	nop
 810d142:	bf00      	nop
 810d144:	e7fd      	b.n	810d142 <prvInitialiseNewTask+0x56>
 810d146:	68bb      	ldr	r3, [r7, #8]
 810d148:	2b00      	cmp	r3, #0
 810d14a:	d01f      	beq.n	810d18c <prvInitialiseNewTask+0xa0>
 810d14c:	2300      	movs	r3, #0
 810d14e:	61fb      	str	r3, [r7, #28]
 810d150:	e012      	b.n	810d178 <prvInitialiseNewTask+0x8c>
 810d152:	68ba      	ldr	r2, [r7, #8]
 810d154:	69fb      	ldr	r3, [r7, #28]
 810d156:	4413      	add	r3, r2
 810d158:	7819      	ldrb	r1, [r3, #0]
 810d15a:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 810d15c:	69fb      	ldr	r3, [r7, #28]
 810d15e:	4413      	add	r3, r2
 810d160:	3334      	adds	r3, #52	@ 0x34
 810d162:	460a      	mov	r2, r1
 810d164:	701a      	strb	r2, [r3, #0]
 810d166:	68ba      	ldr	r2, [r7, #8]
 810d168:	69fb      	ldr	r3, [r7, #28]
 810d16a:	4413      	add	r3, r2
 810d16c:	781b      	ldrb	r3, [r3, #0]
 810d16e:	2b00      	cmp	r3, #0
 810d170:	d006      	beq.n	810d180 <prvInitialiseNewTask+0x94>
 810d172:	69fb      	ldr	r3, [r7, #28]
 810d174:	3301      	adds	r3, #1
 810d176:	61fb      	str	r3, [r7, #28]
 810d178:	69fb      	ldr	r3, [r7, #28]
 810d17a:	2b0f      	cmp	r3, #15
 810d17c:	d9e9      	bls.n	810d152 <prvInitialiseNewTask+0x66>
 810d17e:	e000      	b.n	810d182 <prvInitialiseNewTask+0x96>
 810d180:	bf00      	nop
 810d182:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810d184:	2200      	movs	r2, #0
 810d186:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 810d18a:	e003      	b.n	810d194 <prvInitialiseNewTask+0xa8>
 810d18c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810d18e:	2200      	movs	r2, #0
 810d190:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 810d194:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810d196:	2b37      	cmp	r3, #55	@ 0x37
 810d198:	d901      	bls.n	810d19e <prvInitialiseNewTask+0xb2>
 810d19a:	2337      	movs	r3, #55	@ 0x37
 810d19c:	62bb      	str	r3, [r7, #40]	@ 0x28
 810d19e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810d1a0:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 810d1a2:	62da      	str	r2, [r3, #44]	@ 0x2c
 810d1a4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810d1a6:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 810d1a8:	64da      	str	r2, [r3, #76]	@ 0x4c
 810d1aa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810d1ac:	2200      	movs	r2, #0
 810d1ae:	651a      	str	r2, [r3, #80]	@ 0x50
 810d1b0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810d1b2:	3304      	adds	r3, #4
 810d1b4:	4618      	mov	r0, r3
 810d1b6:	f7fe ff13 	bl	810bfe0 <vListInitialiseItem>
 810d1ba:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810d1bc:	3318      	adds	r3, #24
 810d1be:	4618      	mov	r0, r3
 810d1c0:	f7fe ff0e 	bl	810bfe0 <vListInitialiseItem>
 810d1c4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810d1c6:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 810d1c8:	611a      	str	r2, [r3, #16]
 810d1ca:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810d1cc:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 810d1d0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810d1d2:	619a      	str	r2, [r3, #24]
 810d1d4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810d1d6:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 810d1d8:	625a      	str	r2, [r3, #36]	@ 0x24
 810d1da:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810d1dc:	2200      	movs	r2, #0
 810d1de:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
 810d1e2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810d1e4:	2200      	movs	r2, #0
 810d1e6:	f883 20a4 	strb.w	r2, [r3, #164]	@ 0xa4
 810d1ea:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810d1ec:	3354      	adds	r3, #84	@ 0x54
 810d1ee:	224c      	movs	r2, #76	@ 0x4c
 810d1f0:	2100      	movs	r1, #0
 810d1f2:	4618      	mov	r0, r3
 810d1f4:	f002 fb42 	bl	810f87c <memset>
 810d1f8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810d1fa:	4a0d      	ldr	r2, [pc, #52]	@ (810d230 <prvInitialiseNewTask+0x144>)
 810d1fc:	659a      	str	r2, [r3, #88]	@ 0x58
 810d1fe:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810d200:	4a0c      	ldr	r2, [pc, #48]	@ (810d234 <prvInitialiseNewTask+0x148>)
 810d202:	65da      	str	r2, [r3, #92]	@ 0x5c
 810d204:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810d206:	4a0c      	ldr	r2, [pc, #48]	@ (810d238 <prvInitialiseNewTask+0x14c>)
 810d208:	661a      	str	r2, [r3, #96]	@ 0x60
 810d20a:	683a      	ldr	r2, [r7, #0]
 810d20c:	68f9      	ldr	r1, [r7, #12]
 810d20e:	69b8      	ldr	r0, [r7, #24]
 810d210:	f7fe ff7a 	bl	810c108 <pxPortInitialiseStack>
 810d214:	4602      	mov	r2, r0
 810d216:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 810d218:	601a      	str	r2, [r3, #0]
 810d21a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 810d21c:	2b00      	cmp	r3, #0
 810d21e:	d002      	beq.n	810d226 <prvInitialiseNewTask+0x13a>
 810d220:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 810d222:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 810d224:	601a      	str	r2, [r3, #0]
 810d226:	bf00      	nop
 810d228:	3720      	adds	r7, #32
 810d22a:	46bd      	mov	sp, r7
 810d22c:	bd80      	pop	{r7, pc}
 810d22e:	bf00      	nop
 810d230:	10004fec 	.word	0x10004fec
 810d234:	10005054 	.word	0x10005054
 810d238:	100050bc 	.word	0x100050bc

0810d23c <prvAddNewTaskToReadyList>:
 810d23c:	b580      	push	{r7, lr}
 810d23e:	b082      	sub	sp, #8
 810d240:	af00      	add	r7, sp, #0
 810d242:	6078      	str	r0, [r7, #4]
 810d244:	f7ff f890 	bl	810c368 <vPortEnterCritical>
 810d248:	4b2d      	ldr	r3, [pc, #180]	@ (810d300 <prvAddNewTaskToReadyList+0xc4>)
 810d24a:	681b      	ldr	r3, [r3, #0]
 810d24c:	3301      	adds	r3, #1
 810d24e:	4a2c      	ldr	r2, [pc, #176]	@ (810d300 <prvAddNewTaskToReadyList+0xc4>)
 810d250:	6013      	str	r3, [r2, #0]
 810d252:	4b2c      	ldr	r3, [pc, #176]	@ (810d304 <prvAddNewTaskToReadyList+0xc8>)
 810d254:	681b      	ldr	r3, [r3, #0]
 810d256:	2b00      	cmp	r3, #0
 810d258:	d109      	bne.n	810d26e <prvAddNewTaskToReadyList+0x32>
 810d25a:	4a2a      	ldr	r2, [pc, #168]	@ (810d304 <prvAddNewTaskToReadyList+0xc8>)
 810d25c:	687b      	ldr	r3, [r7, #4]
 810d25e:	6013      	str	r3, [r2, #0]
 810d260:	4b27      	ldr	r3, [pc, #156]	@ (810d300 <prvAddNewTaskToReadyList+0xc4>)
 810d262:	681b      	ldr	r3, [r3, #0]
 810d264:	2b01      	cmp	r3, #1
 810d266:	d110      	bne.n	810d28a <prvAddNewTaskToReadyList+0x4e>
 810d268:	f000 fc2e 	bl	810dac8 <prvInitialiseTaskLists>
 810d26c:	e00d      	b.n	810d28a <prvAddNewTaskToReadyList+0x4e>
 810d26e:	4b26      	ldr	r3, [pc, #152]	@ (810d308 <prvAddNewTaskToReadyList+0xcc>)
 810d270:	681b      	ldr	r3, [r3, #0]
 810d272:	2b00      	cmp	r3, #0
 810d274:	d109      	bne.n	810d28a <prvAddNewTaskToReadyList+0x4e>
 810d276:	4b23      	ldr	r3, [pc, #140]	@ (810d304 <prvAddNewTaskToReadyList+0xc8>)
 810d278:	681b      	ldr	r3, [r3, #0]
 810d27a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 810d27c:	687b      	ldr	r3, [r7, #4]
 810d27e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 810d280:	429a      	cmp	r2, r3
 810d282:	d802      	bhi.n	810d28a <prvAddNewTaskToReadyList+0x4e>
 810d284:	4a1f      	ldr	r2, [pc, #124]	@ (810d304 <prvAddNewTaskToReadyList+0xc8>)
 810d286:	687b      	ldr	r3, [r7, #4]
 810d288:	6013      	str	r3, [r2, #0]
 810d28a:	4b20      	ldr	r3, [pc, #128]	@ (810d30c <prvAddNewTaskToReadyList+0xd0>)
 810d28c:	681b      	ldr	r3, [r3, #0]
 810d28e:	3301      	adds	r3, #1
 810d290:	4a1e      	ldr	r2, [pc, #120]	@ (810d30c <prvAddNewTaskToReadyList+0xd0>)
 810d292:	6013      	str	r3, [r2, #0]
 810d294:	4b1d      	ldr	r3, [pc, #116]	@ (810d30c <prvAddNewTaskToReadyList+0xd0>)
 810d296:	681a      	ldr	r2, [r3, #0]
 810d298:	687b      	ldr	r3, [r7, #4]
 810d29a:	645a      	str	r2, [r3, #68]	@ 0x44
 810d29c:	687b      	ldr	r3, [r7, #4]
 810d29e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 810d2a0:	4b1b      	ldr	r3, [pc, #108]	@ (810d310 <prvAddNewTaskToReadyList+0xd4>)
 810d2a2:	681b      	ldr	r3, [r3, #0]
 810d2a4:	429a      	cmp	r2, r3
 810d2a6:	d903      	bls.n	810d2b0 <prvAddNewTaskToReadyList+0x74>
 810d2a8:	687b      	ldr	r3, [r7, #4]
 810d2aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 810d2ac:	4a18      	ldr	r2, [pc, #96]	@ (810d310 <prvAddNewTaskToReadyList+0xd4>)
 810d2ae:	6013      	str	r3, [r2, #0]
 810d2b0:	687b      	ldr	r3, [r7, #4]
 810d2b2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 810d2b4:	4613      	mov	r3, r2
 810d2b6:	009b      	lsls	r3, r3, #2
 810d2b8:	4413      	add	r3, r2
 810d2ba:	009b      	lsls	r3, r3, #2
 810d2bc:	4a15      	ldr	r2, [pc, #84]	@ (810d314 <prvAddNewTaskToReadyList+0xd8>)
 810d2be:	441a      	add	r2, r3
 810d2c0:	687b      	ldr	r3, [r7, #4]
 810d2c2:	3304      	adds	r3, #4
 810d2c4:	4619      	mov	r1, r3
 810d2c6:	4610      	mov	r0, r2
 810d2c8:	f7fe fe97 	bl	810bffa <vListInsertEnd>
 810d2cc:	f7ff f87e 	bl	810c3cc <vPortExitCritical>
 810d2d0:	4b0d      	ldr	r3, [pc, #52]	@ (810d308 <prvAddNewTaskToReadyList+0xcc>)
 810d2d2:	681b      	ldr	r3, [r3, #0]
 810d2d4:	2b00      	cmp	r3, #0
 810d2d6:	d00e      	beq.n	810d2f6 <prvAddNewTaskToReadyList+0xba>
 810d2d8:	4b0a      	ldr	r3, [pc, #40]	@ (810d304 <prvAddNewTaskToReadyList+0xc8>)
 810d2da:	681b      	ldr	r3, [r3, #0]
 810d2dc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 810d2de:	687b      	ldr	r3, [r7, #4]
 810d2e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 810d2e2:	429a      	cmp	r2, r3
 810d2e4:	d207      	bcs.n	810d2f6 <prvAddNewTaskToReadyList+0xba>
 810d2e6:	4b0c      	ldr	r3, [pc, #48]	@ (810d318 <prvAddNewTaskToReadyList+0xdc>)
 810d2e8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 810d2ec:	601a      	str	r2, [r3, #0]
 810d2ee:	f3bf 8f4f 	dsb	sy
 810d2f2:	f3bf 8f6f 	isb	sy
 810d2f6:	bf00      	nop
 810d2f8:	3708      	adds	r7, #8
 810d2fa:	46bd      	mov	sp, r7
 810d2fc:	bd80      	pop	{r7, pc}
 810d2fe:	bf00      	nop
 810d300:	10004e80 	.word	0x10004e80
 810d304:	100049ac 	.word	0x100049ac
 810d308:	10004e8c 	.word	0x10004e8c
 810d30c:	10004e9c 	.word	0x10004e9c
 810d310:	10004e88 	.word	0x10004e88
 810d314:	100049b0 	.word	0x100049b0
 810d318:	e000ed04 	.word	0xe000ed04

0810d31c <vTaskDelay>:
 810d31c:	b580      	push	{r7, lr}
 810d31e:	b084      	sub	sp, #16
 810d320:	af00      	add	r7, sp, #0
 810d322:	6078      	str	r0, [r7, #4]
 810d324:	2300      	movs	r3, #0
 810d326:	60fb      	str	r3, [r7, #12]
 810d328:	687b      	ldr	r3, [r7, #4]
 810d32a:	2b00      	cmp	r3, #0
 810d32c:	d018      	beq.n	810d360 <vTaskDelay+0x44>
 810d32e:	4b14      	ldr	r3, [pc, #80]	@ (810d380 <vTaskDelay+0x64>)
 810d330:	681b      	ldr	r3, [r3, #0]
 810d332:	2b00      	cmp	r3, #0
 810d334:	d00b      	beq.n	810d34e <vTaskDelay+0x32>
 810d336:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810d33a:	f383 8811 	msr	BASEPRI, r3
 810d33e:	f3bf 8f6f 	isb	sy
 810d342:	f3bf 8f4f 	dsb	sy
 810d346:	60bb      	str	r3, [r7, #8]
 810d348:	bf00      	nop
 810d34a:	bf00      	nop
 810d34c:	e7fd      	b.n	810d34a <vTaskDelay+0x2e>
 810d34e:	f000 f88b 	bl	810d468 <vTaskSuspendAll>
 810d352:	2100      	movs	r1, #0
 810d354:	6878      	ldr	r0, [r7, #4]
 810d356:	f000 fd09 	bl	810dd6c <prvAddCurrentTaskToDelayedList>
 810d35a:	f000 f893 	bl	810d484 <xTaskResumeAll>
 810d35e:	60f8      	str	r0, [r7, #12]
 810d360:	68fb      	ldr	r3, [r7, #12]
 810d362:	2b00      	cmp	r3, #0
 810d364:	d107      	bne.n	810d376 <vTaskDelay+0x5a>
 810d366:	4b07      	ldr	r3, [pc, #28]	@ (810d384 <vTaskDelay+0x68>)
 810d368:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 810d36c:	601a      	str	r2, [r3, #0]
 810d36e:	f3bf 8f4f 	dsb	sy
 810d372:	f3bf 8f6f 	isb	sy
 810d376:	bf00      	nop
 810d378:	3710      	adds	r7, #16
 810d37a:	46bd      	mov	sp, r7
 810d37c:	bd80      	pop	{r7, pc}
 810d37e:	bf00      	nop
 810d380:	10004ea8 	.word	0x10004ea8
 810d384:	e000ed04 	.word	0xe000ed04

0810d388 <vTaskStartScheduler>:
 810d388:	b580      	push	{r7, lr}
 810d38a:	b08a      	sub	sp, #40	@ 0x28
 810d38c:	af04      	add	r7, sp, #16
 810d38e:	2300      	movs	r3, #0
 810d390:	60bb      	str	r3, [r7, #8]
 810d392:	2300      	movs	r3, #0
 810d394:	607b      	str	r3, [r7, #4]
 810d396:	463a      	mov	r2, r7
 810d398:	1d39      	adds	r1, r7, #4
 810d39a:	f107 0308 	add.w	r3, r7, #8
 810d39e:	4618      	mov	r0, r3
 810d3a0:	f7fe fbd0 	bl	810bb44 <vApplicationGetIdleTaskMemory>
 810d3a4:	6839      	ldr	r1, [r7, #0]
 810d3a6:	687b      	ldr	r3, [r7, #4]
 810d3a8:	68ba      	ldr	r2, [r7, #8]
 810d3aa:	9202      	str	r2, [sp, #8]
 810d3ac:	9301      	str	r3, [sp, #4]
 810d3ae:	2300      	movs	r3, #0
 810d3b0:	9300      	str	r3, [sp, #0]
 810d3b2:	2300      	movs	r3, #0
 810d3b4:	460a      	mov	r2, r1
 810d3b6:	4924      	ldr	r1, [pc, #144]	@ (810d448 <vTaskStartScheduler+0xc0>)
 810d3b8:	4824      	ldr	r0, [pc, #144]	@ (810d44c <vTaskStartScheduler+0xc4>)
 810d3ba:	f7ff fdf1 	bl	810cfa0 <xTaskCreateStatic>
 810d3be:	4603      	mov	r3, r0
 810d3c0:	4a23      	ldr	r2, [pc, #140]	@ (810d450 <vTaskStartScheduler+0xc8>)
 810d3c2:	6013      	str	r3, [r2, #0]
 810d3c4:	4b22      	ldr	r3, [pc, #136]	@ (810d450 <vTaskStartScheduler+0xc8>)
 810d3c6:	681b      	ldr	r3, [r3, #0]
 810d3c8:	2b00      	cmp	r3, #0
 810d3ca:	d002      	beq.n	810d3d2 <vTaskStartScheduler+0x4a>
 810d3cc:	2301      	movs	r3, #1
 810d3ce:	617b      	str	r3, [r7, #20]
 810d3d0:	e001      	b.n	810d3d6 <vTaskStartScheduler+0x4e>
 810d3d2:	2300      	movs	r3, #0
 810d3d4:	617b      	str	r3, [r7, #20]
 810d3d6:	697b      	ldr	r3, [r7, #20]
 810d3d8:	2b01      	cmp	r3, #1
 810d3da:	d102      	bne.n	810d3e2 <vTaskStartScheduler+0x5a>
 810d3dc:	f000 fd1a 	bl	810de14 <xTimerCreateTimerTask>
 810d3e0:	6178      	str	r0, [r7, #20]
 810d3e2:	697b      	ldr	r3, [r7, #20]
 810d3e4:	2b01      	cmp	r3, #1
 810d3e6:	d11b      	bne.n	810d420 <vTaskStartScheduler+0x98>
 810d3e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810d3ec:	f383 8811 	msr	BASEPRI, r3
 810d3f0:	f3bf 8f6f 	isb	sy
 810d3f4:	f3bf 8f4f 	dsb	sy
 810d3f8:	613b      	str	r3, [r7, #16]
 810d3fa:	bf00      	nop
 810d3fc:	4b15      	ldr	r3, [pc, #84]	@ (810d454 <vTaskStartScheduler+0xcc>)
 810d3fe:	681b      	ldr	r3, [r3, #0]
 810d400:	3354      	adds	r3, #84	@ 0x54
 810d402:	4a15      	ldr	r2, [pc, #84]	@ (810d458 <vTaskStartScheduler+0xd0>)
 810d404:	6013      	str	r3, [r2, #0]
 810d406:	4b15      	ldr	r3, [pc, #84]	@ (810d45c <vTaskStartScheduler+0xd4>)
 810d408:	f04f 32ff 	mov.w	r2, #4294967295
 810d40c:	601a      	str	r2, [r3, #0]
 810d40e:	4b14      	ldr	r3, [pc, #80]	@ (810d460 <vTaskStartScheduler+0xd8>)
 810d410:	2201      	movs	r2, #1
 810d412:	601a      	str	r2, [r3, #0]
 810d414:	4b13      	ldr	r3, [pc, #76]	@ (810d464 <vTaskStartScheduler+0xdc>)
 810d416:	2200      	movs	r2, #0
 810d418:	601a      	str	r2, [r3, #0]
 810d41a:	f7fe ff01 	bl	810c220 <xPortStartScheduler>
 810d41e:	e00f      	b.n	810d440 <vTaskStartScheduler+0xb8>
 810d420:	697b      	ldr	r3, [r7, #20]
 810d422:	f1b3 3fff 	cmp.w	r3, #4294967295
 810d426:	d10b      	bne.n	810d440 <vTaskStartScheduler+0xb8>
 810d428:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810d42c:	f383 8811 	msr	BASEPRI, r3
 810d430:	f3bf 8f6f 	isb	sy
 810d434:	f3bf 8f4f 	dsb	sy
 810d438:	60fb      	str	r3, [r7, #12]
 810d43a:	bf00      	nop
 810d43c:	bf00      	nop
 810d43e:	e7fd      	b.n	810d43c <vTaskStartScheduler+0xb4>
 810d440:	bf00      	nop
 810d442:	3718      	adds	r7, #24
 810d444:	46bd      	mov	sp, r7
 810d446:	bd80      	pop	{r7, pc}
 810d448:	081117f8 	.word	0x081117f8
 810d44c:	0810da99 	.word	0x0810da99
 810d450:	10004ea4 	.word	0x10004ea4
 810d454:	100049ac 	.word	0x100049ac
 810d458:	10000020 	.word	0x10000020
 810d45c:	10004ea0 	.word	0x10004ea0
 810d460:	10004e8c 	.word	0x10004e8c
 810d464:	10004e84 	.word	0x10004e84

0810d468 <vTaskSuspendAll>:
 810d468:	b480      	push	{r7}
 810d46a:	af00      	add	r7, sp, #0
 810d46c:	4b04      	ldr	r3, [pc, #16]	@ (810d480 <vTaskSuspendAll+0x18>)
 810d46e:	681b      	ldr	r3, [r3, #0]
 810d470:	3301      	adds	r3, #1
 810d472:	4a03      	ldr	r2, [pc, #12]	@ (810d480 <vTaskSuspendAll+0x18>)
 810d474:	6013      	str	r3, [r2, #0]
 810d476:	bf00      	nop
 810d478:	46bd      	mov	sp, r7
 810d47a:	f85d 7b04 	ldr.w	r7, [sp], #4
 810d47e:	4770      	bx	lr
 810d480:	10004ea8 	.word	0x10004ea8

0810d484 <xTaskResumeAll>:
 810d484:	b580      	push	{r7, lr}
 810d486:	b084      	sub	sp, #16
 810d488:	af00      	add	r7, sp, #0
 810d48a:	2300      	movs	r3, #0
 810d48c:	60fb      	str	r3, [r7, #12]
 810d48e:	2300      	movs	r3, #0
 810d490:	60bb      	str	r3, [r7, #8]
 810d492:	4b42      	ldr	r3, [pc, #264]	@ (810d59c <xTaskResumeAll+0x118>)
 810d494:	681b      	ldr	r3, [r3, #0]
 810d496:	2b00      	cmp	r3, #0
 810d498:	d10b      	bne.n	810d4b2 <xTaskResumeAll+0x2e>
 810d49a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810d49e:	f383 8811 	msr	BASEPRI, r3
 810d4a2:	f3bf 8f6f 	isb	sy
 810d4a6:	f3bf 8f4f 	dsb	sy
 810d4aa:	603b      	str	r3, [r7, #0]
 810d4ac:	bf00      	nop
 810d4ae:	bf00      	nop
 810d4b0:	e7fd      	b.n	810d4ae <xTaskResumeAll+0x2a>
 810d4b2:	f7fe ff59 	bl	810c368 <vPortEnterCritical>
 810d4b6:	4b39      	ldr	r3, [pc, #228]	@ (810d59c <xTaskResumeAll+0x118>)
 810d4b8:	681b      	ldr	r3, [r3, #0]
 810d4ba:	3b01      	subs	r3, #1
 810d4bc:	4a37      	ldr	r2, [pc, #220]	@ (810d59c <xTaskResumeAll+0x118>)
 810d4be:	6013      	str	r3, [r2, #0]
 810d4c0:	4b36      	ldr	r3, [pc, #216]	@ (810d59c <xTaskResumeAll+0x118>)
 810d4c2:	681b      	ldr	r3, [r3, #0]
 810d4c4:	2b00      	cmp	r3, #0
 810d4c6:	d162      	bne.n	810d58e <xTaskResumeAll+0x10a>
 810d4c8:	4b35      	ldr	r3, [pc, #212]	@ (810d5a0 <xTaskResumeAll+0x11c>)
 810d4ca:	681b      	ldr	r3, [r3, #0]
 810d4cc:	2b00      	cmp	r3, #0
 810d4ce:	d05e      	beq.n	810d58e <xTaskResumeAll+0x10a>
 810d4d0:	e02f      	b.n	810d532 <xTaskResumeAll+0xae>
 810d4d2:	4b34      	ldr	r3, [pc, #208]	@ (810d5a4 <xTaskResumeAll+0x120>)
 810d4d4:	68db      	ldr	r3, [r3, #12]
 810d4d6:	68db      	ldr	r3, [r3, #12]
 810d4d8:	60fb      	str	r3, [r7, #12]
 810d4da:	68fb      	ldr	r3, [r7, #12]
 810d4dc:	3318      	adds	r3, #24
 810d4de:	4618      	mov	r0, r3
 810d4e0:	f7fe fde8 	bl	810c0b4 <uxListRemove>
 810d4e4:	68fb      	ldr	r3, [r7, #12]
 810d4e6:	3304      	adds	r3, #4
 810d4e8:	4618      	mov	r0, r3
 810d4ea:	f7fe fde3 	bl	810c0b4 <uxListRemove>
 810d4ee:	68fb      	ldr	r3, [r7, #12]
 810d4f0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 810d4f2:	4b2d      	ldr	r3, [pc, #180]	@ (810d5a8 <xTaskResumeAll+0x124>)
 810d4f4:	681b      	ldr	r3, [r3, #0]
 810d4f6:	429a      	cmp	r2, r3
 810d4f8:	d903      	bls.n	810d502 <xTaskResumeAll+0x7e>
 810d4fa:	68fb      	ldr	r3, [r7, #12]
 810d4fc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 810d4fe:	4a2a      	ldr	r2, [pc, #168]	@ (810d5a8 <xTaskResumeAll+0x124>)
 810d500:	6013      	str	r3, [r2, #0]
 810d502:	68fb      	ldr	r3, [r7, #12]
 810d504:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 810d506:	4613      	mov	r3, r2
 810d508:	009b      	lsls	r3, r3, #2
 810d50a:	4413      	add	r3, r2
 810d50c:	009b      	lsls	r3, r3, #2
 810d50e:	4a27      	ldr	r2, [pc, #156]	@ (810d5ac <xTaskResumeAll+0x128>)
 810d510:	441a      	add	r2, r3
 810d512:	68fb      	ldr	r3, [r7, #12]
 810d514:	3304      	adds	r3, #4
 810d516:	4619      	mov	r1, r3
 810d518:	4610      	mov	r0, r2
 810d51a:	f7fe fd6e 	bl	810bffa <vListInsertEnd>
 810d51e:	68fb      	ldr	r3, [r7, #12]
 810d520:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 810d522:	4b23      	ldr	r3, [pc, #140]	@ (810d5b0 <xTaskResumeAll+0x12c>)
 810d524:	681b      	ldr	r3, [r3, #0]
 810d526:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 810d528:	429a      	cmp	r2, r3
 810d52a:	d302      	bcc.n	810d532 <xTaskResumeAll+0xae>
 810d52c:	4b21      	ldr	r3, [pc, #132]	@ (810d5b4 <xTaskResumeAll+0x130>)
 810d52e:	2201      	movs	r2, #1
 810d530:	601a      	str	r2, [r3, #0]
 810d532:	4b1c      	ldr	r3, [pc, #112]	@ (810d5a4 <xTaskResumeAll+0x120>)
 810d534:	681b      	ldr	r3, [r3, #0]
 810d536:	2b00      	cmp	r3, #0
 810d538:	d1cb      	bne.n	810d4d2 <xTaskResumeAll+0x4e>
 810d53a:	68fb      	ldr	r3, [r7, #12]
 810d53c:	2b00      	cmp	r3, #0
 810d53e:	d001      	beq.n	810d544 <xTaskResumeAll+0xc0>
 810d540:	f000 fb66 	bl	810dc10 <prvResetNextTaskUnblockTime>
 810d544:	4b1c      	ldr	r3, [pc, #112]	@ (810d5b8 <xTaskResumeAll+0x134>)
 810d546:	681b      	ldr	r3, [r3, #0]
 810d548:	607b      	str	r3, [r7, #4]
 810d54a:	687b      	ldr	r3, [r7, #4]
 810d54c:	2b00      	cmp	r3, #0
 810d54e:	d010      	beq.n	810d572 <xTaskResumeAll+0xee>
 810d550:	f000 f846 	bl	810d5e0 <xTaskIncrementTick>
 810d554:	4603      	mov	r3, r0
 810d556:	2b00      	cmp	r3, #0
 810d558:	d002      	beq.n	810d560 <xTaskResumeAll+0xdc>
 810d55a:	4b16      	ldr	r3, [pc, #88]	@ (810d5b4 <xTaskResumeAll+0x130>)
 810d55c:	2201      	movs	r2, #1
 810d55e:	601a      	str	r2, [r3, #0]
 810d560:	687b      	ldr	r3, [r7, #4]
 810d562:	3b01      	subs	r3, #1
 810d564:	607b      	str	r3, [r7, #4]
 810d566:	687b      	ldr	r3, [r7, #4]
 810d568:	2b00      	cmp	r3, #0
 810d56a:	d1f1      	bne.n	810d550 <xTaskResumeAll+0xcc>
 810d56c:	4b12      	ldr	r3, [pc, #72]	@ (810d5b8 <xTaskResumeAll+0x134>)
 810d56e:	2200      	movs	r2, #0
 810d570:	601a      	str	r2, [r3, #0]
 810d572:	4b10      	ldr	r3, [pc, #64]	@ (810d5b4 <xTaskResumeAll+0x130>)
 810d574:	681b      	ldr	r3, [r3, #0]
 810d576:	2b00      	cmp	r3, #0
 810d578:	d009      	beq.n	810d58e <xTaskResumeAll+0x10a>
 810d57a:	2301      	movs	r3, #1
 810d57c:	60bb      	str	r3, [r7, #8]
 810d57e:	4b0f      	ldr	r3, [pc, #60]	@ (810d5bc <xTaskResumeAll+0x138>)
 810d580:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 810d584:	601a      	str	r2, [r3, #0]
 810d586:	f3bf 8f4f 	dsb	sy
 810d58a:	f3bf 8f6f 	isb	sy
 810d58e:	f7fe ff1d 	bl	810c3cc <vPortExitCritical>
 810d592:	68bb      	ldr	r3, [r7, #8]
 810d594:	4618      	mov	r0, r3
 810d596:	3710      	adds	r7, #16
 810d598:	46bd      	mov	sp, r7
 810d59a:	bd80      	pop	{r7, pc}
 810d59c:	10004ea8 	.word	0x10004ea8
 810d5a0:	10004e80 	.word	0x10004e80
 810d5a4:	10004e40 	.word	0x10004e40
 810d5a8:	10004e88 	.word	0x10004e88
 810d5ac:	100049b0 	.word	0x100049b0
 810d5b0:	100049ac 	.word	0x100049ac
 810d5b4:	10004e94 	.word	0x10004e94
 810d5b8:	10004e90 	.word	0x10004e90
 810d5bc:	e000ed04 	.word	0xe000ed04

0810d5c0 <xTaskGetTickCount>:
 810d5c0:	b480      	push	{r7}
 810d5c2:	b083      	sub	sp, #12
 810d5c4:	af00      	add	r7, sp, #0
 810d5c6:	4b05      	ldr	r3, [pc, #20]	@ (810d5dc <xTaskGetTickCount+0x1c>)
 810d5c8:	681b      	ldr	r3, [r3, #0]
 810d5ca:	607b      	str	r3, [r7, #4]
 810d5cc:	687b      	ldr	r3, [r7, #4]
 810d5ce:	4618      	mov	r0, r3
 810d5d0:	370c      	adds	r7, #12
 810d5d2:	46bd      	mov	sp, r7
 810d5d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 810d5d8:	4770      	bx	lr
 810d5da:	bf00      	nop
 810d5dc:	10004e84 	.word	0x10004e84

0810d5e0 <xTaskIncrementTick>:
 810d5e0:	b580      	push	{r7, lr}
 810d5e2:	b086      	sub	sp, #24
 810d5e4:	af00      	add	r7, sp, #0
 810d5e6:	2300      	movs	r3, #0
 810d5e8:	617b      	str	r3, [r7, #20]
 810d5ea:	4b4f      	ldr	r3, [pc, #316]	@ (810d728 <xTaskIncrementTick+0x148>)
 810d5ec:	681b      	ldr	r3, [r3, #0]
 810d5ee:	2b00      	cmp	r3, #0
 810d5f0:	f040 8090 	bne.w	810d714 <xTaskIncrementTick+0x134>
 810d5f4:	4b4d      	ldr	r3, [pc, #308]	@ (810d72c <xTaskIncrementTick+0x14c>)
 810d5f6:	681b      	ldr	r3, [r3, #0]
 810d5f8:	3301      	adds	r3, #1
 810d5fa:	613b      	str	r3, [r7, #16]
 810d5fc:	4a4b      	ldr	r2, [pc, #300]	@ (810d72c <xTaskIncrementTick+0x14c>)
 810d5fe:	693b      	ldr	r3, [r7, #16]
 810d600:	6013      	str	r3, [r2, #0]
 810d602:	693b      	ldr	r3, [r7, #16]
 810d604:	2b00      	cmp	r3, #0
 810d606:	d121      	bne.n	810d64c <xTaskIncrementTick+0x6c>
 810d608:	4b49      	ldr	r3, [pc, #292]	@ (810d730 <xTaskIncrementTick+0x150>)
 810d60a:	681b      	ldr	r3, [r3, #0]
 810d60c:	681b      	ldr	r3, [r3, #0]
 810d60e:	2b00      	cmp	r3, #0
 810d610:	d00b      	beq.n	810d62a <xTaskIncrementTick+0x4a>
 810d612:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810d616:	f383 8811 	msr	BASEPRI, r3
 810d61a:	f3bf 8f6f 	isb	sy
 810d61e:	f3bf 8f4f 	dsb	sy
 810d622:	603b      	str	r3, [r7, #0]
 810d624:	bf00      	nop
 810d626:	bf00      	nop
 810d628:	e7fd      	b.n	810d626 <xTaskIncrementTick+0x46>
 810d62a:	4b41      	ldr	r3, [pc, #260]	@ (810d730 <xTaskIncrementTick+0x150>)
 810d62c:	681b      	ldr	r3, [r3, #0]
 810d62e:	60fb      	str	r3, [r7, #12]
 810d630:	4b40      	ldr	r3, [pc, #256]	@ (810d734 <xTaskIncrementTick+0x154>)
 810d632:	681b      	ldr	r3, [r3, #0]
 810d634:	4a3e      	ldr	r2, [pc, #248]	@ (810d730 <xTaskIncrementTick+0x150>)
 810d636:	6013      	str	r3, [r2, #0]
 810d638:	4a3e      	ldr	r2, [pc, #248]	@ (810d734 <xTaskIncrementTick+0x154>)
 810d63a:	68fb      	ldr	r3, [r7, #12]
 810d63c:	6013      	str	r3, [r2, #0]
 810d63e:	4b3e      	ldr	r3, [pc, #248]	@ (810d738 <xTaskIncrementTick+0x158>)
 810d640:	681b      	ldr	r3, [r3, #0]
 810d642:	3301      	adds	r3, #1
 810d644:	4a3c      	ldr	r2, [pc, #240]	@ (810d738 <xTaskIncrementTick+0x158>)
 810d646:	6013      	str	r3, [r2, #0]
 810d648:	f000 fae2 	bl	810dc10 <prvResetNextTaskUnblockTime>
 810d64c:	4b3b      	ldr	r3, [pc, #236]	@ (810d73c <xTaskIncrementTick+0x15c>)
 810d64e:	681b      	ldr	r3, [r3, #0]
 810d650:	693a      	ldr	r2, [r7, #16]
 810d652:	429a      	cmp	r2, r3
 810d654:	d349      	bcc.n	810d6ea <xTaskIncrementTick+0x10a>
 810d656:	4b36      	ldr	r3, [pc, #216]	@ (810d730 <xTaskIncrementTick+0x150>)
 810d658:	681b      	ldr	r3, [r3, #0]
 810d65a:	681b      	ldr	r3, [r3, #0]
 810d65c:	2b00      	cmp	r3, #0
 810d65e:	d104      	bne.n	810d66a <xTaskIncrementTick+0x8a>
 810d660:	4b36      	ldr	r3, [pc, #216]	@ (810d73c <xTaskIncrementTick+0x15c>)
 810d662:	f04f 32ff 	mov.w	r2, #4294967295
 810d666:	601a      	str	r2, [r3, #0]
 810d668:	e03f      	b.n	810d6ea <xTaskIncrementTick+0x10a>
 810d66a:	4b31      	ldr	r3, [pc, #196]	@ (810d730 <xTaskIncrementTick+0x150>)
 810d66c:	681b      	ldr	r3, [r3, #0]
 810d66e:	68db      	ldr	r3, [r3, #12]
 810d670:	68db      	ldr	r3, [r3, #12]
 810d672:	60bb      	str	r3, [r7, #8]
 810d674:	68bb      	ldr	r3, [r7, #8]
 810d676:	685b      	ldr	r3, [r3, #4]
 810d678:	607b      	str	r3, [r7, #4]
 810d67a:	693a      	ldr	r2, [r7, #16]
 810d67c:	687b      	ldr	r3, [r7, #4]
 810d67e:	429a      	cmp	r2, r3
 810d680:	d203      	bcs.n	810d68a <xTaskIncrementTick+0xaa>
 810d682:	4a2e      	ldr	r2, [pc, #184]	@ (810d73c <xTaskIncrementTick+0x15c>)
 810d684:	687b      	ldr	r3, [r7, #4]
 810d686:	6013      	str	r3, [r2, #0]
 810d688:	e02f      	b.n	810d6ea <xTaskIncrementTick+0x10a>
 810d68a:	68bb      	ldr	r3, [r7, #8]
 810d68c:	3304      	adds	r3, #4
 810d68e:	4618      	mov	r0, r3
 810d690:	f7fe fd10 	bl	810c0b4 <uxListRemove>
 810d694:	68bb      	ldr	r3, [r7, #8]
 810d696:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 810d698:	2b00      	cmp	r3, #0
 810d69a:	d004      	beq.n	810d6a6 <xTaskIncrementTick+0xc6>
 810d69c:	68bb      	ldr	r3, [r7, #8]
 810d69e:	3318      	adds	r3, #24
 810d6a0:	4618      	mov	r0, r3
 810d6a2:	f7fe fd07 	bl	810c0b4 <uxListRemove>
 810d6a6:	68bb      	ldr	r3, [r7, #8]
 810d6a8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 810d6aa:	4b25      	ldr	r3, [pc, #148]	@ (810d740 <xTaskIncrementTick+0x160>)
 810d6ac:	681b      	ldr	r3, [r3, #0]
 810d6ae:	429a      	cmp	r2, r3
 810d6b0:	d903      	bls.n	810d6ba <xTaskIncrementTick+0xda>
 810d6b2:	68bb      	ldr	r3, [r7, #8]
 810d6b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 810d6b6:	4a22      	ldr	r2, [pc, #136]	@ (810d740 <xTaskIncrementTick+0x160>)
 810d6b8:	6013      	str	r3, [r2, #0]
 810d6ba:	68bb      	ldr	r3, [r7, #8]
 810d6bc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 810d6be:	4613      	mov	r3, r2
 810d6c0:	009b      	lsls	r3, r3, #2
 810d6c2:	4413      	add	r3, r2
 810d6c4:	009b      	lsls	r3, r3, #2
 810d6c6:	4a1f      	ldr	r2, [pc, #124]	@ (810d744 <xTaskIncrementTick+0x164>)
 810d6c8:	441a      	add	r2, r3
 810d6ca:	68bb      	ldr	r3, [r7, #8]
 810d6cc:	3304      	adds	r3, #4
 810d6ce:	4619      	mov	r1, r3
 810d6d0:	4610      	mov	r0, r2
 810d6d2:	f7fe fc92 	bl	810bffa <vListInsertEnd>
 810d6d6:	68bb      	ldr	r3, [r7, #8]
 810d6d8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 810d6da:	4b1b      	ldr	r3, [pc, #108]	@ (810d748 <xTaskIncrementTick+0x168>)
 810d6dc:	681b      	ldr	r3, [r3, #0]
 810d6de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 810d6e0:	429a      	cmp	r2, r3
 810d6e2:	d3b8      	bcc.n	810d656 <xTaskIncrementTick+0x76>
 810d6e4:	2301      	movs	r3, #1
 810d6e6:	617b      	str	r3, [r7, #20]
 810d6e8:	e7b5      	b.n	810d656 <xTaskIncrementTick+0x76>
 810d6ea:	4b17      	ldr	r3, [pc, #92]	@ (810d748 <xTaskIncrementTick+0x168>)
 810d6ec:	681b      	ldr	r3, [r3, #0]
 810d6ee:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 810d6f0:	4914      	ldr	r1, [pc, #80]	@ (810d744 <xTaskIncrementTick+0x164>)
 810d6f2:	4613      	mov	r3, r2
 810d6f4:	009b      	lsls	r3, r3, #2
 810d6f6:	4413      	add	r3, r2
 810d6f8:	009b      	lsls	r3, r3, #2
 810d6fa:	440b      	add	r3, r1
 810d6fc:	681b      	ldr	r3, [r3, #0]
 810d6fe:	2b01      	cmp	r3, #1
 810d700:	d901      	bls.n	810d706 <xTaskIncrementTick+0x126>
 810d702:	2301      	movs	r3, #1
 810d704:	617b      	str	r3, [r7, #20]
 810d706:	4b11      	ldr	r3, [pc, #68]	@ (810d74c <xTaskIncrementTick+0x16c>)
 810d708:	681b      	ldr	r3, [r3, #0]
 810d70a:	2b00      	cmp	r3, #0
 810d70c:	d007      	beq.n	810d71e <xTaskIncrementTick+0x13e>
 810d70e:	2301      	movs	r3, #1
 810d710:	617b      	str	r3, [r7, #20]
 810d712:	e004      	b.n	810d71e <xTaskIncrementTick+0x13e>
 810d714:	4b0e      	ldr	r3, [pc, #56]	@ (810d750 <xTaskIncrementTick+0x170>)
 810d716:	681b      	ldr	r3, [r3, #0]
 810d718:	3301      	adds	r3, #1
 810d71a:	4a0d      	ldr	r2, [pc, #52]	@ (810d750 <xTaskIncrementTick+0x170>)
 810d71c:	6013      	str	r3, [r2, #0]
 810d71e:	697b      	ldr	r3, [r7, #20]
 810d720:	4618      	mov	r0, r3
 810d722:	3718      	adds	r7, #24
 810d724:	46bd      	mov	sp, r7
 810d726:	bd80      	pop	{r7, pc}
 810d728:	10004ea8 	.word	0x10004ea8
 810d72c:	10004e84 	.word	0x10004e84
 810d730:	10004e38 	.word	0x10004e38
 810d734:	10004e3c 	.word	0x10004e3c
 810d738:	10004e98 	.word	0x10004e98
 810d73c:	10004ea0 	.word	0x10004ea0
 810d740:	10004e88 	.word	0x10004e88
 810d744:	100049b0 	.word	0x100049b0
 810d748:	100049ac 	.word	0x100049ac
 810d74c:	10004e94 	.word	0x10004e94
 810d750:	10004e90 	.word	0x10004e90

0810d754 <vTaskSwitchContext>:
 810d754:	b480      	push	{r7}
 810d756:	b085      	sub	sp, #20
 810d758:	af00      	add	r7, sp, #0
 810d75a:	4b2b      	ldr	r3, [pc, #172]	@ (810d808 <vTaskSwitchContext+0xb4>)
 810d75c:	681b      	ldr	r3, [r3, #0]
 810d75e:	2b00      	cmp	r3, #0
 810d760:	d003      	beq.n	810d76a <vTaskSwitchContext+0x16>
 810d762:	4b2a      	ldr	r3, [pc, #168]	@ (810d80c <vTaskSwitchContext+0xb8>)
 810d764:	2201      	movs	r2, #1
 810d766:	601a      	str	r2, [r3, #0]
 810d768:	e047      	b.n	810d7fa <vTaskSwitchContext+0xa6>
 810d76a:	4b28      	ldr	r3, [pc, #160]	@ (810d80c <vTaskSwitchContext+0xb8>)
 810d76c:	2200      	movs	r2, #0
 810d76e:	601a      	str	r2, [r3, #0]
 810d770:	4b27      	ldr	r3, [pc, #156]	@ (810d810 <vTaskSwitchContext+0xbc>)
 810d772:	681b      	ldr	r3, [r3, #0]
 810d774:	60fb      	str	r3, [r7, #12]
 810d776:	e011      	b.n	810d79c <vTaskSwitchContext+0x48>
 810d778:	68fb      	ldr	r3, [r7, #12]
 810d77a:	2b00      	cmp	r3, #0
 810d77c:	d10b      	bne.n	810d796 <vTaskSwitchContext+0x42>
 810d77e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810d782:	f383 8811 	msr	BASEPRI, r3
 810d786:	f3bf 8f6f 	isb	sy
 810d78a:	f3bf 8f4f 	dsb	sy
 810d78e:	607b      	str	r3, [r7, #4]
 810d790:	bf00      	nop
 810d792:	bf00      	nop
 810d794:	e7fd      	b.n	810d792 <vTaskSwitchContext+0x3e>
 810d796:	68fb      	ldr	r3, [r7, #12]
 810d798:	3b01      	subs	r3, #1
 810d79a:	60fb      	str	r3, [r7, #12]
 810d79c:	491d      	ldr	r1, [pc, #116]	@ (810d814 <vTaskSwitchContext+0xc0>)
 810d79e:	68fa      	ldr	r2, [r7, #12]
 810d7a0:	4613      	mov	r3, r2
 810d7a2:	009b      	lsls	r3, r3, #2
 810d7a4:	4413      	add	r3, r2
 810d7a6:	009b      	lsls	r3, r3, #2
 810d7a8:	440b      	add	r3, r1
 810d7aa:	681b      	ldr	r3, [r3, #0]
 810d7ac:	2b00      	cmp	r3, #0
 810d7ae:	d0e3      	beq.n	810d778 <vTaskSwitchContext+0x24>
 810d7b0:	68fa      	ldr	r2, [r7, #12]
 810d7b2:	4613      	mov	r3, r2
 810d7b4:	009b      	lsls	r3, r3, #2
 810d7b6:	4413      	add	r3, r2
 810d7b8:	009b      	lsls	r3, r3, #2
 810d7ba:	4a16      	ldr	r2, [pc, #88]	@ (810d814 <vTaskSwitchContext+0xc0>)
 810d7bc:	4413      	add	r3, r2
 810d7be:	60bb      	str	r3, [r7, #8]
 810d7c0:	68bb      	ldr	r3, [r7, #8]
 810d7c2:	685b      	ldr	r3, [r3, #4]
 810d7c4:	685a      	ldr	r2, [r3, #4]
 810d7c6:	68bb      	ldr	r3, [r7, #8]
 810d7c8:	605a      	str	r2, [r3, #4]
 810d7ca:	68bb      	ldr	r3, [r7, #8]
 810d7cc:	685a      	ldr	r2, [r3, #4]
 810d7ce:	68bb      	ldr	r3, [r7, #8]
 810d7d0:	3308      	adds	r3, #8
 810d7d2:	429a      	cmp	r2, r3
 810d7d4:	d104      	bne.n	810d7e0 <vTaskSwitchContext+0x8c>
 810d7d6:	68bb      	ldr	r3, [r7, #8]
 810d7d8:	685b      	ldr	r3, [r3, #4]
 810d7da:	685a      	ldr	r2, [r3, #4]
 810d7dc:	68bb      	ldr	r3, [r7, #8]
 810d7de:	605a      	str	r2, [r3, #4]
 810d7e0:	68bb      	ldr	r3, [r7, #8]
 810d7e2:	685b      	ldr	r3, [r3, #4]
 810d7e4:	68db      	ldr	r3, [r3, #12]
 810d7e6:	4a0c      	ldr	r2, [pc, #48]	@ (810d818 <vTaskSwitchContext+0xc4>)
 810d7e8:	6013      	str	r3, [r2, #0]
 810d7ea:	4a09      	ldr	r2, [pc, #36]	@ (810d810 <vTaskSwitchContext+0xbc>)
 810d7ec:	68fb      	ldr	r3, [r7, #12]
 810d7ee:	6013      	str	r3, [r2, #0]
 810d7f0:	4b09      	ldr	r3, [pc, #36]	@ (810d818 <vTaskSwitchContext+0xc4>)
 810d7f2:	681b      	ldr	r3, [r3, #0]
 810d7f4:	3354      	adds	r3, #84	@ 0x54
 810d7f6:	4a09      	ldr	r2, [pc, #36]	@ (810d81c <vTaskSwitchContext+0xc8>)
 810d7f8:	6013      	str	r3, [r2, #0]
 810d7fa:	bf00      	nop
 810d7fc:	3714      	adds	r7, #20
 810d7fe:	46bd      	mov	sp, r7
 810d800:	f85d 7b04 	ldr.w	r7, [sp], #4
 810d804:	4770      	bx	lr
 810d806:	bf00      	nop
 810d808:	10004ea8 	.word	0x10004ea8
 810d80c:	10004e94 	.word	0x10004e94
 810d810:	10004e88 	.word	0x10004e88
 810d814:	100049b0 	.word	0x100049b0
 810d818:	100049ac 	.word	0x100049ac
 810d81c:	10000020 	.word	0x10000020

0810d820 <vTaskPlaceOnEventList>:
 810d820:	b580      	push	{r7, lr}
 810d822:	b084      	sub	sp, #16
 810d824:	af00      	add	r7, sp, #0
 810d826:	6078      	str	r0, [r7, #4]
 810d828:	6039      	str	r1, [r7, #0]
 810d82a:	687b      	ldr	r3, [r7, #4]
 810d82c:	2b00      	cmp	r3, #0
 810d82e:	d10b      	bne.n	810d848 <vTaskPlaceOnEventList+0x28>
 810d830:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810d834:	f383 8811 	msr	BASEPRI, r3
 810d838:	f3bf 8f6f 	isb	sy
 810d83c:	f3bf 8f4f 	dsb	sy
 810d840:	60fb      	str	r3, [r7, #12]
 810d842:	bf00      	nop
 810d844:	bf00      	nop
 810d846:	e7fd      	b.n	810d844 <vTaskPlaceOnEventList+0x24>
 810d848:	4b07      	ldr	r3, [pc, #28]	@ (810d868 <vTaskPlaceOnEventList+0x48>)
 810d84a:	681b      	ldr	r3, [r3, #0]
 810d84c:	3318      	adds	r3, #24
 810d84e:	4619      	mov	r1, r3
 810d850:	6878      	ldr	r0, [r7, #4]
 810d852:	f7fe fbf6 	bl	810c042 <vListInsert>
 810d856:	2101      	movs	r1, #1
 810d858:	6838      	ldr	r0, [r7, #0]
 810d85a:	f000 fa87 	bl	810dd6c <prvAddCurrentTaskToDelayedList>
 810d85e:	bf00      	nop
 810d860:	3710      	adds	r7, #16
 810d862:	46bd      	mov	sp, r7
 810d864:	bd80      	pop	{r7, pc}
 810d866:	bf00      	nop
 810d868:	100049ac 	.word	0x100049ac

0810d86c <vTaskPlaceOnEventListRestricted>:
 810d86c:	b580      	push	{r7, lr}
 810d86e:	b086      	sub	sp, #24
 810d870:	af00      	add	r7, sp, #0
 810d872:	60f8      	str	r0, [r7, #12]
 810d874:	60b9      	str	r1, [r7, #8]
 810d876:	607a      	str	r2, [r7, #4]
 810d878:	68fb      	ldr	r3, [r7, #12]
 810d87a:	2b00      	cmp	r3, #0
 810d87c:	d10b      	bne.n	810d896 <vTaskPlaceOnEventListRestricted+0x2a>
 810d87e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810d882:	f383 8811 	msr	BASEPRI, r3
 810d886:	f3bf 8f6f 	isb	sy
 810d88a:	f3bf 8f4f 	dsb	sy
 810d88e:	617b      	str	r3, [r7, #20]
 810d890:	bf00      	nop
 810d892:	bf00      	nop
 810d894:	e7fd      	b.n	810d892 <vTaskPlaceOnEventListRestricted+0x26>
 810d896:	4b0a      	ldr	r3, [pc, #40]	@ (810d8c0 <vTaskPlaceOnEventListRestricted+0x54>)
 810d898:	681b      	ldr	r3, [r3, #0]
 810d89a:	3318      	adds	r3, #24
 810d89c:	4619      	mov	r1, r3
 810d89e:	68f8      	ldr	r0, [r7, #12]
 810d8a0:	f7fe fbab 	bl	810bffa <vListInsertEnd>
 810d8a4:	687b      	ldr	r3, [r7, #4]
 810d8a6:	2b00      	cmp	r3, #0
 810d8a8:	d002      	beq.n	810d8b0 <vTaskPlaceOnEventListRestricted+0x44>
 810d8aa:	f04f 33ff 	mov.w	r3, #4294967295
 810d8ae:	60bb      	str	r3, [r7, #8]
 810d8b0:	6879      	ldr	r1, [r7, #4]
 810d8b2:	68b8      	ldr	r0, [r7, #8]
 810d8b4:	f000 fa5a 	bl	810dd6c <prvAddCurrentTaskToDelayedList>
 810d8b8:	bf00      	nop
 810d8ba:	3718      	adds	r7, #24
 810d8bc:	46bd      	mov	sp, r7
 810d8be:	bd80      	pop	{r7, pc}
 810d8c0:	100049ac 	.word	0x100049ac

0810d8c4 <xTaskRemoveFromEventList>:
 810d8c4:	b580      	push	{r7, lr}
 810d8c6:	b086      	sub	sp, #24
 810d8c8:	af00      	add	r7, sp, #0
 810d8ca:	6078      	str	r0, [r7, #4]
 810d8cc:	687b      	ldr	r3, [r7, #4]
 810d8ce:	68db      	ldr	r3, [r3, #12]
 810d8d0:	68db      	ldr	r3, [r3, #12]
 810d8d2:	613b      	str	r3, [r7, #16]
 810d8d4:	693b      	ldr	r3, [r7, #16]
 810d8d6:	2b00      	cmp	r3, #0
 810d8d8:	d10b      	bne.n	810d8f2 <xTaskRemoveFromEventList+0x2e>
 810d8da:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810d8de:	f383 8811 	msr	BASEPRI, r3
 810d8e2:	f3bf 8f6f 	isb	sy
 810d8e6:	f3bf 8f4f 	dsb	sy
 810d8ea:	60fb      	str	r3, [r7, #12]
 810d8ec:	bf00      	nop
 810d8ee:	bf00      	nop
 810d8f0:	e7fd      	b.n	810d8ee <xTaskRemoveFromEventList+0x2a>
 810d8f2:	693b      	ldr	r3, [r7, #16]
 810d8f4:	3318      	adds	r3, #24
 810d8f6:	4618      	mov	r0, r3
 810d8f8:	f7fe fbdc 	bl	810c0b4 <uxListRemove>
 810d8fc:	4b1d      	ldr	r3, [pc, #116]	@ (810d974 <xTaskRemoveFromEventList+0xb0>)
 810d8fe:	681b      	ldr	r3, [r3, #0]
 810d900:	2b00      	cmp	r3, #0
 810d902:	d11d      	bne.n	810d940 <xTaskRemoveFromEventList+0x7c>
 810d904:	693b      	ldr	r3, [r7, #16]
 810d906:	3304      	adds	r3, #4
 810d908:	4618      	mov	r0, r3
 810d90a:	f7fe fbd3 	bl	810c0b4 <uxListRemove>
 810d90e:	693b      	ldr	r3, [r7, #16]
 810d910:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 810d912:	4b19      	ldr	r3, [pc, #100]	@ (810d978 <xTaskRemoveFromEventList+0xb4>)
 810d914:	681b      	ldr	r3, [r3, #0]
 810d916:	429a      	cmp	r2, r3
 810d918:	d903      	bls.n	810d922 <xTaskRemoveFromEventList+0x5e>
 810d91a:	693b      	ldr	r3, [r7, #16]
 810d91c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 810d91e:	4a16      	ldr	r2, [pc, #88]	@ (810d978 <xTaskRemoveFromEventList+0xb4>)
 810d920:	6013      	str	r3, [r2, #0]
 810d922:	693b      	ldr	r3, [r7, #16]
 810d924:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 810d926:	4613      	mov	r3, r2
 810d928:	009b      	lsls	r3, r3, #2
 810d92a:	4413      	add	r3, r2
 810d92c:	009b      	lsls	r3, r3, #2
 810d92e:	4a13      	ldr	r2, [pc, #76]	@ (810d97c <xTaskRemoveFromEventList+0xb8>)
 810d930:	441a      	add	r2, r3
 810d932:	693b      	ldr	r3, [r7, #16]
 810d934:	3304      	adds	r3, #4
 810d936:	4619      	mov	r1, r3
 810d938:	4610      	mov	r0, r2
 810d93a:	f7fe fb5e 	bl	810bffa <vListInsertEnd>
 810d93e:	e005      	b.n	810d94c <xTaskRemoveFromEventList+0x88>
 810d940:	693b      	ldr	r3, [r7, #16]
 810d942:	3318      	adds	r3, #24
 810d944:	4619      	mov	r1, r3
 810d946:	480e      	ldr	r0, [pc, #56]	@ (810d980 <xTaskRemoveFromEventList+0xbc>)
 810d948:	f7fe fb57 	bl	810bffa <vListInsertEnd>
 810d94c:	693b      	ldr	r3, [r7, #16]
 810d94e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 810d950:	4b0c      	ldr	r3, [pc, #48]	@ (810d984 <xTaskRemoveFromEventList+0xc0>)
 810d952:	681b      	ldr	r3, [r3, #0]
 810d954:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 810d956:	429a      	cmp	r2, r3
 810d958:	d905      	bls.n	810d966 <xTaskRemoveFromEventList+0xa2>
 810d95a:	2301      	movs	r3, #1
 810d95c:	617b      	str	r3, [r7, #20]
 810d95e:	4b0a      	ldr	r3, [pc, #40]	@ (810d988 <xTaskRemoveFromEventList+0xc4>)
 810d960:	2201      	movs	r2, #1
 810d962:	601a      	str	r2, [r3, #0]
 810d964:	e001      	b.n	810d96a <xTaskRemoveFromEventList+0xa6>
 810d966:	2300      	movs	r3, #0
 810d968:	617b      	str	r3, [r7, #20]
 810d96a:	697b      	ldr	r3, [r7, #20]
 810d96c:	4618      	mov	r0, r3
 810d96e:	3718      	adds	r7, #24
 810d970:	46bd      	mov	sp, r7
 810d972:	bd80      	pop	{r7, pc}
 810d974:	10004ea8 	.word	0x10004ea8
 810d978:	10004e88 	.word	0x10004e88
 810d97c:	100049b0 	.word	0x100049b0
 810d980:	10004e40 	.word	0x10004e40
 810d984:	100049ac 	.word	0x100049ac
 810d988:	10004e94 	.word	0x10004e94

0810d98c <vTaskInternalSetTimeOutState>:
 810d98c:	b480      	push	{r7}
 810d98e:	b083      	sub	sp, #12
 810d990:	af00      	add	r7, sp, #0
 810d992:	6078      	str	r0, [r7, #4]
 810d994:	4b06      	ldr	r3, [pc, #24]	@ (810d9b0 <vTaskInternalSetTimeOutState+0x24>)
 810d996:	681a      	ldr	r2, [r3, #0]
 810d998:	687b      	ldr	r3, [r7, #4]
 810d99a:	601a      	str	r2, [r3, #0]
 810d99c:	4b05      	ldr	r3, [pc, #20]	@ (810d9b4 <vTaskInternalSetTimeOutState+0x28>)
 810d99e:	681a      	ldr	r2, [r3, #0]
 810d9a0:	687b      	ldr	r3, [r7, #4]
 810d9a2:	605a      	str	r2, [r3, #4]
 810d9a4:	bf00      	nop
 810d9a6:	370c      	adds	r7, #12
 810d9a8:	46bd      	mov	sp, r7
 810d9aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 810d9ae:	4770      	bx	lr
 810d9b0:	10004e98 	.word	0x10004e98
 810d9b4:	10004e84 	.word	0x10004e84

0810d9b8 <xTaskCheckForTimeOut>:
 810d9b8:	b580      	push	{r7, lr}
 810d9ba:	b088      	sub	sp, #32
 810d9bc:	af00      	add	r7, sp, #0
 810d9be:	6078      	str	r0, [r7, #4]
 810d9c0:	6039      	str	r1, [r7, #0]
 810d9c2:	687b      	ldr	r3, [r7, #4]
 810d9c4:	2b00      	cmp	r3, #0
 810d9c6:	d10b      	bne.n	810d9e0 <xTaskCheckForTimeOut+0x28>
 810d9c8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810d9cc:	f383 8811 	msr	BASEPRI, r3
 810d9d0:	f3bf 8f6f 	isb	sy
 810d9d4:	f3bf 8f4f 	dsb	sy
 810d9d8:	613b      	str	r3, [r7, #16]
 810d9da:	bf00      	nop
 810d9dc:	bf00      	nop
 810d9de:	e7fd      	b.n	810d9dc <xTaskCheckForTimeOut+0x24>
 810d9e0:	683b      	ldr	r3, [r7, #0]
 810d9e2:	2b00      	cmp	r3, #0
 810d9e4:	d10b      	bne.n	810d9fe <xTaskCheckForTimeOut+0x46>
 810d9e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810d9ea:	f383 8811 	msr	BASEPRI, r3
 810d9ee:	f3bf 8f6f 	isb	sy
 810d9f2:	f3bf 8f4f 	dsb	sy
 810d9f6:	60fb      	str	r3, [r7, #12]
 810d9f8:	bf00      	nop
 810d9fa:	bf00      	nop
 810d9fc:	e7fd      	b.n	810d9fa <xTaskCheckForTimeOut+0x42>
 810d9fe:	f7fe fcb3 	bl	810c368 <vPortEnterCritical>
 810da02:	4b1d      	ldr	r3, [pc, #116]	@ (810da78 <xTaskCheckForTimeOut+0xc0>)
 810da04:	681b      	ldr	r3, [r3, #0]
 810da06:	61bb      	str	r3, [r7, #24]
 810da08:	687b      	ldr	r3, [r7, #4]
 810da0a:	685b      	ldr	r3, [r3, #4]
 810da0c:	69ba      	ldr	r2, [r7, #24]
 810da0e:	1ad3      	subs	r3, r2, r3
 810da10:	617b      	str	r3, [r7, #20]
 810da12:	683b      	ldr	r3, [r7, #0]
 810da14:	681b      	ldr	r3, [r3, #0]
 810da16:	f1b3 3fff 	cmp.w	r3, #4294967295
 810da1a:	d102      	bne.n	810da22 <xTaskCheckForTimeOut+0x6a>
 810da1c:	2300      	movs	r3, #0
 810da1e:	61fb      	str	r3, [r7, #28]
 810da20:	e023      	b.n	810da6a <xTaskCheckForTimeOut+0xb2>
 810da22:	687b      	ldr	r3, [r7, #4]
 810da24:	681a      	ldr	r2, [r3, #0]
 810da26:	4b15      	ldr	r3, [pc, #84]	@ (810da7c <xTaskCheckForTimeOut+0xc4>)
 810da28:	681b      	ldr	r3, [r3, #0]
 810da2a:	429a      	cmp	r2, r3
 810da2c:	d007      	beq.n	810da3e <xTaskCheckForTimeOut+0x86>
 810da2e:	687b      	ldr	r3, [r7, #4]
 810da30:	685b      	ldr	r3, [r3, #4]
 810da32:	69ba      	ldr	r2, [r7, #24]
 810da34:	429a      	cmp	r2, r3
 810da36:	d302      	bcc.n	810da3e <xTaskCheckForTimeOut+0x86>
 810da38:	2301      	movs	r3, #1
 810da3a:	61fb      	str	r3, [r7, #28]
 810da3c:	e015      	b.n	810da6a <xTaskCheckForTimeOut+0xb2>
 810da3e:	683b      	ldr	r3, [r7, #0]
 810da40:	681b      	ldr	r3, [r3, #0]
 810da42:	697a      	ldr	r2, [r7, #20]
 810da44:	429a      	cmp	r2, r3
 810da46:	d20b      	bcs.n	810da60 <xTaskCheckForTimeOut+0xa8>
 810da48:	683b      	ldr	r3, [r7, #0]
 810da4a:	681a      	ldr	r2, [r3, #0]
 810da4c:	697b      	ldr	r3, [r7, #20]
 810da4e:	1ad2      	subs	r2, r2, r3
 810da50:	683b      	ldr	r3, [r7, #0]
 810da52:	601a      	str	r2, [r3, #0]
 810da54:	6878      	ldr	r0, [r7, #4]
 810da56:	f7ff ff99 	bl	810d98c <vTaskInternalSetTimeOutState>
 810da5a:	2300      	movs	r3, #0
 810da5c:	61fb      	str	r3, [r7, #28]
 810da5e:	e004      	b.n	810da6a <xTaskCheckForTimeOut+0xb2>
 810da60:	683b      	ldr	r3, [r7, #0]
 810da62:	2200      	movs	r2, #0
 810da64:	601a      	str	r2, [r3, #0]
 810da66:	2301      	movs	r3, #1
 810da68:	61fb      	str	r3, [r7, #28]
 810da6a:	f7fe fcaf 	bl	810c3cc <vPortExitCritical>
 810da6e:	69fb      	ldr	r3, [r7, #28]
 810da70:	4618      	mov	r0, r3
 810da72:	3720      	adds	r7, #32
 810da74:	46bd      	mov	sp, r7
 810da76:	bd80      	pop	{r7, pc}
 810da78:	10004e84 	.word	0x10004e84
 810da7c:	10004e98 	.word	0x10004e98

0810da80 <vTaskMissedYield>:
 810da80:	b480      	push	{r7}
 810da82:	af00      	add	r7, sp, #0
 810da84:	4b03      	ldr	r3, [pc, #12]	@ (810da94 <vTaskMissedYield+0x14>)
 810da86:	2201      	movs	r2, #1
 810da88:	601a      	str	r2, [r3, #0]
 810da8a:	bf00      	nop
 810da8c:	46bd      	mov	sp, r7
 810da8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 810da92:	4770      	bx	lr
 810da94:	10004e94 	.word	0x10004e94

0810da98 <prvIdleTask>:
 810da98:	b580      	push	{r7, lr}
 810da9a:	b082      	sub	sp, #8
 810da9c:	af00      	add	r7, sp, #0
 810da9e:	6078      	str	r0, [r7, #4]
 810daa0:	f000 f852 	bl	810db48 <prvCheckTasksWaitingTermination>
 810daa4:	4b06      	ldr	r3, [pc, #24]	@ (810dac0 <prvIdleTask+0x28>)
 810daa6:	681b      	ldr	r3, [r3, #0]
 810daa8:	2b01      	cmp	r3, #1
 810daaa:	d9f9      	bls.n	810daa0 <prvIdleTask+0x8>
 810daac:	4b05      	ldr	r3, [pc, #20]	@ (810dac4 <prvIdleTask+0x2c>)
 810daae:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 810dab2:	601a      	str	r2, [r3, #0]
 810dab4:	f3bf 8f4f 	dsb	sy
 810dab8:	f3bf 8f6f 	isb	sy
 810dabc:	e7f0      	b.n	810daa0 <prvIdleTask+0x8>
 810dabe:	bf00      	nop
 810dac0:	100049b0 	.word	0x100049b0
 810dac4:	e000ed04 	.word	0xe000ed04

0810dac8 <prvInitialiseTaskLists>:
 810dac8:	b580      	push	{r7, lr}
 810daca:	b082      	sub	sp, #8
 810dacc:	af00      	add	r7, sp, #0
 810dace:	2300      	movs	r3, #0
 810dad0:	607b      	str	r3, [r7, #4]
 810dad2:	e00c      	b.n	810daee <prvInitialiseTaskLists+0x26>
 810dad4:	687a      	ldr	r2, [r7, #4]
 810dad6:	4613      	mov	r3, r2
 810dad8:	009b      	lsls	r3, r3, #2
 810dada:	4413      	add	r3, r2
 810dadc:	009b      	lsls	r3, r3, #2
 810dade:	4a12      	ldr	r2, [pc, #72]	@ (810db28 <prvInitialiseTaskLists+0x60>)
 810dae0:	4413      	add	r3, r2
 810dae2:	4618      	mov	r0, r3
 810dae4:	f7fe fa5c 	bl	810bfa0 <vListInitialise>
 810dae8:	687b      	ldr	r3, [r7, #4]
 810daea:	3301      	adds	r3, #1
 810daec:	607b      	str	r3, [r7, #4]
 810daee:	687b      	ldr	r3, [r7, #4]
 810daf0:	2b37      	cmp	r3, #55	@ 0x37
 810daf2:	d9ef      	bls.n	810dad4 <prvInitialiseTaskLists+0xc>
 810daf4:	480d      	ldr	r0, [pc, #52]	@ (810db2c <prvInitialiseTaskLists+0x64>)
 810daf6:	f7fe fa53 	bl	810bfa0 <vListInitialise>
 810dafa:	480d      	ldr	r0, [pc, #52]	@ (810db30 <prvInitialiseTaskLists+0x68>)
 810dafc:	f7fe fa50 	bl	810bfa0 <vListInitialise>
 810db00:	480c      	ldr	r0, [pc, #48]	@ (810db34 <prvInitialiseTaskLists+0x6c>)
 810db02:	f7fe fa4d 	bl	810bfa0 <vListInitialise>
 810db06:	480c      	ldr	r0, [pc, #48]	@ (810db38 <prvInitialiseTaskLists+0x70>)
 810db08:	f7fe fa4a 	bl	810bfa0 <vListInitialise>
 810db0c:	480b      	ldr	r0, [pc, #44]	@ (810db3c <prvInitialiseTaskLists+0x74>)
 810db0e:	f7fe fa47 	bl	810bfa0 <vListInitialise>
 810db12:	4b0b      	ldr	r3, [pc, #44]	@ (810db40 <prvInitialiseTaskLists+0x78>)
 810db14:	4a05      	ldr	r2, [pc, #20]	@ (810db2c <prvInitialiseTaskLists+0x64>)
 810db16:	601a      	str	r2, [r3, #0]
 810db18:	4b0a      	ldr	r3, [pc, #40]	@ (810db44 <prvInitialiseTaskLists+0x7c>)
 810db1a:	4a05      	ldr	r2, [pc, #20]	@ (810db30 <prvInitialiseTaskLists+0x68>)
 810db1c:	601a      	str	r2, [r3, #0]
 810db1e:	bf00      	nop
 810db20:	3708      	adds	r7, #8
 810db22:	46bd      	mov	sp, r7
 810db24:	bd80      	pop	{r7, pc}
 810db26:	bf00      	nop
 810db28:	100049b0 	.word	0x100049b0
 810db2c:	10004e10 	.word	0x10004e10
 810db30:	10004e24 	.word	0x10004e24
 810db34:	10004e40 	.word	0x10004e40
 810db38:	10004e54 	.word	0x10004e54
 810db3c:	10004e6c 	.word	0x10004e6c
 810db40:	10004e38 	.word	0x10004e38
 810db44:	10004e3c 	.word	0x10004e3c

0810db48 <prvCheckTasksWaitingTermination>:
 810db48:	b580      	push	{r7, lr}
 810db4a:	b082      	sub	sp, #8
 810db4c:	af00      	add	r7, sp, #0
 810db4e:	e019      	b.n	810db84 <prvCheckTasksWaitingTermination+0x3c>
 810db50:	f7fe fc0a 	bl	810c368 <vPortEnterCritical>
 810db54:	4b10      	ldr	r3, [pc, #64]	@ (810db98 <prvCheckTasksWaitingTermination+0x50>)
 810db56:	68db      	ldr	r3, [r3, #12]
 810db58:	68db      	ldr	r3, [r3, #12]
 810db5a:	607b      	str	r3, [r7, #4]
 810db5c:	687b      	ldr	r3, [r7, #4]
 810db5e:	3304      	adds	r3, #4
 810db60:	4618      	mov	r0, r3
 810db62:	f7fe faa7 	bl	810c0b4 <uxListRemove>
 810db66:	4b0d      	ldr	r3, [pc, #52]	@ (810db9c <prvCheckTasksWaitingTermination+0x54>)
 810db68:	681b      	ldr	r3, [r3, #0]
 810db6a:	3b01      	subs	r3, #1
 810db6c:	4a0b      	ldr	r2, [pc, #44]	@ (810db9c <prvCheckTasksWaitingTermination+0x54>)
 810db6e:	6013      	str	r3, [r2, #0]
 810db70:	4b0b      	ldr	r3, [pc, #44]	@ (810dba0 <prvCheckTasksWaitingTermination+0x58>)
 810db72:	681b      	ldr	r3, [r3, #0]
 810db74:	3b01      	subs	r3, #1
 810db76:	4a0a      	ldr	r2, [pc, #40]	@ (810dba0 <prvCheckTasksWaitingTermination+0x58>)
 810db78:	6013      	str	r3, [r2, #0]
 810db7a:	f7fe fc27 	bl	810c3cc <vPortExitCritical>
 810db7e:	6878      	ldr	r0, [r7, #4]
 810db80:	f000 f810 	bl	810dba4 <prvDeleteTCB>
 810db84:	4b06      	ldr	r3, [pc, #24]	@ (810dba0 <prvCheckTasksWaitingTermination+0x58>)
 810db86:	681b      	ldr	r3, [r3, #0]
 810db88:	2b00      	cmp	r3, #0
 810db8a:	d1e1      	bne.n	810db50 <prvCheckTasksWaitingTermination+0x8>
 810db8c:	bf00      	nop
 810db8e:	bf00      	nop
 810db90:	3708      	adds	r7, #8
 810db92:	46bd      	mov	sp, r7
 810db94:	bd80      	pop	{r7, pc}
 810db96:	bf00      	nop
 810db98:	10004e54 	.word	0x10004e54
 810db9c:	10004e80 	.word	0x10004e80
 810dba0:	10004e68 	.word	0x10004e68

0810dba4 <prvDeleteTCB>:
 810dba4:	b580      	push	{r7, lr}
 810dba6:	b084      	sub	sp, #16
 810dba8:	af00      	add	r7, sp, #0
 810dbaa:	6078      	str	r0, [r7, #4]
 810dbac:	687b      	ldr	r3, [r7, #4]
 810dbae:	3354      	adds	r3, #84	@ 0x54
 810dbb0:	4618      	mov	r0, r3
 810dbb2:	f001 feaf 	bl	810f914 <_reclaim_reent>
 810dbb6:	687b      	ldr	r3, [r7, #4]
 810dbb8:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 810dbbc:	2b00      	cmp	r3, #0
 810dbbe:	d108      	bne.n	810dbd2 <prvDeleteTCB+0x2e>
 810dbc0:	687b      	ldr	r3, [r7, #4]
 810dbc2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 810dbc4:	4618      	mov	r0, r3
 810dbc6:	f7fe f8bf 	bl	810bd48 <vPortFree>
 810dbca:	6878      	ldr	r0, [r7, #4]
 810dbcc:	f7fe f8bc 	bl	810bd48 <vPortFree>
 810dbd0:	e019      	b.n	810dc06 <prvDeleteTCB+0x62>
 810dbd2:	687b      	ldr	r3, [r7, #4]
 810dbd4:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 810dbd8:	2b01      	cmp	r3, #1
 810dbda:	d103      	bne.n	810dbe4 <prvDeleteTCB+0x40>
 810dbdc:	6878      	ldr	r0, [r7, #4]
 810dbde:	f7fe f8b3 	bl	810bd48 <vPortFree>
 810dbe2:	e010      	b.n	810dc06 <prvDeleteTCB+0x62>
 810dbe4:	687b      	ldr	r3, [r7, #4]
 810dbe6:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 810dbea:	2b02      	cmp	r3, #2
 810dbec:	d00b      	beq.n	810dc06 <prvDeleteTCB+0x62>
 810dbee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810dbf2:	f383 8811 	msr	BASEPRI, r3
 810dbf6:	f3bf 8f6f 	isb	sy
 810dbfa:	f3bf 8f4f 	dsb	sy
 810dbfe:	60fb      	str	r3, [r7, #12]
 810dc00:	bf00      	nop
 810dc02:	bf00      	nop
 810dc04:	e7fd      	b.n	810dc02 <prvDeleteTCB+0x5e>
 810dc06:	bf00      	nop
 810dc08:	3710      	adds	r7, #16
 810dc0a:	46bd      	mov	sp, r7
 810dc0c:	bd80      	pop	{r7, pc}
	...

0810dc10 <prvResetNextTaskUnblockTime>:
 810dc10:	b480      	push	{r7}
 810dc12:	b083      	sub	sp, #12
 810dc14:	af00      	add	r7, sp, #0
 810dc16:	4b0c      	ldr	r3, [pc, #48]	@ (810dc48 <prvResetNextTaskUnblockTime+0x38>)
 810dc18:	681b      	ldr	r3, [r3, #0]
 810dc1a:	681b      	ldr	r3, [r3, #0]
 810dc1c:	2b00      	cmp	r3, #0
 810dc1e:	d104      	bne.n	810dc2a <prvResetNextTaskUnblockTime+0x1a>
 810dc20:	4b0a      	ldr	r3, [pc, #40]	@ (810dc4c <prvResetNextTaskUnblockTime+0x3c>)
 810dc22:	f04f 32ff 	mov.w	r2, #4294967295
 810dc26:	601a      	str	r2, [r3, #0]
 810dc28:	e008      	b.n	810dc3c <prvResetNextTaskUnblockTime+0x2c>
 810dc2a:	4b07      	ldr	r3, [pc, #28]	@ (810dc48 <prvResetNextTaskUnblockTime+0x38>)
 810dc2c:	681b      	ldr	r3, [r3, #0]
 810dc2e:	68db      	ldr	r3, [r3, #12]
 810dc30:	68db      	ldr	r3, [r3, #12]
 810dc32:	607b      	str	r3, [r7, #4]
 810dc34:	687b      	ldr	r3, [r7, #4]
 810dc36:	685b      	ldr	r3, [r3, #4]
 810dc38:	4a04      	ldr	r2, [pc, #16]	@ (810dc4c <prvResetNextTaskUnblockTime+0x3c>)
 810dc3a:	6013      	str	r3, [r2, #0]
 810dc3c:	bf00      	nop
 810dc3e:	370c      	adds	r7, #12
 810dc40:	46bd      	mov	sp, r7
 810dc42:	f85d 7b04 	ldr.w	r7, [sp], #4
 810dc46:	4770      	bx	lr
 810dc48:	10004e38 	.word	0x10004e38
 810dc4c:	10004ea0 	.word	0x10004ea0

0810dc50 <xTaskGetSchedulerState>:
 810dc50:	b480      	push	{r7}
 810dc52:	b083      	sub	sp, #12
 810dc54:	af00      	add	r7, sp, #0
 810dc56:	4b0b      	ldr	r3, [pc, #44]	@ (810dc84 <xTaskGetSchedulerState+0x34>)
 810dc58:	681b      	ldr	r3, [r3, #0]
 810dc5a:	2b00      	cmp	r3, #0
 810dc5c:	d102      	bne.n	810dc64 <xTaskGetSchedulerState+0x14>
 810dc5e:	2301      	movs	r3, #1
 810dc60:	607b      	str	r3, [r7, #4]
 810dc62:	e008      	b.n	810dc76 <xTaskGetSchedulerState+0x26>
 810dc64:	4b08      	ldr	r3, [pc, #32]	@ (810dc88 <xTaskGetSchedulerState+0x38>)
 810dc66:	681b      	ldr	r3, [r3, #0]
 810dc68:	2b00      	cmp	r3, #0
 810dc6a:	d102      	bne.n	810dc72 <xTaskGetSchedulerState+0x22>
 810dc6c:	2302      	movs	r3, #2
 810dc6e:	607b      	str	r3, [r7, #4]
 810dc70:	e001      	b.n	810dc76 <xTaskGetSchedulerState+0x26>
 810dc72:	2300      	movs	r3, #0
 810dc74:	607b      	str	r3, [r7, #4]
 810dc76:	687b      	ldr	r3, [r7, #4]
 810dc78:	4618      	mov	r0, r3
 810dc7a:	370c      	adds	r7, #12
 810dc7c:	46bd      	mov	sp, r7
 810dc7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 810dc82:	4770      	bx	lr
 810dc84:	10004e8c 	.word	0x10004e8c
 810dc88:	10004ea8 	.word	0x10004ea8

0810dc8c <xTaskPriorityDisinherit>:
 810dc8c:	b580      	push	{r7, lr}
 810dc8e:	b086      	sub	sp, #24
 810dc90:	af00      	add	r7, sp, #0
 810dc92:	6078      	str	r0, [r7, #4]
 810dc94:	687b      	ldr	r3, [r7, #4]
 810dc96:	613b      	str	r3, [r7, #16]
 810dc98:	2300      	movs	r3, #0
 810dc9a:	617b      	str	r3, [r7, #20]
 810dc9c:	687b      	ldr	r3, [r7, #4]
 810dc9e:	2b00      	cmp	r3, #0
 810dca0:	d058      	beq.n	810dd54 <xTaskPriorityDisinherit+0xc8>
 810dca2:	4b2f      	ldr	r3, [pc, #188]	@ (810dd60 <xTaskPriorityDisinherit+0xd4>)
 810dca4:	681b      	ldr	r3, [r3, #0]
 810dca6:	693a      	ldr	r2, [r7, #16]
 810dca8:	429a      	cmp	r2, r3
 810dcaa:	d00b      	beq.n	810dcc4 <xTaskPriorityDisinherit+0x38>
 810dcac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810dcb0:	f383 8811 	msr	BASEPRI, r3
 810dcb4:	f3bf 8f6f 	isb	sy
 810dcb8:	f3bf 8f4f 	dsb	sy
 810dcbc:	60fb      	str	r3, [r7, #12]
 810dcbe:	bf00      	nop
 810dcc0:	bf00      	nop
 810dcc2:	e7fd      	b.n	810dcc0 <xTaskPriorityDisinherit+0x34>
 810dcc4:	693b      	ldr	r3, [r7, #16]
 810dcc6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 810dcc8:	2b00      	cmp	r3, #0
 810dcca:	d10b      	bne.n	810dce4 <xTaskPriorityDisinherit+0x58>
 810dccc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810dcd0:	f383 8811 	msr	BASEPRI, r3
 810dcd4:	f3bf 8f6f 	isb	sy
 810dcd8:	f3bf 8f4f 	dsb	sy
 810dcdc:	60bb      	str	r3, [r7, #8]
 810dcde:	bf00      	nop
 810dce0:	bf00      	nop
 810dce2:	e7fd      	b.n	810dce0 <xTaskPriorityDisinherit+0x54>
 810dce4:	693b      	ldr	r3, [r7, #16]
 810dce6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 810dce8:	1e5a      	subs	r2, r3, #1
 810dcea:	693b      	ldr	r3, [r7, #16]
 810dcec:	651a      	str	r2, [r3, #80]	@ 0x50
 810dcee:	693b      	ldr	r3, [r7, #16]
 810dcf0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 810dcf2:	693b      	ldr	r3, [r7, #16]
 810dcf4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 810dcf6:	429a      	cmp	r2, r3
 810dcf8:	d02c      	beq.n	810dd54 <xTaskPriorityDisinherit+0xc8>
 810dcfa:	693b      	ldr	r3, [r7, #16]
 810dcfc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 810dcfe:	2b00      	cmp	r3, #0
 810dd00:	d128      	bne.n	810dd54 <xTaskPriorityDisinherit+0xc8>
 810dd02:	693b      	ldr	r3, [r7, #16]
 810dd04:	3304      	adds	r3, #4
 810dd06:	4618      	mov	r0, r3
 810dd08:	f7fe f9d4 	bl	810c0b4 <uxListRemove>
 810dd0c:	693b      	ldr	r3, [r7, #16]
 810dd0e:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 810dd10:	693b      	ldr	r3, [r7, #16]
 810dd12:	62da      	str	r2, [r3, #44]	@ 0x2c
 810dd14:	693b      	ldr	r3, [r7, #16]
 810dd16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 810dd18:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 810dd1c:	693b      	ldr	r3, [r7, #16]
 810dd1e:	619a      	str	r2, [r3, #24]
 810dd20:	693b      	ldr	r3, [r7, #16]
 810dd22:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 810dd24:	4b0f      	ldr	r3, [pc, #60]	@ (810dd64 <xTaskPriorityDisinherit+0xd8>)
 810dd26:	681b      	ldr	r3, [r3, #0]
 810dd28:	429a      	cmp	r2, r3
 810dd2a:	d903      	bls.n	810dd34 <xTaskPriorityDisinherit+0xa8>
 810dd2c:	693b      	ldr	r3, [r7, #16]
 810dd2e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 810dd30:	4a0c      	ldr	r2, [pc, #48]	@ (810dd64 <xTaskPriorityDisinherit+0xd8>)
 810dd32:	6013      	str	r3, [r2, #0]
 810dd34:	693b      	ldr	r3, [r7, #16]
 810dd36:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 810dd38:	4613      	mov	r3, r2
 810dd3a:	009b      	lsls	r3, r3, #2
 810dd3c:	4413      	add	r3, r2
 810dd3e:	009b      	lsls	r3, r3, #2
 810dd40:	4a09      	ldr	r2, [pc, #36]	@ (810dd68 <xTaskPriorityDisinherit+0xdc>)
 810dd42:	441a      	add	r2, r3
 810dd44:	693b      	ldr	r3, [r7, #16]
 810dd46:	3304      	adds	r3, #4
 810dd48:	4619      	mov	r1, r3
 810dd4a:	4610      	mov	r0, r2
 810dd4c:	f7fe f955 	bl	810bffa <vListInsertEnd>
 810dd50:	2301      	movs	r3, #1
 810dd52:	617b      	str	r3, [r7, #20]
 810dd54:	697b      	ldr	r3, [r7, #20]
 810dd56:	4618      	mov	r0, r3
 810dd58:	3718      	adds	r7, #24
 810dd5a:	46bd      	mov	sp, r7
 810dd5c:	bd80      	pop	{r7, pc}
 810dd5e:	bf00      	nop
 810dd60:	100049ac 	.word	0x100049ac
 810dd64:	10004e88 	.word	0x10004e88
 810dd68:	100049b0 	.word	0x100049b0

0810dd6c <prvAddCurrentTaskToDelayedList>:
 810dd6c:	b580      	push	{r7, lr}
 810dd6e:	b084      	sub	sp, #16
 810dd70:	af00      	add	r7, sp, #0
 810dd72:	6078      	str	r0, [r7, #4]
 810dd74:	6039      	str	r1, [r7, #0]
 810dd76:	4b21      	ldr	r3, [pc, #132]	@ (810ddfc <prvAddCurrentTaskToDelayedList+0x90>)
 810dd78:	681b      	ldr	r3, [r3, #0]
 810dd7a:	60fb      	str	r3, [r7, #12]
 810dd7c:	4b20      	ldr	r3, [pc, #128]	@ (810de00 <prvAddCurrentTaskToDelayedList+0x94>)
 810dd7e:	681b      	ldr	r3, [r3, #0]
 810dd80:	3304      	adds	r3, #4
 810dd82:	4618      	mov	r0, r3
 810dd84:	f7fe f996 	bl	810c0b4 <uxListRemove>
 810dd88:	687b      	ldr	r3, [r7, #4]
 810dd8a:	f1b3 3fff 	cmp.w	r3, #4294967295
 810dd8e:	d10a      	bne.n	810dda6 <prvAddCurrentTaskToDelayedList+0x3a>
 810dd90:	683b      	ldr	r3, [r7, #0]
 810dd92:	2b00      	cmp	r3, #0
 810dd94:	d007      	beq.n	810dda6 <prvAddCurrentTaskToDelayedList+0x3a>
 810dd96:	4b1a      	ldr	r3, [pc, #104]	@ (810de00 <prvAddCurrentTaskToDelayedList+0x94>)
 810dd98:	681b      	ldr	r3, [r3, #0]
 810dd9a:	3304      	adds	r3, #4
 810dd9c:	4619      	mov	r1, r3
 810dd9e:	4819      	ldr	r0, [pc, #100]	@ (810de04 <prvAddCurrentTaskToDelayedList+0x98>)
 810dda0:	f7fe f92b 	bl	810bffa <vListInsertEnd>
 810dda4:	e026      	b.n	810ddf4 <prvAddCurrentTaskToDelayedList+0x88>
 810dda6:	68fa      	ldr	r2, [r7, #12]
 810dda8:	687b      	ldr	r3, [r7, #4]
 810ddaa:	4413      	add	r3, r2
 810ddac:	60bb      	str	r3, [r7, #8]
 810ddae:	4b14      	ldr	r3, [pc, #80]	@ (810de00 <prvAddCurrentTaskToDelayedList+0x94>)
 810ddb0:	681b      	ldr	r3, [r3, #0]
 810ddb2:	68ba      	ldr	r2, [r7, #8]
 810ddb4:	605a      	str	r2, [r3, #4]
 810ddb6:	68ba      	ldr	r2, [r7, #8]
 810ddb8:	68fb      	ldr	r3, [r7, #12]
 810ddba:	429a      	cmp	r2, r3
 810ddbc:	d209      	bcs.n	810ddd2 <prvAddCurrentTaskToDelayedList+0x66>
 810ddbe:	4b12      	ldr	r3, [pc, #72]	@ (810de08 <prvAddCurrentTaskToDelayedList+0x9c>)
 810ddc0:	681a      	ldr	r2, [r3, #0]
 810ddc2:	4b0f      	ldr	r3, [pc, #60]	@ (810de00 <prvAddCurrentTaskToDelayedList+0x94>)
 810ddc4:	681b      	ldr	r3, [r3, #0]
 810ddc6:	3304      	adds	r3, #4
 810ddc8:	4619      	mov	r1, r3
 810ddca:	4610      	mov	r0, r2
 810ddcc:	f7fe f939 	bl	810c042 <vListInsert>
 810ddd0:	e010      	b.n	810ddf4 <prvAddCurrentTaskToDelayedList+0x88>
 810ddd2:	4b0e      	ldr	r3, [pc, #56]	@ (810de0c <prvAddCurrentTaskToDelayedList+0xa0>)
 810ddd4:	681a      	ldr	r2, [r3, #0]
 810ddd6:	4b0a      	ldr	r3, [pc, #40]	@ (810de00 <prvAddCurrentTaskToDelayedList+0x94>)
 810ddd8:	681b      	ldr	r3, [r3, #0]
 810ddda:	3304      	adds	r3, #4
 810dddc:	4619      	mov	r1, r3
 810ddde:	4610      	mov	r0, r2
 810dde0:	f7fe f92f 	bl	810c042 <vListInsert>
 810dde4:	4b0a      	ldr	r3, [pc, #40]	@ (810de10 <prvAddCurrentTaskToDelayedList+0xa4>)
 810dde6:	681b      	ldr	r3, [r3, #0]
 810dde8:	68ba      	ldr	r2, [r7, #8]
 810ddea:	429a      	cmp	r2, r3
 810ddec:	d202      	bcs.n	810ddf4 <prvAddCurrentTaskToDelayedList+0x88>
 810ddee:	4a08      	ldr	r2, [pc, #32]	@ (810de10 <prvAddCurrentTaskToDelayedList+0xa4>)
 810ddf0:	68bb      	ldr	r3, [r7, #8]
 810ddf2:	6013      	str	r3, [r2, #0]
 810ddf4:	bf00      	nop
 810ddf6:	3710      	adds	r7, #16
 810ddf8:	46bd      	mov	sp, r7
 810ddfa:	bd80      	pop	{r7, pc}
 810ddfc:	10004e84 	.word	0x10004e84
 810de00:	100049ac 	.word	0x100049ac
 810de04:	10004e6c 	.word	0x10004e6c
 810de08:	10004e3c 	.word	0x10004e3c
 810de0c:	10004e38 	.word	0x10004e38
 810de10:	10004ea0 	.word	0x10004ea0

0810de14 <xTimerCreateTimerTask>:
 810de14:	b580      	push	{r7, lr}
 810de16:	b08a      	sub	sp, #40	@ 0x28
 810de18:	af04      	add	r7, sp, #16
 810de1a:	2300      	movs	r3, #0
 810de1c:	617b      	str	r3, [r7, #20]
 810de1e:	f000 fb13 	bl	810e448 <prvCheckForValidListAndQueue>
 810de22:	4b1d      	ldr	r3, [pc, #116]	@ (810de98 <xTimerCreateTimerTask+0x84>)
 810de24:	681b      	ldr	r3, [r3, #0]
 810de26:	2b00      	cmp	r3, #0
 810de28:	d021      	beq.n	810de6e <xTimerCreateTimerTask+0x5a>
 810de2a:	2300      	movs	r3, #0
 810de2c:	60fb      	str	r3, [r7, #12]
 810de2e:	2300      	movs	r3, #0
 810de30:	60bb      	str	r3, [r7, #8]
 810de32:	1d3a      	adds	r2, r7, #4
 810de34:	f107 0108 	add.w	r1, r7, #8
 810de38:	f107 030c 	add.w	r3, r7, #12
 810de3c:	4618      	mov	r0, r3
 810de3e:	f7fd fe9b 	bl	810bb78 <vApplicationGetTimerTaskMemory>
 810de42:	6879      	ldr	r1, [r7, #4]
 810de44:	68bb      	ldr	r3, [r7, #8]
 810de46:	68fa      	ldr	r2, [r7, #12]
 810de48:	9202      	str	r2, [sp, #8]
 810de4a:	9301      	str	r3, [sp, #4]
 810de4c:	2302      	movs	r3, #2
 810de4e:	9300      	str	r3, [sp, #0]
 810de50:	2300      	movs	r3, #0
 810de52:	460a      	mov	r2, r1
 810de54:	4911      	ldr	r1, [pc, #68]	@ (810de9c <xTimerCreateTimerTask+0x88>)
 810de56:	4812      	ldr	r0, [pc, #72]	@ (810dea0 <xTimerCreateTimerTask+0x8c>)
 810de58:	f7ff f8a2 	bl	810cfa0 <xTaskCreateStatic>
 810de5c:	4603      	mov	r3, r0
 810de5e:	4a11      	ldr	r2, [pc, #68]	@ (810dea4 <xTimerCreateTimerTask+0x90>)
 810de60:	6013      	str	r3, [r2, #0]
 810de62:	4b10      	ldr	r3, [pc, #64]	@ (810dea4 <xTimerCreateTimerTask+0x90>)
 810de64:	681b      	ldr	r3, [r3, #0]
 810de66:	2b00      	cmp	r3, #0
 810de68:	d001      	beq.n	810de6e <xTimerCreateTimerTask+0x5a>
 810de6a:	2301      	movs	r3, #1
 810de6c:	617b      	str	r3, [r7, #20]
 810de6e:	697b      	ldr	r3, [r7, #20]
 810de70:	2b00      	cmp	r3, #0
 810de72:	d10b      	bne.n	810de8c <xTimerCreateTimerTask+0x78>
 810de74:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810de78:	f383 8811 	msr	BASEPRI, r3
 810de7c:	f3bf 8f6f 	isb	sy
 810de80:	f3bf 8f4f 	dsb	sy
 810de84:	613b      	str	r3, [r7, #16]
 810de86:	bf00      	nop
 810de88:	bf00      	nop
 810de8a:	e7fd      	b.n	810de88 <xTimerCreateTimerTask+0x74>
 810de8c:	697b      	ldr	r3, [r7, #20]
 810de8e:	4618      	mov	r0, r3
 810de90:	3718      	adds	r7, #24
 810de92:	46bd      	mov	sp, r7
 810de94:	bd80      	pop	{r7, pc}
 810de96:	bf00      	nop
 810de98:	10004edc 	.word	0x10004edc
 810de9c:	08111800 	.word	0x08111800
 810dea0:	0810dfe1 	.word	0x0810dfe1
 810dea4:	10004ee0 	.word	0x10004ee0

0810dea8 <xTimerGenericCommand>:
 810dea8:	b580      	push	{r7, lr}
 810deaa:	b08a      	sub	sp, #40	@ 0x28
 810deac:	af00      	add	r7, sp, #0
 810deae:	60f8      	str	r0, [r7, #12]
 810deb0:	60b9      	str	r1, [r7, #8]
 810deb2:	607a      	str	r2, [r7, #4]
 810deb4:	603b      	str	r3, [r7, #0]
 810deb6:	2300      	movs	r3, #0
 810deb8:	627b      	str	r3, [r7, #36]	@ 0x24
 810deba:	68fb      	ldr	r3, [r7, #12]
 810debc:	2b00      	cmp	r3, #0
 810debe:	d10b      	bne.n	810ded8 <xTimerGenericCommand+0x30>
 810dec0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810dec4:	f383 8811 	msr	BASEPRI, r3
 810dec8:	f3bf 8f6f 	isb	sy
 810decc:	f3bf 8f4f 	dsb	sy
 810ded0:	623b      	str	r3, [r7, #32]
 810ded2:	bf00      	nop
 810ded4:	bf00      	nop
 810ded6:	e7fd      	b.n	810ded4 <xTimerGenericCommand+0x2c>
 810ded8:	4b19      	ldr	r3, [pc, #100]	@ (810df40 <xTimerGenericCommand+0x98>)
 810deda:	681b      	ldr	r3, [r3, #0]
 810dedc:	2b00      	cmp	r3, #0
 810dede:	d02a      	beq.n	810df36 <xTimerGenericCommand+0x8e>
 810dee0:	68bb      	ldr	r3, [r7, #8]
 810dee2:	613b      	str	r3, [r7, #16]
 810dee4:	687b      	ldr	r3, [r7, #4]
 810dee6:	617b      	str	r3, [r7, #20]
 810dee8:	68fb      	ldr	r3, [r7, #12]
 810deea:	61bb      	str	r3, [r7, #24]
 810deec:	68bb      	ldr	r3, [r7, #8]
 810deee:	2b05      	cmp	r3, #5
 810def0:	dc18      	bgt.n	810df24 <xTimerGenericCommand+0x7c>
 810def2:	f7ff fead 	bl	810dc50 <xTaskGetSchedulerState>
 810def6:	4603      	mov	r3, r0
 810def8:	2b02      	cmp	r3, #2
 810defa:	d109      	bne.n	810df10 <xTimerGenericCommand+0x68>
 810defc:	4b10      	ldr	r3, [pc, #64]	@ (810df40 <xTimerGenericCommand+0x98>)
 810defe:	6818      	ldr	r0, [r3, #0]
 810df00:	f107 0110 	add.w	r1, r7, #16
 810df04:	2300      	movs	r3, #0
 810df06:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 810df08:	f7fe fc5a 	bl	810c7c0 <xQueueGenericSend>
 810df0c:	6278      	str	r0, [r7, #36]	@ 0x24
 810df0e:	e012      	b.n	810df36 <xTimerGenericCommand+0x8e>
 810df10:	4b0b      	ldr	r3, [pc, #44]	@ (810df40 <xTimerGenericCommand+0x98>)
 810df12:	6818      	ldr	r0, [r3, #0]
 810df14:	f107 0110 	add.w	r1, r7, #16
 810df18:	2300      	movs	r3, #0
 810df1a:	2200      	movs	r2, #0
 810df1c:	f7fe fc50 	bl	810c7c0 <xQueueGenericSend>
 810df20:	6278      	str	r0, [r7, #36]	@ 0x24
 810df22:	e008      	b.n	810df36 <xTimerGenericCommand+0x8e>
 810df24:	4b06      	ldr	r3, [pc, #24]	@ (810df40 <xTimerGenericCommand+0x98>)
 810df26:	6818      	ldr	r0, [r3, #0]
 810df28:	f107 0110 	add.w	r1, r7, #16
 810df2c:	2300      	movs	r3, #0
 810df2e:	683a      	ldr	r2, [r7, #0]
 810df30:	f7fe fd48 	bl	810c9c4 <xQueueGenericSendFromISR>
 810df34:	6278      	str	r0, [r7, #36]	@ 0x24
 810df36:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810df38:	4618      	mov	r0, r3
 810df3a:	3728      	adds	r7, #40	@ 0x28
 810df3c:	46bd      	mov	sp, r7
 810df3e:	bd80      	pop	{r7, pc}
 810df40:	10004edc 	.word	0x10004edc

0810df44 <prvProcessExpiredTimer>:
 810df44:	b580      	push	{r7, lr}
 810df46:	b088      	sub	sp, #32
 810df48:	af02      	add	r7, sp, #8
 810df4a:	6078      	str	r0, [r7, #4]
 810df4c:	6039      	str	r1, [r7, #0]
 810df4e:	4b23      	ldr	r3, [pc, #140]	@ (810dfdc <prvProcessExpiredTimer+0x98>)
 810df50:	681b      	ldr	r3, [r3, #0]
 810df52:	68db      	ldr	r3, [r3, #12]
 810df54:	68db      	ldr	r3, [r3, #12]
 810df56:	617b      	str	r3, [r7, #20]
 810df58:	697b      	ldr	r3, [r7, #20]
 810df5a:	3304      	adds	r3, #4
 810df5c:	4618      	mov	r0, r3
 810df5e:	f7fe f8a9 	bl	810c0b4 <uxListRemove>
 810df62:	697b      	ldr	r3, [r7, #20]
 810df64:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 810df68:	f003 0304 	and.w	r3, r3, #4
 810df6c:	2b00      	cmp	r3, #0
 810df6e:	d023      	beq.n	810dfb8 <prvProcessExpiredTimer+0x74>
 810df70:	697b      	ldr	r3, [r7, #20]
 810df72:	699a      	ldr	r2, [r3, #24]
 810df74:	687b      	ldr	r3, [r7, #4]
 810df76:	18d1      	adds	r1, r2, r3
 810df78:	687b      	ldr	r3, [r7, #4]
 810df7a:	683a      	ldr	r2, [r7, #0]
 810df7c:	6978      	ldr	r0, [r7, #20]
 810df7e:	f000 f8d5 	bl	810e12c <prvInsertTimerInActiveList>
 810df82:	4603      	mov	r3, r0
 810df84:	2b00      	cmp	r3, #0
 810df86:	d020      	beq.n	810dfca <prvProcessExpiredTimer+0x86>
 810df88:	2300      	movs	r3, #0
 810df8a:	9300      	str	r3, [sp, #0]
 810df8c:	2300      	movs	r3, #0
 810df8e:	687a      	ldr	r2, [r7, #4]
 810df90:	2100      	movs	r1, #0
 810df92:	6978      	ldr	r0, [r7, #20]
 810df94:	f7ff ff88 	bl	810dea8 <xTimerGenericCommand>
 810df98:	6138      	str	r0, [r7, #16]
 810df9a:	693b      	ldr	r3, [r7, #16]
 810df9c:	2b00      	cmp	r3, #0
 810df9e:	d114      	bne.n	810dfca <prvProcessExpiredTimer+0x86>
 810dfa0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810dfa4:	f383 8811 	msr	BASEPRI, r3
 810dfa8:	f3bf 8f6f 	isb	sy
 810dfac:	f3bf 8f4f 	dsb	sy
 810dfb0:	60fb      	str	r3, [r7, #12]
 810dfb2:	bf00      	nop
 810dfb4:	bf00      	nop
 810dfb6:	e7fd      	b.n	810dfb4 <prvProcessExpiredTimer+0x70>
 810dfb8:	697b      	ldr	r3, [r7, #20]
 810dfba:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 810dfbe:	f023 0301 	bic.w	r3, r3, #1
 810dfc2:	b2da      	uxtb	r2, r3
 810dfc4:	697b      	ldr	r3, [r7, #20]
 810dfc6:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 810dfca:	697b      	ldr	r3, [r7, #20]
 810dfcc:	6a1b      	ldr	r3, [r3, #32]
 810dfce:	6978      	ldr	r0, [r7, #20]
 810dfd0:	4798      	blx	r3
 810dfd2:	bf00      	nop
 810dfd4:	3718      	adds	r7, #24
 810dfd6:	46bd      	mov	sp, r7
 810dfd8:	bd80      	pop	{r7, pc}
 810dfda:	bf00      	nop
 810dfdc:	10004ed4 	.word	0x10004ed4

0810dfe0 <prvTimerTask>:
 810dfe0:	b580      	push	{r7, lr}
 810dfe2:	b084      	sub	sp, #16
 810dfe4:	af00      	add	r7, sp, #0
 810dfe6:	6078      	str	r0, [r7, #4]
 810dfe8:	f107 0308 	add.w	r3, r7, #8
 810dfec:	4618      	mov	r0, r3
 810dfee:	f000 f859 	bl	810e0a4 <prvGetNextExpireTime>
 810dff2:	60f8      	str	r0, [r7, #12]
 810dff4:	68bb      	ldr	r3, [r7, #8]
 810dff6:	4619      	mov	r1, r3
 810dff8:	68f8      	ldr	r0, [r7, #12]
 810dffa:	f000 f805 	bl	810e008 <prvProcessTimerOrBlockTask>
 810dffe:	f000 f8d7 	bl	810e1b0 <prvProcessReceivedCommands>
 810e002:	bf00      	nop
 810e004:	e7f0      	b.n	810dfe8 <prvTimerTask+0x8>
	...

0810e008 <prvProcessTimerOrBlockTask>:
 810e008:	b580      	push	{r7, lr}
 810e00a:	b084      	sub	sp, #16
 810e00c:	af00      	add	r7, sp, #0
 810e00e:	6078      	str	r0, [r7, #4]
 810e010:	6039      	str	r1, [r7, #0]
 810e012:	f7ff fa29 	bl	810d468 <vTaskSuspendAll>
 810e016:	f107 0308 	add.w	r3, r7, #8
 810e01a:	4618      	mov	r0, r3
 810e01c:	f000 f866 	bl	810e0ec <prvSampleTimeNow>
 810e020:	60f8      	str	r0, [r7, #12]
 810e022:	68bb      	ldr	r3, [r7, #8]
 810e024:	2b00      	cmp	r3, #0
 810e026:	d130      	bne.n	810e08a <prvProcessTimerOrBlockTask+0x82>
 810e028:	683b      	ldr	r3, [r7, #0]
 810e02a:	2b00      	cmp	r3, #0
 810e02c:	d10a      	bne.n	810e044 <prvProcessTimerOrBlockTask+0x3c>
 810e02e:	687a      	ldr	r2, [r7, #4]
 810e030:	68fb      	ldr	r3, [r7, #12]
 810e032:	429a      	cmp	r2, r3
 810e034:	d806      	bhi.n	810e044 <prvProcessTimerOrBlockTask+0x3c>
 810e036:	f7ff fa25 	bl	810d484 <xTaskResumeAll>
 810e03a:	68f9      	ldr	r1, [r7, #12]
 810e03c:	6878      	ldr	r0, [r7, #4]
 810e03e:	f7ff ff81 	bl	810df44 <prvProcessExpiredTimer>
 810e042:	e024      	b.n	810e08e <prvProcessTimerOrBlockTask+0x86>
 810e044:	683b      	ldr	r3, [r7, #0]
 810e046:	2b00      	cmp	r3, #0
 810e048:	d008      	beq.n	810e05c <prvProcessTimerOrBlockTask+0x54>
 810e04a:	4b13      	ldr	r3, [pc, #76]	@ (810e098 <prvProcessTimerOrBlockTask+0x90>)
 810e04c:	681b      	ldr	r3, [r3, #0]
 810e04e:	681b      	ldr	r3, [r3, #0]
 810e050:	2b00      	cmp	r3, #0
 810e052:	d101      	bne.n	810e058 <prvProcessTimerOrBlockTask+0x50>
 810e054:	2301      	movs	r3, #1
 810e056:	e000      	b.n	810e05a <prvProcessTimerOrBlockTask+0x52>
 810e058:	2300      	movs	r3, #0
 810e05a:	603b      	str	r3, [r7, #0]
 810e05c:	4b0f      	ldr	r3, [pc, #60]	@ (810e09c <prvProcessTimerOrBlockTask+0x94>)
 810e05e:	6818      	ldr	r0, [r3, #0]
 810e060:	687a      	ldr	r2, [r7, #4]
 810e062:	68fb      	ldr	r3, [r7, #12]
 810e064:	1ad3      	subs	r3, r2, r3
 810e066:	683a      	ldr	r2, [r7, #0]
 810e068:	4619      	mov	r1, r3
 810e06a:	f7fe ff65 	bl	810cf38 <vQueueWaitForMessageRestricted>
 810e06e:	f7ff fa09 	bl	810d484 <xTaskResumeAll>
 810e072:	4603      	mov	r3, r0
 810e074:	2b00      	cmp	r3, #0
 810e076:	d10a      	bne.n	810e08e <prvProcessTimerOrBlockTask+0x86>
 810e078:	4b09      	ldr	r3, [pc, #36]	@ (810e0a0 <prvProcessTimerOrBlockTask+0x98>)
 810e07a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 810e07e:	601a      	str	r2, [r3, #0]
 810e080:	f3bf 8f4f 	dsb	sy
 810e084:	f3bf 8f6f 	isb	sy
 810e088:	e001      	b.n	810e08e <prvProcessTimerOrBlockTask+0x86>
 810e08a:	f7ff f9fb 	bl	810d484 <xTaskResumeAll>
 810e08e:	bf00      	nop
 810e090:	3710      	adds	r7, #16
 810e092:	46bd      	mov	sp, r7
 810e094:	bd80      	pop	{r7, pc}
 810e096:	bf00      	nop
 810e098:	10004ed8 	.word	0x10004ed8
 810e09c:	10004edc 	.word	0x10004edc
 810e0a0:	e000ed04 	.word	0xe000ed04

0810e0a4 <prvGetNextExpireTime>:
 810e0a4:	b480      	push	{r7}
 810e0a6:	b085      	sub	sp, #20
 810e0a8:	af00      	add	r7, sp, #0
 810e0aa:	6078      	str	r0, [r7, #4]
 810e0ac:	4b0e      	ldr	r3, [pc, #56]	@ (810e0e8 <prvGetNextExpireTime+0x44>)
 810e0ae:	681b      	ldr	r3, [r3, #0]
 810e0b0:	681b      	ldr	r3, [r3, #0]
 810e0b2:	2b00      	cmp	r3, #0
 810e0b4:	d101      	bne.n	810e0ba <prvGetNextExpireTime+0x16>
 810e0b6:	2201      	movs	r2, #1
 810e0b8:	e000      	b.n	810e0bc <prvGetNextExpireTime+0x18>
 810e0ba:	2200      	movs	r2, #0
 810e0bc:	687b      	ldr	r3, [r7, #4]
 810e0be:	601a      	str	r2, [r3, #0]
 810e0c0:	687b      	ldr	r3, [r7, #4]
 810e0c2:	681b      	ldr	r3, [r3, #0]
 810e0c4:	2b00      	cmp	r3, #0
 810e0c6:	d105      	bne.n	810e0d4 <prvGetNextExpireTime+0x30>
 810e0c8:	4b07      	ldr	r3, [pc, #28]	@ (810e0e8 <prvGetNextExpireTime+0x44>)
 810e0ca:	681b      	ldr	r3, [r3, #0]
 810e0cc:	68db      	ldr	r3, [r3, #12]
 810e0ce:	681b      	ldr	r3, [r3, #0]
 810e0d0:	60fb      	str	r3, [r7, #12]
 810e0d2:	e001      	b.n	810e0d8 <prvGetNextExpireTime+0x34>
 810e0d4:	2300      	movs	r3, #0
 810e0d6:	60fb      	str	r3, [r7, #12]
 810e0d8:	68fb      	ldr	r3, [r7, #12]
 810e0da:	4618      	mov	r0, r3
 810e0dc:	3714      	adds	r7, #20
 810e0de:	46bd      	mov	sp, r7
 810e0e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 810e0e4:	4770      	bx	lr
 810e0e6:	bf00      	nop
 810e0e8:	10004ed4 	.word	0x10004ed4

0810e0ec <prvSampleTimeNow>:
 810e0ec:	b580      	push	{r7, lr}
 810e0ee:	b084      	sub	sp, #16
 810e0f0:	af00      	add	r7, sp, #0
 810e0f2:	6078      	str	r0, [r7, #4]
 810e0f4:	f7ff fa64 	bl	810d5c0 <xTaskGetTickCount>
 810e0f8:	60f8      	str	r0, [r7, #12]
 810e0fa:	4b0b      	ldr	r3, [pc, #44]	@ (810e128 <prvSampleTimeNow+0x3c>)
 810e0fc:	681b      	ldr	r3, [r3, #0]
 810e0fe:	68fa      	ldr	r2, [r7, #12]
 810e100:	429a      	cmp	r2, r3
 810e102:	d205      	bcs.n	810e110 <prvSampleTimeNow+0x24>
 810e104:	f000 f93a 	bl	810e37c <prvSwitchTimerLists>
 810e108:	687b      	ldr	r3, [r7, #4]
 810e10a:	2201      	movs	r2, #1
 810e10c:	601a      	str	r2, [r3, #0]
 810e10e:	e002      	b.n	810e116 <prvSampleTimeNow+0x2a>
 810e110:	687b      	ldr	r3, [r7, #4]
 810e112:	2200      	movs	r2, #0
 810e114:	601a      	str	r2, [r3, #0]
 810e116:	4a04      	ldr	r2, [pc, #16]	@ (810e128 <prvSampleTimeNow+0x3c>)
 810e118:	68fb      	ldr	r3, [r7, #12]
 810e11a:	6013      	str	r3, [r2, #0]
 810e11c:	68fb      	ldr	r3, [r7, #12]
 810e11e:	4618      	mov	r0, r3
 810e120:	3710      	adds	r7, #16
 810e122:	46bd      	mov	sp, r7
 810e124:	bd80      	pop	{r7, pc}
 810e126:	bf00      	nop
 810e128:	10004ee4 	.word	0x10004ee4

0810e12c <prvInsertTimerInActiveList>:
 810e12c:	b580      	push	{r7, lr}
 810e12e:	b086      	sub	sp, #24
 810e130:	af00      	add	r7, sp, #0
 810e132:	60f8      	str	r0, [r7, #12]
 810e134:	60b9      	str	r1, [r7, #8]
 810e136:	607a      	str	r2, [r7, #4]
 810e138:	603b      	str	r3, [r7, #0]
 810e13a:	2300      	movs	r3, #0
 810e13c:	617b      	str	r3, [r7, #20]
 810e13e:	68fb      	ldr	r3, [r7, #12]
 810e140:	68ba      	ldr	r2, [r7, #8]
 810e142:	605a      	str	r2, [r3, #4]
 810e144:	68fb      	ldr	r3, [r7, #12]
 810e146:	68fa      	ldr	r2, [r7, #12]
 810e148:	611a      	str	r2, [r3, #16]
 810e14a:	68ba      	ldr	r2, [r7, #8]
 810e14c:	687b      	ldr	r3, [r7, #4]
 810e14e:	429a      	cmp	r2, r3
 810e150:	d812      	bhi.n	810e178 <prvInsertTimerInActiveList+0x4c>
 810e152:	687a      	ldr	r2, [r7, #4]
 810e154:	683b      	ldr	r3, [r7, #0]
 810e156:	1ad2      	subs	r2, r2, r3
 810e158:	68fb      	ldr	r3, [r7, #12]
 810e15a:	699b      	ldr	r3, [r3, #24]
 810e15c:	429a      	cmp	r2, r3
 810e15e:	d302      	bcc.n	810e166 <prvInsertTimerInActiveList+0x3a>
 810e160:	2301      	movs	r3, #1
 810e162:	617b      	str	r3, [r7, #20]
 810e164:	e01b      	b.n	810e19e <prvInsertTimerInActiveList+0x72>
 810e166:	4b10      	ldr	r3, [pc, #64]	@ (810e1a8 <prvInsertTimerInActiveList+0x7c>)
 810e168:	681a      	ldr	r2, [r3, #0]
 810e16a:	68fb      	ldr	r3, [r7, #12]
 810e16c:	3304      	adds	r3, #4
 810e16e:	4619      	mov	r1, r3
 810e170:	4610      	mov	r0, r2
 810e172:	f7fd ff66 	bl	810c042 <vListInsert>
 810e176:	e012      	b.n	810e19e <prvInsertTimerInActiveList+0x72>
 810e178:	687a      	ldr	r2, [r7, #4]
 810e17a:	683b      	ldr	r3, [r7, #0]
 810e17c:	429a      	cmp	r2, r3
 810e17e:	d206      	bcs.n	810e18e <prvInsertTimerInActiveList+0x62>
 810e180:	68ba      	ldr	r2, [r7, #8]
 810e182:	683b      	ldr	r3, [r7, #0]
 810e184:	429a      	cmp	r2, r3
 810e186:	d302      	bcc.n	810e18e <prvInsertTimerInActiveList+0x62>
 810e188:	2301      	movs	r3, #1
 810e18a:	617b      	str	r3, [r7, #20]
 810e18c:	e007      	b.n	810e19e <prvInsertTimerInActiveList+0x72>
 810e18e:	4b07      	ldr	r3, [pc, #28]	@ (810e1ac <prvInsertTimerInActiveList+0x80>)
 810e190:	681a      	ldr	r2, [r3, #0]
 810e192:	68fb      	ldr	r3, [r7, #12]
 810e194:	3304      	adds	r3, #4
 810e196:	4619      	mov	r1, r3
 810e198:	4610      	mov	r0, r2
 810e19a:	f7fd ff52 	bl	810c042 <vListInsert>
 810e19e:	697b      	ldr	r3, [r7, #20]
 810e1a0:	4618      	mov	r0, r3
 810e1a2:	3718      	adds	r7, #24
 810e1a4:	46bd      	mov	sp, r7
 810e1a6:	bd80      	pop	{r7, pc}
 810e1a8:	10004ed8 	.word	0x10004ed8
 810e1ac:	10004ed4 	.word	0x10004ed4

0810e1b0 <prvProcessReceivedCommands>:
 810e1b0:	b580      	push	{r7, lr}
 810e1b2:	b08e      	sub	sp, #56	@ 0x38
 810e1b4:	af02      	add	r7, sp, #8
 810e1b6:	e0ce      	b.n	810e356 <prvProcessReceivedCommands+0x1a6>
 810e1b8:	687b      	ldr	r3, [r7, #4]
 810e1ba:	2b00      	cmp	r3, #0
 810e1bc:	da19      	bge.n	810e1f2 <prvProcessReceivedCommands+0x42>
 810e1be:	1d3b      	adds	r3, r7, #4
 810e1c0:	3304      	adds	r3, #4
 810e1c2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 810e1c4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 810e1c6:	2b00      	cmp	r3, #0
 810e1c8:	d10b      	bne.n	810e1e2 <prvProcessReceivedCommands+0x32>
 810e1ca:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810e1ce:	f383 8811 	msr	BASEPRI, r3
 810e1d2:	f3bf 8f6f 	isb	sy
 810e1d6:	f3bf 8f4f 	dsb	sy
 810e1da:	61fb      	str	r3, [r7, #28]
 810e1dc:	bf00      	nop
 810e1de:	bf00      	nop
 810e1e0:	e7fd      	b.n	810e1de <prvProcessReceivedCommands+0x2e>
 810e1e2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 810e1e4:	681b      	ldr	r3, [r3, #0]
 810e1e6:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 810e1e8:	6850      	ldr	r0, [r2, #4]
 810e1ea:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 810e1ec:	6892      	ldr	r2, [r2, #8]
 810e1ee:	4611      	mov	r1, r2
 810e1f0:	4798      	blx	r3
 810e1f2:	687b      	ldr	r3, [r7, #4]
 810e1f4:	2b00      	cmp	r3, #0
 810e1f6:	f2c0 80ae 	blt.w	810e356 <prvProcessReceivedCommands+0x1a6>
 810e1fa:	68fb      	ldr	r3, [r7, #12]
 810e1fc:	62bb      	str	r3, [r7, #40]	@ 0x28
 810e1fe:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810e200:	695b      	ldr	r3, [r3, #20]
 810e202:	2b00      	cmp	r3, #0
 810e204:	d004      	beq.n	810e210 <prvProcessReceivedCommands+0x60>
 810e206:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810e208:	3304      	adds	r3, #4
 810e20a:	4618      	mov	r0, r3
 810e20c:	f7fd ff52 	bl	810c0b4 <uxListRemove>
 810e210:	463b      	mov	r3, r7
 810e212:	4618      	mov	r0, r3
 810e214:	f7ff ff6a 	bl	810e0ec <prvSampleTimeNow>
 810e218:	6278      	str	r0, [r7, #36]	@ 0x24
 810e21a:	687b      	ldr	r3, [r7, #4]
 810e21c:	2b09      	cmp	r3, #9
 810e21e:	f200 8097 	bhi.w	810e350 <prvProcessReceivedCommands+0x1a0>
 810e222:	a201      	add	r2, pc, #4	@ (adr r2, 810e228 <prvProcessReceivedCommands+0x78>)
 810e224:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 810e228:	0810e251 	.word	0x0810e251
 810e22c:	0810e251 	.word	0x0810e251
 810e230:	0810e251 	.word	0x0810e251
 810e234:	0810e2c7 	.word	0x0810e2c7
 810e238:	0810e2db 	.word	0x0810e2db
 810e23c:	0810e327 	.word	0x0810e327
 810e240:	0810e251 	.word	0x0810e251
 810e244:	0810e251 	.word	0x0810e251
 810e248:	0810e2c7 	.word	0x0810e2c7
 810e24c:	0810e2db 	.word	0x0810e2db
 810e250:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810e252:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 810e256:	f043 0301 	orr.w	r3, r3, #1
 810e25a:	b2da      	uxtb	r2, r3
 810e25c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810e25e:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 810e262:	68ba      	ldr	r2, [r7, #8]
 810e264:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810e266:	699b      	ldr	r3, [r3, #24]
 810e268:	18d1      	adds	r1, r2, r3
 810e26a:	68bb      	ldr	r3, [r7, #8]
 810e26c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 810e26e:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 810e270:	f7ff ff5c 	bl	810e12c <prvInsertTimerInActiveList>
 810e274:	4603      	mov	r3, r0
 810e276:	2b00      	cmp	r3, #0
 810e278:	d06c      	beq.n	810e354 <prvProcessReceivedCommands+0x1a4>
 810e27a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810e27c:	6a1b      	ldr	r3, [r3, #32]
 810e27e:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 810e280:	4798      	blx	r3
 810e282:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810e284:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 810e288:	f003 0304 	and.w	r3, r3, #4
 810e28c:	2b00      	cmp	r3, #0
 810e28e:	d061      	beq.n	810e354 <prvProcessReceivedCommands+0x1a4>
 810e290:	68ba      	ldr	r2, [r7, #8]
 810e292:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810e294:	699b      	ldr	r3, [r3, #24]
 810e296:	441a      	add	r2, r3
 810e298:	2300      	movs	r3, #0
 810e29a:	9300      	str	r3, [sp, #0]
 810e29c:	2300      	movs	r3, #0
 810e29e:	2100      	movs	r1, #0
 810e2a0:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 810e2a2:	f7ff fe01 	bl	810dea8 <xTimerGenericCommand>
 810e2a6:	6238      	str	r0, [r7, #32]
 810e2a8:	6a3b      	ldr	r3, [r7, #32]
 810e2aa:	2b00      	cmp	r3, #0
 810e2ac:	d152      	bne.n	810e354 <prvProcessReceivedCommands+0x1a4>
 810e2ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810e2b2:	f383 8811 	msr	BASEPRI, r3
 810e2b6:	f3bf 8f6f 	isb	sy
 810e2ba:	f3bf 8f4f 	dsb	sy
 810e2be:	61bb      	str	r3, [r7, #24]
 810e2c0:	bf00      	nop
 810e2c2:	bf00      	nop
 810e2c4:	e7fd      	b.n	810e2c2 <prvProcessReceivedCommands+0x112>
 810e2c6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810e2c8:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 810e2cc:	f023 0301 	bic.w	r3, r3, #1
 810e2d0:	b2da      	uxtb	r2, r3
 810e2d2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810e2d4:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 810e2d8:	e03d      	b.n	810e356 <prvProcessReceivedCommands+0x1a6>
 810e2da:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810e2dc:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 810e2e0:	f043 0301 	orr.w	r3, r3, #1
 810e2e4:	b2da      	uxtb	r2, r3
 810e2e6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810e2e8:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 810e2ec:	68ba      	ldr	r2, [r7, #8]
 810e2ee:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810e2f0:	619a      	str	r2, [r3, #24]
 810e2f2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810e2f4:	699b      	ldr	r3, [r3, #24]
 810e2f6:	2b00      	cmp	r3, #0
 810e2f8:	d10b      	bne.n	810e312 <prvProcessReceivedCommands+0x162>
 810e2fa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810e2fe:	f383 8811 	msr	BASEPRI, r3
 810e302:	f3bf 8f6f 	isb	sy
 810e306:	f3bf 8f4f 	dsb	sy
 810e30a:	617b      	str	r3, [r7, #20]
 810e30c:	bf00      	nop
 810e30e:	bf00      	nop
 810e310:	e7fd      	b.n	810e30e <prvProcessReceivedCommands+0x15e>
 810e312:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810e314:	699a      	ldr	r2, [r3, #24]
 810e316:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810e318:	18d1      	adds	r1, r2, r3
 810e31a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 810e31c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 810e31e:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 810e320:	f7ff ff04 	bl	810e12c <prvInsertTimerInActiveList>
 810e324:	e017      	b.n	810e356 <prvProcessReceivedCommands+0x1a6>
 810e326:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810e328:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 810e32c:	f003 0302 	and.w	r3, r3, #2
 810e330:	2b00      	cmp	r3, #0
 810e332:	d103      	bne.n	810e33c <prvProcessReceivedCommands+0x18c>
 810e334:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 810e336:	f7fd fd07 	bl	810bd48 <vPortFree>
 810e33a:	e00c      	b.n	810e356 <prvProcessReceivedCommands+0x1a6>
 810e33c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810e33e:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 810e342:	f023 0301 	bic.w	r3, r3, #1
 810e346:	b2da      	uxtb	r2, r3
 810e348:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 810e34a:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 810e34e:	e002      	b.n	810e356 <prvProcessReceivedCommands+0x1a6>
 810e350:	bf00      	nop
 810e352:	e000      	b.n	810e356 <prvProcessReceivedCommands+0x1a6>
 810e354:	bf00      	nop
 810e356:	4b08      	ldr	r3, [pc, #32]	@ (810e378 <prvProcessReceivedCommands+0x1c8>)
 810e358:	681b      	ldr	r3, [r3, #0]
 810e35a:	1d39      	adds	r1, r7, #4
 810e35c:	2200      	movs	r2, #0
 810e35e:	4618      	mov	r0, r3
 810e360:	f7fe fbce 	bl	810cb00 <xQueueReceive>
 810e364:	4603      	mov	r3, r0
 810e366:	2b00      	cmp	r3, #0
 810e368:	f47f af26 	bne.w	810e1b8 <prvProcessReceivedCommands+0x8>
 810e36c:	bf00      	nop
 810e36e:	bf00      	nop
 810e370:	3730      	adds	r7, #48	@ 0x30
 810e372:	46bd      	mov	sp, r7
 810e374:	bd80      	pop	{r7, pc}
 810e376:	bf00      	nop
 810e378:	10004edc 	.word	0x10004edc

0810e37c <prvSwitchTimerLists>:
 810e37c:	b580      	push	{r7, lr}
 810e37e:	b088      	sub	sp, #32
 810e380:	af02      	add	r7, sp, #8
 810e382:	e049      	b.n	810e418 <prvSwitchTimerLists+0x9c>
 810e384:	4b2e      	ldr	r3, [pc, #184]	@ (810e440 <prvSwitchTimerLists+0xc4>)
 810e386:	681b      	ldr	r3, [r3, #0]
 810e388:	68db      	ldr	r3, [r3, #12]
 810e38a:	681b      	ldr	r3, [r3, #0]
 810e38c:	613b      	str	r3, [r7, #16]
 810e38e:	4b2c      	ldr	r3, [pc, #176]	@ (810e440 <prvSwitchTimerLists+0xc4>)
 810e390:	681b      	ldr	r3, [r3, #0]
 810e392:	68db      	ldr	r3, [r3, #12]
 810e394:	68db      	ldr	r3, [r3, #12]
 810e396:	60fb      	str	r3, [r7, #12]
 810e398:	68fb      	ldr	r3, [r7, #12]
 810e39a:	3304      	adds	r3, #4
 810e39c:	4618      	mov	r0, r3
 810e39e:	f7fd fe89 	bl	810c0b4 <uxListRemove>
 810e3a2:	68fb      	ldr	r3, [r7, #12]
 810e3a4:	6a1b      	ldr	r3, [r3, #32]
 810e3a6:	68f8      	ldr	r0, [r7, #12]
 810e3a8:	4798      	blx	r3
 810e3aa:	68fb      	ldr	r3, [r7, #12]
 810e3ac:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 810e3b0:	f003 0304 	and.w	r3, r3, #4
 810e3b4:	2b00      	cmp	r3, #0
 810e3b6:	d02f      	beq.n	810e418 <prvSwitchTimerLists+0x9c>
 810e3b8:	68fb      	ldr	r3, [r7, #12]
 810e3ba:	699b      	ldr	r3, [r3, #24]
 810e3bc:	693a      	ldr	r2, [r7, #16]
 810e3be:	4413      	add	r3, r2
 810e3c0:	60bb      	str	r3, [r7, #8]
 810e3c2:	68ba      	ldr	r2, [r7, #8]
 810e3c4:	693b      	ldr	r3, [r7, #16]
 810e3c6:	429a      	cmp	r2, r3
 810e3c8:	d90e      	bls.n	810e3e8 <prvSwitchTimerLists+0x6c>
 810e3ca:	68fb      	ldr	r3, [r7, #12]
 810e3cc:	68ba      	ldr	r2, [r7, #8]
 810e3ce:	605a      	str	r2, [r3, #4]
 810e3d0:	68fb      	ldr	r3, [r7, #12]
 810e3d2:	68fa      	ldr	r2, [r7, #12]
 810e3d4:	611a      	str	r2, [r3, #16]
 810e3d6:	4b1a      	ldr	r3, [pc, #104]	@ (810e440 <prvSwitchTimerLists+0xc4>)
 810e3d8:	681a      	ldr	r2, [r3, #0]
 810e3da:	68fb      	ldr	r3, [r7, #12]
 810e3dc:	3304      	adds	r3, #4
 810e3de:	4619      	mov	r1, r3
 810e3e0:	4610      	mov	r0, r2
 810e3e2:	f7fd fe2e 	bl	810c042 <vListInsert>
 810e3e6:	e017      	b.n	810e418 <prvSwitchTimerLists+0x9c>
 810e3e8:	2300      	movs	r3, #0
 810e3ea:	9300      	str	r3, [sp, #0]
 810e3ec:	2300      	movs	r3, #0
 810e3ee:	693a      	ldr	r2, [r7, #16]
 810e3f0:	2100      	movs	r1, #0
 810e3f2:	68f8      	ldr	r0, [r7, #12]
 810e3f4:	f7ff fd58 	bl	810dea8 <xTimerGenericCommand>
 810e3f8:	6078      	str	r0, [r7, #4]
 810e3fa:	687b      	ldr	r3, [r7, #4]
 810e3fc:	2b00      	cmp	r3, #0
 810e3fe:	d10b      	bne.n	810e418 <prvSwitchTimerLists+0x9c>
 810e400:	f04f 0350 	mov.w	r3, #80	@ 0x50
 810e404:	f383 8811 	msr	BASEPRI, r3
 810e408:	f3bf 8f6f 	isb	sy
 810e40c:	f3bf 8f4f 	dsb	sy
 810e410:	603b      	str	r3, [r7, #0]
 810e412:	bf00      	nop
 810e414:	bf00      	nop
 810e416:	e7fd      	b.n	810e414 <prvSwitchTimerLists+0x98>
 810e418:	4b09      	ldr	r3, [pc, #36]	@ (810e440 <prvSwitchTimerLists+0xc4>)
 810e41a:	681b      	ldr	r3, [r3, #0]
 810e41c:	681b      	ldr	r3, [r3, #0]
 810e41e:	2b00      	cmp	r3, #0
 810e420:	d1b0      	bne.n	810e384 <prvSwitchTimerLists+0x8>
 810e422:	4b07      	ldr	r3, [pc, #28]	@ (810e440 <prvSwitchTimerLists+0xc4>)
 810e424:	681b      	ldr	r3, [r3, #0]
 810e426:	617b      	str	r3, [r7, #20]
 810e428:	4b06      	ldr	r3, [pc, #24]	@ (810e444 <prvSwitchTimerLists+0xc8>)
 810e42a:	681b      	ldr	r3, [r3, #0]
 810e42c:	4a04      	ldr	r2, [pc, #16]	@ (810e440 <prvSwitchTimerLists+0xc4>)
 810e42e:	6013      	str	r3, [r2, #0]
 810e430:	4a04      	ldr	r2, [pc, #16]	@ (810e444 <prvSwitchTimerLists+0xc8>)
 810e432:	697b      	ldr	r3, [r7, #20]
 810e434:	6013      	str	r3, [r2, #0]
 810e436:	bf00      	nop
 810e438:	3718      	adds	r7, #24
 810e43a:	46bd      	mov	sp, r7
 810e43c:	bd80      	pop	{r7, pc}
 810e43e:	bf00      	nop
 810e440:	10004ed4 	.word	0x10004ed4
 810e444:	10004ed8 	.word	0x10004ed8

0810e448 <prvCheckForValidListAndQueue>:
 810e448:	b580      	push	{r7, lr}
 810e44a:	b082      	sub	sp, #8
 810e44c:	af02      	add	r7, sp, #8
 810e44e:	f7fd ff8b 	bl	810c368 <vPortEnterCritical>
 810e452:	4b15      	ldr	r3, [pc, #84]	@ (810e4a8 <prvCheckForValidListAndQueue+0x60>)
 810e454:	681b      	ldr	r3, [r3, #0]
 810e456:	2b00      	cmp	r3, #0
 810e458:	d120      	bne.n	810e49c <prvCheckForValidListAndQueue+0x54>
 810e45a:	4814      	ldr	r0, [pc, #80]	@ (810e4ac <prvCheckForValidListAndQueue+0x64>)
 810e45c:	f7fd fda0 	bl	810bfa0 <vListInitialise>
 810e460:	4813      	ldr	r0, [pc, #76]	@ (810e4b0 <prvCheckForValidListAndQueue+0x68>)
 810e462:	f7fd fd9d 	bl	810bfa0 <vListInitialise>
 810e466:	4b13      	ldr	r3, [pc, #76]	@ (810e4b4 <prvCheckForValidListAndQueue+0x6c>)
 810e468:	4a10      	ldr	r2, [pc, #64]	@ (810e4ac <prvCheckForValidListAndQueue+0x64>)
 810e46a:	601a      	str	r2, [r3, #0]
 810e46c:	4b12      	ldr	r3, [pc, #72]	@ (810e4b8 <prvCheckForValidListAndQueue+0x70>)
 810e46e:	4a10      	ldr	r2, [pc, #64]	@ (810e4b0 <prvCheckForValidListAndQueue+0x68>)
 810e470:	601a      	str	r2, [r3, #0]
 810e472:	2300      	movs	r3, #0
 810e474:	9300      	str	r3, [sp, #0]
 810e476:	4b11      	ldr	r3, [pc, #68]	@ (810e4bc <prvCheckForValidListAndQueue+0x74>)
 810e478:	4a11      	ldr	r2, [pc, #68]	@ (810e4c0 <prvCheckForValidListAndQueue+0x78>)
 810e47a:	2110      	movs	r1, #16
 810e47c:	200a      	movs	r0, #10
 810e47e:	f7fe f8ff 	bl	810c680 <xQueueGenericCreateStatic>
 810e482:	4603      	mov	r3, r0
 810e484:	4a08      	ldr	r2, [pc, #32]	@ (810e4a8 <prvCheckForValidListAndQueue+0x60>)
 810e486:	6013      	str	r3, [r2, #0]
 810e488:	4b07      	ldr	r3, [pc, #28]	@ (810e4a8 <prvCheckForValidListAndQueue+0x60>)
 810e48a:	681b      	ldr	r3, [r3, #0]
 810e48c:	2b00      	cmp	r3, #0
 810e48e:	d005      	beq.n	810e49c <prvCheckForValidListAndQueue+0x54>
 810e490:	4b05      	ldr	r3, [pc, #20]	@ (810e4a8 <prvCheckForValidListAndQueue+0x60>)
 810e492:	681b      	ldr	r3, [r3, #0]
 810e494:	490b      	ldr	r1, [pc, #44]	@ (810e4c4 <prvCheckForValidListAndQueue+0x7c>)
 810e496:	4618      	mov	r0, r3
 810e498:	f7fe fd24 	bl	810cee4 <vQueueAddToRegistry>
 810e49c:	f7fd ff96 	bl	810c3cc <vPortExitCritical>
 810e4a0:	bf00      	nop
 810e4a2:	46bd      	mov	sp, r7
 810e4a4:	bd80      	pop	{r7, pc}
 810e4a6:	bf00      	nop
 810e4a8:	10004edc 	.word	0x10004edc
 810e4ac:	10004eac 	.word	0x10004eac
 810e4b0:	10004ec0 	.word	0x10004ec0
 810e4b4:	10004ed4 	.word	0x10004ed4
 810e4b8:	10004ed8 	.word	0x10004ed8
 810e4bc:	10004f88 	.word	0x10004f88
 810e4c0:	10004ee8 	.word	0x10004ee8
 810e4c4:	08111808 	.word	0x08111808

0810e4c8 <ResMgr_Init>:
 810e4c8:	b580      	push	{r7, lr}
 810e4ca:	b084      	sub	sp, #16
 810e4cc:	af00      	add	r7, sp, #0
 810e4ce:	6078      	str	r0, [r7, #4]
 810e4d0:	6039      	str	r1, [r7, #0]
 810e4d2:	2300      	movs	r3, #0
 810e4d4:	73fb      	strb	r3, [r7, #15]
 810e4d6:	2300      	movs	r3, #0
 810e4d8:	60bb      	str	r3, [r7, #8]
 810e4da:	201f      	movs	r0, #31
 810e4dc:	f7f8 fa70 	bl	81069c0 <HAL_HSEM_FastTake>
 810e4e0:	4603      	mov	r3, r0
 810e4e2:	2b00      	cmp	r3, #0
 810e4e4:	d1f9      	bne.n	810e4da <ResMgr_Init+0x12>
 810e4e6:	4b43      	ldr	r3, [pc, #268]	@ (810e5f4 <ResMgr_Init+0x12c>)
 810e4e8:	f8d3 31c0 	ldr.w	r3, [r3, #448]	@ 0x1c0
 810e4ec:	2b5a      	cmp	r3, #90	@ 0x5a
 810e4ee:	d062      	beq.n	810e5b6 <ResMgr_Init+0xee>
 810e4f0:	e05a      	b.n	810e5a8 <ResMgr_Init+0xe0>
 810e4f2:	4a41      	ldr	r2, [pc, #260]	@ (810e5f8 <ResMgr_Init+0x130>)
 810e4f4:	68bb      	ldr	r3, [r7, #8]
 810e4f6:	4413      	add	r3, r2
 810e4f8:	781b      	ldrb	r3, [r3, #0]
 810e4fa:	2b00      	cmp	r3, #0
 810e4fc:	d02a      	beq.n	810e554 <ResMgr_Init+0x8c>
 810e4fe:	493d      	ldr	r1, [pc, #244]	@ (810e5f4 <ResMgr_Init+0x12c>)
 810e500:	68ba      	ldr	r2, [r7, #8]
 810e502:	4613      	mov	r3, r2
 810e504:	009b      	lsls	r3, r3, #2
 810e506:	4413      	add	r3, r2
 810e508:	009b      	lsls	r3, r3, #2
 810e50a:	440b      	add	r3, r1
 810e50c:	3308      	adds	r3, #8
 810e50e:	2201      	movs	r2, #1
 810e510:	601a      	str	r2, [r3, #0]
 810e512:	4a39      	ldr	r2, [pc, #228]	@ (810e5f8 <ResMgr_Init+0x130>)
 810e514:	68bb      	ldr	r3, [r7, #8]
 810e516:	4413      	add	r3, r2
 810e518:	781b      	ldrb	r3, [r3, #0]
 810e51a:	2b01      	cmp	r3, #1
 810e51c:	d109      	bne.n	810e532 <ResMgr_Init+0x6a>
 810e51e:	4935      	ldr	r1, [pc, #212]	@ (810e5f4 <ResMgr_Init+0x12c>)
 810e520:	68ba      	ldr	r2, [r7, #8]
 810e522:	4613      	mov	r3, r2
 810e524:	009b      	lsls	r3, r3, #2
 810e526:	4413      	add	r3, r2
 810e528:	009b      	lsls	r3, r3, #2
 810e52a:	440b      	add	r3, r1
 810e52c:	3304      	adds	r3, #4
 810e52e:	2208      	movs	r2, #8
 810e530:	601a      	str	r2, [r3, #0]
 810e532:	4a31      	ldr	r2, [pc, #196]	@ (810e5f8 <ResMgr_Init+0x130>)
 810e534:	68bb      	ldr	r3, [r7, #8]
 810e536:	4413      	add	r3, r2
 810e538:	781b      	ldrb	r3, [r3, #0]
 810e53a:	2b02      	cmp	r3, #2
 810e53c:	d11e      	bne.n	810e57c <ResMgr_Init+0xb4>
 810e53e:	492d      	ldr	r1, [pc, #180]	@ (810e5f4 <ResMgr_Init+0x12c>)
 810e540:	68ba      	ldr	r2, [r7, #8]
 810e542:	4613      	mov	r3, r2
 810e544:	009b      	lsls	r3, r3, #2
 810e546:	4413      	add	r3, r2
 810e548:	009b      	lsls	r3, r3, #2
 810e54a:	440b      	add	r3, r1
 810e54c:	3304      	adds	r3, #4
 810e54e:	2210      	movs	r2, #16
 810e550:	601a      	str	r2, [r3, #0]
 810e552:	e013      	b.n	810e57c <ResMgr_Init+0xb4>
 810e554:	4927      	ldr	r1, [pc, #156]	@ (810e5f4 <ResMgr_Init+0x12c>)
 810e556:	68ba      	ldr	r2, [r7, #8]
 810e558:	4613      	mov	r3, r2
 810e55a:	009b      	lsls	r3, r3, #2
 810e55c:	4413      	add	r3, r2
 810e55e:	009b      	lsls	r3, r3, #2
 810e560:	440b      	add	r3, r1
 810e562:	3308      	adds	r3, #8
 810e564:	2200      	movs	r2, #0
 810e566:	601a      	str	r2, [r3, #0]
 810e568:	4922      	ldr	r1, [pc, #136]	@ (810e5f4 <ResMgr_Init+0x12c>)
 810e56a:	68ba      	ldr	r2, [r7, #8]
 810e56c:	4613      	mov	r3, r2
 810e56e:	009b      	lsls	r3, r3, #2
 810e570:	4413      	add	r3, r2
 810e572:	009b      	lsls	r3, r3, #2
 810e574:	440b      	add	r3, r1
 810e576:	3304      	adds	r3, #4
 810e578:	2200      	movs	r2, #0
 810e57a:	601a      	str	r2, [r3, #0]
 810e57c:	491d      	ldr	r1, [pc, #116]	@ (810e5f4 <ResMgr_Init+0x12c>)
 810e57e:	68ba      	ldr	r2, [r7, #8]
 810e580:	4613      	mov	r3, r2
 810e582:	009b      	lsls	r3, r3, #2
 810e584:	4413      	add	r3, r2
 810e586:	009b      	lsls	r3, r3, #2
 810e588:	440b      	add	r3, r1
 810e58a:	2200      	movs	r2, #0
 810e58c:	601a      	str	r2, [r3, #0]
 810e58e:	4919      	ldr	r1, [pc, #100]	@ (810e5f4 <ResMgr_Init+0x12c>)
 810e590:	68ba      	ldr	r2, [r7, #8]
 810e592:	4613      	mov	r3, r2
 810e594:	009b      	lsls	r3, r3, #2
 810e596:	4413      	add	r3, r2
 810e598:	009b      	lsls	r3, r3, #2
 810e59a:	440b      	add	r3, r1
 810e59c:	3310      	adds	r3, #16
 810e59e:	2200      	movs	r2, #0
 810e5a0:	601a      	str	r2, [r3, #0]
 810e5a2:	68bb      	ldr	r3, [r7, #8]
 810e5a4:	3301      	adds	r3, #1
 810e5a6:	60bb      	str	r3, [r7, #8]
 810e5a8:	68bb      	ldr	r3, [r7, #8]
 810e5aa:	2b16      	cmp	r3, #22
 810e5ac:	d9a1      	bls.n	810e4f2 <ResMgr_Init+0x2a>
 810e5ae:	4b11      	ldr	r3, [pc, #68]	@ (810e5f4 <ResMgr_Init+0x12c>)
 810e5b0:	225a      	movs	r2, #90	@ 0x5a
 810e5b2:	f8c3 21c0 	str.w	r2, [r3, #448]	@ 0x1c0
 810e5b6:	2100      	movs	r1, #0
 810e5b8:	201f      	movs	r0, #31
 810e5ba:	f7f8 fa1b 	bl	81069f4 <HAL_HSEM_Release>
 810e5be:	687b      	ldr	r3, [r7, #4]
 810e5c0:	2b00      	cmp	r3, #0
 810e5c2:	d102      	bne.n	810e5ca <ResMgr_Init+0x102>
 810e5c4:	683b      	ldr	r3, [r7, #0]
 810e5c6:	2b00      	cmp	r3, #0
 810e5c8:	d00c      	beq.n	810e5e4 <ResMgr_Init+0x11c>
 810e5ca:	4a0c      	ldr	r2, [pc, #48]	@ (810e5fc <ResMgr_Init+0x134>)
 810e5cc:	687b      	ldr	r3, [r7, #4]
 810e5ce:	6013      	str	r3, [r2, #0]
 810e5d0:	4a0b      	ldr	r2, [pc, #44]	@ (810e600 <ResMgr_Init+0x138>)
 810e5d2:	683b      	ldr	r3, [r7, #0]
 810e5d4:	6013      	str	r3, [r2, #0]
 810e5d6:	4b0a      	ldr	r3, [pc, #40]	@ (810e600 <ResMgr_Init+0x138>)
 810e5d8:	681b      	ldr	r3, [r3, #0]
 810e5da:	2100      	movs	r1, #0
 810e5dc:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 810e5e0:	4798      	blx	r3
 810e5e2:	e001      	b.n	810e5e8 <ResMgr_Init+0x120>
 810e5e4:	2301      	movs	r3, #1
 810e5e6:	73fb      	strb	r3, [r7, #15]
 810e5e8:	7bfb      	ldrb	r3, [r7, #15]
 810e5ea:	4618      	mov	r0, r3
 810e5ec:	3710      	adds	r7, #16
 810e5ee:	46bd      	mov	sp, r7
 810e5f0:	bd80      	pop	{r7, pc}
 810e5f2:	bf00      	nop
 810e5f4:	100001dc 	.word	0x100001dc
 810e5f8:	081118a0 	.word	0x081118a0
 810e5fc:	10004fd8 	.word	0x10004fd8
 810e600:	10004fdc 	.word	0x10004fdc

0810e604 <ResMgr_Request>:
 810e604:	b580      	push	{r7, lr}
 810e606:	b086      	sub	sp, #24
 810e608:	af00      	add	r7, sp, #0
 810e60a:	60f8      	str	r0, [r7, #12]
 810e60c:	60b9      	str	r1, [r7, #8]
 810e60e:	607a      	str	r2, [r7, #4]
 810e610:	603b      	str	r3, [r7, #0]
 810e612:	2300      	movs	r3, #0
 810e614:	75fb      	strb	r3, [r7, #23]
 810e616:	68fb      	ldr	r3, [r7, #12]
 810e618:	2b16      	cmp	r3, #22
 810e61a:	f200 80f5 	bhi.w	810e808 <ResMgr_Request+0x204>
 810e61e:	201f      	movs	r0, #31
 810e620:	f7f8 f9ce 	bl	81069c0 <HAL_HSEM_FastTake>
 810e624:	4603      	mov	r3, r0
 810e626:	2b00      	cmp	r3, #0
 810e628:	d1f9      	bne.n	810e61e <ResMgr_Request+0x1a>
 810e62a:	497b      	ldr	r1, [pc, #492]	@ (810e818 <ResMgr_Request+0x214>)
 810e62c:	68fa      	ldr	r2, [r7, #12]
 810e62e:	4613      	mov	r3, r2
 810e630:	009b      	lsls	r3, r3, #2
 810e632:	4413      	add	r3, r2
 810e634:	009b      	lsls	r3, r3, #2
 810e636:	440b      	add	r3, r1
 810e638:	3308      	adds	r3, #8
 810e63a:	681b      	ldr	r3, [r3, #0]
 810e63c:	2b00      	cmp	r3, #0
 810e63e:	d019      	beq.n	810e674 <ResMgr_Request+0x70>
 810e640:	4975      	ldr	r1, [pc, #468]	@ (810e818 <ResMgr_Request+0x214>)
 810e642:	68fa      	ldr	r2, [r7, #12]
 810e644:	4613      	mov	r3, r2
 810e646:	009b      	lsls	r3, r3, #2
 810e648:	4413      	add	r3, r2
 810e64a:	009b      	lsls	r3, r3, #2
 810e64c:	440b      	add	r3, r1
 810e64e:	3308      	adds	r3, #8
 810e650:	681b      	ldr	r3, [r3, #0]
 810e652:	2b01      	cmp	r3, #1
 810e654:	d165      	bne.n	810e722 <ResMgr_Request+0x11e>
 810e656:	4970      	ldr	r1, [pc, #448]	@ (810e818 <ResMgr_Request+0x214>)
 810e658:	68fa      	ldr	r2, [r7, #12]
 810e65a:	4613      	mov	r3, r2
 810e65c:	009b      	lsls	r3, r3, #2
 810e65e:	4413      	add	r3, r2
 810e660:	009b      	lsls	r3, r3, #2
 810e662:	440b      	add	r3, r1
 810e664:	3304      	adds	r3, #4
 810e666:	681a      	ldr	r2, [r3, #0]
 810e668:	68bb      	ldr	r3, [r7, #8]
 810e66a:	4053      	eors	r3, r2
 810e66c:	f003 0318 	and.w	r3, r3, #24
 810e670:	2b00      	cmp	r3, #0
 810e672:	d156      	bne.n	810e722 <ResMgr_Request+0x11e>
 810e674:	683b      	ldr	r3, [r7, #0]
 810e676:	2b00      	cmp	r3, #0
 810e678:	d02c      	beq.n	810e6d4 <ResMgr_Request+0xd0>
 810e67a:	68bb      	ldr	r3, [r7, #8]
 810e67c:	f003 0301 	and.w	r3, r3, #1
 810e680:	2b00      	cmp	r3, #0
 810e682:	d01d      	beq.n	810e6c0 <ResMgr_Request+0xbc>
 810e684:	4964      	ldr	r1, [pc, #400]	@ (810e818 <ResMgr_Request+0x214>)
 810e686:	68fa      	ldr	r2, [r7, #12]
 810e688:	4613      	mov	r3, r2
 810e68a:	009b      	lsls	r3, r3, #2
 810e68c:	4413      	add	r3, r2
 810e68e:	009b      	lsls	r3, r3, #2
 810e690:	440b      	add	r3, r1
 810e692:	3310      	adds	r3, #16
 810e694:	681b      	ldr	r3, [r3, #0]
 810e696:	2b00      	cmp	r3, #0
 810e698:	d00c      	beq.n	810e6b4 <ResMgr_Request+0xb0>
 810e69a:	495f      	ldr	r1, [pc, #380]	@ (810e818 <ResMgr_Request+0x214>)
 810e69c:	68fa      	ldr	r2, [r7, #12]
 810e69e:	4613      	mov	r3, r2
 810e6a0:	009b      	lsls	r3, r3, #2
 810e6a2:	4413      	add	r3, r2
 810e6a4:	009b      	lsls	r3, r3, #2
 810e6a6:	440b      	add	r3, r1
 810e6a8:	3310      	adds	r3, #16
 810e6aa:	681b      	ldr	r3, [r3, #0]
 810e6ac:	461a      	mov	r2, r3
 810e6ae:	683b      	ldr	r3, [r7, #0]
 810e6b0:	601a      	str	r2, [r3, #0]
 810e6b2:	e00f      	b.n	810e6d4 <ResMgr_Request+0xd0>
 810e6b4:	2100      	movs	r1, #0
 810e6b6:	201f      	movs	r0, #31
 810e6b8:	f7f8 f99c 	bl	81069f4 <HAL_HSEM_Release>
 810e6bc:	2301      	movs	r3, #1
 810e6be:	e0a6      	b.n	810e80e <ResMgr_Request+0x20a>
 810e6c0:	4955      	ldr	r1, [pc, #340]	@ (810e818 <ResMgr_Request+0x214>)
 810e6c2:	68fa      	ldr	r2, [r7, #12]
 810e6c4:	4613      	mov	r3, r2
 810e6c6:	009b      	lsls	r3, r3, #2
 810e6c8:	4413      	add	r3, r2
 810e6ca:	009b      	lsls	r3, r3, #2
 810e6cc:	440b      	add	r3, r1
 810e6ce:	3310      	adds	r3, #16
 810e6d0:	683a      	ldr	r2, [r7, #0]
 810e6d2:	601a      	str	r2, [r3, #0]
 810e6d4:	68bb      	ldr	r3, [r7, #8]
 810e6d6:	f023 0306 	bic.w	r3, r3, #6
 810e6da:	f043 0102 	orr.w	r1, r3, #2
 810e6de:	484e      	ldr	r0, [pc, #312]	@ (810e818 <ResMgr_Request+0x214>)
 810e6e0:	68fa      	ldr	r2, [r7, #12]
 810e6e2:	4613      	mov	r3, r2
 810e6e4:	009b      	lsls	r3, r3, #2
 810e6e6:	4413      	add	r3, r2
 810e6e8:	009b      	lsls	r3, r3, #2
 810e6ea:	4403      	add	r3, r0
 810e6ec:	3304      	adds	r3, #4
 810e6ee:	6019      	str	r1, [r3, #0]
 810e6f0:	4949      	ldr	r1, [pc, #292]	@ (810e818 <ResMgr_Request+0x214>)
 810e6f2:	68fa      	ldr	r2, [r7, #12]
 810e6f4:	4613      	mov	r3, r2
 810e6f6:	009b      	lsls	r3, r3, #2
 810e6f8:	4413      	add	r3, r2
 810e6fa:	009b      	lsls	r3, r3, #2
 810e6fc:	440b      	add	r3, r1
 810e6fe:	3308      	adds	r3, #8
 810e700:	2201      	movs	r2, #1
 810e702:	601a      	str	r2, [r3, #0]
 810e704:	2100      	movs	r1, #0
 810e706:	201f      	movs	r0, #31
 810e708:	f7f8 f974 	bl	81069f4 <HAL_HSEM_Release>
 810e70c:	4b43      	ldr	r3, [pc, #268]	@ (810e81c <ResMgr_Request+0x218>)
 810e70e:	681b      	ldr	r3, [r3, #0]
 810e710:	2101      	movs	r1, #1
 810e712:	68f8      	ldr	r0, [r7, #12]
 810e714:	4798      	blx	r3
 810e716:	4b42      	ldr	r3, [pc, #264]	@ (810e820 <ResMgr_Request+0x21c>)
 810e718:	681b      	ldr	r3, [r3, #0]
 810e71a:	2111      	movs	r1, #17
 810e71c:	68f8      	ldr	r0, [r7, #12]
 810e71e:	4798      	blx	r3
 810e720:	e074      	b.n	810e80c <ResMgr_Request+0x208>
 810e722:	2302      	movs	r3, #2
 810e724:	75fb      	strb	r3, [r7, #23]
 810e726:	68bb      	ldr	r3, [r7, #8]
 810e728:	f003 0306 	and.w	r3, r3, #6
 810e72c:	2b02      	cmp	r3, #2
 810e72e:	d10e      	bne.n	810e74e <ResMgr_Request+0x14a>
 810e730:	2100      	movs	r1, #0
 810e732:	201f      	movs	r0, #31
 810e734:	f7f8 f95e 	bl	81069f4 <HAL_HSEM_Release>
 810e738:	4b38      	ldr	r3, [pc, #224]	@ (810e81c <ResMgr_Request+0x218>)
 810e73a:	681b      	ldr	r3, [r3, #0]
 810e73c:	2105      	movs	r1, #5
 810e73e:	68f8      	ldr	r0, [r7, #12]
 810e740:	4798      	blx	r3
 810e742:	4b37      	ldr	r3, [pc, #220]	@ (810e820 <ResMgr_Request+0x21c>)
 810e744:	681b      	ldr	r3, [r3, #0]
 810e746:	2115      	movs	r1, #21
 810e748:	68f8      	ldr	r0, [r7, #12]
 810e74a:	4798      	blx	r3
 810e74c:	e05e      	b.n	810e80c <ResMgr_Request+0x208>
 810e74e:	68bb      	ldr	r3, [r7, #8]
 810e750:	f003 0306 	and.w	r3, r3, #6
 810e754:	2b04      	cmp	r3, #4
 810e756:	d154      	bne.n	810e802 <ResMgr_Request+0x1fe>
 810e758:	492f      	ldr	r1, [pc, #188]	@ (810e818 <ResMgr_Request+0x214>)
 810e75a:	68fa      	ldr	r2, [r7, #12]
 810e75c:	4613      	mov	r3, r2
 810e75e:	009b      	lsls	r3, r3, #2
 810e760:	4413      	add	r3, r2
 810e762:	009b      	lsls	r3, r3, #2
 810e764:	440b      	add	r3, r1
 810e766:	3304      	adds	r3, #4
 810e768:	681b      	ldr	r3, [r3, #0]
 810e76a:	f003 0218 	and.w	r2, r3, #24
 810e76e:	68bb      	ldr	r3, [r7, #8]
 810e770:	f023 0306 	bic.w	r3, r3, #6
 810e774:	4313      	orrs	r3, r2
 810e776:	f043 0104 	orr.w	r1, r3, #4
 810e77a:	4827      	ldr	r0, [pc, #156]	@ (810e818 <ResMgr_Request+0x214>)
 810e77c:	68fa      	ldr	r2, [r7, #12]
 810e77e:	4613      	mov	r3, r2
 810e780:	009b      	lsls	r3, r3, #2
 810e782:	4413      	add	r3, r2
 810e784:	009b      	lsls	r3, r3, #2
 810e786:	4403      	add	r3, r0
 810e788:	3304      	adds	r3, #4
 810e78a:	6019      	str	r1, [r3, #0]
 810e78c:	683b      	ldr	r3, [r7, #0]
 810e78e:	2b00      	cmp	r3, #0
 810e790:	d028      	beq.n	810e7e4 <ResMgr_Request+0x1e0>
 810e792:	68bb      	ldr	r3, [r7, #8]
 810e794:	f003 0301 	and.w	r3, r3, #1
 810e798:	2b00      	cmp	r3, #0
 810e79a:	d019      	beq.n	810e7d0 <ResMgr_Request+0x1cc>
 810e79c:	491e      	ldr	r1, [pc, #120]	@ (810e818 <ResMgr_Request+0x214>)
 810e79e:	68fa      	ldr	r2, [r7, #12]
 810e7a0:	4613      	mov	r3, r2
 810e7a2:	009b      	lsls	r3, r3, #2
 810e7a4:	4413      	add	r3, r2
 810e7a6:	009b      	lsls	r3, r3, #2
 810e7a8:	440b      	add	r3, r1
 810e7aa:	3310      	adds	r3, #16
 810e7ac:	681b      	ldr	r3, [r3, #0]
 810e7ae:	2b00      	cmp	r3, #0
 810e7b0:	d00c      	beq.n	810e7cc <ResMgr_Request+0x1c8>
 810e7b2:	4919      	ldr	r1, [pc, #100]	@ (810e818 <ResMgr_Request+0x214>)
 810e7b4:	68fa      	ldr	r2, [r7, #12]
 810e7b6:	4613      	mov	r3, r2
 810e7b8:	009b      	lsls	r3, r3, #2
 810e7ba:	4413      	add	r3, r2
 810e7bc:	009b      	lsls	r3, r3, #2
 810e7be:	440b      	add	r3, r1
 810e7c0:	3310      	adds	r3, #16
 810e7c2:	681b      	ldr	r3, [r3, #0]
 810e7c4:	461a      	mov	r2, r3
 810e7c6:	683b      	ldr	r3, [r7, #0]
 810e7c8:	601a      	str	r2, [r3, #0]
 810e7ca:	e00b      	b.n	810e7e4 <ResMgr_Request+0x1e0>
 810e7cc:	2301      	movs	r3, #1
 810e7ce:	e01e      	b.n	810e80e <ResMgr_Request+0x20a>
 810e7d0:	4911      	ldr	r1, [pc, #68]	@ (810e818 <ResMgr_Request+0x214>)
 810e7d2:	68fa      	ldr	r2, [r7, #12]
 810e7d4:	4613      	mov	r3, r2
 810e7d6:	009b      	lsls	r3, r3, #2
 810e7d8:	4413      	add	r3, r2
 810e7da:	009b      	lsls	r3, r3, #2
 810e7dc:	440b      	add	r3, r1
 810e7de:	3310      	adds	r3, #16
 810e7e0:	683a      	ldr	r2, [r7, #0]
 810e7e2:	601a      	str	r2, [r3, #0]
 810e7e4:	2100      	movs	r1, #0
 810e7e6:	201f      	movs	r0, #31
 810e7e8:	f7f8 f904 	bl	81069f4 <HAL_HSEM_Release>
 810e7ec:	4b0b      	ldr	r3, [pc, #44]	@ (810e81c <ResMgr_Request+0x218>)
 810e7ee:	681b      	ldr	r3, [r3, #0]
 810e7f0:	2104      	movs	r1, #4
 810e7f2:	68f8      	ldr	r0, [r7, #12]
 810e7f4:	4798      	blx	r3
 810e7f6:	4b0a      	ldr	r3, [pc, #40]	@ (810e820 <ResMgr_Request+0x21c>)
 810e7f8:	681b      	ldr	r3, [r3, #0]
 810e7fa:	2114      	movs	r1, #20
 810e7fc:	68f8      	ldr	r0, [r7, #12]
 810e7fe:	4798      	blx	r3
 810e800:	e004      	b.n	810e80c <ResMgr_Request+0x208>
 810e802:	2301      	movs	r3, #1
 810e804:	75fb      	strb	r3, [r7, #23]
 810e806:	e001      	b.n	810e80c <ResMgr_Request+0x208>
 810e808:	2301      	movs	r3, #1
 810e80a:	75fb      	strb	r3, [r7, #23]
 810e80c:	7dfb      	ldrb	r3, [r7, #23]
 810e80e:	4618      	mov	r0, r3
 810e810:	3718      	adds	r7, #24
 810e812:	46bd      	mov	sp, r7
 810e814:	bd80      	pop	{r7, pc}
 810e816:	bf00      	nop
 810e818:	100001dc 	.word	0x100001dc
 810e81c:	10004fd8 	.word	0x10004fd8
 810e820:	10004fdc 	.word	0x10004fdc

0810e824 <_ZdlPvj>:
 810e824:	f000 b8d8 	b.w	810e9d8 <_ZdlPv>

0810e828 <_Znwj>:
 810e828:	2801      	cmp	r0, #1
 810e82a:	bf38      	it	cc
 810e82c:	2001      	movcc	r0, #1
 810e82e:	b510      	push	{r4, lr}
 810e830:	4604      	mov	r4, r0
 810e832:	4620      	mov	r0, r4
 810e834:	f000 f8e2 	bl	810e9fc <malloc>
 810e838:	b100      	cbz	r0, 810e83c <_Znwj+0x14>
 810e83a:	bd10      	pop	{r4, pc}
 810e83c:	f000 f8ce 	bl	810e9dc <_ZSt15get_new_handlerv>
 810e840:	b908      	cbnz	r0, 810e846 <_Znwj+0x1e>
 810e842:	f000 f8d3 	bl	810e9ec <abort>
 810e846:	4780      	blx	r0
 810e848:	e7f3      	b.n	810e832 <_Znwj+0xa>

0810e84a <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>:
 810e84a:	68c3      	ldr	r3, [r0, #12]
 810e84c:	689a      	ldr	r2, [r3, #8]
 810e84e:	b510      	push	{r4, lr}
 810e850:	60c2      	str	r2, [r0, #12]
 810e852:	b102      	cbz	r2, 810e856 <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0xc>
 810e854:	6050      	str	r0, [r2, #4]
 810e856:	6842      	ldr	r2, [r0, #4]
 810e858:	605a      	str	r2, [r3, #4]
 810e85a:	680c      	ldr	r4, [r1, #0]
 810e85c:	4284      	cmp	r4, r0
 810e85e:	d103      	bne.n	810e868 <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x1e>
 810e860:	600b      	str	r3, [r1, #0]
 810e862:	6098      	str	r0, [r3, #8]
 810e864:	6043      	str	r3, [r0, #4]
 810e866:	bd10      	pop	{r4, pc}
 810e868:	6891      	ldr	r1, [r2, #8]
 810e86a:	4281      	cmp	r1, r0
 810e86c:	bf0c      	ite	eq
 810e86e:	6093      	streq	r3, [r2, #8]
 810e870:	60d3      	strne	r3, [r2, #12]
 810e872:	e7f6      	b.n	810e862 <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x18>

0810e874 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>:
 810e874:	6883      	ldr	r3, [r0, #8]
 810e876:	68da      	ldr	r2, [r3, #12]
 810e878:	b510      	push	{r4, lr}
 810e87a:	6082      	str	r2, [r0, #8]
 810e87c:	b102      	cbz	r2, 810e880 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0xc>
 810e87e:	6050      	str	r0, [r2, #4]
 810e880:	6842      	ldr	r2, [r0, #4]
 810e882:	605a      	str	r2, [r3, #4]
 810e884:	680c      	ldr	r4, [r1, #0]
 810e886:	4284      	cmp	r4, r0
 810e888:	d103      	bne.n	810e892 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x1e>
 810e88a:	600b      	str	r3, [r1, #0]
 810e88c:	60d8      	str	r0, [r3, #12]
 810e88e:	6043      	str	r3, [r0, #4]
 810e890:	bd10      	pop	{r4, pc}
 810e892:	68d1      	ldr	r1, [r2, #12]
 810e894:	4281      	cmp	r1, r0
 810e896:	bf0c      	ite	eq
 810e898:	60d3      	streq	r3, [r2, #12]
 810e89a:	6093      	strne	r3, [r2, #8]
 810e89c:	e7f6      	b.n	810e88c <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x18>

0810e89e <_ZStL23local_Rb_tree_incrementPSt18_Rb_tree_node_base>:
 810e89e:	68c2      	ldr	r2, [r0, #12]
 810e8a0:	4603      	mov	r3, r0
 810e8a2:	b122      	cbz	r2, 810e8ae <_ZStL23local_Rb_tree_incrementPSt18_Rb_tree_node_base+0x10>
 810e8a4:	4610      	mov	r0, r2
 810e8a6:	6892      	ldr	r2, [r2, #8]
 810e8a8:	2a00      	cmp	r2, #0
 810e8aa:	d1fb      	bne.n	810e8a4 <_ZStL23local_Rb_tree_incrementPSt18_Rb_tree_node_base+0x6>
 810e8ac:	4770      	bx	lr
 810e8ae:	6840      	ldr	r0, [r0, #4]
 810e8b0:	68c2      	ldr	r2, [r0, #12]
 810e8b2:	429a      	cmp	r2, r3
 810e8b4:	d004      	beq.n	810e8c0 <_ZStL23local_Rb_tree_incrementPSt18_Rb_tree_node_base+0x22>
 810e8b6:	68da      	ldr	r2, [r3, #12]
 810e8b8:	4290      	cmp	r0, r2
 810e8ba:	bf08      	it	eq
 810e8bc:	4618      	moveq	r0, r3
 810e8be:	4770      	bx	lr
 810e8c0:	4603      	mov	r3, r0
 810e8c2:	6840      	ldr	r0, [r0, #4]
 810e8c4:	e7f4      	b.n	810e8b0 <_ZStL23local_Rb_tree_incrementPSt18_Rb_tree_node_base+0x12>

0810e8c6 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>:
 810e8c6:	7802      	ldrb	r2, [r0, #0]
 810e8c8:	4603      	mov	r3, r0
 810e8ca:	b92a      	cbnz	r2, 810e8d8 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x12>
 810e8cc:	6842      	ldr	r2, [r0, #4]
 810e8ce:	6852      	ldr	r2, [r2, #4]
 810e8d0:	4282      	cmp	r2, r0
 810e8d2:	d101      	bne.n	810e8d8 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x12>
 810e8d4:	68d0      	ldr	r0, [r2, #12]
 810e8d6:	4770      	bx	lr
 810e8d8:	689a      	ldr	r2, [r3, #8]
 810e8da:	b122      	cbz	r2, 810e8e6 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x20>
 810e8dc:	4610      	mov	r0, r2
 810e8de:	68d2      	ldr	r2, [r2, #12]
 810e8e0:	2a00      	cmp	r2, #0
 810e8e2:	d1fb      	bne.n	810e8dc <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x16>
 810e8e4:	4770      	bx	lr
 810e8e6:	6858      	ldr	r0, [r3, #4]
 810e8e8:	6882      	ldr	r2, [r0, #8]
 810e8ea:	429a      	cmp	r2, r3
 810e8ec:	d000      	beq.n	810e8f0 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x2a>
 810e8ee:	4770      	bx	lr
 810e8f0:	4603      	mov	r3, r0
 810e8f2:	6840      	ldr	r0, [r0, #4]
 810e8f4:	e7f8      	b.n	810e8e8 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x22>

0810e8f6 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>:
 810e8f6:	f7ff bfd2 	b.w	810e89e <_ZStL23local_Rb_tree_incrementPSt18_Rb_tree_node_base>

0810e8fa <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>:
 810e8fa:	f7ff bfe4 	b.w	810e8c6 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>

0810e8fe <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>:
 810e8fe:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 810e902:	461d      	mov	r5, r3
 810e904:	1d1f      	adds	r7, r3, #4
 810e906:	2300      	movs	r3, #0
 810e908:	e9c1 3302 	strd	r3, r3, [r1, #8]
 810e90c:	460c      	mov	r4, r1
 810e90e:	604a      	str	r2, [r1, #4]
 810e910:	700b      	strb	r3, [r1, #0]
 810e912:	b1a0      	cbz	r0, 810e93e <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x40>
 810e914:	4295      	cmp	r5, r2
 810e916:	6091      	str	r1, [r2, #8]
 810e918:	d102      	bne.n	810e920 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x22>
 810e91a:	6069      	str	r1, [r5, #4]
 810e91c:	60ec      	str	r4, [r5, #12]
 810e91e:	e003      	b.n	810e928 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x2a>
 810e920:	68ab      	ldr	r3, [r5, #8]
 810e922:	4293      	cmp	r3, r2
 810e924:	bf08      	it	eq
 810e926:	60a9      	streq	r1, [r5, #8]
 810e928:	f04f 0900 	mov.w	r9, #0
 810e92c:	f04f 0801 	mov.w	r8, #1
 810e930:	686b      	ldr	r3, [r5, #4]
 810e932:	42a3      	cmp	r3, r4
 810e934:	d132      	bne.n	810e99c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x9e>
 810e936:	2201      	movs	r2, #1
 810e938:	701a      	strb	r2, [r3, #0]
 810e93a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 810e93e:	60d1      	str	r1, [r2, #12]
 810e940:	68eb      	ldr	r3, [r5, #12]
 810e942:	4293      	cmp	r3, r2
 810e944:	d1f0      	bne.n	810e928 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x2a>
 810e946:	e7e9      	b.n	810e91c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x1e>
 810e948:	68c3      	ldr	r3, [r0, #12]
 810e94a:	42a3      	cmp	r3, r4
 810e94c:	d103      	bne.n	810e956 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x58>
 810e94e:	4639      	mov	r1, r7
 810e950:	f7ff ff7b 	bl	810e84a <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>
 810e954:	4604      	mov	r4, r0
 810e956:	6863      	ldr	r3, [r4, #4]
 810e958:	4639      	mov	r1, r7
 810e95a:	f883 8000 	strb.w	r8, [r3]
 810e95e:	4630      	mov	r0, r6
 810e960:	f886 9000 	strb.w	r9, [r6]
 810e964:	f7ff ff86 	bl	810e874 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>
 810e968:	e7e2      	b.n	810e930 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x32>
 810e96a:	b133      	cbz	r3, 810e97a <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x7c>
 810e96c:	781a      	ldrb	r2, [r3, #0]
 810e96e:	b922      	cbnz	r2, 810e97a <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x7c>
 810e970:	f880 8000 	strb.w	r8, [r0]
 810e974:	f883 8000 	strb.w	r8, [r3]
 810e978:	e021      	b.n	810e9be <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xc0>
 810e97a:	6883      	ldr	r3, [r0, #8]
 810e97c:	42a3      	cmp	r3, r4
 810e97e:	d103      	bne.n	810e988 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x8a>
 810e980:	4639      	mov	r1, r7
 810e982:	f7ff ff77 	bl	810e874 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>
 810e986:	4604      	mov	r4, r0
 810e988:	6863      	ldr	r3, [r4, #4]
 810e98a:	4639      	mov	r1, r7
 810e98c:	f883 8000 	strb.w	r8, [r3]
 810e990:	4630      	mov	r0, r6
 810e992:	f886 9000 	strb.w	r9, [r6]
 810e996:	f7ff ff58 	bl	810e84a <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>
 810e99a:	e7c9      	b.n	810e930 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x32>
 810e99c:	6860      	ldr	r0, [r4, #4]
 810e99e:	7802      	ldrb	r2, [r0, #0]
 810e9a0:	2a00      	cmp	r2, #0
 810e9a2:	d1c8      	bne.n	810e936 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x38>
 810e9a4:	6846      	ldr	r6, [r0, #4]
 810e9a6:	68b3      	ldr	r3, [r6, #8]
 810e9a8:	4283      	cmp	r3, r0
 810e9aa:	d1de      	bne.n	810e96a <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x6c>
 810e9ac:	68f2      	ldr	r2, [r6, #12]
 810e9ae:	2a00      	cmp	r2, #0
 810e9b0:	d0ca      	beq.n	810e948 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x4a>
 810e9b2:	7811      	ldrb	r1, [r2, #0]
 810e9b4:	2900      	cmp	r1, #0
 810e9b6:	d1c7      	bne.n	810e948 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x4a>
 810e9b8:	2101      	movs	r1, #1
 810e9ba:	7019      	strb	r1, [r3, #0]
 810e9bc:	7011      	strb	r1, [r2, #0]
 810e9be:	f886 9000 	strb.w	r9, [r6]
 810e9c2:	4634      	mov	r4, r6
 810e9c4:	e7b4      	b.n	810e930 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x32>

0810e9c6 <_ZSt17__throw_bad_allocv>:
 810e9c6:	b508      	push	{r3, lr}
 810e9c8:	f000 f810 	bl	810e9ec <abort>

0810e9cc <_ZSt28__throw_bad_array_new_lengthv>:
 810e9cc:	b508      	push	{r3, lr}
 810e9ce:	f000 f80d 	bl	810e9ec <abort>

0810e9d2 <_ZSt20__throw_length_errorPKc>:
 810e9d2:	b508      	push	{r3, lr}
 810e9d4:	f000 f80a 	bl	810e9ec <abort>

0810e9d8 <_ZdlPv>:
 810e9d8:	f000 b818 	b.w	810ea0c <free>

0810e9dc <_ZSt15get_new_handlerv>:
 810e9dc:	4b02      	ldr	r3, [pc, #8]	@ (810e9e8 <_ZSt15get_new_handlerv+0xc>)
 810e9de:	6818      	ldr	r0, [r3, #0]
 810e9e0:	f3bf 8f5b 	dmb	ish
 810e9e4:	4770      	bx	lr
 810e9e6:	bf00      	nop
 810e9e8:	10004fe0 	.word	0x10004fe0

0810e9ec <abort>:
 810e9ec:	b508      	push	{r3, lr}
 810e9ee:	2006      	movs	r0, #6
 810e9f0:	f000 ff74 	bl	810f8dc <raise>
 810e9f4:	2001      	movs	r0, #1
 810e9f6:	f7f6 fe7f 	bl	81056f8 <_exit>
	...

0810e9fc <malloc>:
 810e9fc:	4b02      	ldr	r3, [pc, #8]	@ (810ea08 <malloc+0xc>)
 810e9fe:	4601      	mov	r1, r0
 810ea00:	6818      	ldr	r0, [r3, #0]
 810ea02:	f000 b82d 	b.w	810ea60 <_malloc_r>
 810ea06:	bf00      	nop
 810ea08:	10000020 	.word	0x10000020

0810ea0c <free>:
 810ea0c:	4b02      	ldr	r3, [pc, #8]	@ (810ea18 <free+0xc>)
 810ea0e:	4601      	mov	r1, r0
 810ea10:	6818      	ldr	r0, [r3, #0]
 810ea12:	f001 becd 	b.w	81107b0 <_free_r>
 810ea16:	bf00      	nop
 810ea18:	10000020 	.word	0x10000020

0810ea1c <sbrk_aligned>:
 810ea1c:	b570      	push	{r4, r5, r6, lr}
 810ea1e:	4e0f      	ldr	r6, [pc, #60]	@ (810ea5c <sbrk_aligned+0x40>)
 810ea20:	460c      	mov	r4, r1
 810ea22:	6831      	ldr	r1, [r6, #0]
 810ea24:	4605      	mov	r5, r0
 810ea26:	b911      	cbnz	r1, 810ea2e <sbrk_aligned+0x12>
 810ea28:	f001 f80a 	bl	810fa40 <_sbrk_r>
 810ea2c:	6030      	str	r0, [r6, #0]
 810ea2e:	4621      	mov	r1, r4
 810ea30:	4628      	mov	r0, r5
 810ea32:	f001 f805 	bl	810fa40 <_sbrk_r>
 810ea36:	1c43      	adds	r3, r0, #1
 810ea38:	d103      	bne.n	810ea42 <sbrk_aligned+0x26>
 810ea3a:	f04f 34ff 	mov.w	r4, #4294967295
 810ea3e:	4620      	mov	r0, r4
 810ea40:	bd70      	pop	{r4, r5, r6, pc}
 810ea42:	1cc4      	adds	r4, r0, #3
 810ea44:	f024 0403 	bic.w	r4, r4, #3
 810ea48:	42a0      	cmp	r0, r4
 810ea4a:	d0f8      	beq.n	810ea3e <sbrk_aligned+0x22>
 810ea4c:	1a21      	subs	r1, r4, r0
 810ea4e:	4628      	mov	r0, r5
 810ea50:	f000 fff6 	bl	810fa40 <_sbrk_r>
 810ea54:	3001      	adds	r0, #1
 810ea56:	d1f2      	bne.n	810ea3e <sbrk_aligned+0x22>
 810ea58:	e7ef      	b.n	810ea3a <sbrk_aligned+0x1e>
 810ea5a:	bf00      	nop
 810ea5c:	10004fe4 	.word	0x10004fe4

0810ea60 <_malloc_r>:
 810ea60:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 810ea64:	1ccd      	adds	r5, r1, #3
 810ea66:	f025 0503 	bic.w	r5, r5, #3
 810ea6a:	3508      	adds	r5, #8
 810ea6c:	2d0c      	cmp	r5, #12
 810ea6e:	bf38      	it	cc
 810ea70:	250c      	movcc	r5, #12
 810ea72:	2d00      	cmp	r5, #0
 810ea74:	4606      	mov	r6, r0
 810ea76:	db01      	blt.n	810ea7c <_malloc_r+0x1c>
 810ea78:	42a9      	cmp	r1, r5
 810ea7a:	d904      	bls.n	810ea86 <_malloc_r+0x26>
 810ea7c:	230c      	movs	r3, #12
 810ea7e:	6033      	str	r3, [r6, #0]
 810ea80:	2000      	movs	r0, #0
 810ea82:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 810ea86:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 810eb5c <_malloc_r+0xfc>
 810ea8a:	f000 f869 	bl	810eb60 <__malloc_lock>
 810ea8e:	f8d8 3000 	ldr.w	r3, [r8]
 810ea92:	461c      	mov	r4, r3
 810ea94:	bb44      	cbnz	r4, 810eae8 <_malloc_r+0x88>
 810ea96:	4629      	mov	r1, r5
 810ea98:	4630      	mov	r0, r6
 810ea9a:	f7ff ffbf 	bl	810ea1c <sbrk_aligned>
 810ea9e:	1c43      	adds	r3, r0, #1
 810eaa0:	4604      	mov	r4, r0
 810eaa2:	d158      	bne.n	810eb56 <_malloc_r+0xf6>
 810eaa4:	f8d8 4000 	ldr.w	r4, [r8]
 810eaa8:	4627      	mov	r7, r4
 810eaaa:	2f00      	cmp	r7, #0
 810eaac:	d143      	bne.n	810eb36 <_malloc_r+0xd6>
 810eaae:	2c00      	cmp	r4, #0
 810eab0:	d04b      	beq.n	810eb4a <_malloc_r+0xea>
 810eab2:	6823      	ldr	r3, [r4, #0]
 810eab4:	4639      	mov	r1, r7
 810eab6:	4630      	mov	r0, r6
 810eab8:	eb04 0903 	add.w	r9, r4, r3
 810eabc:	f000 ffc0 	bl	810fa40 <_sbrk_r>
 810eac0:	4581      	cmp	r9, r0
 810eac2:	d142      	bne.n	810eb4a <_malloc_r+0xea>
 810eac4:	6821      	ldr	r1, [r4, #0]
 810eac6:	1a6d      	subs	r5, r5, r1
 810eac8:	4629      	mov	r1, r5
 810eaca:	4630      	mov	r0, r6
 810eacc:	f7ff ffa6 	bl	810ea1c <sbrk_aligned>
 810ead0:	3001      	adds	r0, #1
 810ead2:	d03a      	beq.n	810eb4a <_malloc_r+0xea>
 810ead4:	6823      	ldr	r3, [r4, #0]
 810ead6:	442b      	add	r3, r5
 810ead8:	6023      	str	r3, [r4, #0]
 810eada:	f8d8 3000 	ldr.w	r3, [r8]
 810eade:	685a      	ldr	r2, [r3, #4]
 810eae0:	bb62      	cbnz	r2, 810eb3c <_malloc_r+0xdc>
 810eae2:	f8c8 7000 	str.w	r7, [r8]
 810eae6:	e00f      	b.n	810eb08 <_malloc_r+0xa8>
 810eae8:	6822      	ldr	r2, [r4, #0]
 810eaea:	1b52      	subs	r2, r2, r5
 810eaec:	d420      	bmi.n	810eb30 <_malloc_r+0xd0>
 810eaee:	2a0b      	cmp	r2, #11
 810eaf0:	d917      	bls.n	810eb22 <_malloc_r+0xc2>
 810eaf2:	1961      	adds	r1, r4, r5
 810eaf4:	42a3      	cmp	r3, r4
 810eaf6:	6025      	str	r5, [r4, #0]
 810eaf8:	bf18      	it	ne
 810eafa:	6059      	strne	r1, [r3, #4]
 810eafc:	6863      	ldr	r3, [r4, #4]
 810eafe:	bf08      	it	eq
 810eb00:	f8c8 1000 	streq.w	r1, [r8]
 810eb04:	5162      	str	r2, [r4, r5]
 810eb06:	604b      	str	r3, [r1, #4]
 810eb08:	4630      	mov	r0, r6
 810eb0a:	f000 f82f 	bl	810eb6c <__malloc_unlock>
 810eb0e:	f104 000b 	add.w	r0, r4, #11
 810eb12:	1d23      	adds	r3, r4, #4
 810eb14:	f020 0007 	bic.w	r0, r0, #7
 810eb18:	1ac2      	subs	r2, r0, r3
 810eb1a:	bf1c      	itt	ne
 810eb1c:	1a1b      	subne	r3, r3, r0
 810eb1e:	50a3      	strne	r3, [r4, r2]
 810eb20:	e7af      	b.n	810ea82 <_malloc_r+0x22>
 810eb22:	6862      	ldr	r2, [r4, #4]
 810eb24:	42a3      	cmp	r3, r4
 810eb26:	bf0c      	ite	eq
 810eb28:	f8c8 2000 	streq.w	r2, [r8]
 810eb2c:	605a      	strne	r2, [r3, #4]
 810eb2e:	e7eb      	b.n	810eb08 <_malloc_r+0xa8>
 810eb30:	4623      	mov	r3, r4
 810eb32:	6864      	ldr	r4, [r4, #4]
 810eb34:	e7ae      	b.n	810ea94 <_malloc_r+0x34>
 810eb36:	463c      	mov	r4, r7
 810eb38:	687f      	ldr	r7, [r7, #4]
 810eb3a:	e7b6      	b.n	810eaaa <_malloc_r+0x4a>
 810eb3c:	461a      	mov	r2, r3
 810eb3e:	685b      	ldr	r3, [r3, #4]
 810eb40:	42a3      	cmp	r3, r4
 810eb42:	d1fb      	bne.n	810eb3c <_malloc_r+0xdc>
 810eb44:	2300      	movs	r3, #0
 810eb46:	6053      	str	r3, [r2, #4]
 810eb48:	e7de      	b.n	810eb08 <_malloc_r+0xa8>
 810eb4a:	230c      	movs	r3, #12
 810eb4c:	6033      	str	r3, [r6, #0]
 810eb4e:	4630      	mov	r0, r6
 810eb50:	f000 f80c 	bl	810eb6c <__malloc_unlock>
 810eb54:	e794      	b.n	810ea80 <_malloc_r+0x20>
 810eb56:	6005      	str	r5, [r0, #0]
 810eb58:	e7d6      	b.n	810eb08 <_malloc_r+0xa8>
 810eb5a:	bf00      	nop
 810eb5c:	10004fe8 	.word	0x10004fe8

0810eb60 <__malloc_lock>:
 810eb60:	4801      	ldr	r0, [pc, #4]	@ (810eb68 <__malloc_lock+0x8>)
 810eb62:	f000 bfba 	b.w	810fada <__retarget_lock_acquire_recursive>
 810eb66:	bf00      	nop
 810eb68:	1000512c 	.word	0x1000512c

0810eb6c <__malloc_unlock>:
 810eb6c:	4801      	ldr	r0, [pc, #4]	@ (810eb74 <__malloc_unlock+0x8>)
 810eb6e:	f000 bfb5 	b.w	810fadc <__retarget_lock_release_recursive>
 810eb72:	bf00      	nop
 810eb74:	1000512c 	.word	0x1000512c

0810eb78 <__cvt>:
 810eb78:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 810eb7c:	ec57 6b10 	vmov	r6, r7, d0
 810eb80:	2f00      	cmp	r7, #0
 810eb82:	460c      	mov	r4, r1
 810eb84:	4619      	mov	r1, r3
 810eb86:	463b      	mov	r3, r7
 810eb88:	bfbb      	ittet	lt
 810eb8a:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 810eb8e:	461f      	movlt	r7, r3
 810eb90:	2300      	movge	r3, #0
 810eb92:	232d      	movlt	r3, #45	@ 0x2d
 810eb94:	700b      	strb	r3, [r1, #0]
 810eb96:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 810eb98:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 810eb9c:	4691      	mov	r9, r2
 810eb9e:	f023 0820 	bic.w	r8, r3, #32
 810eba2:	bfbc      	itt	lt
 810eba4:	4632      	movlt	r2, r6
 810eba6:	4616      	movlt	r6, r2
 810eba8:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 810ebac:	d005      	beq.n	810ebba <__cvt+0x42>
 810ebae:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 810ebb2:	d100      	bne.n	810ebb6 <__cvt+0x3e>
 810ebb4:	3401      	adds	r4, #1
 810ebb6:	2102      	movs	r1, #2
 810ebb8:	e000      	b.n	810ebbc <__cvt+0x44>
 810ebba:	2103      	movs	r1, #3
 810ebbc:	ab03      	add	r3, sp, #12
 810ebbe:	9301      	str	r3, [sp, #4]
 810ebc0:	ab02      	add	r3, sp, #8
 810ebc2:	9300      	str	r3, [sp, #0]
 810ebc4:	ec47 6b10 	vmov	d0, r6, r7
 810ebc8:	4653      	mov	r3, sl
 810ebca:	4622      	mov	r2, r4
 810ebcc:	f001 f820 	bl	810fc10 <_dtoa_r>
 810ebd0:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 810ebd4:	4605      	mov	r5, r0
 810ebd6:	d119      	bne.n	810ec0c <__cvt+0x94>
 810ebd8:	f019 0f01 	tst.w	r9, #1
 810ebdc:	d00e      	beq.n	810ebfc <__cvt+0x84>
 810ebde:	eb00 0904 	add.w	r9, r0, r4
 810ebe2:	2200      	movs	r2, #0
 810ebe4:	2300      	movs	r3, #0
 810ebe6:	4630      	mov	r0, r6
 810ebe8:	4639      	mov	r1, r7
 810ebea:	f7f1 fff5 	bl	8100bd8 <__aeabi_dcmpeq>
 810ebee:	b108      	cbz	r0, 810ebf4 <__cvt+0x7c>
 810ebf0:	f8cd 900c 	str.w	r9, [sp, #12]
 810ebf4:	2230      	movs	r2, #48	@ 0x30
 810ebf6:	9b03      	ldr	r3, [sp, #12]
 810ebf8:	454b      	cmp	r3, r9
 810ebfa:	d31e      	bcc.n	810ec3a <__cvt+0xc2>
 810ebfc:	9b03      	ldr	r3, [sp, #12]
 810ebfe:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 810ec00:	1b5b      	subs	r3, r3, r5
 810ec02:	4628      	mov	r0, r5
 810ec04:	6013      	str	r3, [r2, #0]
 810ec06:	b004      	add	sp, #16
 810ec08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 810ec0c:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 810ec10:	eb00 0904 	add.w	r9, r0, r4
 810ec14:	d1e5      	bne.n	810ebe2 <__cvt+0x6a>
 810ec16:	7803      	ldrb	r3, [r0, #0]
 810ec18:	2b30      	cmp	r3, #48	@ 0x30
 810ec1a:	d10a      	bne.n	810ec32 <__cvt+0xba>
 810ec1c:	2200      	movs	r2, #0
 810ec1e:	2300      	movs	r3, #0
 810ec20:	4630      	mov	r0, r6
 810ec22:	4639      	mov	r1, r7
 810ec24:	f7f1 ffd8 	bl	8100bd8 <__aeabi_dcmpeq>
 810ec28:	b918      	cbnz	r0, 810ec32 <__cvt+0xba>
 810ec2a:	f1c4 0401 	rsb	r4, r4, #1
 810ec2e:	f8ca 4000 	str.w	r4, [sl]
 810ec32:	f8da 3000 	ldr.w	r3, [sl]
 810ec36:	4499      	add	r9, r3
 810ec38:	e7d3      	b.n	810ebe2 <__cvt+0x6a>
 810ec3a:	1c59      	adds	r1, r3, #1
 810ec3c:	9103      	str	r1, [sp, #12]
 810ec3e:	701a      	strb	r2, [r3, #0]
 810ec40:	e7d9      	b.n	810ebf6 <__cvt+0x7e>

0810ec42 <__exponent>:
 810ec42:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 810ec44:	2900      	cmp	r1, #0
 810ec46:	bfba      	itte	lt
 810ec48:	4249      	neglt	r1, r1
 810ec4a:	232d      	movlt	r3, #45	@ 0x2d
 810ec4c:	232b      	movge	r3, #43	@ 0x2b
 810ec4e:	2909      	cmp	r1, #9
 810ec50:	7002      	strb	r2, [r0, #0]
 810ec52:	7043      	strb	r3, [r0, #1]
 810ec54:	dd29      	ble.n	810ecaa <__exponent+0x68>
 810ec56:	f10d 0307 	add.w	r3, sp, #7
 810ec5a:	461d      	mov	r5, r3
 810ec5c:	270a      	movs	r7, #10
 810ec5e:	461a      	mov	r2, r3
 810ec60:	fbb1 f6f7 	udiv	r6, r1, r7
 810ec64:	fb07 1416 	mls	r4, r7, r6, r1
 810ec68:	3430      	adds	r4, #48	@ 0x30
 810ec6a:	f802 4c01 	strb.w	r4, [r2, #-1]
 810ec6e:	460c      	mov	r4, r1
 810ec70:	2c63      	cmp	r4, #99	@ 0x63
 810ec72:	f103 33ff 	add.w	r3, r3, #4294967295
 810ec76:	4631      	mov	r1, r6
 810ec78:	dcf1      	bgt.n	810ec5e <__exponent+0x1c>
 810ec7a:	3130      	adds	r1, #48	@ 0x30
 810ec7c:	1e94      	subs	r4, r2, #2
 810ec7e:	f803 1c01 	strb.w	r1, [r3, #-1]
 810ec82:	1c41      	adds	r1, r0, #1
 810ec84:	4623      	mov	r3, r4
 810ec86:	42ab      	cmp	r3, r5
 810ec88:	d30a      	bcc.n	810eca0 <__exponent+0x5e>
 810ec8a:	f10d 0309 	add.w	r3, sp, #9
 810ec8e:	1a9b      	subs	r3, r3, r2
 810ec90:	42ac      	cmp	r4, r5
 810ec92:	bf88      	it	hi
 810ec94:	2300      	movhi	r3, #0
 810ec96:	3302      	adds	r3, #2
 810ec98:	4403      	add	r3, r0
 810ec9a:	1a18      	subs	r0, r3, r0
 810ec9c:	b003      	add	sp, #12
 810ec9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 810eca0:	f813 6b01 	ldrb.w	r6, [r3], #1
 810eca4:	f801 6f01 	strb.w	r6, [r1, #1]!
 810eca8:	e7ed      	b.n	810ec86 <__exponent+0x44>
 810ecaa:	2330      	movs	r3, #48	@ 0x30
 810ecac:	3130      	adds	r1, #48	@ 0x30
 810ecae:	7083      	strb	r3, [r0, #2]
 810ecb0:	70c1      	strb	r1, [r0, #3]
 810ecb2:	1d03      	adds	r3, r0, #4
 810ecb4:	e7f1      	b.n	810ec9a <__exponent+0x58>
	...

0810ecb8 <_printf_float>:
 810ecb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 810ecbc:	b08d      	sub	sp, #52	@ 0x34
 810ecbe:	460c      	mov	r4, r1
 810ecc0:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 810ecc4:	4616      	mov	r6, r2
 810ecc6:	461f      	mov	r7, r3
 810ecc8:	4605      	mov	r5, r0
 810ecca:	f000 fe0f 	bl	810f8ec <_localeconv_r>
 810ecce:	6803      	ldr	r3, [r0, #0]
 810ecd0:	9304      	str	r3, [sp, #16]
 810ecd2:	4618      	mov	r0, r3
 810ecd4:	f7f1 fb54 	bl	8100380 <strlen>
 810ecd8:	2300      	movs	r3, #0
 810ecda:	930a      	str	r3, [sp, #40]	@ 0x28
 810ecdc:	f8d8 3000 	ldr.w	r3, [r8]
 810ece0:	9005      	str	r0, [sp, #20]
 810ece2:	3307      	adds	r3, #7
 810ece4:	f023 0307 	bic.w	r3, r3, #7
 810ece8:	f103 0208 	add.w	r2, r3, #8
 810ecec:	f894 a018 	ldrb.w	sl, [r4, #24]
 810ecf0:	f8d4 b000 	ldr.w	fp, [r4]
 810ecf4:	f8c8 2000 	str.w	r2, [r8]
 810ecf8:	e9d3 8900 	ldrd	r8, r9, [r3]
 810ecfc:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 810ed00:	9307      	str	r3, [sp, #28]
 810ed02:	f8cd 8018 	str.w	r8, [sp, #24]
 810ed06:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 810ed0a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 810ed0e:	4b9c      	ldr	r3, [pc, #624]	@ (810ef80 <_printf_float+0x2c8>)
 810ed10:	f04f 32ff 	mov.w	r2, #4294967295
 810ed14:	f7f1 ff92 	bl	8100c3c <__aeabi_dcmpun>
 810ed18:	bb70      	cbnz	r0, 810ed78 <_printf_float+0xc0>
 810ed1a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 810ed1e:	4b98      	ldr	r3, [pc, #608]	@ (810ef80 <_printf_float+0x2c8>)
 810ed20:	f04f 32ff 	mov.w	r2, #4294967295
 810ed24:	f7f1 ff6c 	bl	8100c00 <__aeabi_dcmple>
 810ed28:	bb30      	cbnz	r0, 810ed78 <_printf_float+0xc0>
 810ed2a:	2200      	movs	r2, #0
 810ed2c:	2300      	movs	r3, #0
 810ed2e:	4640      	mov	r0, r8
 810ed30:	4649      	mov	r1, r9
 810ed32:	f7f1 ff5b 	bl	8100bec <__aeabi_dcmplt>
 810ed36:	b110      	cbz	r0, 810ed3e <_printf_float+0x86>
 810ed38:	232d      	movs	r3, #45	@ 0x2d
 810ed3a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 810ed3e:	4a91      	ldr	r2, [pc, #580]	@ (810ef84 <_printf_float+0x2cc>)
 810ed40:	4b91      	ldr	r3, [pc, #580]	@ (810ef88 <_printf_float+0x2d0>)
 810ed42:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 810ed46:	bf8c      	ite	hi
 810ed48:	4690      	movhi	r8, r2
 810ed4a:	4698      	movls	r8, r3
 810ed4c:	2303      	movs	r3, #3
 810ed4e:	6123      	str	r3, [r4, #16]
 810ed50:	f02b 0304 	bic.w	r3, fp, #4
 810ed54:	6023      	str	r3, [r4, #0]
 810ed56:	f04f 0900 	mov.w	r9, #0
 810ed5a:	9700      	str	r7, [sp, #0]
 810ed5c:	4633      	mov	r3, r6
 810ed5e:	aa0b      	add	r2, sp, #44	@ 0x2c
 810ed60:	4621      	mov	r1, r4
 810ed62:	4628      	mov	r0, r5
 810ed64:	f000 f9d2 	bl	810f10c <_printf_common>
 810ed68:	3001      	adds	r0, #1
 810ed6a:	f040 808d 	bne.w	810ee88 <_printf_float+0x1d0>
 810ed6e:	f04f 30ff 	mov.w	r0, #4294967295
 810ed72:	b00d      	add	sp, #52	@ 0x34
 810ed74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 810ed78:	4642      	mov	r2, r8
 810ed7a:	464b      	mov	r3, r9
 810ed7c:	4640      	mov	r0, r8
 810ed7e:	4649      	mov	r1, r9
 810ed80:	f7f1 ff5c 	bl	8100c3c <__aeabi_dcmpun>
 810ed84:	b140      	cbz	r0, 810ed98 <_printf_float+0xe0>
 810ed86:	464b      	mov	r3, r9
 810ed88:	2b00      	cmp	r3, #0
 810ed8a:	bfbc      	itt	lt
 810ed8c:	232d      	movlt	r3, #45	@ 0x2d
 810ed8e:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 810ed92:	4a7e      	ldr	r2, [pc, #504]	@ (810ef8c <_printf_float+0x2d4>)
 810ed94:	4b7e      	ldr	r3, [pc, #504]	@ (810ef90 <_printf_float+0x2d8>)
 810ed96:	e7d4      	b.n	810ed42 <_printf_float+0x8a>
 810ed98:	6863      	ldr	r3, [r4, #4]
 810ed9a:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 810ed9e:	9206      	str	r2, [sp, #24]
 810eda0:	1c5a      	adds	r2, r3, #1
 810eda2:	d13b      	bne.n	810ee1c <_printf_float+0x164>
 810eda4:	2306      	movs	r3, #6
 810eda6:	6063      	str	r3, [r4, #4]
 810eda8:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 810edac:	2300      	movs	r3, #0
 810edae:	6022      	str	r2, [r4, #0]
 810edb0:	9303      	str	r3, [sp, #12]
 810edb2:	ab0a      	add	r3, sp, #40	@ 0x28
 810edb4:	e9cd a301 	strd	sl, r3, [sp, #4]
 810edb8:	ab09      	add	r3, sp, #36	@ 0x24
 810edba:	9300      	str	r3, [sp, #0]
 810edbc:	6861      	ldr	r1, [r4, #4]
 810edbe:	ec49 8b10 	vmov	d0, r8, r9
 810edc2:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 810edc6:	4628      	mov	r0, r5
 810edc8:	f7ff fed6 	bl	810eb78 <__cvt>
 810edcc:	9b06      	ldr	r3, [sp, #24]
 810edce:	9909      	ldr	r1, [sp, #36]	@ 0x24
 810edd0:	2b47      	cmp	r3, #71	@ 0x47
 810edd2:	4680      	mov	r8, r0
 810edd4:	d129      	bne.n	810ee2a <_printf_float+0x172>
 810edd6:	1cc8      	adds	r0, r1, #3
 810edd8:	db02      	blt.n	810ede0 <_printf_float+0x128>
 810edda:	6863      	ldr	r3, [r4, #4]
 810eddc:	4299      	cmp	r1, r3
 810edde:	dd41      	ble.n	810ee64 <_printf_float+0x1ac>
 810ede0:	f1aa 0a02 	sub.w	sl, sl, #2
 810ede4:	fa5f fa8a 	uxtb.w	sl, sl
 810ede8:	3901      	subs	r1, #1
 810edea:	4652      	mov	r2, sl
 810edec:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 810edf0:	9109      	str	r1, [sp, #36]	@ 0x24
 810edf2:	f7ff ff26 	bl	810ec42 <__exponent>
 810edf6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 810edf8:	1813      	adds	r3, r2, r0
 810edfa:	2a01      	cmp	r2, #1
 810edfc:	4681      	mov	r9, r0
 810edfe:	6123      	str	r3, [r4, #16]
 810ee00:	dc02      	bgt.n	810ee08 <_printf_float+0x150>
 810ee02:	6822      	ldr	r2, [r4, #0]
 810ee04:	07d2      	lsls	r2, r2, #31
 810ee06:	d501      	bpl.n	810ee0c <_printf_float+0x154>
 810ee08:	3301      	adds	r3, #1
 810ee0a:	6123      	str	r3, [r4, #16]
 810ee0c:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 810ee10:	2b00      	cmp	r3, #0
 810ee12:	d0a2      	beq.n	810ed5a <_printf_float+0xa2>
 810ee14:	232d      	movs	r3, #45	@ 0x2d
 810ee16:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 810ee1a:	e79e      	b.n	810ed5a <_printf_float+0xa2>
 810ee1c:	9a06      	ldr	r2, [sp, #24]
 810ee1e:	2a47      	cmp	r2, #71	@ 0x47
 810ee20:	d1c2      	bne.n	810eda8 <_printf_float+0xf0>
 810ee22:	2b00      	cmp	r3, #0
 810ee24:	d1c0      	bne.n	810eda8 <_printf_float+0xf0>
 810ee26:	2301      	movs	r3, #1
 810ee28:	e7bd      	b.n	810eda6 <_printf_float+0xee>
 810ee2a:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 810ee2e:	d9db      	bls.n	810ede8 <_printf_float+0x130>
 810ee30:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 810ee34:	d118      	bne.n	810ee68 <_printf_float+0x1b0>
 810ee36:	2900      	cmp	r1, #0
 810ee38:	6863      	ldr	r3, [r4, #4]
 810ee3a:	dd0b      	ble.n	810ee54 <_printf_float+0x19c>
 810ee3c:	6121      	str	r1, [r4, #16]
 810ee3e:	b913      	cbnz	r3, 810ee46 <_printf_float+0x18e>
 810ee40:	6822      	ldr	r2, [r4, #0]
 810ee42:	07d0      	lsls	r0, r2, #31
 810ee44:	d502      	bpl.n	810ee4c <_printf_float+0x194>
 810ee46:	3301      	adds	r3, #1
 810ee48:	440b      	add	r3, r1
 810ee4a:	6123      	str	r3, [r4, #16]
 810ee4c:	65a1      	str	r1, [r4, #88]	@ 0x58
 810ee4e:	f04f 0900 	mov.w	r9, #0
 810ee52:	e7db      	b.n	810ee0c <_printf_float+0x154>
 810ee54:	b913      	cbnz	r3, 810ee5c <_printf_float+0x1a4>
 810ee56:	6822      	ldr	r2, [r4, #0]
 810ee58:	07d2      	lsls	r2, r2, #31
 810ee5a:	d501      	bpl.n	810ee60 <_printf_float+0x1a8>
 810ee5c:	3302      	adds	r3, #2
 810ee5e:	e7f4      	b.n	810ee4a <_printf_float+0x192>
 810ee60:	2301      	movs	r3, #1
 810ee62:	e7f2      	b.n	810ee4a <_printf_float+0x192>
 810ee64:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 810ee68:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 810ee6a:	4299      	cmp	r1, r3
 810ee6c:	db05      	blt.n	810ee7a <_printf_float+0x1c2>
 810ee6e:	6823      	ldr	r3, [r4, #0]
 810ee70:	6121      	str	r1, [r4, #16]
 810ee72:	07d8      	lsls	r0, r3, #31
 810ee74:	d5ea      	bpl.n	810ee4c <_printf_float+0x194>
 810ee76:	1c4b      	adds	r3, r1, #1
 810ee78:	e7e7      	b.n	810ee4a <_printf_float+0x192>
 810ee7a:	2900      	cmp	r1, #0
 810ee7c:	bfd4      	ite	le
 810ee7e:	f1c1 0202 	rsble	r2, r1, #2
 810ee82:	2201      	movgt	r2, #1
 810ee84:	4413      	add	r3, r2
 810ee86:	e7e0      	b.n	810ee4a <_printf_float+0x192>
 810ee88:	6823      	ldr	r3, [r4, #0]
 810ee8a:	055a      	lsls	r2, r3, #21
 810ee8c:	d407      	bmi.n	810ee9e <_printf_float+0x1e6>
 810ee8e:	6923      	ldr	r3, [r4, #16]
 810ee90:	4642      	mov	r2, r8
 810ee92:	4631      	mov	r1, r6
 810ee94:	4628      	mov	r0, r5
 810ee96:	47b8      	blx	r7
 810ee98:	3001      	adds	r0, #1
 810ee9a:	d12b      	bne.n	810eef4 <_printf_float+0x23c>
 810ee9c:	e767      	b.n	810ed6e <_printf_float+0xb6>
 810ee9e:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 810eea2:	f240 80dd 	bls.w	810f060 <_printf_float+0x3a8>
 810eea6:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 810eeaa:	2200      	movs	r2, #0
 810eeac:	2300      	movs	r3, #0
 810eeae:	f7f1 fe93 	bl	8100bd8 <__aeabi_dcmpeq>
 810eeb2:	2800      	cmp	r0, #0
 810eeb4:	d033      	beq.n	810ef1e <_printf_float+0x266>
 810eeb6:	4a37      	ldr	r2, [pc, #220]	@ (810ef94 <_printf_float+0x2dc>)
 810eeb8:	2301      	movs	r3, #1
 810eeba:	4631      	mov	r1, r6
 810eebc:	4628      	mov	r0, r5
 810eebe:	47b8      	blx	r7
 810eec0:	3001      	adds	r0, #1
 810eec2:	f43f af54 	beq.w	810ed6e <_printf_float+0xb6>
 810eec6:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 810eeca:	4543      	cmp	r3, r8
 810eecc:	db02      	blt.n	810eed4 <_printf_float+0x21c>
 810eece:	6823      	ldr	r3, [r4, #0]
 810eed0:	07d8      	lsls	r0, r3, #31
 810eed2:	d50f      	bpl.n	810eef4 <_printf_float+0x23c>
 810eed4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 810eed8:	4631      	mov	r1, r6
 810eeda:	4628      	mov	r0, r5
 810eedc:	47b8      	blx	r7
 810eede:	3001      	adds	r0, #1
 810eee0:	f43f af45 	beq.w	810ed6e <_printf_float+0xb6>
 810eee4:	f04f 0900 	mov.w	r9, #0
 810eee8:	f108 38ff 	add.w	r8, r8, #4294967295
 810eeec:	f104 0a1a 	add.w	sl, r4, #26
 810eef0:	45c8      	cmp	r8, r9
 810eef2:	dc09      	bgt.n	810ef08 <_printf_float+0x250>
 810eef4:	6823      	ldr	r3, [r4, #0]
 810eef6:	079b      	lsls	r3, r3, #30
 810eef8:	f100 8103 	bmi.w	810f102 <_printf_float+0x44a>
 810eefc:	68e0      	ldr	r0, [r4, #12]
 810eefe:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 810ef00:	4298      	cmp	r0, r3
 810ef02:	bfb8      	it	lt
 810ef04:	4618      	movlt	r0, r3
 810ef06:	e734      	b.n	810ed72 <_printf_float+0xba>
 810ef08:	2301      	movs	r3, #1
 810ef0a:	4652      	mov	r2, sl
 810ef0c:	4631      	mov	r1, r6
 810ef0e:	4628      	mov	r0, r5
 810ef10:	47b8      	blx	r7
 810ef12:	3001      	adds	r0, #1
 810ef14:	f43f af2b 	beq.w	810ed6e <_printf_float+0xb6>
 810ef18:	f109 0901 	add.w	r9, r9, #1
 810ef1c:	e7e8      	b.n	810eef0 <_printf_float+0x238>
 810ef1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 810ef20:	2b00      	cmp	r3, #0
 810ef22:	dc39      	bgt.n	810ef98 <_printf_float+0x2e0>
 810ef24:	4a1b      	ldr	r2, [pc, #108]	@ (810ef94 <_printf_float+0x2dc>)
 810ef26:	2301      	movs	r3, #1
 810ef28:	4631      	mov	r1, r6
 810ef2a:	4628      	mov	r0, r5
 810ef2c:	47b8      	blx	r7
 810ef2e:	3001      	adds	r0, #1
 810ef30:	f43f af1d 	beq.w	810ed6e <_printf_float+0xb6>
 810ef34:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 810ef38:	ea59 0303 	orrs.w	r3, r9, r3
 810ef3c:	d102      	bne.n	810ef44 <_printf_float+0x28c>
 810ef3e:	6823      	ldr	r3, [r4, #0]
 810ef40:	07d9      	lsls	r1, r3, #31
 810ef42:	d5d7      	bpl.n	810eef4 <_printf_float+0x23c>
 810ef44:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 810ef48:	4631      	mov	r1, r6
 810ef4a:	4628      	mov	r0, r5
 810ef4c:	47b8      	blx	r7
 810ef4e:	3001      	adds	r0, #1
 810ef50:	f43f af0d 	beq.w	810ed6e <_printf_float+0xb6>
 810ef54:	f04f 0a00 	mov.w	sl, #0
 810ef58:	f104 0b1a 	add.w	fp, r4, #26
 810ef5c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 810ef5e:	425b      	negs	r3, r3
 810ef60:	4553      	cmp	r3, sl
 810ef62:	dc01      	bgt.n	810ef68 <_printf_float+0x2b0>
 810ef64:	464b      	mov	r3, r9
 810ef66:	e793      	b.n	810ee90 <_printf_float+0x1d8>
 810ef68:	2301      	movs	r3, #1
 810ef6a:	465a      	mov	r2, fp
 810ef6c:	4631      	mov	r1, r6
 810ef6e:	4628      	mov	r0, r5
 810ef70:	47b8      	blx	r7
 810ef72:	3001      	adds	r0, #1
 810ef74:	f43f aefb 	beq.w	810ed6e <_printf_float+0xb6>
 810ef78:	f10a 0a01 	add.w	sl, sl, #1
 810ef7c:	e7ee      	b.n	810ef5c <_printf_float+0x2a4>
 810ef7e:	bf00      	nop
 810ef80:	7fefffff 	.word	0x7fefffff
 810ef84:	081118bb 	.word	0x081118bb
 810ef88:	081118b7 	.word	0x081118b7
 810ef8c:	081118c3 	.word	0x081118c3
 810ef90:	081118bf 	.word	0x081118bf
 810ef94:	081118c7 	.word	0x081118c7
 810ef98:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 810ef9a:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 810ef9e:	4553      	cmp	r3, sl
 810efa0:	bfa8      	it	ge
 810efa2:	4653      	movge	r3, sl
 810efa4:	2b00      	cmp	r3, #0
 810efa6:	4699      	mov	r9, r3
 810efa8:	dc36      	bgt.n	810f018 <_printf_float+0x360>
 810efaa:	f04f 0b00 	mov.w	fp, #0
 810efae:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 810efb2:	f104 021a 	add.w	r2, r4, #26
 810efb6:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 810efb8:	9306      	str	r3, [sp, #24]
 810efba:	eba3 0309 	sub.w	r3, r3, r9
 810efbe:	455b      	cmp	r3, fp
 810efc0:	dc31      	bgt.n	810f026 <_printf_float+0x36e>
 810efc2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 810efc4:	459a      	cmp	sl, r3
 810efc6:	dc3a      	bgt.n	810f03e <_printf_float+0x386>
 810efc8:	6823      	ldr	r3, [r4, #0]
 810efca:	07da      	lsls	r2, r3, #31
 810efcc:	d437      	bmi.n	810f03e <_printf_float+0x386>
 810efce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 810efd0:	ebaa 0903 	sub.w	r9, sl, r3
 810efd4:	9b06      	ldr	r3, [sp, #24]
 810efd6:	ebaa 0303 	sub.w	r3, sl, r3
 810efda:	4599      	cmp	r9, r3
 810efdc:	bfa8      	it	ge
 810efde:	4699      	movge	r9, r3
 810efe0:	f1b9 0f00 	cmp.w	r9, #0
 810efe4:	dc33      	bgt.n	810f04e <_printf_float+0x396>
 810efe6:	f04f 0800 	mov.w	r8, #0
 810efea:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 810efee:	f104 0b1a 	add.w	fp, r4, #26
 810eff2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 810eff4:	ebaa 0303 	sub.w	r3, sl, r3
 810eff8:	eba3 0309 	sub.w	r3, r3, r9
 810effc:	4543      	cmp	r3, r8
 810effe:	f77f af79 	ble.w	810eef4 <_printf_float+0x23c>
 810f002:	2301      	movs	r3, #1
 810f004:	465a      	mov	r2, fp
 810f006:	4631      	mov	r1, r6
 810f008:	4628      	mov	r0, r5
 810f00a:	47b8      	blx	r7
 810f00c:	3001      	adds	r0, #1
 810f00e:	f43f aeae 	beq.w	810ed6e <_printf_float+0xb6>
 810f012:	f108 0801 	add.w	r8, r8, #1
 810f016:	e7ec      	b.n	810eff2 <_printf_float+0x33a>
 810f018:	4642      	mov	r2, r8
 810f01a:	4631      	mov	r1, r6
 810f01c:	4628      	mov	r0, r5
 810f01e:	47b8      	blx	r7
 810f020:	3001      	adds	r0, #1
 810f022:	d1c2      	bne.n	810efaa <_printf_float+0x2f2>
 810f024:	e6a3      	b.n	810ed6e <_printf_float+0xb6>
 810f026:	2301      	movs	r3, #1
 810f028:	4631      	mov	r1, r6
 810f02a:	4628      	mov	r0, r5
 810f02c:	9206      	str	r2, [sp, #24]
 810f02e:	47b8      	blx	r7
 810f030:	3001      	adds	r0, #1
 810f032:	f43f ae9c 	beq.w	810ed6e <_printf_float+0xb6>
 810f036:	9a06      	ldr	r2, [sp, #24]
 810f038:	f10b 0b01 	add.w	fp, fp, #1
 810f03c:	e7bb      	b.n	810efb6 <_printf_float+0x2fe>
 810f03e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 810f042:	4631      	mov	r1, r6
 810f044:	4628      	mov	r0, r5
 810f046:	47b8      	blx	r7
 810f048:	3001      	adds	r0, #1
 810f04a:	d1c0      	bne.n	810efce <_printf_float+0x316>
 810f04c:	e68f      	b.n	810ed6e <_printf_float+0xb6>
 810f04e:	9a06      	ldr	r2, [sp, #24]
 810f050:	464b      	mov	r3, r9
 810f052:	4442      	add	r2, r8
 810f054:	4631      	mov	r1, r6
 810f056:	4628      	mov	r0, r5
 810f058:	47b8      	blx	r7
 810f05a:	3001      	adds	r0, #1
 810f05c:	d1c3      	bne.n	810efe6 <_printf_float+0x32e>
 810f05e:	e686      	b.n	810ed6e <_printf_float+0xb6>
 810f060:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 810f064:	f1ba 0f01 	cmp.w	sl, #1
 810f068:	dc01      	bgt.n	810f06e <_printf_float+0x3b6>
 810f06a:	07db      	lsls	r3, r3, #31
 810f06c:	d536      	bpl.n	810f0dc <_printf_float+0x424>
 810f06e:	2301      	movs	r3, #1
 810f070:	4642      	mov	r2, r8
 810f072:	4631      	mov	r1, r6
 810f074:	4628      	mov	r0, r5
 810f076:	47b8      	blx	r7
 810f078:	3001      	adds	r0, #1
 810f07a:	f43f ae78 	beq.w	810ed6e <_printf_float+0xb6>
 810f07e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 810f082:	4631      	mov	r1, r6
 810f084:	4628      	mov	r0, r5
 810f086:	47b8      	blx	r7
 810f088:	3001      	adds	r0, #1
 810f08a:	f43f ae70 	beq.w	810ed6e <_printf_float+0xb6>
 810f08e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 810f092:	2200      	movs	r2, #0
 810f094:	2300      	movs	r3, #0
 810f096:	f10a 3aff 	add.w	sl, sl, #4294967295
 810f09a:	f7f1 fd9d 	bl	8100bd8 <__aeabi_dcmpeq>
 810f09e:	b9c0      	cbnz	r0, 810f0d2 <_printf_float+0x41a>
 810f0a0:	4653      	mov	r3, sl
 810f0a2:	f108 0201 	add.w	r2, r8, #1
 810f0a6:	4631      	mov	r1, r6
 810f0a8:	4628      	mov	r0, r5
 810f0aa:	47b8      	blx	r7
 810f0ac:	3001      	adds	r0, #1
 810f0ae:	d10c      	bne.n	810f0ca <_printf_float+0x412>
 810f0b0:	e65d      	b.n	810ed6e <_printf_float+0xb6>
 810f0b2:	2301      	movs	r3, #1
 810f0b4:	465a      	mov	r2, fp
 810f0b6:	4631      	mov	r1, r6
 810f0b8:	4628      	mov	r0, r5
 810f0ba:	47b8      	blx	r7
 810f0bc:	3001      	adds	r0, #1
 810f0be:	f43f ae56 	beq.w	810ed6e <_printf_float+0xb6>
 810f0c2:	f108 0801 	add.w	r8, r8, #1
 810f0c6:	45d0      	cmp	r8, sl
 810f0c8:	dbf3      	blt.n	810f0b2 <_printf_float+0x3fa>
 810f0ca:	464b      	mov	r3, r9
 810f0cc:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 810f0d0:	e6df      	b.n	810ee92 <_printf_float+0x1da>
 810f0d2:	f04f 0800 	mov.w	r8, #0
 810f0d6:	f104 0b1a 	add.w	fp, r4, #26
 810f0da:	e7f4      	b.n	810f0c6 <_printf_float+0x40e>
 810f0dc:	2301      	movs	r3, #1
 810f0de:	4642      	mov	r2, r8
 810f0e0:	e7e1      	b.n	810f0a6 <_printf_float+0x3ee>
 810f0e2:	2301      	movs	r3, #1
 810f0e4:	464a      	mov	r2, r9
 810f0e6:	4631      	mov	r1, r6
 810f0e8:	4628      	mov	r0, r5
 810f0ea:	47b8      	blx	r7
 810f0ec:	3001      	adds	r0, #1
 810f0ee:	f43f ae3e 	beq.w	810ed6e <_printf_float+0xb6>
 810f0f2:	f108 0801 	add.w	r8, r8, #1
 810f0f6:	68e3      	ldr	r3, [r4, #12]
 810f0f8:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 810f0fa:	1a5b      	subs	r3, r3, r1
 810f0fc:	4543      	cmp	r3, r8
 810f0fe:	dcf0      	bgt.n	810f0e2 <_printf_float+0x42a>
 810f100:	e6fc      	b.n	810eefc <_printf_float+0x244>
 810f102:	f04f 0800 	mov.w	r8, #0
 810f106:	f104 0919 	add.w	r9, r4, #25
 810f10a:	e7f4      	b.n	810f0f6 <_printf_float+0x43e>

0810f10c <_printf_common>:
 810f10c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 810f110:	4616      	mov	r6, r2
 810f112:	4698      	mov	r8, r3
 810f114:	688a      	ldr	r2, [r1, #8]
 810f116:	690b      	ldr	r3, [r1, #16]
 810f118:	f8dd 9020 	ldr.w	r9, [sp, #32]
 810f11c:	4293      	cmp	r3, r2
 810f11e:	bfb8      	it	lt
 810f120:	4613      	movlt	r3, r2
 810f122:	6033      	str	r3, [r6, #0]
 810f124:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 810f128:	4607      	mov	r7, r0
 810f12a:	460c      	mov	r4, r1
 810f12c:	b10a      	cbz	r2, 810f132 <_printf_common+0x26>
 810f12e:	3301      	adds	r3, #1
 810f130:	6033      	str	r3, [r6, #0]
 810f132:	6823      	ldr	r3, [r4, #0]
 810f134:	0699      	lsls	r1, r3, #26
 810f136:	bf42      	ittt	mi
 810f138:	6833      	ldrmi	r3, [r6, #0]
 810f13a:	3302      	addmi	r3, #2
 810f13c:	6033      	strmi	r3, [r6, #0]
 810f13e:	6825      	ldr	r5, [r4, #0]
 810f140:	f015 0506 	ands.w	r5, r5, #6
 810f144:	d106      	bne.n	810f154 <_printf_common+0x48>
 810f146:	f104 0a19 	add.w	sl, r4, #25
 810f14a:	68e3      	ldr	r3, [r4, #12]
 810f14c:	6832      	ldr	r2, [r6, #0]
 810f14e:	1a9b      	subs	r3, r3, r2
 810f150:	42ab      	cmp	r3, r5
 810f152:	dc26      	bgt.n	810f1a2 <_printf_common+0x96>
 810f154:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 810f158:	6822      	ldr	r2, [r4, #0]
 810f15a:	3b00      	subs	r3, #0
 810f15c:	bf18      	it	ne
 810f15e:	2301      	movne	r3, #1
 810f160:	0692      	lsls	r2, r2, #26
 810f162:	d42b      	bmi.n	810f1bc <_printf_common+0xb0>
 810f164:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 810f168:	4641      	mov	r1, r8
 810f16a:	4638      	mov	r0, r7
 810f16c:	47c8      	blx	r9
 810f16e:	3001      	adds	r0, #1
 810f170:	d01e      	beq.n	810f1b0 <_printf_common+0xa4>
 810f172:	6823      	ldr	r3, [r4, #0]
 810f174:	6922      	ldr	r2, [r4, #16]
 810f176:	f003 0306 	and.w	r3, r3, #6
 810f17a:	2b04      	cmp	r3, #4
 810f17c:	bf02      	ittt	eq
 810f17e:	68e5      	ldreq	r5, [r4, #12]
 810f180:	6833      	ldreq	r3, [r6, #0]
 810f182:	1aed      	subeq	r5, r5, r3
 810f184:	68a3      	ldr	r3, [r4, #8]
 810f186:	bf0c      	ite	eq
 810f188:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 810f18c:	2500      	movne	r5, #0
 810f18e:	4293      	cmp	r3, r2
 810f190:	bfc4      	itt	gt
 810f192:	1a9b      	subgt	r3, r3, r2
 810f194:	18ed      	addgt	r5, r5, r3
 810f196:	2600      	movs	r6, #0
 810f198:	341a      	adds	r4, #26
 810f19a:	42b5      	cmp	r5, r6
 810f19c:	d11a      	bne.n	810f1d4 <_printf_common+0xc8>
 810f19e:	2000      	movs	r0, #0
 810f1a0:	e008      	b.n	810f1b4 <_printf_common+0xa8>
 810f1a2:	2301      	movs	r3, #1
 810f1a4:	4652      	mov	r2, sl
 810f1a6:	4641      	mov	r1, r8
 810f1a8:	4638      	mov	r0, r7
 810f1aa:	47c8      	blx	r9
 810f1ac:	3001      	adds	r0, #1
 810f1ae:	d103      	bne.n	810f1b8 <_printf_common+0xac>
 810f1b0:	f04f 30ff 	mov.w	r0, #4294967295
 810f1b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 810f1b8:	3501      	adds	r5, #1
 810f1ba:	e7c6      	b.n	810f14a <_printf_common+0x3e>
 810f1bc:	18e1      	adds	r1, r4, r3
 810f1be:	1c5a      	adds	r2, r3, #1
 810f1c0:	2030      	movs	r0, #48	@ 0x30
 810f1c2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 810f1c6:	4422      	add	r2, r4
 810f1c8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 810f1cc:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 810f1d0:	3302      	adds	r3, #2
 810f1d2:	e7c7      	b.n	810f164 <_printf_common+0x58>
 810f1d4:	2301      	movs	r3, #1
 810f1d6:	4622      	mov	r2, r4
 810f1d8:	4641      	mov	r1, r8
 810f1da:	4638      	mov	r0, r7
 810f1dc:	47c8      	blx	r9
 810f1de:	3001      	adds	r0, #1
 810f1e0:	d0e6      	beq.n	810f1b0 <_printf_common+0xa4>
 810f1e2:	3601      	adds	r6, #1
 810f1e4:	e7d9      	b.n	810f19a <_printf_common+0x8e>
	...

0810f1e8 <_printf_i>:
 810f1e8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 810f1ec:	7e0f      	ldrb	r7, [r1, #24]
 810f1ee:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 810f1f0:	2f78      	cmp	r7, #120	@ 0x78
 810f1f2:	4691      	mov	r9, r2
 810f1f4:	4680      	mov	r8, r0
 810f1f6:	460c      	mov	r4, r1
 810f1f8:	469a      	mov	sl, r3
 810f1fa:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 810f1fe:	d807      	bhi.n	810f210 <_printf_i+0x28>
 810f200:	2f62      	cmp	r7, #98	@ 0x62
 810f202:	d80a      	bhi.n	810f21a <_printf_i+0x32>
 810f204:	2f00      	cmp	r7, #0
 810f206:	f000 80d1 	beq.w	810f3ac <_printf_i+0x1c4>
 810f20a:	2f58      	cmp	r7, #88	@ 0x58
 810f20c:	f000 80b8 	beq.w	810f380 <_printf_i+0x198>
 810f210:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 810f214:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 810f218:	e03a      	b.n	810f290 <_printf_i+0xa8>
 810f21a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 810f21e:	2b15      	cmp	r3, #21
 810f220:	d8f6      	bhi.n	810f210 <_printf_i+0x28>
 810f222:	a101      	add	r1, pc, #4	@ (adr r1, 810f228 <_printf_i+0x40>)
 810f224:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 810f228:	0810f281 	.word	0x0810f281
 810f22c:	0810f295 	.word	0x0810f295
 810f230:	0810f211 	.word	0x0810f211
 810f234:	0810f211 	.word	0x0810f211
 810f238:	0810f211 	.word	0x0810f211
 810f23c:	0810f211 	.word	0x0810f211
 810f240:	0810f295 	.word	0x0810f295
 810f244:	0810f211 	.word	0x0810f211
 810f248:	0810f211 	.word	0x0810f211
 810f24c:	0810f211 	.word	0x0810f211
 810f250:	0810f211 	.word	0x0810f211
 810f254:	0810f393 	.word	0x0810f393
 810f258:	0810f2bf 	.word	0x0810f2bf
 810f25c:	0810f34d 	.word	0x0810f34d
 810f260:	0810f211 	.word	0x0810f211
 810f264:	0810f211 	.word	0x0810f211
 810f268:	0810f3b5 	.word	0x0810f3b5
 810f26c:	0810f211 	.word	0x0810f211
 810f270:	0810f2bf 	.word	0x0810f2bf
 810f274:	0810f211 	.word	0x0810f211
 810f278:	0810f211 	.word	0x0810f211
 810f27c:	0810f355 	.word	0x0810f355
 810f280:	6833      	ldr	r3, [r6, #0]
 810f282:	1d1a      	adds	r2, r3, #4
 810f284:	681b      	ldr	r3, [r3, #0]
 810f286:	6032      	str	r2, [r6, #0]
 810f288:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 810f28c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 810f290:	2301      	movs	r3, #1
 810f292:	e09c      	b.n	810f3ce <_printf_i+0x1e6>
 810f294:	6833      	ldr	r3, [r6, #0]
 810f296:	6820      	ldr	r0, [r4, #0]
 810f298:	1d19      	adds	r1, r3, #4
 810f29a:	6031      	str	r1, [r6, #0]
 810f29c:	0606      	lsls	r6, r0, #24
 810f29e:	d501      	bpl.n	810f2a4 <_printf_i+0xbc>
 810f2a0:	681d      	ldr	r5, [r3, #0]
 810f2a2:	e003      	b.n	810f2ac <_printf_i+0xc4>
 810f2a4:	0645      	lsls	r5, r0, #25
 810f2a6:	d5fb      	bpl.n	810f2a0 <_printf_i+0xb8>
 810f2a8:	f9b3 5000 	ldrsh.w	r5, [r3]
 810f2ac:	2d00      	cmp	r5, #0
 810f2ae:	da03      	bge.n	810f2b8 <_printf_i+0xd0>
 810f2b0:	232d      	movs	r3, #45	@ 0x2d
 810f2b2:	426d      	negs	r5, r5
 810f2b4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 810f2b8:	4858      	ldr	r0, [pc, #352]	@ (810f41c <_printf_i+0x234>)
 810f2ba:	230a      	movs	r3, #10
 810f2bc:	e011      	b.n	810f2e2 <_printf_i+0xfa>
 810f2be:	6821      	ldr	r1, [r4, #0]
 810f2c0:	6833      	ldr	r3, [r6, #0]
 810f2c2:	0608      	lsls	r0, r1, #24
 810f2c4:	f853 5b04 	ldr.w	r5, [r3], #4
 810f2c8:	d402      	bmi.n	810f2d0 <_printf_i+0xe8>
 810f2ca:	0649      	lsls	r1, r1, #25
 810f2cc:	bf48      	it	mi
 810f2ce:	b2ad      	uxthmi	r5, r5
 810f2d0:	2f6f      	cmp	r7, #111	@ 0x6f
 810f2d2:	4852      	ldr	r0, [pc, #328]	@ (810f41c <_printf_i+0x234>)
 810f2d4:	6033      	str	r3, [r6, #0]
 810f2d6:	bf14      	ite	ne
 810f2d8:	230a      	movne	r3, #10
 810f2da:	2308      	moveq	r3, #8
 810f2dc:	2100      	movs	r1, #0
 810f2de:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 810f2e2:	6866      	ldr	r6, [r4, #4]
 810f2e4:	60a6      	str	r6, [r4, #8]
 810f2e6:	2e00      	cmp	r6, #0
 810f2e8:	db05      	blt.n	810f2f6 <_printf_i+0x10e>
 810f2ea:	6821      	ldr	r1, [r4, #0]
 810f2ec:	432e      	orrs	r6, r5
 810f2ee:	f021 0104 	bic.w	r1, r1, #4
 810f2f2:	6021      	str	r1, [r4, #0]
 810f2f4:	d04b      	beq.n	810f38e <_printf_i+0x1a6>
 810f2f6:	4616      	mov	r6, r2
 810f2f8:	fbb5 f1f3 	udiv	r1, r5, r3
 810f2fc:	fb03 5711 	mls	r7, r3, r1, r5
 810f300:	5dc7      	ldrb	r7, [r0, r7]
 810f302:	f806 7d01 	strb.w	r7, [r6, #-1]!
 810f306:	462f      	mov	r7, r5
 810f308:	42bb      	cmp	r3, r7
 810f30a:	460d      	mov	r5, r1
 810f30c:	d9f4      	bls.n	810f2f8 <_printf_i+0x110>
 810f30e:	2b08      	cmp	r3, #8
 810f310:	d10b      	bne.n	810f32a <_printf_i+0x142>
 810f312:	6823      	ldr	r3, [r4, #0]
 810f314:	07df      	lsls	r7, r3, #31
 810f316:	d508      	bpl.n	810f32a <_printf_i+0x142>
 810f318:	6923      	ldr	r3, [r4, #16]
 810f31a:	6861      	ldr	r1, [r4, #4]
 810f31c:	4299      	cmp	r1, r3
 810f31e:	bfde      	ittt	le
 810f320:	2330      	movle	r3, #48	@ 0x30
 810f322:	f806 3c01 	strble.w	r3, [r6, #-1]
 810f326:	f106 36ff 	addle.w	r6, r6, #4294967295
 810f32a:	1b92      	subs	r2, r2, r6
 810f32c:	6122      	str	r2, [r4, #16]
 810f32e:	f8cd a000 	str.w	sl, [sp]
 810f332:	464b      	mov	r3, r9
 810f334:	aa03      	add	r2, sp, #12
 810f336:	4621      	mov	r1, r4
 810f338:	4640      	mov	r0, r8
 810f33a:	f7ff fee7 	bl	810f10c <_printf_common>
 810f33e:	3001      	adds	r0, #1
 810f340:	d14a      	bne.n	810f3d8 <_printf_i+0x1f0>
 810f342:	f04f 30ff 	mov.w	r0, #4294967295
 810f346:	b004      	add	sp, #16
 810f348:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 810f34c:	6823      	ldr	r3, [r4, #0]
 810f34e:	f043 0320 	orr.w	r3, r3, #32
 810f352:	6023      	str	r3, [r4, #0]
 810f354:	4832      	ldr	r0, [pc, #200]	@ (810f420 <_printf_i+0x238>)
 810f356:	2778      	movs	r7, #120	@ 0x78
 810f358:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 810f35c:	6823      	ldr	r3, [r4, #0]
 810f35e:	6831      	ldr	r1, [r6, #0]
 810f360:	061f      	lsls	r7, r3, #24
 810f362:	f851 5b04 	ldr.w	r5, [r1], #4
 810f366:	d402      	bmi.n	810f36e <_printf_i+0x186>
 810f368:	065f      	lsls	r7, r3, #25
 810f36a:	bf48      	it	mi
 810f36c:	b2ad      	uxthmi	r5, r5
 810f36e:	6031      	str	r1, [r6, #0]
 810f370:	07d9      	lsls	r1, r3, #31
 810f372:	bf44      	itt	mi
 810f374:	f043 0320 	orrmi.w	r3, r3, #32
 810f378:	6023      	strmi	r3, [r4, #0]
 810f37a:	b11d      	cbz	r5, 810f384 <_printf_i+0x19c>
 810f37c:	2310      	movs	r3, #16
 810f37e:	e7ad      	b.n	810f2dc <_printf_i+0xf4>
 810f380:	4826      	ldr	r0, [pc, #152]	@ (810f41c <_printf_i+0x234>)
 810f382:	e7e9      	b.n	810f358 <_printf_i+0x170>
 810f384:	6823      	ldr	r3, [r4, #0]
 810f386:	f023 0320 	bic.w	r3, r3, #32
 810f38a:	6023      	str	r3, [r4, #0]
 810f38c:	e7f6      	b.n	810f37c <_printf_i+0x194>
 810f38e:	4616      	mov	r6, r2
 810f390:	e7bd      	b.n	810f30e <_printf_i+0x126>
 810f392:	6833      	ldr	r3, [r6, #0]
 810f394:	6825      	ldr	r5, [r4, #0]
 810f396:	6961      	ldr	r1, [r4, #20]
 810f398:	1d18      	adds	r0, r3, #4
 810f39a:	6030      	str	r0, [r6, #0]
 810f39c:	062e      	lsls	r6, r5, #24
 810f39e:	681b      	ldr	r3, [r3, #0]
 810f3a0:	d501      	bpl.n	810f3a6 <_printf_i+0x1be>
 810f3a2:	6019      	str	r1, [r3, #0]
 810f3a4:	e002      	b.n	810f3ac <_printf_i+0x1c4>
 810f3a6:	0668      	lsls	r0, r5, #25
 810f3a8:	d5fb      	bpl.n	810f3a2 <_printf_i+0x1ba>
 810f3aa:	8019      	strh	r1, [r3, #0]
 810f3ac:	2300      	movs	r3, #0
 810f3ae:	6123      	str	r3, [r4, #16]
 810f3b0:	4616      	mov	r6, r2
 810f3b2:	e7bc      	b.n	810f32e <_printf_i+0x146>
 810f3b4:	6833      	ldr	r3, [r6, #0]
 810f3b6:	1d1a      	adds	r2, r3, #4
 810f3b8:	6032      	str	r2, [r6, #0]
 810f3ba:	681e      	ldr	r6, [r3, #0]
 810f3bc:	6862      	ldr	r2, [r4, #4]
 810f3be:	2100      	movs	r1, #0
 810f3c0:	4630      	mov	r0, r6
 810f3c2:	f7f0 ff8d 	bl	81002e0 <memchr>
 810f3c6:	b108      	cbz	r0, 810f3cc <_printf_i+0x1e4>
 810f3c8:	1b80      	subs	r0, r0, r6
 810f3ca:	6060      	str	r0, [r4, #4]
 810f3cc:	6863      	ldr	r3, [r4, #4]
 810f3ce:	6123      	str	r3, [r4, #16]
 810f3d0:	2300      	movs	r3, #0
 810f3d2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 810f3d6:	e7aa      	b.n	810f32e <_printf_i+0x146>
 810f3d8:	6923      	ldr	r3, [r4, #16]
 810f3da:	4632      	mov	r2, r6
 810f3dc:	4649      	mov	r1, r9
 810f3de:	4640      	mov	r0, r8
 810f3e0:	47d0      	blx	sl
 810f3e2:	3001      	adds	r0, #1
 810f3e4:	d0ad      	beq.n	810f342 <_printf_i+0x15a>
 810f3e6:	6823      	ldr	r3, [r4, #0]
 810f3e8:	079b      	lsls	r3, r3, #30
 810f3ea:	d413      	bmi.n	810f414 <_printf_i+0x22c>
 810f3ec:	68e0      	ldr	r0, [r4, #12]
 810f3ee:	9b03      	ldr	r3, [sp, #12]
 810f3f0:	4298      	cmp	r0, r3
 810f3f2:	bfb8      	it	lt
 810f3f4:	4618      	movlt	r0, r3
 810f3f6:	e7a6      	b.n	810f346 <_printf_i+0x15e>
 810f3f8:	2301      	movs	r3, #1
 810f3fa:	4632      	mov	r2, r6
 810f3fc:	4649      	mov	r1, r9
 810f3fe:	4640      	mov	r0, r8
 810f400:	47d0      	blx	sl
 810f402:	3001      	adds	r0, #1
 810f404:	d09d      	beq.n	810f342 <_printf_i+0x15a>
 810f406:	3501      	adds	r5, #1
 810f408:	68e3      	ldr	r3, [r4, #12]
 810f40a:	9903      	ldr	r1, [sp, #12]
 810f40c:	1a5b      	subs	r3, r3, r1
 810f40e:	42ab      	cmp	r3, r5
 810f410:	dcf2      	bgt.n	810f3f8 <_printf_i+0x210>
 810f412:	e7eb      	b.n	810f3ec <_printf_i+0x204>
 810f414:	2500      	movs	r5, #0
 810f416:	f104 0619 	add.w	r6, r4, #25
 810f41a:	e7f5      	b.n	810f408 <_printf_i+0x220>
 810f41c:	081118c9 	.word	0x081118c9
 810f420:	081118da 	.word	0x081118da

0810f424 <std>:
 810f424:	2300      	movs	r3, #0
 810f426:	b510      	push	{r4, lr}
 810f428:	4604      	mov	r4, r0
 810f42a:	e9c0 3300 	strd	r3, r3, [r0]
 810f42e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 810f432:	6083      	str	r3, [r0, #8]
 810f434:	8181      	strh	r1, [r0, #12]
 810f436:	6643      	str	r3, [r0, #100]	@ 0x64
 810f438:	81c2      	strh	r2, [r0, #14]
 810f43a:	6183      	str	r3, [r0, #24]
 810f43c:	4619      	mov	r1, r3
 810f43e:	2208      	movs	r2, #8
 810f440:	305c      	adds	r0, #92	@ 0x5c
 810f442:	f000 fa1b 	bl	810f87c <memset>
 810f446:	4b0d      	ldr	r3, [pc, #52]	@ (810f47c <std+0x58>)
 810f448:	6263      	str	r3, [r4, #36]	@ 0x24
 810f44a:	4b0d      	ldr	r3, [pc, #52]	@ (810f480 <std+0x5c>)
 810f44c:	62a3      	str	r3, [r4, #40]	@ 0x28
 810f44e:	4b0d      	ldr	r3, [pc, #52]	@ (810f484 <std+0x60>)
 810f450:	62e3      	str	r3, [r4, #44]	@ 0x2c
 810f452:	4b0d      	ldr	r3, [pc, #52]	@ (810f488 <std+0x64>)
 810f454:	6323      	str	r3, [r4, #48]	@ 0x30
 810f456:	4b0d      	ldr	r3, [pc, #52]	@ (810f48c <std+0x68>)
 810f458:	6224      	str	r4, [r4, #32]
 810f45a:	429c      	cmp	r4, r3
 810f45c:	d006      	beq.n	810f46c <std+0x48>
 810f45e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 810f462:	4294      	cmp	r4, r2
 810f464:	d002      	beq.n	810f46c <std+0x48>
 810f466:	33d0      	adds	r3, #208	@ 0xd0
 810f468:	429c      	cmp	r4, r3
 810f46a:	d105      	bne.n	810f478 <std+0x54>
 810f46c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 810f470:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 810f474:	f000 bb30 	b.w	810fad8 <__retarget_lock_init_recursive>
 810f478:	bd10      	pop	{r4, pc}
 810f47a:	bf00      	nop
 810f47c:	0810f699 	.word	0x0810f699
 810f480:	0810f6bb 	.word	0x0810f6bb
 810f484:	0810f6f3 	.word	0x0810f6f3
 810f488:	0810f717 	.word	0x0810f717
 810f48c:	10004fec 	.word	0x10004fec

0810f490 <stdio_exit_handler>:
 810f490:	4a02      	ldr	r2, [pc, #8]	@ (810f49c <stdio_exit_handler+0xc>)
 810f492:	4903      	ldr	r1, [pc, #12]	@ (810f4a0 <stdio_exit_handler+0x10>)
 810f494:	4803      	ldr	r0, [pc, #12]	@ (810f4a4 <stdio_exit_handler+0x14>)
 810f496:	f000 b869 	b.w	810f56c <_fwalk_sglue>
 810f49a:	bf00      	nop
 810f49c:	10000014 	.word	0x10000014
 810f4a0:	081112c5 	.word	0x081112c5
 810f4a4:	10000024 	.word	0x10000024

0810f4a8 <cleanup_stdio>:
 810f4a8:	6841      	ldr	r1, [r0, #4]
 810f4aa:	4b0c      	ldr	r3, [pc, #48]	@ (810f4dc <cleanup_stdio+0x34>)
 810f4ac:	4299      	cmp	r1, r3
 810f4ae:	b510      	push	{r4, lr}
 810f4b0:	4604      	mov	r4, r0
 810f4b2:	d001      	beq.n	810f4b8 <cleanup_stdio+0x10>
 810f4b4:	f001 ff06 	bl	81112c4 <_fflush_r>
 810f4b8:	68a1      	ldr	r1, [r4, #8]
 810f4ba:	4b09      	ldr	r3, [pc, #36]	@ (810f4e0 <cleanup_stdio+0x38>)
 810f4bc:	4299      	cmp	r1, r3
 810f4be:	d002      	beq.n	810f4c6 <cleanup_stdio+0x1e>
 810f4c0:	4620      	mov	r0, r4
 810f4c2:	f001 feff 	bl	81112c4 <_fflush_r>
 810f4c6:	68e1      	ldr	r1, [r4, #12]
 810f4c8:	4b06      	ldr	r3, [pc, #24]	@ (810f4e4 <cleanup_stdio+0x3c>)
 810f4ca:	4299      	cmp	r1, r3
 810f4cc:	d004      	beq.n	810f4d8 <cleanup_stdio+0x30>
 810f4ce:	4620      	mov	r0, r4
 810f4d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 810f4d4:	f001 bef6 	b.w	81112c4 <_fflush_r>
 810f4d8:	bd10      	pop	{r4, pc}
 810f4da:	bf00      	nop
 810f4dc:	10004fec 	.word	0x10004fec
 810f4e0:	10005054 	.word	0x10005054
 810f4e4:	100050bc 	.word	0x100050bc

0810f4e8 <global_stdio_init.part.0>:
 810f4e8:	b510      	push	{r4, lr}
 810f4ea:	4b0b      	ldr	r3, [pc, #44]	@ (810f518 <global_stdio_init.part.0+0x30>)
 810f4ec:	4c0b      	ldr	r4, [pc, #44]	@ (810f51c <global_stdio_init.part.0+0x34>)
 810f4ee:	4a0c      	ldr	r2, [pc, #48]	@ (810f520 <global_stdio_init.part.0+0x38>)
 810f4f0:	601a      	str	r2, [r3, #0]
 810f4f2:	4620      	mov	r0, r4
 810f4f4:	2200      	movs	r2, #0
 810f4f6:	2104      	movs	r1, #4
 810f4f8:	f7ff ff94 	bl	810f424 <std>
 810f4fc:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 810f500:	2201      	movs	r2, #1
 810f502:	2109      	movs	r1, #9
 810f504:	f7ff ff8e 	bl	810f424 <std>
 810f508:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 810f50c:	2202      	movs	r2, #2
 810f50e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 810f512:	2112      	movs	r1, #18
 810f514:	f7ff bf86 	b.w	810f424 <std>
 810f518:	10005124 	.word	0x10005124
 810f51c:	10004fec 	.word	0x10004fec
 810f520:	0810f491 	.word	0x0810f491

0810f524 <__sfp_lock_acquire>:
 810f524:	4801      	ldr	r0, [pc, #4]	@ (810f52c <__sfp_lock_acquire+0x8>)
 810f526:	f000 bad8 	b.w	810fada <__retarget_lock_acquire_recursive>
 810f52a:	bf00      	nop
 810f52c:	1000512d 	.word	0x1000512d

0810f530 <__sfp_lock_release>:
 810f530:	4801      	ldr	r0, [pc, #4]	@ (810f538 <__sfp_lock_release+0x8>)
 810f532:	f000 bad3 	b.w	810fadc <__retarget_lock_release_recursive>
 810f536:	bf00      	nop
 810f538:	1000512d 	.word	0x1000512d

0810f53c <__sinit>:
 810f53c:	b510      	push	{r4, lr}
 810f53e:	4604      	mov	r4, r0
 810f540:	f7ff fff0 	bl	810f524 <__sfp_lock_acquire>
 810f544:	6a23      	ldr	r3, [r4, #32]
 810f546:	b11b      	cbz	r3, 810f550 <__sinit+0x14>
 810f548:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 810f54c:	f7ff bff0 	b.w	810f530 <__sfp_lock_release>
 810f550:	4b04      	ldr	r3, [pc, #16]	@ (810f564 <__sinit+0x28>)
 810f552:	6223      	str	r3, [r4, #32]
 810f554:	4b04      	ldr	r3, [pc, #16]	@ (810f568 <__sinit+0x2c>)
 810f556:	681b      	ldr	r3, [r3, #0]
 810f558:	2b00      	cmp	r3, #0
 810f55a:	d1f5      	bne.n	810f548 <__sinit+0xc>
 810f55c:	f7ff ffc4 	bl	810f4e8 <global_stdio_init.part.0>
 810f560:	e7f2      	b.n	810f548 <__sinit+0xc>
 810f562:	bf00      	nop
 810f564:	0810f4a9 	.word	0x0810f4a9
 810f568:	10005124 	.word	0x10005124

0810f56c <_fwalk_sglue>:
 810f56c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 810f570:	4607      	mov	r7, r0
 810f572:	4688      	mov	r8, r1
 810f574:	4614      	mov	r4, r2
 810f576:	2600      	movs	r6, #0
 810f578:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 810f57c:	f1b9 0901 	subs.w	r9, r9, #1
 810f580:	d505      	bpl.n	810f58e <_fwalk_sglue+0x22>
 810f582:	6824      	ldr	r4, [r4, #0]
 810f584:	2c00      	cmp	r4, #0
 810f586:	d1f7      	bne.n	810f578 <_fwalk_sglue+0xc>
 810f588:	4630      	mov	r0, r6
 810f58a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 810f58e:	89ab      	ldrh	r3, [r5, #12]
 810f590:	2b01      	cmp	r3, #1
 810f592:	d907      	bls.n	810f5a4 <_fwalk_sglue+0x38>
 810f594:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 810f598:	3301      	adds	r3, #1
 810f59a:	d003      	beq.n	810f5a4 <_fwalk_sglue+0x38>
 810f59c:	4629      	mov	r1, r5
 810f59e:	4638      	mov	r0, r7
 810f5a0:	47c0      	blx	r8
 810f5a2:	4306      	orrs	r6, r0
 810f5a4:	3568      	adds	r5, #104	@ 0x68
 810f5a6:	e7e9      	b.n	810f57c <_fwalk_sglue+0x10>

0810f5a8 <iprintf>:
 810f5a8:	b40f      	push	{r0, r1, r2, r3}
 810f5aa:	b507      	push	{r0, r1, r2, lr}
 810f5ac:	4906      	ldr	r1, [pc, #24]	@ (810f5c8 <iprintf+0x20>)
 810f5ae:	ab04      	add	r3, sp, #16
 810f5b0:	6808      	ldr	r0, [r1, #0]
 810f5b2:	f853 2b04 	ldr.w	r2, [r3], #4
 810f5b6:	6881      	ldr	r1, [r0, #8]
 810f5b8:	9301      	str	r3, [sp, #4]
 810f5ba:	f001 fce7 	bl	8110f8c <_vfiprintf_r>
 810f5be:	b003      	add	sp, #12
 810f5c0:	f85d eb04 	ldr.w	lr, [sp], #4
 810f5c4:	b004      	add	sp, #16
 810f5c6:	4770      	bx	lr
 810f5c8:	10000020 	.word	0x10000020

0810f5cc <putchar>:
 810f5cc:	4b02      	ldr	r3, [pc, #8]	@ (810f5d8 <putchar+0xc>)
 810f5ce:	4601      	mov	r1, r0
 810f5d0:	6818      	ldr	r0, [r3, #0]
 810f5d2:	6882      	ldr	r2, [r0, #8]
 810f5d4:	f001 bf00 	b.w	81113d8 <_putc_r>
 810f5d8:	10000020 	.word	0x10000020

0810f5dc <_puts_r>:
 810f5dc:	6a03      	ldr	r3, [r0, #32]
 810f5de:	b570      	push	{r4, r5, r6, lr}
 810f5e0:	6884      	ldr	r4, [r0, #8]
 810f5e2:	4605      	mov	r5, r0
 810f5e4:	460e      	mov	r6, r1
 810f5e6:	b90b      	cbnz	r3, 810f5ec <_puts_r+0x10>
 810f5e8:	f7ff ffa8 	bl	810f53c <__sinit>
 810f5ec:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 810f5ee:	07db      	lsls	r3, r3, #31
 810f5f0:	d405      	bmi.n	810f5fe <_puts_r+0x22>
 810f5f2:	89a3      	ldrh	r3, [r4, #12]
 810f5f4:	0598      	lsls	r0, r3, #22
 810f5f6:	d402      	bmi.n	810f5fe <_puts_r+0x22>
 810f5f8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 810f5fa:	f000 fa6e 	bl	810fada <__retarget_lock_acquire_recursive>
 810f5fe:	89a3      	ldrh	r3, [r4, #12]
 810f600:	0719      	lsls	r1, r3, #28
 810f602:	d502      	bpl.n	810f60a <_puts_r+0x2e>
 810f604:	6923      	ldr	r3, [r4, #16]
 810f606:	2b00      	cmp	r3, #0
 810f608:	d135      	bne.n	810f676 <_puts_r+0x9a>
 810f60a:	4621      	mov	r1, r4
 810f60c:	4628      	mov	r0, r5
 810f60e:	f000 f8c5 	bl	810f79c <__swsetup_r>
 810f612:	b380      	cbz	r0, 810f676 <_puts_r+0x9a>
 810f614:	f04f 35ff 	mov.w	r5, #4294967295
 810f618:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 810f61a:	07da      	lsls	r2, r3, #31
 810f61c:	d405      	bmi.n	810f62a <_puts_r+0x4e>
 810f61e:	89a3      	ldrh	r3, [r4, #12]
 810f620:	059b      	lsls	r3, r3, #22
 810f622:	d402      	bmi.n	810f62a <_puts_r+0x4e>
 810f624:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 810f626:	f000 fa59 	bl	810fadc <__retarget_lock_release_recursive>
 810f62a:	4628      	mov	r0, r5
 810f62c:	bd70      	pop	{r4, r5, r6, pc}
 810f62e:	2b00      	cmp	r3, #0
 810f630:	da04      	bge.n	810f63c <_puts_r+0x60>
 810f632:	69a2      	ldr	r2, [r4, #24]
 810f634:	429a      	cmp	r2, r3
 810f636:	dc17      	bgt.n	810f668 <_puts_r+0x8c>
 810f638:	290a      	cmp	r1, #10
 810f63a:	d015      	beq.n	810f668 <_puts_r+0x8c>
 810f63c:	6823      	ldr	r3, [r4, #0]
 810f63e:	1c5a      	adds	r2, r3, #1
 810f640:	6022      	str	r2, [r4, #0]
 810f642:	7019      	strb	r1, [r3, #0]
 810f644:	68a3      	ldr	r3, [r4, #8]
 810f646:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 810f64a:	3b01      	subs	r3, #1
 810f64c:	60a3      	str	r3, [r4, #8]
 810f64e:	2900      	cmp	r1, #0
 810f650:	d1ed      	bne.n	810f62e <_puts_r+0x52>
 810f652:	2b00      	cmp	r3, #0
 810f654:	da11      	bge.n	810f67a <_puts_r+0x9e>
 810f656:	4622      	mov	r2, r4
 810f658:	210a      	movs	r1, #10
 810f65a:	4628      	mov	r0, r5
 810f65c:	f000 f85f 	bl	810f71e <__swbuf_r>
 810f660:	3001      	adds	r0, #1
 810f662:	d0d7      	beq.n	810f614 <_puts_r+0x38>
 810f664:	250a      	movs	r5, #10
 810f666:	e7d7      	b.n	810f618 <_puts_r+0x3c>
 810f668:	4622      	mov	r2, r4
 810f66a:	4628      	mov	r0, r5
 810f66c:	f000 f857 	bl	810f71e <__swbuf_r>
 810f670:	3001      	adds	r0, #1
 810f672:	d1e7      	bne.n	810f644 <_puts_r+0x68>
 810f674:	e7ce      	b.n	810f614 <_puts_r+0x38>
 810f676:	3e01      	subs	r6, #1
 810f678:	e7e4      	b.n	810f644 <_puts_r+0x68>
 810f67a:	6823      	ldr	r3, [r4, #0]
 810f67c:	1c5a      	adds	r2, r3, #1
 810f67e:	6022      	str	r2, [r4, #0]
 810f680:	220a      	movs	r2, #10
 810f682:	701a      	strb	r2, [r3, #0]
 810f684:	e7ee      	b.n	810f664 <_puts_r+0x88>
	...

0810f688 <puts>:
 810f688:	4b02      	ldr	r3, [pc, #8]	@ (810f694 <puts+0xc>)
 810f68a:	4601      	mov	r1, r0
 810f68c:	6818      	ldr	r0, [r3, #0]
 810f68e:	f7ff bfa5 	b.w	810f5dc <_puts_r>
 810f692:	bf00      	nop
 810f694:	10000020 	.word	0x10000020

0810f698 <__sread>:
 810f698:	b510      	push	{r4, lr}
 810f69a:	460c      	mov	r4, r1
 810f69c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 810f6a0:	f000 f9a8 	bl	810f9f4 <_read_r>
 810f6a4:	2800      	cmp	r0, #0
 810f6a6:	bfab      	itete	ge
 810f6a8:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 810f6aa:	89a3      	ldrhlt	r3, [r4, #12]
 810f6ac:	181b      	addge	r3, r3, r0
 810f6ae:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 810f6b2:	bfac      	ite	ge
 810f6b4:	6563      	strge	r3, [r4, #84]	@ 0x54
 810f6b6:	81a3      	strhlt	r3, [r4, #12]
 810f6b8:	bd10      	pop	{r4, pc}

0810f6ba <__swrite>:
 810f6ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 810f6be:	461f      	mov	r7, r3
 810f6c0:	898b      	ldrh	r3, [r1, #12]
 810f6c2:	05db      	lsls	r3, r3, #23
 810f6c4:	4605      	mov	r5, r0
 810f6c6:	460c      	mov	r4, r1
 810f6c8:	4616      	mov	r6, r2
 810f6ca:	d505      	bpl.n	810f6d8 <__swrite+0x1e>
 810f6cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 810f6d0:	2302      	movs	r3, #2
 810f6d2:	2200      	movs	r2, #0
 810f6d4:	f000 f97c 	bl	810f9d0 <_lseek_r>
 810f6d8:	89a3      	ldrh	r3, [r4, #12]
 810f6da:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 810f6de:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 810f6e2:	81a3      	strh	r3, [r4, #12]
 810f6e4:	4632      	mov	r2, r6
 810f6e6:	463b      	mov	r3, r7
 810f6e8:	4628      	mov	r0, r5
 810f6ea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 810f6ee:	f000 b9b7 	b.w	810fa60 <_write_r>

0810f6f2 <__sseek>:
 810f6f2:	b510      	push	{r4, lr}
 810f6f4:	460c      	mov	r4, r1
 810f6f6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 810f6fa:	f000 f969 	bl	810f9d0 <_lseek_r>
 810f6fe:	1c43      	adds	r3, r0, #1
 810f700:	89a3      	ldrh	r3, [r4, #12]
 810f702:	bf15      	itete	ne
 810f704:	6560      	strne	r0, [r4, #84]	@ 0x54
 810f706:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 810f70a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 810f70e:	81a3      	strheq	r3, [r4, #12]
 810f710:	bf18      	it	ne
 810f712:	81a3      	strhne	r3, [r4, #12]
 810f714:	bd10      	pop	{r4, pc}

0810f716 <__sclose>:
 810f716:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 810f71a:	f000 b8eb 	b.w	810f8f4 <_close_r>

0810f71e <__swbuf_r>:
 810f71e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 810f720:	460e      	mov	r6, r1
 810f722:	4614      	mov	r4, r2
 810f724:	4605      	mov	r5, r0
 810f726:	b118      	cbz	r0, 810f730 <__swbuf_r+0x12>
 810f728:	6a03      	ldr	r3, [r0, #32]
 810f72a:	b90b      	cbnz	r3, 810f730 <__swbuf_r+0x12>
 810f72c:	f7ff ff06 	bl	810f53c <__sinit>
 810f730:	69a3      	ldr	r3, [r4, #24]
 810f732:	60a3      	str	r3, [r4, #8]
 810f734:	89a3      	ldrh	r3, [r4, #12]
 810f736:	071a      	lsls	r2, r3, #28
 810f738:	d501      	bpl.n	810f73e <__swbuf_r+0x20>
 810f73a:	6923      	ldr	r3, [r4, #16]
 810f73c:	b943      	cbnz	r3, 810f750 <__swbuf_r+0x32>
 810f73e:	4621      	mov	r1, r4
 810f740:	4628      	mov	r0, r5
 810f742:	f000 f82b 	bl	810f79c <__swsetup_r>
 810f746:	b118      	cbz	r0, 810f750 <__swbuf_r+0x32>
 810f748:	f04f 37ff 	mov.w	r7, #4294967295
 810f74c:	4638      	mov	r0, r7
 810f74e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 810f750:	6823      	ldr	r3, [r4, #0]
 810f752:	6922      	ldr	r2, [r4, #16]
 810f754:	1a98      	subs	r0, r3, r2
 810f756:	6963      	ldr	r3, [r4, #20]
 810f758:	b2f6      	uxtb	r6, r6
 810f75a:	4283      	cmp	r3, r0
 810f75c:	4637      	mov	r7, r6
 810f75e:	dc05      	bgt.n	810f76c <__swbuf_r+0x4e>
 810f760:	4621      	mov	r1, r4
 810f762:	4628      	mov	r0, r5
 810f764:	f001 fdae 	bl	81112c4 <_fflush_r>
 810f768:	2800      	cmp	r0, #0
 810f76a:	d1ed      	bne.n	810f748 <__swbuf_r+0x2a>
 810f76c:	68a3      	ldr	r3, [r4, #8]
 810f76e:	3b01      	subs	r3, #1
 810f770:	60a3      	str	r3, [r4, #8]
 810f772:	6823      	ldr	r3, [r4, #0]
 810f774:	1c5a      	adds	r2, r3, #1
 810f776:	6022      	str	r2, [r4, #0]
 810f778:	701e      	strb	r6, [r3, #0]
 810f77a:	6962      	ldr	r2, [r4, #20]
 810f77c:	1c43      	adds	r3, r0, #1
 810f77e:	429a      	cmp	r2, r3
 810f780:	d004      	beq.n	810f78c <__swbuf_r+0x6e>
 810f782:	89a3      	ldrh	r3, [r4, #12]
 810f784:	07db      	lsls	r3, r3, #31
 810f786:	d5e1      	bpl.n	810f74c <__swbuf_r+0x2e>
 810f788:	2e0a      	cmp	r6, #10
 810f78a:	d1df      	bne.n	810f74c <__swbuf_r+0x2e>
 810f78c:	4621      	mov	r1, r4
 810f78e:	4628      	mov	r0, r5
 810f790:	f001 fd98 	bl	81112c4 <_fflush_r>
 810f794:	2800      	cmp	r0, #0
 810f796:	d0d9      	beq.n	810f74c <__swbuf_r+0x2e>
 810f798:	e7d6      	b.n	810f748 <__swbuf_r+0x2a>
	...

0810f79c <__swsetup_r>:
 810f79c:	b538      	push	{r3, r4, r5, lr}
 810f79e:	4b29      	ldr	r3, [pc, #164]	@ (810f844 <__swsetup_r+0xa8>)
 810f7a0:	4605      	mov	r5, r0
 810f7a2:	6818      	ldr	r0, [r3, #0]
 810f7a4:	460c      	mov	r4, r1
 810f7a6:	b118      	cbz	r0, 810f7b0 <__swsetup_r+0x14>
 810f7a8:	6a03      	ldr	r3, [r0, #32]
 810f7aa:	b90b      	cbnz	r3, 810f7b0 <__swsetup_r+0x14>
 810f7ac:	f7ff fec6 	bl	810f53c <__sinit>
 810f7b0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 810f7b4:	0719      	lsls	r1, r3, #28
 810f7b6:	d422      	bmi.n	810f7fe <__swsetup_r+0x62>
 810f7b8:	06da      	lsls	r2, r3, #27
 810f7ba:	d407      	bmi.n	810f7cc <__swsetup_r+0x30>
 810f7bc:	2209      	movs	r2, #9
 810f7be:	602a      	str	r2, [r5, #0]
 810f7c0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 810f7c4:	81a3      	strh	r3, [r4, #12]
 810f7c6:	f04f 30ff 	mov.w	r0, #4294967295
 810f7ca:	e033      	b.n	810f834 <__swsetup_r+0x98>
 810f7cc:	0758      	lsls	r0, r3, #29
 810f7ce:	d512      	bpl.n	810f7f6 <__swsetup_r+0x5a>
 810f7d0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 810f7d2:	b141      	cbz	r1, 810f7e6 <__swsetup_r+0x4a>
 810f7d4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 810f7d8:	4299      	cmp	r1, r3
 810f7da:	d002      	beq.n	810f7e2 <__swsetup_r+0x46>
 810f7dc:	4628      	mov	r0, r5
 810f7de:	f000 ffe7 	bl	81107b0 <_free_r>
 810f7e2:	2300      	movs	r3, #0
 810f7e4:	6363      	str	r3, [r4, #52]	@ 0x34
 810f7e6:	89a3      	ldrh	r3, [r4, #12]
 810f7e8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 810f7ec:	81a3      	strh	r3, [r4, #12]
 810f7ee:	2300      	movs	r3, #0
 810f7f0:	6063      	str	r3, [r4, #4]
 810f7f2:	6923      	ldr	r3, [r4, #16]
 810f7f4:	6023      	str	r3, [r4, #0]
 810f7f6:	89a3      	ldrh	r3, [r4, #12]
 810f7f8:	f043 0308 	orr.w	r3, r3, #8
 810f7fc:	81a3      	strh	r3, [r4, #12]
 810f7fe:	6923      	ldr	r3, [r4, #16]
 810f800:	b94b      	cbnz	r3, 810f816 <__swsetup_r+0x7a>
 810f802:	89a3      	ldrh	r3, [r4, #12]
 810f804:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 810f808:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 810f80c:	d003      	beq.n	810f816 <__swsetup_r+0x7a>
 810f80e:	4621      	mov	r1, r4
 810f810:	4628      	mov	r0, r5
 810f812:	f001 fda5 	bl	8111360 <__smakebuf_r>
 810f816:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 810f81a:	f013 0201 	ands.w	r2, r3, #1
 810f81e:	d00a      	beq.n	810f836 <__swsetup_r+0x9a>
 810f820:	2200      	movs	r2, #0
 810f822:	60a2      	str	r2, [r4, #8]
 810f824:	6962      	ldr	r2, [r4, #20]
 810f826:	4252      	negs	r2, r2
 810f828:	61a2      	str	r2, [r4, #24]
 810f82a:	6922      	ldr	r2, [r4, #16]
 810f82c:	b942      	cbnz	r2, 810f840 <__swsetup_r+0xa4>
 810f82e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 810f832:	d1c5      	bne.n	810f7c0 <__swsetup_r+0x24>
 810f834:	bd38      	pop	{r3, r4, r5, pc}
 810f836:	0799      	lsls	r1, r3, #30
 810f838:	bf58      	it	pl
 810f83a:	6962      	ldrpl	r2, [r4, #20]
 810f83c:	60a2      	str	r2, [r4, #8]
 810f83e:	e7f4      	b.n	810f82a <__swsetup_r+0x8e>
 810f840:	2000      	movs	r0, #0
 810f842:	e7f7      	b.n	810f834 <__swsetup_r+0x98>
 810f844:	10000020 	.word	0x10000020

0810f848 <memmove>:
 810f848:	4288      	cmp	r0, r1
 810f84a:	b510      	push	{r4, lr}
 810f84c:	eb01 0402 	add.w	r4, r1, r2
 810f850:	d902      	bls.n	810f858 <memmove+0x10>
 810f852:	4284      	cmp	r4, r0
 810f854:	4623      	mov	r3, r4
 810f856:	d807      	bhi.n	810f868 <memmove+0x20>
 810f858:	1e43      	subs	r3, r0, #1
 810f85a:	42a1      	cmp	r1, r4
 810f85c:	d008      	beq.n	810f870 <memmove+0x28>
 810f85e:	f811 2b01 	ldrb.w	r2, [r1], #1
 810f862:	f803 2f01 	strb.w	r2, [r3, #1]!
 810f866:	e7f8      	b.n	810f85a <memmove+0x12>
 810f868:	4402      	add	r2, r0
 810f86a:	4601      	mov	r1, r0
 810f86c:	428a      	cmp	r2, r1
 810f86e:	d100      	bne.n	810f872 <memmove+0x2a>
 810f870:	bd10      	pop	{r4, pc}
 810f872:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 810f876:	f802 4d01 	strb.w	r4, [r2, #-1]!
 810f87a:	e7f7      	b.n	810f86c <memmove+0x24>

0810f87c <memset>:
 810f87c:	4402      	add	r2, r0
 810f87e:	4603      	mov	r3, r0
 810f880:	4293      	cmp	r3, r2
 810f882:	d100      	bne.n	810f886 <memset+0xa>
 810f884:	4770      	bx	lr
 810f886:	f803 1b01 	strb.w	r1, [r3], #1
 810f88a:	e7f9      	b.n	810f880 <memset+0x4>

0810f88c <_raise_r>:
 810f88c:	291f      	cmp	r1, #31
 810f88e:	b538      	push	{r3, r4, r5, lr}
 810f890:	4605      	mov	r5, r0
 810f892:	460c      	mov	r4, r1
 810f894:	d904      	bls.n	810f8a0 <_raise_r+0x14>
 810f896:	2316      	movs	r3, #22
 810f898:	6003      	str	r3, [r0, #0]
 810f89a:	f04f 30ff 	mov.w	r0, #4294967295
 810f89e:	bd38      	pop	{r3, r4, r5, pc}
 810f8a0:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 810f8a2:	b112      	cbz	r2, 810f8aa <_raise_r+0x1e>
 810f8a4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 810f8a8:	b94b      	cbnz	r3, 810f8be <_raise_r+0x32>
 810f8aa:	4628      	mov	r0, r5
 810f8ac:	f000 f8c6 	bl	810fa3c <_getpid_r>
 810f8b0:	4622      	mov	r2, r4
 810f8b2:	4601      	mov	r1, r0
 810f8b4:	4628      	mov	r0, r5
 810f8b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 810f8ba:	f000 b8ad 	b.w	810fa18 <_kill_r>
 810f8be:	2b01      	cmp	r3, #1
 810f8c0:	d00a      	beq.n	810f8d8 <_raise_r+0x4c>
 810f8c2:	1c59      	adds	r1, r3, #1
 810f8c4:	d103      	bne.n	810f8ce <_raise_r+0x42>
 810f8c6:	2316      	movs	r3, #22
 810f8c8:	6003      	str	r3, [r0, #0]
 810f8ca:	2001      	movs	r0, #1
 810f8cc:	e7e7      	b.n	810f89e <_raise_r+0x12>
 810f8ce:	2100      	movs	r1, #0
 810f8d0:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 810f8d4:	4620      	mov	r0, r4
 810f8d6:	4798      	blx	r3
 810f8d8:	2000      	movs	r0, #0
 810f8da:	e7e0      	b.n	810f89e <_raise_r+0x12>

0810f8dc <raise>:
 810f8dc:	4b02      	ldr	r3, [pc, #8]	@ (810f8e8 <raise+0xc>)
 810f8de:	4601      	mov	r1, r0
 810f8e0:	6818      	ldr	r0, [r3, #0]
 810f8e2:	f7ff bfd3 	b.w	810f88c <_raise_r>
 810f8e6:	bf00      	nop
 810f8e8:	10000020 	.word	0x10000020

0810f8ec <_localeconv_r>:
 810f8ec:	4800      	ldr	r0, [pc, #0]	@ (810f8f0 <_localeconv_r+0x4>)
 810f8ee:	4770      	bx	lr
 810f8f0:	10000160 	.word	0x10000160

0810f8f4 <_close_r>:
 810f8f4:	b538      	push	{r3, r4, r5, lr}
 810f8f6:	4d06      	ldr	r5, [pc, #24]	@ (810f910 <_close_r+0x1c>)
 810f8f8:	2300      	movs	r3, #0
 810f8fa:	4604      	mov	r4, r0
 810f8fc:	4608      	mov	r0, r1
 810f8fe:	602b      	str	r3, [r5, #0]
 810f900:	f7f5 ff22 	bl	8105748 <_close>
 810f904:	1c43      	adds	r3, r0, #1
 810f906:	d102      	bne.n	810f90e <_close_r+0x1a>
 810f908:	682b      	ldr	r3, [r5, #0]
 810f90a:	b103      	cbz	r3, 810f90e <_close_r+0x1a>
 810f90c:	6023      	str	r3, [r4, #0]
 810f90e:	bd38      	pop	{r3, r4, r5, pc}
 810f910:	10005128 	.word	0x10005128

0810f914 <_reclaim_reent>:
 810f914:	4b2d      	ldr	r3, [pc, #180]	@ (810f9cc <_reclaim_reent+0xb8>)
 810f916:	681b      	ldr	r3, [r3, #0]
 810f918:	4283      	cmp	r3, r0
 810f91a:	b570      	push	{r4, r5, r6, lr}
 810f91c:	4604      	mov	r4, r0
 810f91e:	d053      	beq.n	810f9c8 <_reclaim_reent+0xb4>
 810f920:	69c3      	ldr	r3, [r0, #28]
 810f922:	b31b      	cbz	r3, 810f96c <_reclaim_reent+0x58>
 810f924:	68db      	ldr	r3, [r3, #12]
 810f926:	b163      	cbz	r3, 810f942 <_reclaim_reent+0x2e>
 810f928:	2500      	movs	r5, #0
 810f92a:	69e3      	ldr	r3, [r4, #28]
 810f92c:	68db      	ldr	r3, [r3, #12]
 810f92e:	5959      	ldr	r1, [r3, r5]
 810f930:	b9b1      	cbnz	r1, 810f960 <_reclaim_reent+0x4c>
 810f932:	3504      	adds	r5, #4
 810f934:	2d80      	cmp	r5, #128	@ 0x80
 810f936:	d1f8      	bne.n	810f92a <_reclaim_reent+0x16>
 810f938:	69e3      	ldr	r3, [r4, #28]
 810f93a:	4620      	mov	r0, r4
 810f93c:	68d9      	ldr	r1, [r3, #12]
 810f93e:	f000 ff37 	bl	81107b0 <_free_r>
 810f942:	69e3      	ldr	r3, [r4, #28]
 810f944:	6819      	ldr	r1, [r3, #0]
 810f946:	b111      	cbz	r1, 810f94e <_reclaim_reent+0x3a>
 810f948:	4620      	mov	r0, r4
 810f94a:	f000 ff31 	bl	81107b0 <_free_r>
 810f94e:	69e3      	ldr	r3, [r4, #28]
 810f950:	689d      	ldr	r5, [r3, #8]
 810f952:	b15d      	cbz	r5, 810f96c <_reclaim_reent+0x58>
 810f954:	4629      	mov	r1, r5
 810f956:	4620      	mov	r0, r4
 810f958:	682d      	ldr	r5, [r5, #0]
 810f95a:	f000 ff29 	bl	81107b0 <_free_r>
 810f95e:	e7f8      	b.n	810f952 <_reclaim_reent+0x3e>
 810f960:	680e      	ldr	r6, [r1, #0]
 810f962:	4620      	mov	r0, r4
 810f964:	f000 ff24 	bl	81107b0 <_free_r>
 810f968:	4631      	mov	r1, r6
 810f96a:	e7e1      	b.n	810f930 <_reclaim_reent+0x1c>
 810f96c:	6961      	ldr	r1, [r4, #20]
 810f96e:	b111      	cbz	r1, 810f976 <_reclaim_reent+0x62>
 810f970:	4620      	mov	r0, r4
 810f972:	f000 ff1d 	bl	81107b0 <_free_r>
 810f976:	69e1      	ldr	r1, [r4, #28]
 810f978:	b111      	cbz	r1, 810f980 <_reclaim_reent+0x6c>
 810f97a:	4620      	mov	r0, r4
 810f97c:	f000 ff18 	bl	81107b0 <_free_r>
 810f980:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 810f982:	b111      	cbz	r1, 810f98a <_reclaim_reent+0x76>
 810f984:	4620      	mov	r0, r4
 810f986:	f000 ff13 	bl	81107b0 <_free_r>
 810f98a:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 810f98c:	b111      	cbz	r1, 810f994 <_reclaim_reent+0x80>
 810f98e:	4620      	mov	r0, r4
 810f990:	f000 ff0e 	bl	81107b0 <_free_r>
 810f994:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 810f996:	b111      	cbz	r1, 810f99e <_reclaim_reent+0x8a>
 810f998:	4620      	mov	r0, r4
 810f99a:	f000 ff09 	bl	81107b0 <_free_r>
 810f99e:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 810f9a0:	b111      	cbz	r1, 810f9a8 <_reclaim_reent+0x94>
 810f9a2:	4620      	mov	r0, r4
 810f9a4:	f000 ff04 	bl	81107b0 <_free_r>
 810f9a8:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 810f9aa:	b111      	cbz	r1, 810f9b2 <_reclaim_reent+0x9e>
 810f9ac:	4620      	mov	r0, r4
 810f9ae:	f000 feff 	bl	81107b0 <_free_r>
 810f9b2:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 810f9b4:	b111      	cbz	r1, 810f9bc <_reclaim_reent+0xa8>
 810f9b6:	4620      	mov	r0, r4
 810f9b8:	f000 fefa 	bl	81107b0 <_free_r>
 810f9bc:	6a23      	ldr	r3, [r4, #32]
 810f9be:	b11b      	cbz	r3, 810f9c8 <_reclaim_reent+0xb4>
 810f9c0:	4620      	mov	r0, r4
 810f9c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 810f9c6:	4718      	bx	r3
 810f9c8:	bd70      	pop	{r4, r5, r6, pc}
 810f9ca:	bf00      	nop
 810f9cc:	10000020 	.word	0x10000020

0810f9d0 <_lseek_r>:
 810f9d0:	b538      	push	{r3, r4, r5, lr}
 810f9d2:	4d07      	ldr	r5, [pc, #28]	@ (810f9f0 <_lseek_r+0x20>)
 810f9d4:	4604      	mov	r4, r0
 810f9d6:	4608      	mov	r0, r1
 810f9d8:	4611      	mov	r1, r2
 810f9da:	2200      	movs	r2, #0
 810f9dc:	602a      	str	r2, [r5, #0]
 810f9de:	461a      	mov	r2, r3
 810f9e0:	f7f5 fed9 	bl	8105796 <_lseek>
 810f9e4:	1c43      	adds	r3, r0, #1
 810f9e6:	d102      	bne.n	810f9ee <_lseek_r+0x1e>
 810f9e8:	682b      	ldr	r3, [r5, #0]
 810f9ea:	b103      	cbz	r3, 810f9ee <_lseek_r+0x1e>
 810f9ec:	6023      	str	r3, [r4, #0]
 810f9ee:	bd38      	pop	{r3, r4, r5, pc}
 810f9f0:	10005128 	.word	0x10005128

0810f9f4 <_read_r>:
 810f9f4:	b538      	push	{r3, r4, r5, lr}
 810f9f6:	4d07      	ldr	r5, [pc, #28]	@ (810fa14 <_read_r+0x20>)
 810f9f8:	4604      	mov	r4, r0
 810f9fa:	4608      	mov	r0, r1
 810f9fc:	4611      	mov	r1, r2
 810f9fe:	2200      	movs	r2, #0
 810fa00:	602a      	str	r2, [r5, #0]
 810fa02:	461a      	mov	r2, r3
 810fa04:	f7f5 fe83 	bl	810570e <_read>
 810fa08:	1c43      	adds	r3, r0, #1
 810fa0a:	d102      	bne.n	810fa12 <_read_r+0x1e>
 810fa0c:	682b      	ldr	r3, [r5, #0]
 810fa0e:	b103      	cbz	r3, 810fa12 <_read_r+0x1e>
 810fa10:	6023      	str	r3, [r4, #0]
 810fa12:	bd38      	pop	{r3, r4, r5, pc}
 810fa14:	10005128 	.word	0x10005128

0810fa18 <_kill_r>:
 810fa18:	b538      	push	{r3, r4, r5, lr}
 810fa1a:	4d07      	ldr	r5, [pc, #28]	@ (810fa38 <_kill_r+0x20>)
 810fa1c:	2300      	movs	r3, #0
 810fa1e:	4604      	mov	r4, r0
 810fa20:	4608      	mov	r0, r1
 810fa22:	4611      	mov	r1, r2
 810fa24:	602b      	str	r3, [r5, #0]
 810fa26:	f7f5 fe57 	bl	81056d8 <_kill>
 810fa2a:	1c43      	adds	r3, r0, #1
 810fa2c:	d102      	bne.n	810fa34 <_kill_r+0x1c>
 810fa2e:	682b      	ldr	r3, [r5, #0]
 810fa30:	b103      	cbz	r3, 810fa34 <_kill_r+0x1c>
 810fa32:	6023      	str	r3, [r4, #0]
 810fa34:	bd38      	pop	{r3, r4, r5, pc}
 810fa36:	bf00      	nop
 810fa38:	10005128 	.word	0x10005128

0810fa3c <_getpid_r>:
 810fa3c:	f7f5 be44 	b.w	81056c8 <_getpid>

0810fa40 <_sbrk_r>:
 810fa40:	b538      	push	{r3, r4, r5, lr}
 810fa42:	4d06      	ldr	r5, [pc, #24]	@ (810fa5c <_sbrk_r+0x1c>)
 810fa44:	2300      	movs	r3, #0
 810fa46:	4604      	mov	r4, r0
 810fa48:	4608      	mov	r0, r1
 810fa4a:	602b      	str	r3, [r5, #0]
 810fa4c:	f7f5 feb0 	bl	81057b0 <_sbrk>
 810fa50:	1c43      	adds	r3, r0, #1
 810fa52:	d102      	bne.n	810fa5a <_sbrk_r+0x1a>
 810fa54:	682b      	ldr	r3, [r5, #0]
 810fa56:	b103      	cbz	r3, 810fa5a <_sbrk_r+0x1a>
 810fa58:	6023      	str	r3, [r4, #0]
 810fa5a:	bd38      	pop	{r3, r4, r5, pc}
 810fa5c:	10005128 	.word	0x10005128

0810fa60 <_write_r>:
 810fa60:	b538      	push	{r3, r4, r5, lr}
 810fa62:	4d07      	ldr	r5, [pc, #28]	@ (810fa80 <_write_r+0x20>)
 810fa64:	4604      	mov	r4, r0
 810fa66:	4608      	mov	r0, r1
 810fa68:	4611      	mov	r1, r2
 810fa6a:	2200      	movs	r2, #0
 810fa6c:	602a      	str	r2, [r5, #0]
 810fa6e:	461a      	mov	r2, r3
 810fa70:	f7f5 fbb8 	bl	81051e4 <_write>
 810fa74:	1c43      	adds	r3, r0, #1
 810fa76:	d102      	bne.n	810fa7e <_write_r+0x1e>
 810fa78:	682b      	ldr	r3, [r5, #0]
 810fa7a:	b103      	cbz	r3, 810fa7e <_write_r+0x1e>
 810fa7c:	6023      	str	r3, [r4, #0]
 810fa7e:	bd38      	pop	{r3, r4, r5, pc}
 810fa80:	10005128 	.word	0x10005128

0810fa84 <__errno>:
 810fa84:	4b01      	ldr	r3, [pc, #4]	@ (810fa8c <__errno+0x8>)
 810fa86:	6818      	ldr	r0, [r3, #0]
 810fa88:	4770      	bx	lr
 810fa8a:	bf00      	nop
 810fa8c:	10000020 	.word	0x10000020

0810fa90 <__libc_init_array>:
 810fa90:	b570      	push	{r4, r5, r6, lr}
 810fa92:	4d0d      	ldr	r5, [pc, #52]	@ (810fac8 <__libc_init_array+0x38>)
 810fa94:	4c0d      	ldr	r4, [pc, #52]	@ (810facc <__libc_init_array+0x3c>)
 810fa96:	1b64      	subs	r4, r4, r5
 810fa98:	10a4      	asrs	r4, r4, #2
 810fa9a:	2600      	movs	r6, #0
 810fa9c:	42a6      	cmp	r6, r4
 810fa9e:	d109      	bne.n	810fab4 <__libc_init_array+0x24>
 810faa0:	4d0b      	ldr	r5, [pc, #44]	@ (810fad0 <__libc_init_array+0x40>)
 810faa2:	4c0c      	ldr	r4, [pc, #48]	@ (810fad4 <__libc_init_array+0x44>)
 810faa4:	f001 fd52 	bl	811154c <_init>
 810faa8:	1b64      	subs	r4, r4, r5
 810faaa:	10a4      	asrs	r4, r4, #2
 810faac:	2600      	movs	r6, #0
 810faae:	42a6      	cmp	r6, r4
 810fab0:	d105      	bne.n	810fabe <__libc_init_array+0x2e>
 810fab2:	bd70      	pop	{r4, r5, r6, pc}
 810fab4:	f855 3b04 	ldr.w	r3, [r5], #4
 810fab8:	4798      	blx	r3
 810faba:	3601      	adds	r6, #1
 810fabc:	e7ee      	b.n	810fa9c <__libc_init_array+0xc>
 810fabe:	f855 3b04 	ldr.w	r3, [r5], #4
 810fac2:	4798      	blx	r3
 810fac4:	3601      	adds	r6, #1
 810fac6:	e7f2      	b.n	810faae <__libc_init_array+0x1e>
 810fac8:	08111c34 	.word	0x08111c34
 810facc:	08111c34 	.word	0x08111c34
 810fad0:	08111c34 	.word	0x08111c34
 810fad4:	08111c3c 	.word	0x08111c3c

0810fad8 <__retarget_lock_init_recursive>:
 810fad8:	4770      	bx	lr

0810fada <__retarget_lock_acquire_recursive>:
 810fada:	4770      	bx	lr

0810fadc <__retarget_lock_release_recursive>:
 810fadc:	4770      	bx	lr

0810fade <memcpy>:
 810fade:	440a      	add	r2, r1
 810fae0:	4291      	cmp	r1, r2
 810fae2:	f100 33ff 	add.w	r3, r0, #4294967295
 810fae6:	d100      	bne.n	810faea <memcpy+0xc>
 810fae8:	4770      	bx	lr
 810faea:	b510      	push	{r4, lr}
 810faec:	f811 4b01 	ldrb.w	r4, [r1], #1
 810faf0:	f803 4f01 	strb.w	r4, [r3, #1]!
 810faf4:	4291      	cmp	r1, r2
 810faf6:	d1f9      	bne.n	810faec <memcpy+0xe>
 810faf8:	bd10      	pop	{r4, pc}

0810fafa <quorem>:
 810fafa:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 810fafe:	6903      	ldr	r3, [r0, #16]
 810fb00:	690c      	ldr	r4, [r1, #16]
 810fb02:	42a3      	cmp	r3, r4
 810fb04:	4607      	mov	r7, r0
 810fb06:	db7e      	blt.n	810fc06 <quorem+0x10c>
 810fb08:	3c01      	subs	r4, #1
 810fb0a:	f101 0814 	add.w	r8, r1, #20
 810fb0e:	00a3      	lsls	r3, r4, #2
 810fb10:	f100 0514 	add.w	r5, r0, #20
 810fb14:	9300      	str	r3, [sp, #0]
 810fb16:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 810fb1a:	9301      	str	r3, [sp, #4]
 810fb1c:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 810fb20:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 810fb24:	3301      	adds	r3, #1
 810fb26:	429a      	cmp	r2, r3
 810fb28:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 810fb2c:	fbb2 f6f3 	udiv	r6, r2, r3
 810fb30:	d32e      	bcc.n	810fb90 <quorem+0x96>
 810fb32:	f04f 0a00 	mov.w	sl, #0
 810fb36:	46c4      	mov	ip, r8
 810fb38:	46ae      	mov	lr, r5
 810fb3a:	46d3      	mov	fp, sl
 810fb3c:	f85c 3b04 	ldr.w	r3, [ip], #4
 810fb40:	b298      	uxth	r0, r3
 810fb42:	fb06 a000 	mla	r0, r6, r0, sl
 810fb46:	0c02      	lsrs	r2, r0, #16
 810fb48:	0c1b      	lsrs	r3, r3, #16
 810fb4a:	fb06 2303 	mla	r3, r6, r3, r2
 810fb4e:	f8de 2000 	ldr.w	r2, [lr]
 810fb52:	b280      	uxth	r0, r0
 810fb54:	b292      	uxth	r2, r2
 810fb56:	1a12      	subs	r2, r2, r0
 810fb58:	445a      	add	r2, fp
 810fb5a:	f8de 0000 	ldr.w	r0, [lr]
 810fb5e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 810fb62:	b29b      	uxth	r3, r3
 810fb64:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 810fb68:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 810fb6c:	b292      	uxth	r2, r2
 810fb6e:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 810fb72:	45e1      	cmp	r9, ip
 810fb74:	f84e 2b04 	str.w	r2, [lr], #4
 810fb78:	ea4f 4b23 	mov.w	fp, r3, asr #16
 810fb7c:	d2de      	bcs.n	810fb3c <quorem+0x42>
 810fb7e:	9b00      	ldr	r3, [sp, #0]
 810fb80:	58eb      	ldr	r3, [r5, r3]
 810fb82:	b92b      	cbnz	r3, 810fb90 <quorem+0x96>
 810fb84:	9b01      	ldr	r3, [sp, #4]
 810fb86:	3b04      	subs	r3, #4
 810fb88:	429d      	cmp	r5, r3
 810fb8a:	461a      	mov	r2, r3
 810fb8c:	d32f      	bcc.n	810fbee <quorem+0xf4>
 810fb8e:	613c      	str	r4, [r7, #16]
 810fb90:	4638      	mov	r0, r7
 810fb92:	f001 f8c9 	bl	8110d28 <__mcmp>
 810fb96:	2800      	cmp	r0, #0
 810fb98:	db25      	blt.n	810fbe6 <quorem+0xec>
 810fb9a:	4629      	mov	r1, r5
 810fb9c:	2000      	movs	r0, #0
 810fb9e:	f858 2b04 	ldr.w	r2, [r8], #4
 810fba2:	f8d1 c000 	ldr.w	ip, [r1]
 810fba6:	fa1f fe82 	uxth.w	lr, r2
 810fbaa:	fa1f f38c 	uxth.w	r3, ip
 810fbae:	eba3 030e 	sub.w	r3, r3, lr
 810fbb2:	4403      	add	r3, r0
 810fbb4:	0c12      	lsrs	r2, r2, #16
 810fbb6:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 810fbba:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 810fbbe:	b29b      	uxth	r3, r3
 810fbc0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 810fbc4:	45c1      	cmp	r9, r8
 810fbc6:	f841 3b04 	str.w	r3, [r1], #4
 810fbca:	ea4f 4022 	mov.w	r0, r2, asr #16
 810fbce:	d2e6      	bcs.n	810fb9e <quorem+0xa4>
 810fbd0:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 810fbd4:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 810fbd8:	b922      	cbnz	r2, 810fbe4 <quorem+0xea>
 810fbda:	3b04      	subs	r3, #4
 810fbdc:	429d      	cmp	r5, r3
 810fbde:	461a      	mov	r2, r3
 810fbe0:	d30b      	bcc.n	810fbfa <quorem+0x100>
 810fbe2:	613c      	str	r4, [r7, #16]
 810fbe4:	3601      	adds	r6, #1
 810fbe6:	4630      	mov	r0, r6
 810fbe8:	b003      	add	sp, #12
 810fbea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 810fbee:	6812      	ldr	r2, [r2, #0]
 810fbf0:	3b04      	subs	r3, #4
 810fbf2:	2a00      	cmp	r2, #0
 810fbf4:	d1cb      	bne.n	810fb8e <quorem+0x94>
 810fbf6:	3c01      	subs	r4, #1
 810fbf8:	e7c6      	b.n	810fb88 <quorem+0x8e>
 810fbfa:	6812      	ldr	r2, [r2, #0]
 810fbfc:	3b04      	subs	r3, #4
 810fbfe:	2a00      	cmp	r2, #0
 810fc00:	d1ef      	bne.n	810fbe2 <quorem+0xe8>
 810fc02:	3c01      	subs	r4, #1
 810fc04:	e7ea      	b.n	810fbdc <quorem+0xe2>
 810fc06:	2000      	movs	r0, #0
 810fc08:	e7ee      	b.n	810fbe8 <quorem+0xee>
 810fc0a:	0000      	movs	r0, r0
 810fc0c:	0000      	movs	r0, r0
	...

0810fc10 <_dtoa_r>:
 810fc10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 810fc14:	69c7      	ldr	r7, [r0, #28]
 810fc16:	b097      	sub	sp, #92	@ 0x5c
 810fc18:	ed8d 0b04 	vstr	d0, [sp, #16]
 810fc1c:	ec55 4b10 	vmov	r4, r5, d0
 810fc20:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 810fc22:	9107      	str	r1, [sp, #28]
 810fc24:	4681      	mov	r9, r0
 810fc26:	920c      	str	r2, [sp, #48]	@ 0x30
 810fc28:	9311      	str	r3, [sp, #68]	@ 0x44
 810fc2a:	b97f      	cbnz	r7, 810fc4c <_dtoa_r+0x3c>
 810fc2c:	2010      	movs	r0, #16
 810fc2e:	f7fe fee5 	bl	810e9fc <malloc>
 810fc32:	4602      	mov	r2, r0
 810fc34:	f8c9 001c 	str.w	r0, [r9, #28]
 810fc38:	b920      	cbnz	r0, 810fc44 <_dtoa_r+0x34>
 810fc3a:	4ba9      	ldr	r3, [pc, #676]	@ (810fee0 <_dtoa_r+0x2d0>)
 810fc3c:	21ef      	movs	r1, #239	@ 0xef
 810fc3e:	48a9      	ldr	r0, [pc, #676]	@ (810fee4 <_dtoa_r+0x2d4>)
 810fc40:	f001 fc20 	bl	8111484 <__assert_func>
 810fc44:	e9c0 7701 	strd	r7, r7, [r0, #4]
 810fc48:	6007      	str	r7, [r0, #0]
 810fc4a:	60c7      	str	r7, [r0, #12]
 810fc4c:	f8d9 301c 	ldr.w	r3, [r9, #28]
 810fc50:	6819      	ldr	r1, [r3, #0]
 810fc52:	b159      	cbz	r1, 810fc6c <_dtoa_r+0x5c>
 810fc54:	685a      	ldr	r2, [r3, #4]
 810fc56:	604a      	str	r2, [r1, #4]
 810fc58:	2301      	movs	r3, #1
 810fc5a:	4093      	lsls	r3, r2
 810fc5c:	608b      	str	r3, [r1, #8]
 810fc5e:	4648      	mov	r0, r9
 810fc60:	f000 fe30 	bl	81108c4 <_Bfree>
 810fc64:	f8d9 301c 	ldr.w	r3, [r9, #28]
 810fc68:	2200      	movs	r2, #0
 810fc6a:	601a      	str	r2, [r3, #0]
 810fc6c:	1e2b      	subs	r3, r5, #0
 810fc6e:	bfb9      	ittee	lt
 810fc70:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 810fc74:	9305      	strlt	r3, [sp, #20]
 810fc76:	2300      	movge	r3, #0
 810fc78:	6033      	strge	r3, [r6, #0]
 810fc7a:	9f05      	ldr	r7, [sp, #20]
 810fc7c:	4b9a      	ldr	r3, [pc, #616]	@ (810fee8 <_dtoa_r+0x2d8>)
 810fc7e:	bfbc      	itt	lt
 810fc80:	2201      	movlt	r2, #1
 810fc82:	6032      	strlt	r2, [r6, #0]
 810fc84:	43bb      	bics	r3, r7
 810fc86:	d112      	bne.n	810fcae <_dtoa_r+0x9e>
 810fc88:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 810fc8a:	f242 730f 	movw	r3, #9999	@ 0x270f
 810fc8e:	6013      	str	r3, [r2, #0]
 810fc90:	f3c7 0313 	ubfx	r3, r7, #0, #20
 810fc94:	4323      	orrs	r3, r4
 810fc96:	f000 855a 	beq.w	811074e <_dtoa_r+0xb3e>
 810fc9a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 810fc9c:	f8df a25c 	ldr.w	sl, [pc, #604]	@ 810fefc <_dtoa_r+0x2ec>
 810fca0:	2b00      	cmp	r3, #0
 810fca2:	f000 855c 	beq.w	811075e <_dtoa_r+0xb4e>
 810fca6:	f10a 0303 	add.w	r3, sl, #3
 810fcaa:	f000 bd56 	b.w	811075a <_dtoa_r+0xb4a>
 810fcae:	ed9d 7b04 	vldr	d7, [sp, #16]
 810fcb2:	2200      	movs	r2, #0
 810fcb4:	ec51 0b17 	vmov	r0, r1, d7
 810fcb8:	2300      	movs	r3, #0
 810fcba:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 810fcbe:	f7f0 ff8b 	bl	8100bd8 <__aeabi_dcmpeq>
 810fcc2:	4680      	mov	r8, r0
 810fcc4:	b158      	cbz	r0, 810fcde <_dtoa_r+0xce>
 810fcc6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 810fcc8:	2301      	movs	r3, #1
 810fcca:	6013      	str	r3, [r2, #0]
 810fccc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 810fcce:	b113      	cbz	r3, 810fcd6 <_dtoa_r+0xc6>
 810fcd0:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 810fcd2:	4b86      	ldr	r3, [pc, #536]	@ (810feec <_dtoa_r+0x2dc>)
 810fcd4:	6013      	str	r3, [r2, #0]
 810fcd6:	f8df a228 	ldr.w	sl, [pc, #552]	@ 810ff00 <_dtoa_r+0x2f0>
 810fcda:	f000 bd40 	b.w	811075e <_dtoa_r+0xb4e>
 810fcde:	ed9d 0b0a 	vldr	d0, [sp, #40]	@ 0x28
 810fce2:	aa14      	add	r2, sp, #80	@ 0x50
 810fce4:	a915      	add	r1, sp, #84	@ 0x54
 810fce6:	4648      	mov	r0, r9
 810fce8:	f001 f8ce 	bl	8110e88 <__d2b>
 810fcec:	f3c7 560a 	ubfx	r6, r7, #20, #11
 810fcf0:	9002      	str	r0, [sp, #8]
 810fcf2:	2e00      	cmp	r6, #0
 810fcf4:	d078      	beq.n	810fde8 <_dtoa_r+0x1d8>
 810fcf6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 810fcf8:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 810fcfc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 810fd00:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 810fd04:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 810fd08:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 810fd0c:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 810fd10:	4619      	mov	r1, r3
 810fd12:	2200      	movs	r2, #0
 810fd14:	4b76      	ldr	r3, [pc, #472]	@ (810fef0 <_dtoa_r+0x2e0>)
 810fd16:	f7f0 fb3f 	bl	8100398 <__aeabi_dsub>
 810fd1a:	a36b      	add	r3, pc, #428	@ (adr r3, 810fec8 <_dtoa_r+0x2b8>)
 810fd1c:	e9d3 2300 	ldrd	r2, r3, [r3]
 810fd20:	f7f0 fcf2 	bl	8100708 <__aeabi_dmul>
 810fd24:	a36a      	add	r3, pc, #424	@ (adr r3, 810fed0 <_dtoa_r+0x2c0>)
 810fd26:	e9d3 2300 	ldrd	r2, r3, [r3]
 810fd2a:	f7f0 fb37 	bl	810039c <__adddf3>
 810fd2e:	4604      	mov	r4, r0
 810fd30:	4630      	mov	r0, r6
 810fd32:	460d      	mov	r5, r1
 810fd34:	f7f0 fc7e 	bl	8100634 <__aeabi_i2d>
 810fd38:	a367      	add	r3, pc, #412	@ (adr r3, 810fed8 <_dtoa_r+0x2c8>)
 810fd3a:	e9d3 2300 	ldrd	r2, r3, [r3]
 810fd3e:	f7f0 fce3 	bl	8100708 <__aeabi_dmul>
 810fd42:	4602      	mov	r2, r0
 810fd44:	460b      	mov	r3, r1
 810fd46:	4620      	mov	r0, r4
 810fd48:	4629      	mov	r1, r5
 810fd4a:	f7f0 fb27 	bl	810039c <__adddf3>
 810fd4e:	4604      	mov	r4, r0
 810fd50:	460d      	mov	r5, r1
 810fd52:	f7f0 ff89 	bl	8100c68 <__aeabi_d2iz>
 810fd56:	2200      	movs	r2, #0
 810fd58:	4607      	mov	r7, r0
 810fd5a:	2300      	movs	r3, #0
 810fd5c:	4620      	mov	r0, r4
 810fd5e:	4629      	mov	r1, r5
 810fd60:	f7f0 ff44 	bl	8100bec <__aeabi_dcmplt>
 810fd64:	b140      	cbz	r0, 810fd78 <_dtoa_r+0x168>
 810fd66:	4638      	mov	r0, r7
 810fd68:	f7f0 fc64 	bl	8100634 <__aeabi_i2d>
 810fd6c:	4622      	mov	r2, r4
 810fd6e:	462b      	mov	r3, r5
 810fd70:	f7f0 ff32 	bl	8100bd8 <__aeabi_dcmpeq>
 810fd74:	b900      	cbnz	r0, 810fd78 <_dtoa_r+0x168>
 810fd76:	3f01      	subs	r7, #1
 810fd78:	2f16      	cmp	r7, #22
 810fd7a:	d852      	bhi.n	810fe22 <_dtoa_r+0x212>
 810fd7c:	4b5d      	ldr	r3, [pc, #372]	@ (810fef4 <_dtoa_r+0x2e4>)
 810fd7e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 810fd82:	e9d3 2300 	ldrd	r2, r3, [r3]
 810fd86:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 810fd8a:	f7f0 ff2f 	bl	8100bec <__aeabi_dcmplt>
 810fd8e:	2800      	cmp	r0, #0
 810fd90:	d049      	beq.n	810fe26 <_dtoa_r+0x216>
 810fd92:	3f01      	subs	r7, #1
 810fd94:	2300      	movs	r3, #0
 810fd96:	9310      	str	r3, [sp, #64]	@ 0x40
 810fd98:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 810fd9a:	1b9b      	subs	r3, r3, r6
 810fd9c:	1e5a      	subs	r2, r3, #1
 810fd9e:	bf45      	ittet	mi
 810fda0:	f1c3 0301 	rsbmi	r3, r3, #1
 810fda4:	9300      	strmi	r3, [sp, #0]
 810fda6:	2300      	movpl	r3, #0
 810fda8:	2300      	movmi	r3, #0
 810fdaa:	9206      	str	r2, [sp, #24]
 810fdac:	bf54      	ite	pl
 810fdae:	9300      	strpl	r3, [sp, #0]
 810fdb0:	9306      	strmi	r3, [sp, #24]
 810fdb2:	2f00      	cmp	r7, #0
 810fdb4:	db39      	blt.n	810fe2a <_dtoa_r+0x21a>
 810fdb6:	9b06      	ldr	r3, [sp, #24]
 810fdb8:	970d      	str	r7, [sp, #52]	@ 0x34
 810fdba:	443b      	add	r3, r7
 810fdbc:	9306      	str	r3, [sp, #24]
 810fdbe:	2300      	movs	r3, #0
 810fdc0:	9308      	str	r3, [sp, #32]
 810fdc2:	9b07      	ldr	r3, [sp, #28]
 810fdc4:	2b09      	cmp	r3, #9
 810fdc6:	d863      	bhi.n	810fe90 <_dtoa_r+0x280>
 810fdc8:	2b05      	cmp	r3, #5
 810fdca:	bfc4      	itt	gt
 810fdcc:	3b04      	subgt	r3, #4
 810fdce:	9307      	strgt	r3, [sp, #28]
 810fdd0:	9b07      	ldr	r3, [sp, #28]
 810fdd2:	f1a3 0302 	sub.w	r3, r3, #2
 810fdd6:	bfcc      	ite	gt
 810fdd8:	2400      	movgt	r4, #0
 810fdda:	2401      	movle	r4, #1
 810fddc:	2b03      	cmp	r3, #3
 810fdde:	d863      	bhi.n	810fea8 <_dtoa_r+0x298>
 810fde0:	e8df f003 	tbb	[pc, r3]
 810fde4:	2b375452 	.word	0x2b375452
 810fde8:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 810fdec:	441e      	add	r6, r3
 810fdee:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 810fdf2:	2b20      	cmp	r3, #32
 810fdf4:	bfc1      	itttt	gt
 810fdf6:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 810fdfa:	409f      	lslgt	r7, r3
 810fdfc:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 810fe00:	fa24 f303 	lsrgt.w	r3, r4, r3
 810fe04:	bfd6      	itet	le
 810fe06:	f1c3 0320 	rsble	r3, r3, #32
 810fe0a:	ea47 0003 	orrgt.w	r0, r7, r3
 810fe0e:	fa04 f003 	lslle.w	r0, r4, r3
 810fe12:	f7f0 fbff 	bl	8100614 <__aeabi_ui2d>
 810fe16:	2201      	movs	r2, #1
 810fe18:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 810fe1c:	3e01      	subs	r6, #1
 810fe1e:	9212      	str	r2, [sp, #72]	@ 0x48
 810fe20:	e776      	b.n	810fd10 <_dtoa_r+0x100>
 810fe22:	2301      	movs	r3, #1
 810fe24:	e7b7      	b.n	810fd96 <_dtoa_r+0x186>
 810fe26:	9010      	str	r0, [sp, #64]	@ 0x40
 810fe28:	e7b6      	b.n	810fd98 <_dtoa_r+0x188>
 810fe2a:	9b00      	ldr	r3, [sp, #0]
 810fe2c:	1bdb      	subs	r3, r3, r7
 810fe2e:	9300      	str	r3, [sp, #0]
 810fe30:	427b      	negs	r3, r7
 810fe32:	9308      	str	r3, [sp, #32]
 810fe34:	2300      	movs	r3, #0
 810fe36:	930d      	str	r3, [sp, #52]	@ 0x34
 810fe38:	e7c3      	b.n	810fdc2 <_dtoa_r+0x1b2>
 810fe3a:	2301      	movs	r3, #1
 810fe3c:	9309      	str	r3, [sp, #36]	@ 0x24
 810fe3e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 810fe40:	eb07 0b03 	add.w	fp, r7, r3
 810fe44:	f10b 0301 	add.w	r3, fp, #1
 810fe48:	2b01      	cmp	r3, #1
 810fe4a:	9303      	str	r3, [sp, #12]
 810fe4c:	bfb8      	it	lt
 810fe4e:	2301      	movlt	r3, #1
 810fe50:	e006      	b.n	810fe60 <_dtoa_r+0x250>
 810fe52:	2301      	movs	r3, #1
 810fe54:	9309      	str	r3, [sp, #36]	@ 0x24
 810fe56:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 810fe58:	2b00      	cmp	r3, #0
 810fe5a:	dd28      	ble.n	810feae <_dtoa_r+0x29e>
 810fe5c:	469b      	mov	fp, r3
 810fe5e:	9303      	str	r3, [sp, #12]
 810fe60:	f8d9 001c 	ldr.w	r0, [r9, #28]
 810fe64:	2100      	movs	r1, #0
 810fe66:	2204      	movs	r2, #4
 810fe68:	f102 0514 	add.w	r5, r2, #20
 810fe6c:	429d      	cmp	r5, r3
 810fe6e:	d926      	bls.n	810febe <_dtoa_r+0x2ae>
 810fe70:	6041      	str	r1, [r0, #4]
 810fe72:	4648      	mov	r0, r9
 810fe74:	f000 fce6 	bl	8110844 <_Balloc>
 810fe78:	4682      	mov	sl, r0
 810fe7a:	2800      	cmp	r0, #0
 810fe7c:	d142      	bne.n	810ff04 <_dtoa_r+0x2f4>
 810fe7e:	4b1e      	ldr	r3, [pc, #120]	@ (810fef8 <_dtoa_r+0x2e8>)
 810fe80:	4602      	mov	r2, r0
 810fe82:	f240 11af 	movw	r1, #431	@ 0x1af
 810fe86:	e6da      	b.n	810fc3e <_dtoa_r+0x2e>
 810fe88:	2300      	movs	r3, #0
 810fe8a:	e7e3      	b.n	810fe54 <_dtoa_r+0x244>
 810fe8c:	2300      	movs	r3, #0
 810fe8e:	e7d5      	b.n	810fe3c <_dtoa_r+0x22c>
 810fe90:	2401      	movs	r4, #1
 810fe92:	2300      	movs	r3, #0
 810fe94:	9307      	str	r3, [sp, #28]
 810fe96:	9409      	str	r4, [sp, #36]	@ 0x24
 810fe98:	f04f 3bff 	mov.w	fp, #4294967295
 810fe9c:	2200      	movs	r2, #0
 810fe9e:	f8cd b00c 	str.w	fp, [sp, #12]
 810fea2:	2312      	movs	r3, #18
 810fea4:	920c      	str	r2, [sp, #48]	@ 0x30
 810fea6:	e7db      	b.n	810fe60 <_dtoa_r+0x250>
 810fea8:	2301      	movs	r3, #1
 810feaa:	9309      	str	r3, [sp, #36]	@ 0x24
 810feac:	e7f4      	b.n	810fe98 <_dtoa_r+0x288>
 810feae:	f04f 0b01 	mov.w	fp, #1
 810feb2:	f8cd b00c 	str.w	fp, [sp, #12]
 810feb6:	465b      	mov	r3, fp
 810feb8:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 810febc:	e7d0      	b.n	810fe60 <_dtoa_r+0x250>
 810febe:	3101      	adds	r1, #1
 810fec0:	0052      	lsls	r2, r2, #1
 810fec2:	e7d1      	b.n	810fe68 <_dtoa_r+0x258>
 810fec4:	f3af 8000 	nop.w
 810fec8:	636f4361 	.word	0x636f4361
 810fecc:	3fd287a7 	.word	0x3fd287a7
 810fed0:	8b60c8b3 	.word	0x8b60c8b3
 810fed4:	3fc68a28 	.word	0x3fc68a28
 810fed8:	509f79fb 	.word	0x509f79fb
 810fedc:	3fd34413 	.word	0x3fd34413
 810fee0:	081118f8 	.word	0x081118f8
 810fee4:	0811190f 	.word	0x0811190f
 810fee8:	7ff00000 	.word	0x7ff00000
 810feec:	081118c8 	.word	0x081118c8
 810fef0:	3ff80000 	.word	0x3ff80000
 810fef4:	08111a60 	.word	0x08111a60
 810fef8:	08111967 	.word	0x08111967
 810fefc:	081118f4 	.word	0x081118f4
 810ff00:	081118c7 	.word	0x081118c7
 810ff04:	f8d9 301c 	ldr.w	r3, [r9, #28]
 810ff08:	6018      	str	r0, [r3, #0]
 810ff0a:	9b03      	ldr	r3, [sp, #12]
 810ff0c:	2b0e      	cmp	r3, #14
 810ff0e:	f200 80a1 	bhi.w	8110054 <_dtoa_r+0x444>
 810ff12:	2c00      	cmp	r4, #0
 810ff14:	f000 809e 	beq.w	8110054 <_dtoa_r+0x444>
 810ff18:	2f00      	cmp	r7, #0
 810ff1a:	dd33      	ble.n	810ff84 <_dtoa_r+0x374>
 810ff1c:	4b9c      	ldr	r3, [pc, #624]	@ (8110190 <_dtoa_r+0x580>)
 810ff1e:	f007 020f 	and.w	r2, r7, #15
 810ff22:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 810ff26:	ed93 7b00 	vldr	d7, [r3]
 810ff2a:	05f8      	lsls	r0, r7, #23
 810ff2c:	ed8d 7b0e 	vstr	d7, [sp, #56]	@ 0x38
 810ff30:	ea4f 1427 	mov.w	r4, r7, asr #4
 810ff34:	d516      	bpl.n	810ff64 <_dtoa_r+0x354>
 810ff36:	4b97      	ldr	r3, [pc, #604]	@ (8110194 <_dtoa_r+0x584>)
 810ff38:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 810ff3c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 810ff40:	f7f0 fd0c 	bl	810095c <__aeabi_ddiv>
 810ff44:	e9cd 0104 	strd	r0, r1, [sp, #16]
 810ff48:	f004 040f 	and.w	r4, r4, #15
 810ff4c:	2603      	movs	r6, #3
 810ff4e:	4d91      	ldr	r5, [pc, #580]	@ (8110194 <_dtoa_r+0x584>)
 810ff50:	b954      	cbnz	r4, 810ff68 <_dtoa_r+0x358>
 810ff52:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 810ff56:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 810ff5a:	f7f0 fcff 	bl	810095c <__aeabi_ddiv>
 810ff5e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 810ff62:	e028      	b.n	810ffb6 <_dtoa_r+0x3a6>
 810ff64:	2602      	movs	r6, #2
 810ff66:	e7f2      	b.n	810ff4e <_dtoa_r+0x33e>
 810ff68:	07e1      	lsls	r1, r4, #31
 810ff6a:	d508      	bpl.n	810ff7e <_dtoa_r+0x36e>
 810ff6c:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 810ff70:	e9d5 2300 	ldrd	r2, r3, [r5]
 810ff74:	f7f0 fbc8 	bl	8100708 <__aeabi_dmul>
 810ff78:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 810ff7c:	3601      	adds	r6, #1
 810ff7e:	1064      	asrs	r4, r4, #1
 810ff80:	3508      	adds	r5, #8
 810ff82:	e7e5      	b.n	810ff50 <_dtoa_r+0x340>
 810ff84:	f000 80af 	beq.w	81100e6 <_dtoa_r+0x4d6>
 810ff88:	427c      	negs	r4, r7
 810ff8a:	4b81      	ldr	r3, [pc, #516]	@ (8110190 <_dtoa_r+0x580>)
 810ff8c:	4d81      	ldr	r5, [pc, #516]	@ (8110194 <_dtoa_r+0x584>)
 810ff8e:	f004 020f 	and.w	r2, r4, #15
 810ff92:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 810ff96:	e9d3 2300 	ldrd	r2, r3, [r3]
 810ff9a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 810ff9e:	f7f0 fbb3 	bl	8100708 <__aeabi_dmul>
 810ffa2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 810ffa6:	1124      	asrs	r4, r4, #4
 810ffa8:	2300      	movs	r3, #0
 810ffaa:	2602      	movs	r6, #2
 810ffac:	2c00      	cmp	r4, #0
 810ffae:	f040 808f 	bne.w	81100d0 <_dtoa_r+0x4c0>
 810ffb2:	2b00      	cmp	r3, #0
 810ffb4:	d1d3      	bne.n	810ff5e <_dtoa_r+0x34e>
 810ffb6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 810ffb8:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 810ffbc:	2b00      	cmp	r3, #0
 810ffbe:	f000 8094 	beq.w	81100ea <_dtoa_r+0x4da>
 810ffc2:	4b75      	ldr	r3, [pc, #468]	@ (8110198 <_dtoa_r+0x588>)
 810ffc4:	2200      	movs	r2, #0
 810ffc6:	4620      	mov	r0, r4
 810ffc8:	4629      	mov	r1, r5
 810ffca:	f7f0 fe0f 	bl	8100bec <__aeabi_dcmplt>
 810ffce:	2800      	cmp	r0, #0
 810ffd0:	f000 808b 	beq.w	81100ea <_dtoa_r+0x4da>
 810ffd4:	9b03      	ldr	r3, [sp, #12]
 810ffd6:	2b00      	cmp	r3, #0
 810ffd8:	f000 8087 	beq.w	81100ea <_dtoa_r+0x4da>
 810ffdc:	f1bb 0f00 	cmp.w	fp, #0
 810ffe0:	dd34      	ble.n	811004c <_dtoa_r+0x43c>
 810ffe2:	4620      	mov	r0, r4
 810ffe4:	4b6d      	ldr	r3, [pc, #436]	@ (811019c <_dtoa_r+0x58c>)
 810ffe6:	2200      	movs	r2, #0
 810ffe8:	4629      	mov	r1, r5
 810ffea:	f7f0 fb8d 	bl	8100708 <__aeabi_dmul>
 810ffee:	e9cd 0104 	strd	r0, r1, [sp, #16]
 810fff2:	f107 38ff 	add.w	r8, r7, #4294967295
 810fff6:	3601      	adds	r6, #1
 810fff8:	465c      	mov	r4, fp
 810fffa:	4630      	mov	r0, r6
 810fffc:	f7f0 fb1a 	bl	8100634 <__aeabi_i2d>
 8110000:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8110004:	f7f0 fb80 	bl	8100708 <__aeabi_dmul>
 8110008:	4b65      	ldr	r3, [pc, #404]	@ (81101a0 <_dtoa_r+0x590>)
 811000a:	2200      	movs	r2, #0
 811000c:	f7f0 f9c6 	bl	810039c <__adddf3>
 8110010:	4605      	mov	r5, r0
 8110012:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8110016:	2c00      	cmp	r4, #0
 8110018:	d16a      	bne.n	81100f0 <_dtoa_r+0x4e0>
 811001a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 811001e:	4b61      	ldr	r3, [pc, #388]	@ (81101a4 <_dtoa_r+0x594>)
 8110020:	2200      	movs	r2, #0
 8110022:	f7f0 f9b9 	bl	8100398 <__aeabi_dsub>
 8110026:	4602      	mov	r2, r0
 8110028:	460b      	mov	r3, r1
 811002a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 811002e:	462a      	mov	r2, r5
 8110030:	4633      	mov	r3, r6
 8110032:	f7f0 fdf9 	bl	8100c28 <__aeabi_dcmpgt>
 8110036:	2800      	cmp	r0, #0
 8110038:	f040 8298 	bne.w	811056c <_dtoa_r+0x95c>
 811003c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8110040:	462a      	mov	r2, r5
 8110042:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8110046:	f7f0 fdd1 	bl	8100bec <__aeabi_dcmplt>
 811004a:	bb38      	cbnz	r0, 811009c <_dtoa_r+0x48c>
 811004c:	e9dd 340a 	ldrd	r3, r4, [sp, #40]	@ 0x28
 8110050:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8110054:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8110056:	2b00      	cmp	r3, #0
 8110058:	f2c0 8157 	blt.w	811030a <_dtoa_r+0x6fa>
 811005c:	2f0e      	cmp	r7, #14
 811005e:	f300 8154 	bgt.w	811030a <_dtoa_r+0x6fa>
 8110062:	4b4b      	ldr	r3, [pc, #300]	@ (8110190 <_dtoa_r+0x580>)
 8110064:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8110068:	ed93 7b00 	vldr	d7, [r3]
 811006c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 811006e:	2b00      	cmp	r3, #0
 8110070:	ed8d 7b00 	vstr	d7, [sp]
 8110074:	f280 80e5 	bge.w	8110242 <_dtoa_r+0x632>
 8110078:	9b03      	ldr	r3, [sp, #12]
 811007a:	2b00      	cmp	r3, #0
 811007c:	f300 80e1 	bgt.w	8110242 <_dtoa_r+0x632>
 8110080:	d10c      	bne.n	811009c <_dtoa_r+0x48c>
 8110082:	4b48      	ldr	r3, [pc, #288]	@ (81101a4 <_dtoa_r+0x594>)
 8110084:	2200      	movs	r2, #0
 8110086:	ec51 0b17 	vmov	r0, r1, d7
 811008a:	f7f0 fb3d 	bl	8100708 <__aeabi_dmul>
 811008e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8110092:	f7f0 fdbf 	bl	8100c14 <__aeabi_dcmpge>
 8110096:	2800      	cmp	r0, #0
 8110098:	f000 8266 	beq.w	8110568 <_dtoa_r+0x958>
 811009c:	2400      	movs	r4, #0
 811009e:	4625      	mov	r5, r4
 81100a0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 81100a2:	4656      	mov	r6, sl
 81100a4:	ea6f 0803 	mvn.w	r8, r3
 81100a8:	2700      	movs	r7, #0
 81100aa:	4621      	mov	r1, r4
 81100ac:	4648      	mov	r0, r9
 81100ae:	f000 fc09 	bl	81108c4 <_Bfree>
 81100b2:	2d00      	cmp	r5, #0
 81100b4:	f000 80bd 	beq.w	8110232 <_dtoa_r+0x622>
 81100b8:	b12f      	cbz	r7, 81100c6 <_dtoa_r+0x4b6>
 81100ba:	42af      	cmp	r7, r5
 81100bc:	d003      	beq.n	81100c6 <_dtoa_r+0x4b6>
 81100be:	4639      	mov	r1, r7
 81100c0:	4648      	mov	r0, r9
 81100c2:	f000 fbff 	bl	81108c4 <_Bfree>
 81100c6:	4629      	mov	r1, r5
 81100c8:	4648      	mov	r0, r9
 81100ca:	f000 fbfb 	bl	81108c4 <_Bfree>
 81100ce:	e0b0      	b.n	8110232 <_dtoa_r+0x622>
 81100d0:	07e2      	lsls	r2, r4, #31
 81100d2:	d505      	bpl.n	81100e0 <_dtoa_r+0x4d0>
 81100d4:	e9d5 2300 	ldrd	r2, r3, [r5]
 81100d8:	f7f0 fb16 	bl	8100708 <__aeabi_dmul>
 81100dc:	3601      	adds	r6, #1
 81100de:	2301      	movs	r3, #1
 81100e0:	1064      	asrs	r4, r4, #1
 81100e2:	3508      	adds	r5, #8
 81100e4:	e762      	b.n	810ffac <_dtoa_r+0x39c>
 81100e6:	2602      	movs	r6, #2
 81100e8:	e765      	b.n	810ffb6 <_dtoa_r+0x3a6>
 81100ea:	9c03      	ldr	r4, [sp, #12]
 81100ec:	46b8      	mov	r8, r7
 81100ee:	e784      	b.n	810fffa <_dtoa_r+0x3ea>
 81100f0:	4b27      	ldr	r3, [pc, #156]	@ (8110190 <_dtoa_r+0x580>)
 81100f2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 81100f4:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 81100f8:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 81100fc:	4454      	add	r4, sl
 81100fe:	2900      	cmp	r1, #0
 8110100:	d054      	beq.n	81101ac <_dtoa_r+0x59c>
 8110102:	4929      	ldr	r1, [pc, #164]	@ (81101a8 <_dtoa_r+0x598>)
 8110104:	2000      	movs	r0, #0
 8110106:	f7f0 fc29 	bl	810095c <__aeabi_ddiv>
 811010a:	4633      	mov	r3, r6
 811010c:	462a      	mov	r2, r5
 811010e:	f7f0 f943 	bl	8100398 <__aeabi_dsub>
 8110112:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8110116:	4656      	mov	r6, sl
 8110118:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 811011c:	f7f0 fda4 	bl	8100c68 <__aeabi_d2iz>
 8110120:	4605      	mov	r5, r0
 8110122:	f7f0 fa87 	bl	8100634 <__aeabi_i2d>
 8110126:	4602      	mov	r2, r0
 8110128:	460b      	mov	r3, r1
 811012a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 811012e:	f7f0 f933 	bl	8100398 <__aeabi_dsub>
 8110132:	3530      	adds	r5, #48	@ 0x30
 8110134:	4602      	mov	r2, r0
 8110136:	460b      	mov	r3, r1
 8110138:	e9cd 2304 	strd	r2, r3, [sp, #16]
 811013c:	f806 5b01 	strb.w	r5, [r6], #1
 8110140:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8110144:	f7f0 fd52 	bl	8100bec <__aeabi_dcmplt>
 8110148:	2800      	cmp	r0, #0
 811014a:	d172      	bne.n	8110232 <_dtoa_r+0x622>
 811014c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8110150:	4911      	ldr	r1, [pc, #68]	@ (8110198 <_dtoa_r+0x588>)
 8110152:	2000      	movs	r0, #0
 8110154:	f7f0 f920 	bl	8100398 <__aeabi_dsub>
 8110158:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 811015c:	f7f0 fd46 	bl	8100bec <__aeabi_dcmplt>
 8110160:	2800      	cmp	r0, #0
 8110162:	f040 80b4 	bne.w	81102ce <_dtoa_r+0x6be>
 8110166:	42a6      	cmp	r6, r4
 8110168:	f43f af70 	beq.w	811004c <_dtoa_r+0x43c>
 811016c:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8110170:	4b0a      	ldr	r3, [pc, #40]	@ (811019c <_dtoa_r+0x58c>)
 8110172:	2200      	movs	r2, #0
 8110174:	f7f0 fac8 	bl	8100708 <__aeabi_dmul>
 8110178:	4b08      	ldr	r3, [pc, #32]	@ (811019c <_dtoa_r+0x58c>)
 811017a:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 811017e:	2200      	movs	r2, #0
 8110180:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8110184:	f7f0 fac0 	bl	8100708 <__aeabi_dmul>
 8110188:	e9cd 0104 	strd	r0, r1, [sp, #16]
 811018c:	e7c4      	b.n	8110118 <_dtoa_r+0x508>
 811018e:	bf00      	nop
 8110190:	08111a60 	.word	0x08111a60
 8110194:	08111a38 	.word	0x08111a38
 8110198:	3ff00000 	.word	0x3ff00000
 811019c:	40240000 	.word	0x40240000
 81101a0:	401c0000 	.word	0x401c0000
 81101a4:	40140000 	.word	0x40140000
 81101a8:	3fe00000 	.word	0x3fe00000
 81101ac:	4631      	mov	r1, r6
 81101ae:	4628      	mov	r0, r5
 81101b0:	f7f0 faaa 	bl	8100708 <__aeabi_dmul>
 81101b4:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 81101b8:	9413      	str	r4, [sp, #76]	@ 0x4c
 81101ba:	4656      	mov	r6, sl
 81101bc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 81101c0:	f7f0 fd52 	bl	8100c68 <__aeabi_d2iz>
 81101c4:	4605      	mov	r5, r0
 81101c6:	f7f0 fa35 	bl	8100634 <__aeabi_i2d>
 81101ca:	4602      	mov	r2, r0
 81101cc:	460b      	mov	r3, r1
 81101ce:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 81101d2:	f7f0 f8e1 	bl	8100398 <__aeabi_dsub>
 81101d6:	3530      	adds	r5, #48	@ 0x30
 81101d8:	f806 5b01 	strb.w	r5, [r6], #1
 81101dc:	4602      	mov	r2, r0
 81101de:	460b      	mov	r3, r1
 81101e0:	42a6      	cmp	r6, r4
 81101e2:	e9cd 2304 	strd	r2, r3, [sp, #16]
 81101e6:	f04f 0200 	mov.w	r2, #0
 81101ea:	d124      	bne.n	8110236 <_dtoa_r+0x626>
 81101ec:	4baf      	ldr	r3, [pc, #700]	@ (81104ac <_dtoa_r+0x89c>)
 81101ee:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 81101f2:	f7f0 f8d3 	bl	810039c <__adddf3>
 81101f6:	4602      	mov	r2, r0
 81101f8:	460b      	mov	r3, r1
 81101fa:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 81101fe:	f7f0 fd13 	bl	8100c28 <__aeabi_dcmpgt>
 8110202:	2800      	cmp	r0, #0
 8110204:	d163      	bne.n	81102ce <_dtoa_r+0x6be>
 8110206:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 811020a:	49a8      	ldr	r1, [pc, #672]	@ (81104ac <_dtoa_r+0x89c>)
 811020c:	2000      	movs	r0, #0
 811020e:	f7f0 f8c3 	bl	8100398 <__aeabi_dsub>
 8110212:	4602      	mov	r2, r0
 8110214:	460b      	mov	r3, r1
 8110216:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 811021a:	f7f0 fce7 	bl	8100bec <__aeabi_dcmplt>
 811021e:	2800      	cmp	r0, #0
 8110220:	f43f af14 	beq.w	811004c <_dtoa_r+0x43c>
 8110224:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8110226:	1e73      	subs	r3, r6, #1
 8110228:	9313      	str	r3, [sp, #76]	@ 0x4c
 811022a:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 811022e:	2b30      	cmp	r3, #48	@ 0x30
 8110230:	d0f8      	beq.n	8110224 <_dtoa_r+0x614>
 8110232:	4647      	mov	r7, r8
 8110234:	e03b      	b.n	81102ae <_dtoa_r+0x69e>
 8110236:	4b9e      	ldr	r3, [pc, #632]	@ (81104b0 <_dtoa_r+0x8a0>)
 8110238:	f7f0 fa66 	bl	8100708 <__aeabi_dmul>
 811023c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8110240:	e7bc      	b.n	81101bc <_dtoa_r+0x5ac>
 8110242:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8110246:	4656      	mov	r6, sl
 8110248:	e9dd 2300 	ldrd	r2, r3, [sp]
 811024c:	4620      	mov	r0, r4
 811024e:	4629      	mov	r1, r5
 8110250:	f7f0 fb84 	bl	810095c <__aeabi_ddiv>
 8110254:	f7f0 fd08 	bl	8100c68 <__aeabi_d2iz>
 8110258:	4680      	mov	r8, r0
 811025a:	f7f0 f9eb 	bl	8100634 <__aeabi_i2d>
 811025e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8110262:	f7f0 fa51 	bl	8100708 <__aeabi_dmul>
 8110266:	4602      	mov	r2, r0
 8110268:	460b      	mov	r3, r1
 811026a:	4620      	mov	r0, r4
 811026c:	4629      	mov	r1, r5
 811026e:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8110272:	f7f0 f891 	bl	8100398 <__aeabi_dsub>
 8110276:	f806 4b01 	strb.w	r4, [r6], #1
 811027a:	9d03      	ldr	r5, [sp, #12]
 811027c:	eba6 040a 	sub.w	r4, r6, sl
 8110280:	42a5      	cmp	r5, r4
 8110282:	4602      	mov	r2, r0
 8110284:	460b      	mov	r3, r1
 8110286:	d133      	bne.n	81102f0 <_dtoa_r+0x6e0>
 8110288:	f7f0 f888 	bl	810039c <__adddf3>
 811028c:	e9dd 2300 	ldrd	r2, r3, [sp]
 8110290:	4604      	mov	r4, r0
 8110292:	460d      	mov	r5, r1
 8110294:	f7f0 fcc8 	bl	8100c28 <__aeabi_dcmpgt>
 8110298:	b9c0      	cbnz	r0, 81102cc <_dtoa_r+0x6bc>
 811029a:	e9dd 2300 	ldrd	r2, r3, [sp]
 811029e:	4620      	mov	r0, r4
 81102a0:	4629      	mov	r1, r5
 81102a2:	f7f0 fc99 	bl	8100bd8 <__aeabi_dcmpeq>
 81102a6:	b110      	cbz	r0, 81102ae <_dtoa_r+0x69e>
 81102a8:	f018 0f01 	tst.w	r8, #1
 81102ac:	d10e      	bne.n	81102cc <_dtoa_r+0x6bc>
 81102ae:	9902      	ldr	r1, [sp, #8]
 81102b0:	4648      	mov	r0, r9
 81102b2:	f000 fb07 	bl	81108c4 <_Bfree>
 81102b6:	2300      	movs	r3, #0
 81102b8:	7033      	strb	r3, [r6, #0]
 81102ba:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 81102bc:	3701      	adds	r7, #1
 81102be:	601f      	str	r7, [r3, #0]
 81102c0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 81102c2:	2b00      	cmp	r3, #0
 81102c4:	f000 824b 	beq.w	811075e <_dtoa_r+0xb4e>
 81102c8:	601e      	str	r6, [r3, #0]
 81102ca:	e248      	b.n	811075e <_dtoa_r+0xb4e>
 81102cc:	46b8      	mov	r8, r7
 81102ce:	4633      	mov	r3, r6
 81102d0:	461e      	mov	r6, r3
 81102d2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 81102d6:	2a39      	cmp	r2, #57	@ 0x39
 81102d8:	d106      	bne.n	81102e8 <_dtoa_r+0x6d8>
 81102da:	459a      	cmp	sl, r3
 81102dc:	d1f8      	bne.n	81102d0 <_dtoa_r+0x6c0>
 81102de:	2230      	movs	r2, #48	@ 0x30
 81102e0:	f108 0801 	add.w	r8, r8, #1
 81102e4:	f88a 2000 	strb.w	r2, [sl]
 81102e8:	781a      	ldrb	r2, [r3, #0]
 81102ea:	3201      	adds	r2, #1
 81102ec:	701a      	strb	r2, [r3, #0]
 81102ee:	e7a0      	b.n	8110232 <_dtoa_r+0x622>
 81102f0:	4b6f      	ldr	r3, [pc, #444]	@ (81104b0 <_dtoa_r+0x8a0>)
 81102f2:	2200      	movs	r2, #0
 81102f4:	f7f0 fa08 	bl	8100708 <__aeabi_dmul>
 81102f8:	2200      	movs	r2, #0
 81102fa:	2300      	movs	r3, #0
 81102fc:	4604      	mov	r4, r0
 81102fe:	460d      	mov	r5, r1
 8110300:	f7f0 fc6a 	bl	8100bd8 <__aeabi_dcmpeq>
 8110304:	2800      	cmp	r0, #0
 8110306:	d09f      	beq.n	8110248 <_dtoa_r+0x638>
 8110308:	e7d1      	b.n	81102ae <_dtoa_r+0x69e>
 811030a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 811030c:	2a00      	cmp	r2, #0
 811030e:	f000 80ea 	beq.w	81104e6 <_dtoa_r+0x8d6>
 8110312:	9a07      	ldr	r2, [sp, #28]
 8110314:	2a01      	cmp	r2, #1
 8110316:	f300 80cd 	bgt.w	81104b4 <_dtoa_r+0x8a4>
 811031a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 811031c:	2a00      	cmp	r2, #0
 811031e:	f000 80c1 	beq.w	81104a4 <_dtoa_r+0x894>
 8110322:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8110326:	9c08      	ldr	r4, [sp, #32]
 8110328:	9e00      	ldr	r6, [sp, #0]
 811032a:	9a00      	ldr	r2, [sp, #0]
 811032c:	441a      	add	r2, r3
 811032e:	9200      	str	r2, [sp, #0]
 8110330:	9a06      	ldr	r2, [sp, #24]
 8110332:	2101      	movs	r1, #1
 8110334:	441a      	add	r2, r3
 8110336:	4648      	mov	r0, r9
 8110338:	9206      	str	r2, [sp, #24]
 811033a:	f000 fb77 	bl	8110a2c <__i2b>
 811033e:	4605      	mov	r5, r0
 8110340:	b166      	cbz	r6, 811035c <_dtoa_r+0x74c>
 8110342:	9b06      	ldr	r3, [sp, #24]
 8110344:	2b00      	cmp	r3, #0
 8110346:	dd09      	ble.n	811035c <_dtoa_r+0x74c>
 8110348:	42b3      	cmp	r3, r6
 811034a:	9a00      	ldr	r2, [sp, #0]
 811034c:	bfa8      	it	ge
 811034e:	4633      	movge	r3, r6
 8110350:	1ad2      	subs	r2, r2, r3
 8110352:	9200      	str	r2, [sp, #0]
 8110354:	9a06      	ldr	r2, [sp, #24]
 8110356:	1af6      	subs	r6, r6, r3
 8110358:	1ad3      	subs	r3, r2, r3
 811035a:	9306      	str	r3, [sp, #24]
 811035c:	9b08      	ldr	r3, [sp, #32]
 811035e:	b30b      	cbz	r3, 81103a4 <_dtoa_r+0x794>
 8110360:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8110362:	2b00      	cmp	r3, #0
 8110364:	f000 80c6 	beq.w	81104f4 <_dtoa_r+0x8e4>
 8110368:	2c00      	cmp	r4, #0
 811036a:	f000 80c0 	beq.w	81104ee <_dtoa_r+0x8de>
 811036e:	4629      	mov	r1, r5
 8110370:	4622      	mov	r2, r4
 8110372:	4648      	mov	r0, r9
 8110374:	f000 fc12 	bl	8110b9c <__pow5mult>
 8110378:	9a02      	ldr	r2, [sp, #8]
 811037a:	4601      	mov	r1, r0
 811037c:	4605      	mov	r5, r0
 811037e:	4648      	mov	r0, r9
 8110380:	f000 fb6a 	bl	8110a58 <__multiply>
 8110384:	9902      	ldr	r1, [sp, #8]
 8110386:	4680      	mov	r8, r0
 8110388:	4648      	mov	r0, r9
 811038a:	f000 fa9b 	bl	81108c4 <_Bfree>
 811038e:	9b08      	ldr	r3, [sp, #32]
 8110390:	1b1b      	subs	r3, r3, r4
 8110392:	9308      	str	r3, [sp, #32]
 8110394:	f000 80b1 	beq.w	81104fa <_dtoa_r+0x8ea>
 8110398:	9a08      	ldr	r2, [sp, #32]
 811039a:	4641      	mov	r1, r8
 811039c:	4648      	mov	r0, r9
 811039e:	f000 fbfd 	bl	8110b9c <__pow5mult>
 81103a2:	9002      	str	r0, [sp, #8]
 81103a4:	2101      	movs	r1, #1
 81103a6:	4648      	mov	r0, r9
 81103a8:	f000 fb40 	bl	8110a2c <__i2b>
 81103ac:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 81103ae:	4604      	mov	r4, r0
 81103b0:	2b00      	cmp	r3, #0
 81103b2:	f000 81d8 	beq.w	8110766 <_dtoa_r+0xb56>
 81103b6:	461a      	mov	r2, r3
 81103b8:	4601      	mov	r1, r0
 81103ba:	4648      	mov	r0, r9
 81103bc:	f000 fbee 	bl	8110b9c <__pow5mult>
 81103c0:	9b07      	ldr	r3, [sp, #28]
 81103c2:	2b01      	cmp	r3, #1
 81103c4:	4604      	mov	r4, r0
 81103c6:	f300 809f 	bgt.w	8110508 <_dtoa_r+0x8f8>
 81103ca:	9b04      	ldr	r3, [sp, #16]
 81103cc:	2b00      	cmp	r3, #0
 81103ce:	f040 8097 	bne.w	8110500 <_dtoa_r+0x8f0>
 81103d2:	9b05      	ldr	r3, [sp, #20]
 81103d4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 81103d8:	2b00      	cmp	r3, #0
 81103da:	f040 8093 	bne.w	8110504 <_dtoa_r+0x8f4>
 81103de:	9b05      	ldr	r3, [sp, #20]
 81103e0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 81103e4:	0d1b      	lsrs	r3, r3, #20
 81103e6:	051b      	lsls	r3, r3, #20
 81103e8:	b133      	cbz	r3, 81103f8 <_dtoa_r+0x7e8>
 81103ea:	9b00      	ldr	r3, [sp, #0]
 81103ec:	3301      	adds	r3, #1
 81103ee:	9300      	str	r3, [sp, #0]
 81103f0:	9b06      	ldr	r3, [sp, #24]
 81103f2:	3301      	adds	r3, #1
 81103f4:	9306      	str	r3, [sp, #24]
 81103f6:	2301      	movs	r3, #1
 81103f8:	9308      	str	r3, [sp, #32]
 81103fa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 81103fc:	2b00      	cmp	r3, #0
 81103fe:	f000 81b8 	beq.w	8110772 <_dtoa_r+0xb62>
 8110402:	6923      	ldr	r3, [r4, #16]
 8110404:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8110408:	6918      	ldr	r0, [r3, #16]
 811040a:	f000 fac3 	bl	8110994 <__hi0bits>
 811040e:	f1c0 0020 	rsb	r0, r0, #32
 8110412:	9b06      	ldr	r3, [sp, #24]
 8110414:	4418      	add	r0, r3
 8110416:	f010 001f 	ands.w	r0, r0, #31
 811041a:	f000 8082 	beq.w	8110522 <_dtoa_r+0x912>
 811041e:	f1c0 0320 	rsb	r3, r0, #32
 8110422:	2b04      	cmp	r3, #4
 8110424:	dd73      	ble.n	811050e <_dtoa_r+0x8fe>
 8110426:	9b00      	ldr	r3, [sp, #0]
 8110428:	f1c0 001c 	rsb	r0, r0, #28
 811042c:	4403      	add	r3, r0
 811042e:	9300      	str	r3, [sp, #0]
 8110430:	9b06      	ldr	r3, [sp, #24]
 8110432:	4403      	add	r3, r0
 8110434:	4406      	add	r6, r0
 8110436:	9306      	str	r3, [sp, #24]
 8110438:	9b00      	ldr	r3, [sp, #0]
 811043a:	2b00      	cmp	r3, #0
 811043c:	dd05      	ble.n	811044a <_dtoa_r+0x83a>
 811043e:	9902      	ldr	r1, [sp, #8]
 8110440:	461a      	mov	r2, r3
 8110442:	4648      	mov	r0, r9
 8110444:	f000 fc04 	bl	8110c50 <__lshift>
 8110448:	9002      	str	r0, [sp, #8]
 811044a:	9b06      	ldr	r3, [sp, #24]
 811044c:	2b00      	cmp	r3, #0
 811044e:	dd05      	ble.n	811045c <_dtoa_r+0x84c>
 8110450:	4621      	mov	r1, r4
 8110452:	461a      	mov	r2, r3
 8110454:	4648      	mov	r0, r9
 8110456:	f000 fbfb 	bl	8110c50 <__lshift>
 811045a:	4604      	mov	r4, r0
 811045c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 811045e:	2b00      	cmp	r3, #0
 8110460:	d061      	beq.n	8110526 <_dtoa_r+0x916>
 8110462:	9802      	ldr	r0, [sp, #8]
 8110464:	4621      	mov	r1, r4
 8110466:	f000 fc5f 	bl	8110d28 <__mcmp>
 811046a:	2800      	cmp	r0, #0
 811046c:	da5b      	bge.n	8110526 <_dtoa_r+0x916>
 811046e:	2300      	movs	r3, #0
 8110470:	9902      	ldr	r1, [sp, #8]
 8110472:	220a      	movs	r2, #10
 8110474:	4648      	mov	r0, r9
 8110476:	f000 fa47 	bl	8110908 <__multadd>
 811047a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 811047c:	9002      	str	r0, [sp, #8]
 811047e:	f107 38ff 	add.w	r8, r7, #4294967295
 8110482:	2b00      	cmp	r3, #0
 8110484:	f000 8177 	beq.w	8110776 <_dtoa_r+0xb66>
 8110488:	4629      	mov	r1, r5
 811048a:	2300      	movs	r3, #0
 811048c:	220a      	movs	r2, #10
 811048e:	4648      	mov	r0, r9
 8110490:	f000 fa3a 	bl	8110908 <__multadd>
 8110494:	f1bb 0f00 	cmp.w	fp, #0
 8110498:	4605      	mov	r5, r0
 811049a:	dc6f      	bgt.n	811057c <_dtoa_r+0x96c>
 811049c:	9b07      	ldr	r3, [sp, #28]
 811049e:	2b02      	cmp	r3, #2
 81104a0:	dc49      	bgt.n	8110536 <_dtoa_r+0x926>
 81104a2:	e06b      	b.n	811057c <_dtoa_r+0x96c>
 81104a4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 81104a6:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 81104aa:	e73c      	b.n	8110326 <_dtoa_r+0x716>
 81104ac:	3fe00000 	.word	0x3fe00000
 81104b0:	40240000 	.word	0x40240000
 81104b4:	9b03      	ldr	r3, [sp, #12]
 81104b6:	1e5c      	subs	r4, r3, #1
 81104b8:	9b08      	ldr	r3, [sp, #32]
 81104ba:	42a3      	cmp	r3, r4
 81104bc:	db09      	blt.n	81104d2 <_dtoa_r+0x8c2>
 81104be:	1b1c      	subs	r4, r3, r4
 81104c0:	9b03      	ldr	r3, [sp, #12]
 81104c2:	2b00      	cmp	r3, #0
 81104c4:	f6bf af30 	bge.w	8110328 <_dtoa_r+0x718>
 81104c8:	9b00      	ldr	r3, [sp, #0]
 81104ca:	9a03      	ldr	r2, [sp, #12]
 81104cc:	1a9e      	subs	r6, r3, r2
 81104ce:	2300      	movs	r3, #0
 81104d0:	e72b      	b.n	811032a <_dtoa_r+0x71a>
 81104d2:	9b08      	ldr	r3, [sp, #32]
 81104d4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 81104d6:	9408      	str	r4, [sp, #32]
 81104d8:	1ae3      	subs	r3, r4, r3
 81104da:	441a      	add	r2, r3
 81104dc:	9e00      	ldr	r6, [sp, #0]
 81104de:	9b03      	ldr	r3, [sp, #12]
 81104e0:	920d      	str	r2, [sp, #52]	@ 0x34
 81104e2:	2400      	movs	r4, #0
 81104e4:	e721      	b.n	811032a <_dtoa_r+0x71a>
 81104e6:	9c08      	ldr	r4, [sp, #32]
 81104e8:	9e00      	ldr	r6, [sp, #0]
 81104ea:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 81104ec:	e728      	b.n	8110340 <_dtoa_r+0x730>
 81104ee:	f8dd 8008 	ldr.w	r8, [sp, #8]
 81104f2:	e751      	b.n	8110398 <_dtoa_r+0x788>
 81104f4:	9a08      	ldr	r2, [sp, #32]
 81104f6:	9902      	ldr	r1, [sp, #8]
 81104f8:	e750      	b.n	811039c <_dtoa_r+0x78c>
 81104fa:	f8cd 8008 	str.w	r8, [sp, #8]
 81104fe:	e751      	b.n	81103a4 <_dtoa_r+0x794>
 8110500:	2300      	movs	r3, #0
 8110502:	e779      	b.n	81103f8 <_dtoa_r+0x7e8>
 8110504:	9b04      	ldr	r3, [sp, #16]
 8110506:	e777      	b.n	81103f8 <_dtoa_r+0x7e8>
 8110508:	2300      	movs	r3, #0
 811050a:	9308      	str	r3, [sp, #32]
 811050c:	e779      	b.n	8110402 <_dtoa_r+0x7f2>
 811050e:	d093      	beq.n	8110438 <_dtoa_r+0x828>
 8110510:	9a00      	ldr	r2, [sp, #0]
 8110512:	331c      	adds	r3, #28
 8110514:	441a      	add	r2, r3
 8110516:	9200      	str	r2, [sp, #0]
 8110518:	9a06      	ldr	r2, [sp, #24]
 811051a:	441a      	add	r2, r3
 811051c:	441e      	add	r6, r3
 811051e:	9206      	str	r2, [sp, #24]
 8110520:	e78a      	b.n	8110438 <_dtoa_r+0x828>
 8110522:	4603      	mov	r3, r0
 8110524:	e7f4      	b.n	8110510 <_dtoa_r+0x900>
 8110526:	9b03      	ldr	r3, [sp, #12]
 8110528:	2b00      	cmp	r3, #0
 811052a:	46b8      	mov	r8, r7
 811052c:	dc20      	bgt.n	8110570 <_dtoa_r+0x960>
 811052e:	469b      	mov	fp, r3
 8110530:	9b07      	ldr	r3, [sp, #28]
 8110532:	2b02      	cmp	r3, #2
 8110534:	dd1e      	ble.n	8110574 <_dtoa_r+0x964>
 8110536:	f1bb 0f00 	cmp.w	fp, #0
 811053a:	f47f adb1 	bne.w	81100a0 <_dtoa_r+0x490>
 811053e:	4621      	mov	r1, r4
 8110540:	465b      	mov	r3, fp
 8110542:	2205      	movs	r2, #5
 8110544:	4648      	mov	r0, r9
 8110546:	f000 f9df 	bl	8110908 <__multadd>
 811054a:	4601      	mov	r1, r0
 811054c:	4604      	mov	r4, r0
 811054e:	9802      	ldr	r0, [sp, #8]
 8110550:	f000 fbea 	bl	8110d28 <__mcmp>
 8110554:	2800      	cmp	r0, #0
 8110556:	f77f ada3 	ble.w	81100a0 <_dtoa_r+0x490>
 811055a:	4656      	mov	r6, sl
 811055c:	2331      	movs	r3, #49	@ 0x31
 811055e:	f806 3b01 	strb.w	r3, [r6], #1
 8110562:	f108 0801 	add.w	r8, r8, #1
 8110566:	e59f      	b.n	81100a8 <_dtoa_r+0x498>
 8110568:	9c03      	ldr	r4, [sp, #12]
 811056a:	46b8      	mov	r8, r7
 811056c:	4625      	mov	r5, r4
 811056e:	e7f4      	b.n	811055a <_dtoa_r+0x94a>
 8110570:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8110574:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8110576:	2b00      	cmp	r3, #0
 8110578:	f000 8101 	beq.w	811077e <_dtoa_r+0xb6e>
 811057c:	2e00      	cmp	r6, #0
 811057e:	dd05      	ble.n	811058c <_dtoa_r+0x97c>
 8110580:	4629      	mov	r1, r5
 8110582:	4632      	mov	r2, r6
 8110584:	4648      	mov	r0, r9
 8110586:	f000 fb63 	bl	8110c50 <__lshift>
 811058a:	4605      	mov	r5, r0
 811058c:	9b08      	ldr	r3, [sp, #32]
 811058e:	2b00      	cmp	r3, #0
 8110590:	d05c      	beq.n	811064c <_dtoa_r+0xa3c>
 8110592:	6869      	ldr	r1, [r5, #4]
 8110594:	4648      	mov	r0, r9
 8110596:	f000 f955 	bl	8110844 <_Balloc>
 811059a:	4606      	mov	r6, r0
 811059c:	b928      	cbnz	r0, 81105aa <_dtoa_r+0x99a>
 811059e:	4b82      	ldr	r3, [pc, #520]	@ (81107a8 <_dtoa_r+0xb98>)
 81105a0:	4602      	mov	r2, r0
 81105a2:	f240 21ef 	movw	r1, #751	@ 0x2ef
 81105a6:	f7ff bb4a 	b.w	810fc3e <_dtoa_r+0x2e>
 81105aa:	692a      	ldr	r2, [r5, #16]
 81105ac:	3202      	adds	r2, #2
 81105ae:	0092      	lsls	r2, r2, #2
 81105b0:	f105 010c 	add.w	r1, r5, #12
 81105b4:	300c      	adds	r0, #12
 81105b6:	f7ff fa92 	bl	810fade <memcpy>
 81105ba:	2201      	movs	r2, #1
 81105bc:	4631      	mov	r1, r6
 81105be:	4648      	mov	r0, r9
 81105c0:	f000 fb46 	bl	8110c50 <__lshift>
 81105c4:	f10a 0301 	add.w	r3, sl, #1
 81105c8:	9300      	str	r3, [sp, #0]
 81105ca:	eb0a 030b 	add.w	r3, sl, fp
 81105ce:	9308      	str	r3, [sp, #32]
 81105d0:	9b04      	ldr	r3, [sp, #16]
 81105d2:	f003 0301 	and.w	r3, r3, #1
 81105d6:	462f      	mov	r7, r5
 81105d8:	9306      	str	r3, [sp, #24]
 81105da:	4605      	mov	r5, r0
 81105dc:	9b00      	ldr	r3, [sp, #0]
 81105de:	9802      	ldr	r0, [sp, #8]
 81105e0:	4621      	mov	r1, r4
 81105e2:	f103 3bff 	add.w	fp, r3, #4294967295
 81105e6:	f7ff fa88 	bl	810fafa <quorem>
 81105ea:	4603      	mov	r3, r0
 81105ec:	3330      	adds	r3, #48	@ 0x30
 81105ee:	9003      	str	r0, [sp, #12]
 81105f0:	4639      	mov	r1, r7
 81105f2:	9802      	ldr	r0, [sp, #8]
 81105f4:	9309      	str	r3, [sp, #36]	@ 0x24
 81105f6:	f000 fb97 	bl	8110d28 <__mcmp>
 81105fa:	462a      	mov	r2, r5
 81105fc:	9004      	str	r0, [sp, #16]
 81105fe:	4621      	mov	r1, r4
 8110600:	4648      	mov	r0, r9
 8110602:	f000 fbad 	bl	8110d60 <__mdiff>
 8110606:	68c2      	ldr	r2, [r0, #12]
 8110608:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 811060a:	4606      	mov	r6, r0
 811060c:	bb02      	cbnz	r2, 8110650 <_dtoa_r+0xa40>
 811060e:	4601      	mov	r1, r0
 8110610:	9802      	ldr	r0, [sp, #8]
 8110612:	f000 fb89 	bl	8110d28 <__mcmp>
 8110616:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8110618:	4602      	mov	r2, r0
 811061a:	4631      	mov	r1, r6
 811061c:	4648      	mov	r0, r9
 811061e:	920c      	str	r2, [sp, #48]	@ 0x30
 8110620:	9309      	str	r3, [sp, #36]	@ 0x24
 8110622:	f000 f94f 	bl	81108c4 <_Bfree>
 8110626:	9b07      	ldr	r3, [sp, #28]
 8110628:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 811062a:	9e00      	ldr	r6, [sp, #0]
 811062c:	ea42 0103 	orr.w	r1, r2, r3
 8110630:	9b06      	ldr	r3, [sp, #24]
 8110632:	4319      	orrs	r1, r3
 8110634:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8110636:	d10d      	bne.n	8110654 <_dtoa_r+0xa44>
 8110638:	2b39      	cmp	r3, #57	@ 0x39
 811063a:	d027      	beq.n	811068c <_dtoa_r+0xa7c>
 811063c:	9a04      	ldr	r2, [sp, #16]
 811063e:	2a00      	cmp	r2, #0
 8110640:	dd01      	ble.n	8110646 <_dtoa_r+0xa36>
 8110642:	9b03      	ldr	r3, [sp, #12]
 8110644:	3331      	adds	r3, #49	@ 0x31
 8110646:	f88b 3000 	strb.w	r3, [fp]
 811064a:	e52e      	b.n	81100aa <_dtoa_r+0x49a>
 811064c:	4628      	mov	r0, r5
 811064e:	e7b9      	b.n	81105c4 <_dtoa_r+0x9b4>
 8110650:	2201      	movs	r2, #1
 8110652:	e7e2      	b.n	811061a <_dtoa_r+0xa0a>
 8110654:	9904      	ldr	r1, [sp, #16]
 8110656:	2900      	cmp	r1, #0
 8110658:	db04      	blt.n	8110664 <_dtoa_r+0xa54>
 811065a:	9807      	ldr	r0, [sp, #28]
 811065c:	4301      	orrs	r1, r0
 811065e:	9806      	ldr	r0, [sp, #24]
 8110660:	4301      	orrs	r1, r0
 8110662:	d120      	bne.n	81106a6 <_dtoa_r+0xa96>
 8110664:	2a00      	cmp	r2, #0
 8110666:	ddee      	ble.n	8110646 <_dtoa_r+0xa36>
 8110668:	9902      	ldr	r1, [sp, #8]
 811066a:	9300      	str	r3, [sp, #0]
 811066c:	2201      	movs	r2, #1
 811066e:	4648      	mov	r0, r9
 8110670:	f000 faee 	bl	8110c50 <__lshift>
 8110674:	4621      	mov	r1, r4
 8110676:	9002      	str	r0, [sp, #8]
 8110678:	f000 fb56 	bl	8110d28 <__mcmp>
 811067c:	2800      	cmp	r0, #0
 811067e:	9b00      	ldr	r3, [sp, #0]
 8110680:	dc02      	bgt.n	8110688 <_dtoa_r+0xa78>
 8110682:	d1e0      	bne.n	8110646 <_dtoa_r+0xa36>
 8110684:	07da      	lsls	r2, r3, #31
 8110686:	d5de      	bpl.n	8110646 <_dtoa_r+0xa36>
 8110688:	2b39      	cmp	r3, #57	@ 0x39
 811068a:	d1da      	bne.n	8110642 <_dtoa_r+0xa32>
 811068c:	2339      	movs	r3, #57	@ 0x39
 811068e:	f88b 3000 	strb.w	r3, [fp]
 8110692:	4633      	mov	r3, r6
 8110694:	461e      	mov	r6, r3
 8110696:	3b01      	subs	r3, #1
 8110698:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 811069c:	2a39      	cmp	r2, #57	@ 0x39
 811069e:	d04e      	beq.n	811073e <_dtoa_r+0xb2e>
 81106a0:	3201      	adds	r2, #1
 81106a2:	701a      	strb	r2, [r3, #0]
 81106a4:	e501      	b.n	81100aa <_dtoa_r+0x49a>
 81106a6:	2a00      	cmp	r2, #0
 81106a8:	dd03      	ble.n	81106b2 <_dtoa_r+0xaa2>
 81106aa:	2b39      	cmp	r3, #57	@ 0x39
 81106ac:	d0ee      	beq.n	811068c <_dtoa_r+0xa7c>
 81106ae:	3301      	adds	r3, #1
 81106b0:	e7c9      	b.n	8110646 <_dtoa_r+0xa36>
 81106b2:	9a00      	ldr	r2, [sp, #0]
 81106b4:	9908      	ldr	r1, [sp, #32]
 81106b6:	f802 3c01 	strb.w	r3, [r2, #-1]
 81106ba:	428a      	cmp	r2, r1
 81106bc:	d028      	beq.n	8110710 <_dtoa_r+0xb00>
 81106be:	9902      	ldr	r1, [sp, #8]
 81106c0:	2300      	movs	r3, #0
 81106c2:	220a      	movs	r2, #10
 81106c4:	4648      	mov	r0, r9
 81106c6:	f000 f91f 	bl	8110908 <__multadd>
 81106ca:	42af      	cmp	r7, r5
 81106cc:	9002      	str	r0, [sp, #8]
 81106ce:	f04f 0300 	mov.w	r3, #0
 81106d2:	f04f 020a 	mov.w	r2, #10
 81106d6:	4639      	mov	r1, r7
 81106d8:	4648      	mov	r0, r9
 81106da:	d107      	bne.n	81106ec <_dtoa_r+0xadc>
 81106dc:	f000 f914 	bl	8110908 <__multadd>
 81106e0:	4607      	mov	r7, r0
 81106e2:	4605      	mov	r5, r0
 81106e4:	9b00      	ldr	r3, [sp, #0]
 81106e6:	3301      	adds	r3, #1
 81106e8:	9300      	str	r3, [sp, #0]
 81106ea:	e777      	b.n	81105dc <_dtoa_r+0x9cc>
 81106ec:	f000 f90c 	bl	8110908 <__multadd>
 81106f0:	4629      	mov	r1, r5
 81106f2:	4607      	mov	r7, r0
 81106f4:	2300      	movs	r3, #0
 81106f6:	220a      	movs	r2, #10
 81106f8:	4648      	mov	r0, r9
 81106fa:	f000 f905 	bl	8110908 <__multadd>
 81106fe:	4605      	mov	r5, r0
 8110700:	e7f0      	b.n	81106e4 <_dtoa_r+0xad4>
 8110702:	f1bb 0f00 	cmp.w	fp, #0
 8110706:	bfcc      	ite	gt
 8110708:	465e      	movgt	r6, fp
 811070a:	2601      	movle	r6, #1
 811070c:	4456      	add	r6, sl
 811070e:	2700      	movs	r7, #0
 8110710:	9902      	ldr	r1, [sp, #8]
 8110712:	9300      	str	r3, [sp, #0]
 8110714:	2201      	movs	r2, #1
 8110716:	4648      	mov	r0, r9
 8110718:	f000 fa9a 	bl	8110c50 <__lshift>
 811071c:	4621      	mov	r1, r4
 811071e:	9002      	str	r0, [sp, #8]
 8110720:	f000 fb02 	bl	8110d28 <__mcmp>
 8110724:	2800      	cmp	r0, #0
 8110726:	dcb4      	bgt.n	8110692 <_dtoa_r+0xa82>
 8110728:	d102      	bne.n	8110730 <_dtoa_r+0xb20>
 811072a:	9b00      	ldr	r3, [sp, #0]
 811072c:	07db      	lsls	r3, r3, #31
 811072e:	d4b0      	bmi.n	8110692 <_dtoa_r+0xa82>
 8110730:	4633      	mov	r3, r6
 8110732:	461e      	mov	r6, r3
 8110734:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8110738:	2a30      	cmp	r2, #48	@ 0x30
 811073a:	d0fa      	beq.n	8110732 <_dtoa_r+0xb22>
 811073c:	e4b5      	b.n	81100aa <_dtoa_r+0x49a>
 811073e:	459a      	cmp	sl, r3
 8110740:	d1a8      	bne.n	8110694 <_dtoa_r+0xa84>
 8110742:	2331      	movs	r3, #49	@ 0x31
 8110744:	f108 0801 	add.w	r8, r8, #1
 8110748:	f88a 3000 	strb.w	r3, [sl]
 811074c:	e4ad      	b.n	81100aa <_dtoa_r+0x49a>
 811074e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8110750:	f8df a058 	ldr.w	sl, [pc, #88]	@ 81107ac <_dtoa_r+0xb9c>
 8110754:	b11b      	cbz	r3, 811075e <_dtoa_r+0xb4e>
 8110756:	f10a 0308 	add.w	r3, sl, #8
 811075a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 811075c:	6013      	str	r3, [r2, #0]
 811075e:	4650      	mov	r0, sl
 8110760:	b017      	add	sp, #92	@ 0x5c
 8110762:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8110766:	9b07      	ldr	r3, [sp, #28]
 8110768:	2b01      	cmp	r3, #1
 811076a:	f77f ae2e 	ble.w	81103ca <_dtoa_r+0x7ba>
 811076e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8110770:	9308      	str	r3, [sp, #32]
 8110772:	2001      	movs	r0, #1
 8110774:	e64d      	b.n	8110412 <_dtoa_r+0x802>
 8110776:	f1bb 0f00 	cmp.w	fp, #0
 811077a:	f77f aed9 	ble.w	8110530 <_dtoa_r+0x920>
 811077e:	4656      	mov	r6, sl
 8110780:	9802      	ldr	r0, [sp, #8]
 8110782:	4621      	mov	r1, r4
 8110784:	f7ff f9b9 	bl	810fafa <quorem>
 8110788:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 811078c:	f806 3b01 	strb.w	r3, [r6], #1
 8110790:	eba6 020a 	sub.w	r2, r6, sl
 8110794:	4593      	cmp	fp, r2
 8110796:	ddb4      	ble.n	8110702 <_dtoa_r+0xaf2>
 8110798:	9902      	ldr	r1, [sp, #8]
 811079a:	2300      	movs	r3, #0
 811079c:	220a      	movs	r2, #10
 811079e:	4648      	mov	r0, r9
 81107a0:	f000 f8b2 	bl	8110908 <__multadd>
 81107a4:	9002      	str	r0, [sp, #8]
 81107a6:	e7eb      	b.n	8110780 <_dtoa_r+0xb70>
 81107a8:	08111967 	.word	0x08111967
 81107ac:	081118eb 	.word	0x081118eb

081107b0 <_free_r>:
 81107b0:	b538      	push	{r3, r4, r5, lr}
 81107b2:	4605      	mov	r5, r0
 81107b4:	2900      	cmp	r1, #0
 81107b6:	d041      	beq.n	811083c <_free_r+0x8c>
 81107b8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 81107bc:	1f0c      	subs	r4, r1, #4
 81107be:	2b00      	cmp	r3, #0
 81107c0:	bfb8      	it	lt
 81107c2:	18e4      	addlt	r4, r4, r3
 81107c4:	f7fe f9cc 	bl	810eb60 <__malloc_lock>
 81107c8:	4a1d      	ldr	r2, [pc, #116]	@ (8110840 <_free_r+0x90>)
 81107ca:	6813      	ldr	r3, [r2, #0]
 81107cc:	b933      	cbnz	r3, 81107dc <_free_r+0x2c>
 81107ce:	6063      	str	r3, [r4, #4]
 81107d0:	6014      	str	r4, [r2, #0]
 81107d2:	4628      	mov	r0, r5
 81107d4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 81107d8:	f7fe b9c8 	b.w	810eb6c <__malloc_unlock>
 81107dc:	42a3      	cmp	r3, r4
 81107de:	d908      	bls.n	81107f2 <_free_r+0x42>
 81107e0:	6820      	ldr	r0, [r4, #0]
 81107e2:	1821      	adds	r1, r4, r0
 81107e4:	428b      	cmp	r3, r1
 81107e6:	bf01      	itttt	eq
 81107e8:	6819      	ldreq	r1, [r3, #0]
 81107ea:	685b      	ldreq	r3, [r3, #4]
 81107ec:	1809      	addeq	r1, r1, r0
 81107ee:	6021      	streq	r1, [r4, #0]
 81107f0:	e7ed      	b.n	81107ce <_free_r+0x1e>
 81107f2:	461a      	mov	r2, r3
 81107f4:	685b      	ldr	r3, [r3, #4]
 81107f6:	b10b      	cbz	r3, 81107fc <_free_r+0x4c>
 81107f8:	42a3      	cmp	r3, r4
 81107fa:	d9fa      	bls.n	81107f2 <_free_r+0x42>
 81107fc:	6811      	ldr	r1, [r2, #0]
 81107fe:	1850      	adds	r0, r2, r1
 8110800:	42a0      	cmp	r0, r4
 8110802:	d10b      	bne.n	811081c <_free_r+0x6c>
 8110804:	6820      	ldr	r0, [r4, #0]
 8110806:	4401      	add	r1, r0
 8110808:	1850      	adds	r0, r2, r1
 811080a:	4283      	cmp	r3, r0
 811080c:	6011      	str	r1, [r2, #0]
 811080e:	d1e0      	bne.n	81107d2 <_free_r+0x22>
 8110810:	6818      	ldr	r0, [r3, #0]
 8110812:	685b      	ldr	r3, [r3, #4]
 8110814:	6053      	str	r3, [r2, #4]
 8110816:	4408      	add	r0, r1
 8110818:	6010      	str	r0, [r2, #0]
 811081a:	e7da      	b.n	81107d2 <_free_r+0x22>
 811081c:	d902      	bls.n	8110824 <_free_r+0x74>
 811081e:	230c      	movs	r3, #12
 8110820:	602b      	str	r3, [r5, #0]
 8110822:	e7d6      	b.n	81107d2 <_free_r+0x22>
 8110824:	6820      	ldr	r0, [r4, #0]
 8110826:	1821      	adds	r1, r4, r0
 8110828:	428b      	cmp	r3, r1
 811082a:	bf04      	itt	eq
 811082c:	6819      	ldreq	r1, [r3, #0]
 811082e:	685b      	ldreq	r3, [r3, #4]
 8110830:	6063      	str	r3, [r4, #4]
 8110832:	bf04      	itt	eq
 8110834:	1809      	addeq	r1, r1, r0
 8110836:	6021      	streq	r1, [r4, #0]
 8110838:	6054      	str	r4, [r2, #4]
 811083a:	e7ca      	b.n	81107d2 <_free_r+0x22>
 811083c:	bd38      	pop	{r3, r4, r5, pc}
 811083e:	bf00      	nop
 8110840:	10004fe8 	.word	0x10004fe8

08110844 <_Balloc>:
 8110844:	b570      	push	{r4, r5, r6, lr}
 8110846:	69c6      	ldr	r6, [r0, #28]
 8110848:	4604      	mov	r4, r0
 811084a:	460d      	mov	r5, r1
 811084c:	b976      	cbnz	r6, 811086c <_Balloc+0x28>
 811084e:	2010      	movs	r0, #16
 8110850:	f7fe f8d4 	bl	810e9fc <malloc>
 8110854:	4602      	mov	r2, r0
 8110856:	61e0      	str	r0, [r4, #28]
 8110858:	b920      	cbnz	r0, 8110864 <_Balloc+0x20>
 811085a:	4b18      	ldr	r3, [pc, #96]	@ (81108bc <_Balloc+0x78>)
 811085c:	4818      	ldr	r0, [pc, #96]	@ (81108c0 <_Balloc+0x7c>)
 811085e:	216b      	movs	r1, #107	@ 0x6b
 8110860:	f000 fe10 	bl	8111484 <__assert_func>
 8110864:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8110868:	6006      	str	r6, [r0, #0]
 811086a:	60c6      	str	r6, [r0, #12]
 811086c:	69e6      	ldr	r6, [r4, #28]
 811086e:	68f3      	ldr	r3, [r6, #12]
 8110870:	b183      	cbz	r3, 8110894 <_Balloc+0x50>
 8110872:	69e3      	ldr	r3, [r4, #28]
 8110874:	68db      	ldr	r3, [r3, #12]
 8110876:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 811087a:	b9b8      	cbnz	r0, 81108ac <_Balloc+0x68>
 811087c:	2101      	movs	r1, #1
 811087e:	fa01 f605 	lsl.w	r6, r1, r5
 8110882:	1d72      	adds	r2, r6, #5
 8110884:	0092      	lsls	r2, r2, #2
 8110886:	4620      	mov	r0, r4
 8110888:	f000 fe1a 	bl	81114c0 <_calloc_r>
 811088c:	b160      	cbz	r0, 81108a8 <_Balloc+0x64>
 811088e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8110892:	e00e      	b.n	81108b2 <_Balloc+0x6e>
 8110894:	2221      	movs	r2, #33	@ 0x21
 8110896:	2104      	movs	r1, #4
 8110898:	4620      	mov	r0, r4
 811089a:	f000 fe11 	bl	81114c0 <_calloc_r>
 811089e:	69e3      	ldr	r3, [r4, #28]
 81108a0:	60f0      	str	r0, [r6, #12]
 81108a2:	68db      	ldr	r3, [r3, #12]
 81108a4:	2b00      	cmp	r3, #0
 81108a6:	d1e4      	bne.n	8110872 <_Balloc+0x2e>
 81108a8:	2000      	movs	r0, #0
 81108aa:	bd70      	pop	{r4, r5, r6, pc}
 81108ac:	6802      	ldr	r2, [r0, #0]
 81108ae:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 81108b2:	2300      	movs	r3, #0
 81108b4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 81108b8:	e7f7      	b.n	81108aa <_Balloc+0x66>
 81108ba:	bf00      	nop
 81108bc:	081118f8 	.word	0x081118f8
 81108c0:	08111978 	.word	0x08111978

081108c4 <_Bfree>:
 81108c4:	b570      	push	{r4, r5, r6, lr}
 81108c6:	69c6      	ldr	r6, [r0, #28]
 81108c8:	4605      	mov	r5, r0
 81108ca:	460c      	mov	r4, r1
 81108cc:	b976      	cbnz	r6, 81108ec <_Bfree+0x28>
 81108ce:	2010      	movs	r0, #16
 81108d0:	f7fe f894 	bl	810e9fc <malloc>
 81108d4:	4602      	mov	r2, r0
 81108d6:	61e8      	str	r0, [r5, #28]
 81108d8:	b920      	cbnz	r0, 81108e4 <_Bfree+0x20>
 81108da:	4b09      	ldr	r3, [pc, #36]	@ (8110900 <_Bfree+0x3c>)
 81108dc:	4809      	ldr	r0, [pc, #36]	@ (8110904 <_Bfree+0x40>)
 81108de:	218f      	movs	r1, #143	@ 0x8f
 81108e0:	f000 fdd0 	bl	8111484 <__assert_func>
 81108e4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 81108e8:	6006      	str	r6, [r0, #0]
 81108ea:	60c6      	str	r6, [r0, #12]
 81108ec:	b13c      	cbz	r4, 81108fe <_Bfree+0x3a>
 81108ee:	69eb      	ldr	r3, [r5, #28]
 81108f0:	6862      	ldr	r2, [r4, #4]
 81108f2:	68db      	ldr	r3, [r3, #12]
 81108f4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 81108f8:	6021      	str	r1, [r4, #0]
 81108fa:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 81108fe:	bd70      	pop	{r4, r5, r6, pc}
 8110900:	081118f8 	.word	0x081118f8
 8110904:	08111978 	.word	0x08111978

08110908 <__multadd>:
 8110908:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 811090c:	690d      	ldr	r5, [r1, #16]
 811090e:	4607      	mov	r7, r0
 8110910:	460c      	mov	r4, r1
 8110912:	461e      	mov	r6, r3
 8110914:	f101 0c14 	add.w	ip, r1, #20
 8110918:	2000      	movs	r0, #0
 811091a:	f8dc 3000 	ldr.w	r3, [ip]
 811091e:	b299      	uxth	r1, r3
 8110920:	fb02 6101 	mla	r1, r2, r1, r6
 8110924:	0c1e      	lsrs	r6, r3, #16
 8110926:	0c0b      	lsrs	r3, r1, #16
 8110928:	fb02 3306 	mla	r3, r2, r6, r3
 811092c:	b289      	uxth	r1, r1
 811092e:	3001      	adds	r0, #1
 8110930:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8110934:	4285      	cmp	r5, r0
 8110936:	f84c 1b04 	str.w	r1, [ip], #4
 811093a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 811093e:	dcec      	bgt.n	811091a <__multadd+0x12>
 8110940:	b30e      	cbz	r6, 8110986 <__multadd+0x7e>
 8110942:	68a3      	ldr	r3, [r4, #8]
 8110944:	42ab      	cmp	r3, r5
 8110946:	dc19      	bgt.n	811097c <__multadd+0x74>
 8110948:	6861      	ldr	r1, [r4, #4]
 811094a:	4638      	mov	r0, r7
 811094c:	3101      	adds	r1, #1
 811094e:	f7ff ff79 	bl	8110844 <_Balloc>
 8110952:	4680      	mov	r8, r0
 8110954:	b928      	cbnz	r0, 8110962 <__multadd+0x5a>
 8110956:	4602      	mov	r2, r0
 8110958:	4b0c      	ldr	r3, [pc, #48]	@ (811098c <__multadd+0x84>)
 811095a:	480d      	ldr	r0, [pc, #52]	@ (8110990 <__multadd+0x88>)
 811095c:	21ba      	movs	r1, #186	@ 0xba
 811095e:	f000 fd91 	bl	8111484 <__assert_func>
 8110962:	6922      	ldr	r2, [r4, #16]
 8110964:	3202      	adds	r2, #2
 8110966:	f104 010c 	add.w	r1, r4, #12
 811096a:	0092      	lsls	r2, r2, #2
 811096c:	300c      	adds	r0, #12
 811096e:	f7ff f8b6 	bl	810fade <memcpy>
 8110972:	4621      	mov	r1, r4
 8110974:	4638      	mov	r0, r7
 8110976:	f7ff ffa5 	bl	81108c4 <_Bfree>
 811097a:	4644      	mov	r4, r8
 811097c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8110980:	3501      	adds	r5, #1
 8110982:	615e      	str	r6, [r3, #20]
 8110984:	6125      	str	r5, [r4, #16]
 8110986:	4620      	mov	r0, r4
 8110988:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 811098c:	08111967 	.word	0x08111967
 8110990:	08111978 	.word	0x08111978

08110994 <__hi0bits>:
 8110994:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8110998:	4603      	mov	r3, r0
 811099a:	bf36      	itet	cc
 811099c:	0403      	lslcc	r3, r0, #16
 811099e:	2000      	movcs	r0, #0
 81109a0:	2010      	movcc	r0, #16
 81109a2:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 81109a6:	bf3c      	itt	cc
 81109a8:	021b      	lslcc	r3, r3, #8
 81109aa:	3008      	addcc	r0, #8
 81109ac:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 81109b0:	bf3c      	itt	cc
 81109b2:	011b      	lslcc	r3, r3, #4
 81109b4:	3004      	addcc	r0, #4
 81109b6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 81109ba:	bf3c      	itt	cc
 81109bc:	009b      	lslcc	r3, r3, #2
 81109be:	3002      	addcc	r0, #2
 81109c0:	2b00      	cmp	r3, #0
 81109c2:	db05      	blt.n	81109d0 <__hi0bits+0x3c>
 81109c4:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 81109c8:	f100 0001 	add.w	r0, r0, #1
 81109cc:	bf08      	it	eq
 81109ce:	2020      	moveq	r0, #32
 81109d0:	4770      	bx	lr

081109d2 <__lo0bits>:
 81109d2:	6803      	ldr	r3, [r0, #0]
 81109d4:	4602      	mov	r2, r0
 81109d6:	f013 0007 	ands.w	r0, r3, #7
 81109da:	d00b      	beq.n	81109f4 <__lo0bits+0x22>
 81109dc:	07d9      	lsls	r1, r3, #31
 81109de:	d421      	bmi.n	8110a24 <__lo0bits+0x52>
 81109e0:	0798      	lsls	r0, r3, #30
 81109e2:	bf49      	itett	mi
 81109e4:	085b      	lsrmi	r3, r3, #1
 81109e6:	089b      	lsrpl	r3, r3, #2
 81109e8:	2001      	movmi	r0, #1
 81109ea:	6013      	strmi	r3, [r2, #0]
 81109ec:	bf5c      	itt	pl
 81109ee:	6013      	strpl	r3, [r2, #0]
 81109f0:	2002      	movpl	r0, #2
 81109f2:	4770      	bx	lr
 81109f4:	b299      	uxth	r1, r3
 81109f6:	b909      	cbnz	r1, 81109fc <__lo0bits+0x2a>
 81109f8:	0c1b      	lsrs	r3, r3, #16
 81109fa:	2010      	movs	r0, #16
 81109fc:	b2d9      	uxtb	r1, r3
 81109fe:	b909      	cbnz	r1, 8110a04 <__lo0bits+0x32>
 8110a00:	3008      	adds	r0, #8
 8110a02:	0a1b      	lsrs	r3, r3, #8
 8110a04:	0719      	lsls	r1, r3, #28
 8110a06:	bf04      	itt	eq
 8110a08:	091b      	lsreq	r3, r3, #4
 8110a0a:	3004      	addeq	r0, #4
 8110a0c:	0799      	lsls	r1, r3, #30
 8110a0e:	bf04      	itt	eq
 8110a10:	089b      	lsreq	r3, r3, #2
 8110a12:	3002      	addeq	r0, #2
 8110a14:	07d9      	lsls	r1, r3, #31
 8110a16:	d403      	bmi.n	8110a20 <__lo0bits+0x4e>
 8110a18:	085b      	lsrs	r3, r3, #1
 8110a1a:	f100 0001 	add.w	r0, r0, #1
 8110a1e:	d003      	beq.n	8110a28 <__lo0bits+0x56>
 8110a20:	6013      	str	r3, [r2, #0]
 8110a22:	4770      	bx	lr
 8110a24:	2000      	movs	r0, #0
 8110a26:	4770      	bx	lr
 8110a28:	2020      	movs	r0, #32
 8110a2a:	4770      	bx	lr

08110a2c <__i2b>:
 8110a2c:	b510      	push	{r4, lr}
 8110a2e:	460c      	mov	r4, r1
 8110a30:	2101      	movs	r1, #1
 8110a32:	f7ff ff07 	bl	8110844 <_Balloc>
 8110a36:	4602      	mov	r2, r0
 8110a38:	b928      	cbnz	r0, 8110a46 <__i2b+0x1a>
 8110a3a:	4b05      	ldr	r3, [pc, #20]	@ (8110a50 <__i2b+0x24>)
 8110a3c:	4805      	ldr	r0, [pc, #20]	@ (8110a54 <__i2b+0x28>)
 8110a3e:	f240 1145 	movw	r1, #325	@ 0x145
 8110a42:	f000 fd1f 	bl	8111484 <__assert_func>
 8110a46:	2301      	movs	r3, #1
 8110a48:	6144      	str	r4, [r0, #20]
 8110a4a:	6103      	str	r3, [r0, #16]
 8110a4c:	bd10      	pop	{r4, pc}
 8110a4e:	bf00      	nop
 8110a50:	08111967 	.word	0x08111967
 8110a54:	08111978 	.word	0x08111978

08110a58 <__multiply>:
 8110a58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8110a5c:	4617      	mov	r7, r2
 8110a5e:	690a      	ldr	r2, [r1, #16]
 8110a60:	693b      	ldr	r3, [r7, #16]
 8110a62:	429a      	cmp	r2, r3
 8110a64:	bfa8      	it	ge
 8110a66:	463b      	movge	r3, r7
 8110a68:	4689      	mov	r9, r1
 8110a6a:	bfa4      	itt	ge
 8110a6c:	460f      	movge	r7, r1
 8110a6e:	4699      	movge	r9, r3
 8110a70:	693d      	ldr	r5, [r7, #16]
 8110a72:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8110a76:	68bb      	ldr	r3, [r7, #8]
 8110a78:	6879      	ldr	r1, [r7, #4]
 8110a7a:	eb05 060a 	add.w	r6, r5, sl
 8110a7e:	42b3      	cmp	r3, r6
 8110a80:	b085      	sub	sp, #20
 8110a82:	bfb8      	it	lt
 8110a84:	3101      	addlt	r1, #1
 8110a86:	f7ff fedd 	bl	8110844 <_Balloc>
 8110a8a:	b930      	cbnz	r0, 8110a9a <__multiply+0x42>
 8110a8c:	4602      	mov	r2, r0
 8110a8e:	4b41      	ldr	r3, [pc, #260]	@ (8110b94 <__multiply+0x13c>)
 8110a90:	4841      	ldr	r0, [pc, #260]	@ (8110b98 <__multiply+0x140>)
 8110a92:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8110a96:	f000 fcf5 	bl	8111484 <__assert_func>
 8110a9a:	f100 0414 	add.w	r4, r0, #20
 8110a9e:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 8110aa2:	4623      	mov	r3, r4
 8110aa4:	2200      	movs	r2, #0
 8110aa6:	4573      	cmp	r3, lr
 8110aa8:	d320      	bcc.n	8110aec <__multiply+0x94>
 8110aaa:	f107 0814 	add.w	r8, r7, #20
 8110aae:	f109 0114 	add.w	r1, r9, #20
 8110ab2:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 8110ab6:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 8110aba:	9302      	str	r3, [sp, #8]
 8110abc:	1beb      	subs	r3, r5, r7
 8110abe:	3b15      	subs	r3, #21
 8110ac0:	f023 0303 	bic.w	r3, r3, #3
 8110ac4:	3304      	adds	r3, #4
 8110ac6:	3715      	adds	r7, #21
 8110ac8:	42bd      	cmp	r5, r7
 8110aca:	bf38      	it	cc
 8110acc:	2304      	movcc	r3, #4
 8110ace:	9301      	str	r3, [sp, #4]
 8110ad0:	9b02      	ldr	r3, [sp, #8]
 8110ad2:	9103      	str	r1, [sp, #12]
 8110ad4:	428b      	cmp	r3, r1
 8110ad6:	d80c      	bhi.n	8110af2 <__multiply+0x9a>
 8110ad8:	2e00      	cmp	r6, #0
 8110ada:	dd03      	ble.n	8110ae4 <__multiply+0x8c>
 8110adc:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8110ae0:	2b00      	cmp	r3, #0
 8110ae2:	d055      	beq.n	8110b90 <__multiply+0x138>
 8110ae4:	6106      	str	r6, [r0, #16]
 8110ae6:	b005      	add	sp, #20
 8110ae8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8110aec:	f843 2b04 	str.w	r2, [r3], #4
 8110af0:	e7d9      	b.n	8110aa6 <__multiply+0x4e>
 8110af2:	f8b1 a000 	ldrh.w	sl, [r1]
 8110af6:	f1ba 0f00 	cmp.w	sl, #0
 8110afa:	d01f      	beq.n	8110b3c <__multiply+0xe4>
 8110afc:	46c4      	mov	ip, r8
 8110afe:	46a1      	mov	r9, r4
 8110b00:	2700      	movs	r7, #0
 8110b02:	f85c 2b04 	ldr.w	r2, [ip], #4
 8110b06:	f8d9 3000 	ldr.w	r3, [r9]
 8110b0a:	fa1f fb82 	uxth.w	fp, r2
 8110b0e:	b29b      	uxth	r3, r3
 8110b10:	fb0a 330b 	mla	r3, sl, fp, r3
 8110b14:	443b      	add	r3, r7
 8110b16:	f8d9 7000 	ldr.w	r7, [r9]
 8110b1a:	0c12      	lsrs	r2, r2, #16
 8110b1c:	0c3f      	lsrs	r7, r7, #16
 8110b1e:	fb0a 7202 	mla	r2, sl, r2, r7
 8110b22:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 8110b26:	b29b      	uxth	r3, r3
 8110b28:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8110b2c:	4565      	cmp	r5, ip
 8110b2e:	f849 3b04 	str.w	r3, [r9], #4
 8110b32:	ea4f 4712 	mov.w	r7, r2, lsr #16
 8110b36:	d8e4      	bhi.n	8110b02 <__multiply+0xaa>
 8110b38:	9b01      	ldr	r3, [sp, #4]
 8110b3a:	50e7      	str	r7, [r4, r3]
 8110b3c:	9b03      	ldr	r3, [sp, #12]
 8110b3e:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8110b42:	3104      	adds	r1, #4
 8110b44:	f1b9 0f00 	cmp.w	r9, #0
 8110b48:	d020      	beq.n	8110b8c <__multiply+0x134>
 8110b4a:	6823      	ldr	r3, [r4, #0]
 8110b4c:	4647      	mov	r7, r8
 8110b4e:	46a4      	mov	ip, r4
 8110b50:	f04f 0a00 	mov.w	sl, #0
 8110b54:	f8b7 b000 	ldrh.w	fp, [r7]
 8110b58:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 8110b5c:	fb09 220b 	mla	r2, r9, fp, r2
 8110b60:	4452      	add	r2, sl
 8110b62:	b29b      	uxth	r3, r3
 8110b64:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8110b68:	f84c 3b04 	str.w	r3, [ip], #4
 8110b6c:	f857 3b04 	ldr.w	r3, [r7], #4
 8110b70:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8110b74:	f8bc 3000 	ldrh.w	r3, [ip]
 8110b78:	fb09 330a 	mla	r3, r9, sl, r3
 8110b7c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 8110b80:	42bd      	cmp	r5, r7
 8110b82:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8110b86:	d8e5      	bhi.n	8110b54 <__multiply+0xfc>
 8110b88:	9a01      	ldr	r2, [sp, #4]
 8110b8a:	50a3      	str	r3, [r4, r2]
 8110b8c:	3404      	adds	r4, #4
 8110b8e:	e79f      	b.n	8110ad0 <__multiply+0x78>
 8110b90:	3e01      	subs	r6, #1
 8110b92:	e7a1      	b.n	8110ad8 <__multiply+0x80>
 8110b94:	08111967 	.word	0x08111967
 8110b98:	08111978 	.word	0x08111978

08110b9c <__pow5mult>:
 8110b9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8110ba0:	4615      	mov	r5, r2
 8110ba2:	f012 0203 	ands.w	r2, r2, #3
 8110ba6:	4607      	mov	r7, r0
 8110ba8:	460e      	mov	r6, r1
 8110baa:	d007      	beq.n	8110bbc <__pow5mult+0x20>
 8110bac:	4c25      	ldr	r4, [pc, #148]	@ (8110c44 <__pow5mult+0xa8>)
 8110bae:	3a01      	subs	r2, #1
 8110bb0:	2300      	movs	r3, #0
 8110bb2:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8110bb6:	f7ff fea7 	bl	8110908 <__multadd>
 8110bba:	4606      	mov	r6, r0
 8110bbc:	10ad      	asrs	r5, r5, #2
 8110bbe:	d03d      	beq.n	8110c3c <__pow5mult+0xa0>
 8110bc0:	69fc      	ldr	r4, [r7, #28]
 8110bc2:	b97c      	cbnz	r4, 8110be4 <__pow5mult+0x48>
 8110bc4:	2010      	movs	r0, #16
 8110bc6:	f7fd ff19 	bl	810e9fc <malloc>
 8110bca:	4602      	mov	r2, r0
 8110bcc:	61f8      	str	r0, [r7, #28]
 8110bce:	b928      	cbnz	r0, 8110bdc <__pow5mult+0x40>
 8110bd0:	4b1d      	ldr	r3, [pc, #116]	@ (8110c48 <__pow5mult+0xac>)
 8110bd2:	481e      	ldr	r0, [pc, #120]	@ (8110c4c <__pow5mult+0xb0>)
 8110bd4:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8110bd8:	f000 fc54 	bl	8111484 <__assert_func>
 8110bdc:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8110be0:	6004      	str	r4, [r0, #0]
 8110be2:	60c4      	str	r4, [r0, #12]
 8110be4:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8110be8:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8110bec:	b94c      	cbnz	r4, 8110c02 <__pow5mult+0x66>
 8110bee:	f240 2171 	movw	r1, #625	@ 0x271
 8110bf2:	4638      	mov	r0, r7
 8110bf4:	f7ff ff1a 	bl	8110a2c <__i2b>
 8110bf8:	2300      	movs	r3, #0
 8110bfa:	f8c8 0008 	str.w	r0, [r8, #8]
 8110bfe:	4604      	mov	r4, r0
 8110c00:	6003      	str	r3, [r0, #0]
 8110c02:	f04f 0900 	mov.w	r9, #0
 8110c06:	07eb      	lsls	r3, r5, #31
 8110c08:	d50a      	bpl.n	8110c20 <__pow5mult+0x84>
 8110c0a:	4631      	mov	r1, r6
 8110c0c:	4622      	mov	r2, r4
 8110c0e:	4638      	mov	r0, r7
 8110c10:	f7ff ff22 	bl	8110a58 <__multiply>
 8110c14:	4631      	mov	r1, r6
 8110c16:	4680      	mov	r8, r0
 8110c18:	4638      	mov	r0, r7
 8110c1a:	f7ff fe53 	bl	81108c4 <_Bfree>
 8110c1e:	4646      	mov	r6, r8
 8110c20:	106d      	asrs	r5, r5, #1
 8110c22:	d00b      	beq.n	8110c3c <__pow5mult+0xa0>
 8110c24:	6820      	ldr	r0, [r4, #0]
 8110c26:	b938      	cbnz	r0, 8110c38 <__pow5mult+0x9c>
 8110c28:	4622      	mov	r2, r4
 8110c2a:	4621      	mov	r1, r4
 8110c2c:	4638      	mov	r0, r7
 8110c2e:	f7ff ff13 	bl	8110a58 <__multiply>
 8110c32:	6020      	str	r0, [r4, #0]
 8110c34:	f8c0 9000 	str.w	r9, [r0]
 8110c38:	4604      	mov	r4, r0
 8110c3a:	e7e4      	b.n	8110c06 <__pow5mult+0x6a>
 8110c3c:	4630      	mov	r0, r6
 8110c3e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8110c42:	bf00      	nop
 8110c44:	08111a28 	.word	0x08111a28
 8110c48:	081118f8 	.word	0x081118f8
 8110c4c:	08111978 	.word	0x08111978

08110c50 <__lshift>:
 8110c50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8110c54:	460c      	mov	r4, r1
 8110c56:	6849      	ldr	r1, [r1, #4]
 8110c58:	6923      	ldr	r3, [r4, #16]
 8110c5a:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8110c5e:	68a3      	ldr	r3, [r4, #8]
 8110c60:	4607      	mov	r7, r0
 8110c62:	4691      	mov	r9, r2
 8110c64:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8110c68:	f108 0601 	add.w	r6, r8, #1
 8110c6c:	42b3      	cmp	r3, r6
 8110c6e:	db0b      	blt.n	8110c88 <__lshift+0x38>
 8110c70:	4638      	mov	r0, r7
 8110c72:	f7ff fde7 	bl	8110844 <_Balloc>
 8110c76:	4605      	mov	r5, r0
 8110c78:	b948      	cbnz	r0, 8110c8e <__lshift+0x3e>
 8110c7a:	4602      	mov	r2, r0
 8110c7c:	4b28      	ldr	r3, [pc, #160]	@ (8110d20 <__lshift+0xd0>)
 8110c7e:	4829      	ldr	r0, [pc, #164]	@ (8110d24 <__lshift+0xd4>)
 8110c80:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8110c84:	f000 fbfe 	bl	8111484 <__assert_func>
 8110c88:	3101      	adds	r1, #1
 8110c8a:	005b      	lsls	r3, r3, #1
 8110c8c:	e7ee      	b.n	8110c6c <__lshift+0x1c>
 8110c8e:	2300      	movs	r3, #0
 8110c90:	f100 0114 	add.w	r1, r0, #20
 8110c94:	f100 0210 	add.w	r2, r0, #16
 8110c98:	4618      	mov	r0, r3
 8110c9a:	4553      	cmp	r3, sl
 8110c9c:	db33      	blt.n	8110d06 <__lshift+0xb6>
 8110c9e:	6920      	ldr	r0, [r4, #16]
 8110ca0:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8110ca4:	f104 0314 	add.w	r3, r4, #20
 8110ca8:	f019 091f 	ands.w	r9, r9, #31
 8110cac:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8110cb0:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8110cb4:	d02b      	beq.n	8110d0e <__lshift+0xbe>
 8110cb6:	f1c9 0e20 	rsb	lr, r9, #32
 8110cba:	468a      	mov	sl, r1
 8110cbc:	2200      	movs	r2, #0
 8110cbe:	6818      	ldr	r0, [r3, #0]
 8110cc0:	fa00 f009 	lsl.w	r0, r0, r9
 8110cc4:	4310      	orrs	r0, r2
 8110cc6:	f84a 0b04 	str.w	r0, [sl], #4
 8110cca:	f853 2b04 	ldr.w	r2, [r3], #4
 8110cce:	459c      	cmp	ip, r3
 8110cd0:	fa22 f20e 	lsr.w	r2, r2, lr
 8110cd4:	d8f3      	bhi.n	8110cbe <__lshift+0x6e>
 8110cd6:	ebac 0304 	sub.w	r3, ip, r4
 8110cda:	3b15      	subs	r3, #21
 8110cdc:	f023 0303 	bic.w	r3, r3, #3
 8110ce0:	3304      	adds	r3, #4
 8110ce2:	f104 0015 	add.w	r0, r4, #21
 8110ce6:	4560      	cmp	r0, ip
 8110ce8:	bf88      	it	hi
 8110cea:	2304      	movhi	r3, #4
 8110cec:	50ca      	str	r2, [r1, r3]
 8110cee:	b10a      	cbz	r2, 8110cf4 <__lshift+0xa4>
 8110cf0:	f108 0602 	add.w	r6, r8, #2
 8110cf4:	3e01      	subs	r6, #1
 8110cf6:	4638      	mov	r0, r7
 8110cf8:	612e      	str	r6, [r5, #16]
 8110cfa:	4621      	mov	r1, r4
 8110cfc:	f7ff fde2 	bl	81108c4 <_Bfree>
 8110d00:	4628      	mov	r0, r5
 8110d02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8110d06:	f842 0f04 	str.w	r0, [r2, #4]!
 8110d0a:	3301      	adds	r3, #1
 8110d0c:	e7c5      	b.n	8110c9a <__lshift+0x4a>
 8110d0e:	3904      	subs	r1, #4
 8110d10:	f853 2b04 	ldr.w	r2, [r3], #4
 8110d14:	f841 2f04 	str.w	r2, [r1, #4]!
 8110d18:	459c      	cmp	ip, r3
 8110d1a:	d8f9      	bhi.n	8110d10 <__lshift+0xc0>
 8110d1c:	e7ea      	b.n	8110cf4 <__lshift+0xa4>
 8110d1e:	bf00      	nop
 8110d20:	08111967 	.word	0x08111967
 8110d24:	08111978 	.word	0x08111978

08110d28 <__mcmp>:
 8110d28:	690a      	ldr	r2, [r1, #16]
 8110d2a:	4603      	mov	r3, r0
 8110d2c:	6900      	ldr	r0, [r0, #16]
 8110d2e:	1a80      	subs	r0, r0, r2
 8110d30:	b530      	push	{r4, r5, lr}
 8110d32:	d10e      	bne.n	8110d52 <__mcmp+0x2a>
 8110d34:	3314      	adds	r3, #20
 8110d36:	3114      	adds	r1, #20
 8110d38:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8110d3c:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8110d40:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8110d44:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8110d48:	4295      	cmp	r5, r2
 8110d4a:	d003      	beq.n	8110d54 <__mcmp+0x2c>
 8110d4c:	d205      	bcs.n	8110d5a <__mcmp+0x32>
 8110d4e:	f04f 30ff 	mov.w	r0, #4294967295
 8110d52:	bd30      	pop	{r4, r5, pc}
 8110d54:	42a3      	cmp	r3, r4
 8110d56:	d3f3      	bcc.n	8110d40 <__mcmp+0x18>
 8110d58:	e7fb      	b.n	8110d52 <__mcmp+0x2a>
 8110d5a:	2001      	movs	r0, #1
 8110d5c:	e7f9      	b.n	8110d52 <__mcmp+0x2a>
	...

08110d60 <__mdiff>:
 8110d60:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8110d64:	4689      	mov	r9, r1
 8110d66:	4606      	mov	r6, r0
 8110d68:	4611      	mov	r1, r2
 8110d6a:	4648      	mov	r0, r9
 8110d6c:	4614      	mov	r4, r2
 8110d6e:	f7ff ffdb 	bl	8110d28 <__mcmp>
 8110d72:	1e05      	subs	r5, r0, #0
 8110d74:	d112      	bne.n	8110d9c <__mdiff+0x3c>
 8110d76:	4629      	mov	r1, r5
 8110d78:	4630      	mov	r0, r6
 8110d7a:	f7ff fd63 	bl	8110844 <_Balloc>
 8110d7e:	4602      	mov	r2, r0
 8110d80:	b928      	cbnz	r0, 8110d8e <__mdiff+0x2e>
 8110d82:	4b3f      	ldr	r3, [pc, #252]	@ (8110e80 <__mdiff+0x120>)
 8110d84:	f240 2137 	movw	r1, #567	@ 0x237
 8110d88:	483e      	ldr	r0, [pc, #248]	@ (8110e84 <__mdiff+0x124>)
 8110d8a:	f000 fb7b 	bl	8111484 <__assert_func>
 8110d8e:	2301      	movs	r3, #1
 8110d90:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8110d94:	4610      	mov	r0, r2
 8110d96:	b003      	add	sp, #12
 8110d98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8110d9c:	bfbc      	itt	lt
 8110d9e:	464b      	movlt	r3, r9
 8110da0:	46a1      	movlt	r9, r4
 8110da2:	4630      	mov	r0, r6
 8110da4:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8110da8:	bfba      	itte	lt
 8110daa:	461c      	movlt	r4, r3
 8110dac:	2501      	movlt	r5, #1
 8110dae:	2500      	movge	r5, #0
 8110db0:	f7ff fd48 	bl	8110844 <_Balloc>
 8110db4:	4602      	mov	r2, r0
 8110db6:	b918      	cbnz	r0, 8110dc0 <__mdiff+0x60>
 8110db8:	4b31      	ldr	r3, [pc, #196]	@ (8110e80 <__mdiff+0x120>)
 8110dba:	f240 2145 	movw	r1, #581	@ 0x245
 8110dbe:	e7e3      	b.n	8110d88 <__mdiff+0x28>
 8110dc0:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8110dc4:	6926      	ldr	r6, [r4, #16]
 8110dc6:	60c5      	str	r5, [r0, #12]
 8110dc8:	f109 0310 	add.w	r3, r9, #16
 8110dcc:	f109 0514 	add.w	r5, r9, #20
 8110dd0:	f104 0e14 	add.w	lr, r4, #20
 8110dd4:	f100 0b14 	add.w	fp, r0, #20
 8110dd8:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8110ddc:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8110de0:	9301      	str	r3, [sp, #4]
 8110de2:	46d9      	mov	r9, fp
 8110de4:	f04f 0c00 	mov.w	ip, #0
 8110de8:	9b01      	ldr	r3, [sp, #4]
 8110dea:	f85e 0b04 	ldr.w	r0, [lr], #4
 8110dee:	f853 af04 	ldr.w	sl, [r3, #4]!
 8110df2:	9301      	str	r3, [sp, #4]
 8110df4:	fa1f f38a 	uxth.w	r3, sl
 8110df8:	4619      	mov	r1, r3
 8110dfa:	b283      	uxth	r3, r0
 8110dfc:	1acb      	subs	r3, r1, r3
 8110dfe:	0c00      	lsrs	r0, r0, #16
 8110e00:	4463      	add	r3, ip
 8110e02:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8110e06:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8110e0a:	b29b      	uxth	r3, r3
 8110e0c:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8110e10:	4576      	cmp	r6, lr
 8110e12:	f849 3b04 	str.w	r3, [r9], #4
 8110e16:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8110e1a:	d8e5      	bhi.n	8110de8 <__mdiff+0x88>
 8110e1c:	1b33      	subs	r3, r6, r4
 8110e1e:	3b15      	subs	r3, #21
 8110e20:	f023 0303 	bic.w	r3, r3, #3
 8110e24:	3415      	adds	r4, #21
 8110e26:	3304      	adds	r3, #4
 8110e28:	42a6      	cmp	r6, r4
 8110e2a:	bf38      	it	cc
 8110e2c:	2304      	movcc	r3, #4
 8110e2e:	441d      	add	r5, r3
 8110e30:	445b      	add	r3, fp
 8110e32:	461e      	mov	r6, r3
 8110e34:	462c      	mov	r4, r5
 8110e36:	4544      	cmp	r4, r8
 8110e38:	d30e      	bcc.n	8110e58 <__mdiff+0xf8>
 8110e3a:	f108 0103 	add.w	r1, r8, #3
 8110e3e:	1b49      	subs	r1, r1, r5
 8110e40:	f021 0103 	bic.w	r1, r1, #3
 8110e44:	3d03      	subs	r5, #3
 8110e46:	45a8      	cmp	r8, r5
 8110e48:	bf38      	it	cc
 8110e4a:	2100      	movcc	r1, #0
 8110e4c:	440b      	add	r3, r1
 8110e4e:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8110e52:	b191      	cbz	r1, 8110e7a <__mdiff+0x11a>
 8110e54:	6117      	str	r7, [r2, #16]
 8110e56:	e79d      	b.n	8110d94 <__mdiff+0x34>
 8110e58:	f854 1b04 	ldr.w	r1, [r4], #4
 8110e5c:	46e6      	mov	lr, ip
 8110e5e:	0c08      	lsrs	r0, r1, #16
 8110e60:	fa1c fc81 	uxtah	ip, ip, r1
 8110e64:	4471      	add	r1, lr
 8110e66:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8110e6a:	b289      	uxth	r1, r1
 8110e6c:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8110e70:	f846 1b04 	str.w	r1, [r6], #4
 8110e74:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8110e78:	e7dd      	b.n	8110e36 <__mdiff+0xd6>
 8110e7a:	3f01      	subs	r7, #1
 8110e7c:	e7e7      	b.n	8110e4e <__mdiff+0xee>
 8110e7e:	bf00      	nop
 8110e80:	08111967 	.word	0x08111967
 8110e84:	08111978 	.word	0x08111978

08110e88 <__d2b>:
 8110e88:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8110e8c:	460f      	mov	r7, r1
 8110e8e:	2101      	movs	r1, #1
 8110e90:	ec59 8b10 	vmov	r8, r9, d0
 8110e94:	4616      	mov	r6, r2
 8110e96:	f7ff fcd5 	bl	8110844 <_Balloc>
 8110e9a:	4604      	mov	r4, r0
 8110e9c:	b930      	cbnz	r0, 8110eac <__d2b+0x24>
 8110e9e:	4602      	mov	r2, r0
 8110ea0:	4b23      	ldr	r3, [pc, #140]	@ (8110f30 <__d2b+0xa8>)
 8110ea2:	4824      	ldr	r0, [pc, #144]	@ (8110f34 <__d2b+0xac>)
 8110ea4:	f240 310f 	movw	r1, #783	@ 0x30f
 8110ea8:	f000 faec 	bl	8111484 <__assert_func>
 8110eac:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8110eb0:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8110eb4:	b10d      	cbz	r5, 8110eba <__d2b+0x32>
 8110eb6:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8110eba:	9301      	str	r3, [sp, #4]
 8110ebc:	f1b8 0300 	subs.w	r3, r8, #0
 8110ec0:	d023      	beq.n	8110f0a <__d2b+0x82>
 8110ec2:	4668      	mov	r0, sp
 8110ec4:	9300      	str	r3, [sp, #0]
 8110ec6:	f7ff fd84 	bl	81109d2 <__lo0bits>
 8110eca:	e9dd 1200 	ldrd	r1, r2, [sp]
 8110ece:	b1d0      	cbz	r0, 8110f06 <__d2b+0x7e>
 8110ed0:	f1c0 0320 	rsb	r3, r0, #32
 8110ed4:	fa02 f303 	lsl.w	r3, r2, r3
 8110ed8:	430b      	orrs	r3, r1
 8110eda:	40c2      	lsrs	r2, r0
 8110edc:	6163      	str	r3, [r4, #20]
 8110ede:	9201      	str	r2, [sp, #4]
 8110ee0:	9b01      	ldr	r3, [sp, #4]
 8110ee2:	61a3      	str	r3, [r4, #24]
 8110ee4:	2b00      	cmp	r3, #0
 8110ee6:	bf0c      	ite	eq
 8110ee8:	2201      	moveq	r2, #1
 8110eea:	2202      	movne	r2, #2
 8110eec:	6122      	str	r2, [r4, #16]
 8110eee:	b1a5      	cbz	r5, 8110f1a <__d2b+0x92>
 8110ef0:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8110ef4:	4405      	add	r5, r0
 8110ef6:	603d      	str	r5, [r7, #0]
 8110ef8:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8110efc:	6030      	str	r0, [r6, #0]
 8110efe:	4620      	mov	r0, r4
 8110f00:	b003      	add	sp, #12
 8110f02:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8110f06:	6161      	str	r1, [r4, #20]
 8110f08:	e7ea      	b.n	8110ee0 <__d2b+0x58>
 8110f0a:	a801      	add	r0, sp, #4
 8110f0c:	f7ff fd61 	bl	81109d2 <__lo0bits>
 8110f10:	9b01      	ldr	r3, [sp, #4]
 8110f12:	6163      	str	r3, [r4, #20]
 8110f14:	3020      	adds	r0, #32
 8110f16:	2201      	movs	r2, #1
 8110f18:	e7e8      	b.n	8110eec <__d2b+0x64>
 8110f1a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8110f1e:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8110f22:	6038      	str	r0, [r7, #0]
 8110f24:	6918      	ldr	r0, [r3, #16]
 8110f26:	f7ff fd35 	bl	8110994 <__hi0bits>
 8110f2a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8110f2e:	e7e5      	b.n	8110efc <__d2b+0x74>
 8110f30:	08111967 	.word	0x08111967
 8110f34:	08111978 	.word	0x08111978

08110f38 <__sfputc_r>:
 8110f38:	6893      	ldr	r3, [r2, #8]
 8110f3a:	3b01      	subs	r3, #1
 8110f3c:	2b00      	cmp	r3, #0
 8110f3e:	b410      	push	{r4}
 8110f40:	6093      	str	r3, [r2, #8]
 8110f42:	da08      	bge.n	8110f56 <__sfputc_r+0x1e>
 8110f44:	6994      	ldr	r4, [r2, #24]
 8110f46:	42a3      	cmp	r3, r4
 8110f48:	db01      	blt.n	8110f4e <__sfputc_r+0x16>
 8110f4a:	290a      	cmp	r1, #10
 8110f4c:	d103      	bne.n	8110f56 <__sfputc_r+0x1e>
 8110f4e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8110f52:	f7fe bbe4 	b.w	810f71e <__swbuf_r>
 8110f56:	6813      	ldr	r3, [r2, #0]
 8110f58:	1c58      	adds	r0, r3, #1
 8110f5a:	6010      	str	r0, [r2, #0]
 8110f5c:	7019      	strb	r1, [r3, #0]
 8110f5e:	4608      	mov	r0, r1
 8110f60:	f85d 4b04 	ldr.w	r4, [sp], #4
 8110f64:	4770      	bx	lr

08110f66 <__sfputs_r>:
 8110f66:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8110f68:	4606      	mov	r6, r0
 8110f6a:	460f      	mov	r7, r1
 8110f6c:	4614      	mov	r4, r2
 8110f6e:	18d5      	adds	r5, r2, r3
 8110f70:	42ac      	cmp	r4, r5
 8110f72:	d101      	bne.n	8110f78 <__sfputs_r+0x12>
 8110f74:	2000      	movs	r0, #0
 8110f76:	e007      	b.n	8110f88 <__sfputs_r+0x22>
 8110f78:	f814 1b01 	ldrb.w	r1, [r4], #1
 8110f7c:	463a      	mov	r2, r7
 8110f7e:	4630      	mov	r0, r6
 8110f80:	f7ff ffda 	bl	8110f38 <__sfputc_r>
 8110f84:	1c43      	adds	r3, r0, #1
 8110f86:	d1f3      	bne.n	8110f70 <__sfputs_r+0xa>
 8110f88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08110f8c <_vfiprintf_r>:
 8110f8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8110f90:	460d      	mov	r5, r1
 8110f92:	b09d      	sub	sp, #116	@ 0x74
 8110f94:	4614      	mov	r4, r2
 8110f96:	4698      	mov	r8, r3
 8110f98:	4606      	mov	r6, r0
 8110f9a:	b118      	cbz	r0, 8110fa4 <_vfiprintf_r+0x18>
 8110f9c:	6a03      	ldr	r3, [r0, #32]
 8110f9e:	b90b      	cbnz	r3, 8110fa4 <_vfiprintf_r+0x18>
 8110fa0:	f7fe facc 	bl	810f53c <__sinit>
 8110fa4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8110fa6:	07d9      	lsls	r1, r3, #31
 8110fa8:	d405      	bmi.n	8110fb6 <_vfiprintf_r+0x2a>
 8110faa:	89ab      	ldrh	r3, [r5, #12]
 8110fac:	059a      	lsls	r2, r3, #22
 8110fae:	d402      	bmi.n	8110fb6 <_vfiprintf_r+0x2a>
 8110fb0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8110fb2:	f7fe fd92 	bl	810fada <__retarget_lock_acquire_recursive>
 8110fb6:	89ab      	ldrh	r3, [r5, #12]
 8110fb8:	071b      	lsls	r3, r3, #28
 8110fba:	d501      	bpl.n	8110fc0 <_vfiprintf_r+0x34>
 8110fbc:	692b      	ldr	r3, [r5, #16]
 8110fbe:	b99b      	cbnz	r3, 8110fe8 <_vfiprintf_r+0x5c>
 8110fc0:	4629      	mov	r1, r5
 8110fc2:	4630      	mov	r0, r6
 8110fc4:	f7fe fbea 	bl	810f79c <__swsetup_r>
 8110fc8:	b170      	cbz	r0, 8110fe8 <_vfiprintf_r+0x5c>
 8110fca:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8110fcc:	07dc      	lsls	r4, r3, #31
 8110fce:	d504      	bpl.n	8110fda <_vfiprintf_r+0x4e>
 8110fd0:	f04f 30ff 	mov.w	r0, #4294967295
 8110fd4:	b01d      	add	sp, #116	@ 0x74
 8110fd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8110fda:	89ab      	ldrh	r3, [r5, #12]
 8110fdc:	0598      	lsls	r0, r3, #22
 8110fde:	d4f7      	bmi.n	8110fd0 <_vfiprintf_r+0x44>
 8110fe0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8110fe2:	f7fe fd7b 	bl	810fadc <__retarget_lock_release_recursive>
 8110fe6:	e7f3      	b.n	8110fd0 <_vfiprintf_r+0x44>
 8110fe8:	2300      	movs	r3, #0
 8110fea:	9309      	str	r3, [sp, #36]	@ 0x24
 8110fec:	2320      	movs	r3, #32
 8110fee:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8110ff2:	f8cd 800c 	str.w	r8, [sp, #12]
 8110ff6:	2330      	movs	r3, #48	@ 0x30
 8110ff8:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 81111a8 <_vfiprintf_r+0x21c>
 8110ffc:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8111000:	f04f 0901 	mov.w	r9, #1
 8111004:	4623      	mov	r3, r4
 8111006:	469a      	mov	sl, r3
 8111008:	f813 2b01 	ldrb.w	r2, [r3], #1
 811100c:	b10a      	cbz	r2, 8111012 <_vfiprintf_r+0x86>
 811100e:	2a25      	cmp	r2, #37	@ 0x25
 8111010:	d1f9      	bne.n	8111006 <_vfiprintf_r+0x7a>
 8111012:	ebba 0b04 	subs.w	fp, sl, r4
 8111016:	d00b      	beq.n	8111030 <_vfiprintf_r+0xa4>
 8111018:	465b      	mov	r3, fp
 811101a:	4622      	mov	r2, r4
 811101c:	4629      	mov	r1, r5
 811101e:	4630      	mov	r0, r6
 8111020:	f7ff ffa1 	bl	8110f66 <__sfputs_r>
 8111024:	3001      	adds	r0, #1
 8111026:	f000 80a7 	beq.w	8111178 <_vfiprintf_r+0x1ec>
 811102a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 811102c:	445a      	add	r2, fp
 811102e:	9209      	str	r2, [sp, #36]	@ 0x24
 8111030:	f89a 3000 	ldrb.w	r3, [sl]
 8111034:	2b00      	cmp	r3, #0
 8111036:	f000 809f 	beq.w	8111178 <_vfiprintf_r+0x1ec>
 811103a:	2300      	movs	r3, #0
 811103c:	f04f 32ff 	mov.w	r2, #4294967295
 8111040:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8111044:	f10a 0a01 	add.w	sl, sl, #1
 8111048:	9304      	str	r3, [sp, #16]
 811104a:	9307      	str	r3, [sp, #28]
 811104c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8111050:	931a      	str	r3, [sp, #104]	@ 0x68
 8111052:	4654      	mov	r4, sl
 8111054:	2205      	movs	r2, #5
 8111056:	f814 1b01 	ldrb.w	r1, [r4], #1
 811105a:	4853      	ldr	r0, [pc, #332]	@ (81111a8 <_vfiprintf_r+0x21c>)
 811105c:	f7ef f940 	bl	81002e0 <memchr>
 8111060:	9a04      	ldr	r2, [sp, #16]
 8111062:	b9d8      	cbnz	r0, 811109c <_vfiprintf_r+0x110>
 8111064:	06d1      	lsls	r1, r2, #27
 8111066:	bf44      	itt	mi
 8111068:	2320      	movmi	r3, #32
 811106a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 811106e:	0713      	lsls	r3, r2, #28
 8111070:	bf44      	itt	mi
 8111072:	232b      	movmi	r3, #43	@ 0x2b
 8111074:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8111078:	f89a 3000 	ldrb.w	r3, [sl]
 811107c:	2b2a      	cmp	r3, #42	@ 0x2a
 811107e:	d015      	beq.n	81110ac <_vfiprintf_r+0x120>
 8111080:	9a07      	ldr	r2, [sp, #28]
 8111082:	4654      	mov	r4, sl
 8111084:	2000      	movs	r0, #0
 8111086:	f04f 0c0a 	mov.w	ip, #10
 811108a:	4621      	mov	r1, r4
 811108c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8111090:	3b30      	subs	r3, #48	@ 0x30
 8111092:	2b09      	cmp	r3, #9
 8111094:	d94b      	bls.n	811112e <_vfiprintf_r+0x1a2>
 8111096:	b1b0      	cbz	r0, 81110c6 <_vfiprintf_r+0x13a>
 8111098:	9207      	str	r2, [sp, #28]
 811109a:	e014      	b.n	81110c6 <_vfiprintf_r+0x13a>
 811109c:	eba0 0308 	sub.w	r3, r0, r8
 81110a0:	fa09 f303 	lsl.w	r3, r9, r3
 81110a4:	4313      	orrs	r3, r2
 81110a6:	9304      	str	r3, [sp, #16]
 81110a8:	46a2      	mov	sl, r4
 81110aa:	e7d2      	b.n	8111052 <_vfiprintf_r+0xc6>
 81110ac:	9b03      	ldr	r3, [sp, #12]
 81110ae:	1d19      	adds	r1, r3, #4
 81110b0:	681b      	ldr	r3, [r3, #0]
 81110b2:	9103      	str	r1, [sp, #12]
 81110b4:	2b00      	cmp	r3, #0
 81110b6:	bfbb      	ittet	lt
 81110b8:	425b      	neglt	r3, r3
 81110ba:	f042 0202 	orrlt.w	r2, r2, #2
 81110be:	9307      	strge	r3, [sp, #28]
 81110c0:	9307      	strlt	r3, [sp, #28]
 81110c2:	bfb8      	it	lt
 81110c4:	9204      	strlt	r2, [sp, #16]
 81110c6:	7823      	ldrb	r3, [r4, #0]
 81110c8:	2b2e      	cmp	r3, #46	@ 0x2e
 81110ca:	d10a      	bne.n	81110e2 <_vfiprintf_r+0x156>
 81110cc:	7863      	ldrb	r3, [r4, #1]
 81110ce:	2b2a      	cmp	r3, #42	@ 0x2a
 81110d0:	d132      	bne.n	8111138 <_vfiprintf_r+0x1ac>
 81110d2:	9b03      	ldr	r3, [sp, #12]
 81110d4:	1d1a      	adds	r2, r3, #4
 81110d6:	681b      	ldr	r3, [r3, #0]
 81110d8:	9203      	str	r2, [sp, #12]
 81110da:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 81110de:	3402      	adds	r4, #2
 81110e0:	9305      	str	r3, [sp, #20]
 81110e2:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 81111b8 <_vfiprintf_r+0x22c>
 81110e6:	7821      	ldrb	r1, [r4, #0]
 81110e8:	2203      	movs	r2, #3
 81110ea:	4650      	mov	r0, sl
 81110ec:	f7ef f8f8 	bl	81002e0 <memchr>
 81110f0:	b138      	cbz	r0, 8111102 <_vfiprintf_r+0x176>
 81110f2:	9b04      	ldr	r3, [sp, #16]
 81110f4:	eba0 000a 	sub.w	r0, r0, sl
 81110f8:	2240      	movs	r2, #64	@ 0x40
 81110fa:	4082      	lsls	r2, r0
 81110fc:	4313      	orrs	r3, r2
 81110fe:	3401      	adds	r4, #1
 8111100:	9304      	str	r3, [sp, #16]
 8111102:	f814 1b01 	ldrb.w	r1, [r4], #1
 8111106:	4829      	ldr	r0, [pc, #164]	@ (81111ac <_vfiprintf_r+0x220>)
 8111108:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 811110c:	2206      	movs	r2, #6
 811110e:	f7ef f8e7 	bl	81002e0 <memchr>
 8111112:	2800      	cmp	r0, #0
 8111114:	d03f      	beq.n	8111196 <_vfiprintf_r+0x20a>
 8111116:	4b26      	ldr	r3, [pc, #152]	@ (81111b0 <_vfiprintf_r+0x224>)
 8111118:	bb1b      	cbnz	r3, 8111162 <_vfiprintf_r+0x1d6>
 811111a:	9b03      	ldr	r3, [sp, #12]
 811111c:	3307      	adds	r3, #7
 811111e:	f023 0307 	bic.w	r3, r3, #7
 8111122:	3308      	adds	r3, #8
 8111124:	9303      	str	r3, [sp, #12]
 8111126:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8111128:	443b      	add	r3, r7
 811112a:	9309      	str	r3, [sp, #36]	@ 0x24
 811112c:	e76a      	b.n	8111004 <_vfiprintf_r+0x78>
 811112e:	fb0c 3202 	mla	r2, ip, r2, r3
 8111132:	460c      	mov	r4, r1
 8111134:	2001      	movs	r0, #1
 8111136:	e7a8      	b.n	811108a <_vfiprintf_r+0xfe>
 8111138:	2300      	movs	r3, #0
 811113a:	3401      	adds	r4, #1
 811113c:	9305      	str	r3, [sp, #20]
 811113e:	4619      	mov	r1, r3
 8111140:	f04f 0c0a 	mov.w	ip, #10
 8111144:	4620      	mov	r0, r4
 8111146:	f810 2b01 	ldrb.w	r2, [r0], #1
 811114a:	3a30      	subs	r2, #48	@ 0x30
 811114c:	2a09      	cmp	r2, #9
 811114e:	d903      	bls.n	8111158 <_vfiprintf_r+0x1cc>
 8111150:	2b00      	cmp	r3, #0
 8111152:	d0c6      	beq.n	81110e2 <_vfiprintf_r+0x156>
 8111154:	9105      	str	r1, [sp, #20]
 8111156:	e7c4      	b.n	81110e2 <_vfiprintf_r+0x156>
 8111158:	fb0c 2101 	mla	r1, ip, r1, r2
 811115c:	4604      	mov	r4, r0
 811115e:	2301      	movs	r3, #1
 8111160:	e7f0      	b.n	8111144 <_vfiprintf_r+0x1b8>
 8111162:	ab03      	add	r3, sp, #12
 8111164:	9300      	str	r3, [sp, #0]
 8111166:	462a      	mov	r2, r5
 8111168:	4b12      	ldr	r3, [pc, #72]	@ (81111b4 <_vfiprintf_r+0x228>)
 811116a:	a904      	add	r1, sp, #16
 811116c:	4630      	mov	r0, r6
 811116e:	f7fd fda3 	bl	810ecb8 <_printf_float>
 8111172:	4607      	mov	r7, r0
 8111174:	1c78      	adds	r0, r7, #1
 8111176:	d1d6      	bne.n	8111126 <_vfiprintf_r+0x19a>
 8111178:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 811117a:	07d9      	lsls	r1, r3, #31
 811117c:	d405      	bmi.n	811118a <_vfiprintf_r+0x1fe>
 811117e:	89ab      	ldrh	r3, [r5, #12]
 8111180:	059a      	lsls	r2, r3, #22
 8111182:	d402      	bmi.n	811118a <_vfiprintf_r+0x1fe>
 8111184:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8111186:	f7fe fca9 	bl	810fadc <__retarget_lock_release_recursive>
 811118a:	89ab      	ldrh	r3, [r5, #12]
 811118c:	065b      	lsls	r3, r3, #25
 811118e:	f53f af1f 	bmi.w	8110fd0 <_vfiprintf_r+0x44>
 8111192:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8111194:	e71e      	b.n	8110fd4 <_vfiprintf_r+0x48>
 8111196:	ab03      	add	r3, sp, #12
 8111198:	9300      	str	r3, [sp, #0]
 811119a:	462a      	mov	r2, r5
 811119c:	4b05      	ldr	r3, [pc, #20]	@ (81111b4 <_vfiprintf_r+0x228>)
 811119e:	a904      	add	r1, sp, #16
 81111a0:	4630      	mov	r0, r6
 81111a2:	f7fe f821 	bl	810f1e8 <_printf_i>
 81111a6:	e7e4      	b.n	8111172 <_vfiprintf_r+0x1e6>
 81111a8:	081119d1 	.word	0x081119d1
 81111ac:	081119db 	.word	0x081119db
 81111b0:	0810ecb9 	.word	0x0810ecb9
 81111b4:	08110f67 	.word	0x08110f67
 81111b8:	081119d7 	.word	0x081119d7

081111bc <__sflush_r>:
 81111bc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 81111c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 81111c4:	0716      	lsls	r6, r2, #28
 81111c6:	4605      	mov	r5, r0
 81111c8:	460c      	mov	r4, r1
 81111ca:	d454      	bmi.n	8111276 <__sflush_r+0xba>
 81111cc:	684b      	ldr	r3, [r1, #4]
 81111ce:	2b00      	cmp	r3, #0
 81111d0:	dc02      	bgt.n	81111d8 <__sflush_r+0x1c>
 81111d2:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 81111d4:	2b00      	cmp	r3, #0
 81111d6:	dd48      	ble.n	811126a <__sflush_r+0xae>
 81111d8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 81111da:	2e00      	cmp	r6, #0
 81111dc:	d045      	beq.n	811126a <__sflush_r+0xae>
 81111de:	2300      	movs	r3, #0
 81111e0:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 81111e4:	682f      	ldr	r7, [r5, #0]
 81111e6:	6a21      	ldr	r1, [r4, #32]
 81111e8:	602b      	str	r3, [r5, #0]
 81111ea:	d030      	beq.n	811124e <__sflush_r+0x92>
 81111ec:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 81111ee:	89a3      	ldrh	r3, [r4, #12]
 81111f0:	0759      	lsls	r1, r3, #29
 81111f2:	d505      	bpl.n	8111200 <__sflush_r+0x44>
 81111f4:	6863      	ldr	r3, [r4, #4]
 81111f6:	1ad2      	subs	r2, r2, r3
 81111f8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 81111fa:	b10b      	cbz	r3, 8111200 <__sflush_r+0x44>
 81111fc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 81111fe:	1ad2      	subs	r2, r2, r3
 8111200:	2300      	movs	r3, #0
 8111202:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8111204:	6a21      	ldr	r1, [r4, #32]
 8111206:	4628      	mov	r0, r5
 8111208:	47b0      	blx	r6
 811120a:	1c43      	adds	r3, r0, #1
 811120c:	89a3      	ldrh	r3, [r4, #12]
 811120e:	d106      	bne.n	811121e <__sflush_r+0x62>
 8111210:	6829      	ldr	r1, [r5, #0]
 8111212:	291d      	cmp	r1, #29
 8111214:	d82b      	bhi.n	811126e <__sflush_r+0xb2>
 8111216:	4a2a      	ldr	r2, [pc, #168]	@ (81112c0 <__sflush_r+0x104>)
 8111218:	40ca      	lsrs	r2, r1
 811121a:	07d6      	lsls	r6, r2, #31
 811121c:	d527      	bpl.n	811126e <__sflush_r+0xb2>
 811121e:	2200      	movs	r2, #0
 8111220:	6062      	str	r2, [r4, #4]
 8111222:	04d9      	lsls	r1, r3, #19
 8111224:	6922      	ldr	r2, [r4, #16]
 8111226:	6022      	str	r2, [r4, #0]
 8111228:	d504      	bpl.n	8111234 <__sflush_r+0x78>
 811122a:	1c42      	adds	r2, r0, #1
 811122c:	d101      	bne.n	8111232 <__sflush_r+0x76>
 811122e:	682b      	ldr	r3, [r5, #0]
 8111230:	b903      	cbnz	r3, 8111234 <__sflush_r+0x78>
 8111232:	6560      	str	r0, [r4, #84]	@ 0x54
 8111234:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8111236:	602f      	str	r7, [r5, #0]
 8111238:	b1b9      	cbz	r1, 811126a <__sflush_r+0xae>
 811123a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 811123e:	4299      	cmp	r1, r3
 8111240:	d002      	beq.n	8111248 <__sflush_r+0x8c>
 8111242:	4628      	mov	r0, r5
 8111244:	f7ff fab4 	bl	81107b0 <_free_r>
 8111248:	2300      	movs	r3, #0
 811124a:	6363      	str	r3, [r4, #52]	@ 0x34
 811124c:	e00d      	b.n	811126a <__sflush_r+0xae>
 811124e:	2301      	movs	r3, #1
 8111250:	4628      	mov	r0, r5
 8111252:	47b0      	blx	r6
 8111254:	4602      	mov	r2, r0
 8111256:	1c50      	adds	r0, r2, #1
 8111258:	d1c9      	bne.n	81111ee <__sflush_r+0x32>
 811125a:	682b      	ldr	r3, [r5, #0]
 811125c:	2b00      	cmp	r3, #0
 811125e:	d0c6      	beq.n	81111ee <__sflush_r+0x32>
 8111260:	2b1d      	cmp	r3, #29
 8111262:	d001      	beq.n	8111268 <__sflush_r+0xac>
 8111264:	2b16      	cmp	r3, #22
 8111266:	d11e      	bne.n	81112a6 <__sflush_r+0xea>
 8111268:	602f      	str	r7, [r5, #0]
 811126a:	2000      	movs	r0, #0
 811126c:	e022      	b.n	81112b4 <__sflush_r+0xf8>
 811126e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8111272:	b21b      	sxth	r3, r3
 8111274:	e01b      	b.n	81112ae <__sflush_r+0xf2>
 8111276:	690f      	ldr	r7, [r1, #16]
 8111278:	2f00      	cmp	r7, #0
 811127a:	d0f6      	beq.n	811126a <__sflush_r+0xae>
 811127c:	0793      	lsls	r3, r2, #30
 811127e:	680e      	ldr	r6, [r1, #0]
 8111280:	bf08      	it	eq
 8111282:	694b      	ldreq	r3, [r1, #20]
 8111284:	600f      	str	r7, [r1, #0]
 8111286:	bf18      	it	ne
 8111288:	2300      	movne	r3, #0
 811128a:	eba6 0807 	sub.w	r8, r6, r7
 811128e:	608b      	str	r3, [r1, #8]
 8111290:	f1b8 0f00 	cmp.w	r8, #0
 8111294:	dde9      	ble.n	811126a <__sflush_r+0xae>
 8111296:	6a21      	ldr	r1, [r4, #32]
 8111298:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 811129a:	4643      	mov	r3, r8
 811129c:	463a      	mov	r2, r7
 811129e:	4628      	mov	r0, r5
 81112a0:	47b0      	blx	r6
 81112a2:	2800      	cmp	r0, #0
 81112a4:	dc08      	bgt.n	81112b8 <__sflush_r+0xfc>
 81112a6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 81112aa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 81112ae:	81a3      	strh	r3, [r4, #12]
 81112b0:	f04f 30ff 	mov.w	r0, #4294967295
 81112b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 81112b8:	4407      	add	r7, r0
 81112ba:	eba8 0800 	sub.w	r8, r8, r0
 81112be:	e7e7      	b.n	8111290 <__sflush_r+0xd4>
 81112c0:	20400001 	.word	0x20400001

081112c4 <_fflush_r>:
 81112c4:	b538      	push	{r3, r4, r5, lr}
 81112c6:	690b      	ldr	r3, [r1, #16]
 81112c8:	4605      	mov	r5, r0
 81112ca:	460c      	mov	r4, r1
 81112cc:	b913      	cbnz	r3, 81112d4 <_fflush_r+0x10>
 81112ce:	2500      	movs	r5, #0
 81112d0:	4628      	mov	r0, r5
 81112d2:	bd38      	pop	{r3, r4, r5, pc}
 81112d4:	b118      	cbz	r0, 81112de <_fflush_r+0x1a>
 81112d6:	6a03      	ldr	r3, [r0, #32]
 81112d8:	b90b      	cbnz	r3, 81112de <_fflush_r+0x1a>
 81112da:	f7fe f92f 	bl	810f53c <__sinit>
 81112de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 81112e2:	2b00      	cmp	r3, #0
 81112e4:	d0f3      	beq.n	81112ce <_fflush_r+0xa>
 81112e6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 81112e8:	07d0      	lsls	r0, r2, #31
 81112ea:	d404      	bmi.n	81112f6 <_fflush_r+0x32>
 81112ec:	0599      	lsls	r1, r3, #22
 81112ee:	d402      	bmi.n	81112f6 <_fflush_r+0x32>
 81112f0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 81112f2:	f7fe fbf2 	bl	810fada <__retarget_lock_acquire_recursive>
 81112f6:	4628      	mov	r0, r5
 81112f8:	4621      	mov	r1, r4
 81112fa:	f7ff ff5f 	bl	81111bc <__sflush_r>
 81112fe:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8111300:	07da      	lsls	r2, r3, #31
 8111302:	4605      	mov	r5, r0
 8111304:	d4e4      	bmi.n	81112d0 <_fflush_r+0xc>
 8111306:	89a3      	ldrh	r3, [r4, #12]
 8111308:	059b      	lsls	r3, r3, #22
 811130a:	d4e1      	bmi.n	81112d0 <_fflush_r+0xc>
 811130c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 811130e:	f7fe fbe5 	bl	810fadc <__retarget_lock_release_recursive>
 8111312:	e7dd      	b.n	81112d0 <_fflush_r+0xc>

08111314 <__swhatbuf_r>:
 8111314:	b570      	push	{r4, r5, r6, lr}
 8111316:	460c      	mov	r4, r1
 8111318:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 811131c:	2900      	cmp	r1, #0
 811131e:	b096      	sub	sp, #88	@ 0x58
 8111320:	4615      	mov	r5, r2
 8111322:	461e      	mov	r6, r3
 8111324:	da0d      	bge.n	8111342 <__swhatbuf_r+0x2e>
 8111326:	89a3      	ldrh	r3, [r4, #12]
 8111328:	f013 0f80 	tst.w	r3, #128	@ 0x80
 811132c:	f04f 0100 	mov.w	r1, #0
 8111330:	bf14      	ite	ne
 8111332:	2340      	movne	r3, #64	@ 0x40
 8111334:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8111338:	2000      	movs	r0, #0
 811133a:	6031      	str	r1, [r6, #0]
 811133c:	602b      	str	r3, [r5, #0]
 811133e:	b016      	add	sp, #88	@ 0x58
 8111340:	bd70      	pop	{r4, r5, r6, pc}
 8111342:	466a      	mov	r2, sp
 8111344:	f000 f87c 	bl	8111440 <_fstat_r>
 8111348:	2800      	cmp	r0, #0
 811134a:	dbec      	blt.n	8111326 <__swhatbuf_r+0x12>
 811134c:	9901      	ldr	r1, [sp, #4]
 811134e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8111352:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8111356:	4259      	negs	r1, r3
 8111358:	4159      	adcs	r1, r3
 811135a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 811135e:	e7eb      	b.n	8111338 <__swhatbuf_r+0x24>

08111360 <__smakebuf_r>:
 8111360:	898b      	ldrh	r3, [r1, #12]
 8111362:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8111364:	079d      	lsls	r5, r3, #30
 8111366:	4606      	mov	r6, r0
 8111368:	460c      	mov	r4, r1
 811136a:	d507      	bpl.n	811137c <__smakebuf_r+0x1c>
 811136c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8111370:	6023      	str	r3, [r4, #0]
 8111372:	6123      	str	r3, [r4, #16]
 8111374:	2301      	movs	r3, #1
 8111376:	6163      	str	r3, [r4, #20]
 8111378:	b003      	add	sp, #12
 811137a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 811137c:	ab01      	add	r3, sp, #4
 811137e:	466a      	mov	r2, sp
 8111380:	f7ff ffc8 	bl	8111314 <__swhatbuf_r>
 8111384:	9f00      	ldr	r7, [sp, #0]
 8111386:	4605      	mov	r5, r0
 8111388:	4639      	mov	r1, r7
 811138a:	4630      	mov	r0, r6
 811138c:	f7fd fb68 	bl	810ea60 <_malloc_r>
 8111390:	b948      	cbnz	r0, 81113a6 <__smakebuf_r+0x46>
 8111392:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8111396:	059a      	lsls	r2, r3, #22
 8111398:	d4ee      	bmi.n	8111378 <__smakebuf_r+0x18>
 811139a:	f023 0303 	bic.w	r3, r3, #3
 811139e:	f043 0302 	orr.w	r3, r3, #2
 81113a2:	81a3      	strh	r3, [r4, #12]
 81113a4:	e7e2      	b.n	811136c <__smakebuf_r+0xc>
 81113a6:	89a3      	ldrh	r3, [r4, #12]
 81113a8:	6020      	str	r0, [r4, #0]
 81113aa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 81113ae:	81a3      	strh	r3, [r4, #12]
 81113b0:	9b01      	ldr	r3, [sp, #4]
 81113b2:	e9c4 0704 	strd	r0, r7, [r4, #16]
 81113b6:	b15b      	cbz	r3, 81113d0 <__smakebuf_r+0x70>
 81113b8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 81113bc:	4630      	mov	r0, r6
 81113be:	f000 f851 	bl	8111464 <_isatty_r>
 81113c2:	b128      	cbz	r0, 81113d0 <__smakebuf_r+0x70>
 81113c4:	89a3      	ldrh	r3, [r4, #12]
 81113c6:	f023 0303 	bic.w	r3, r3, #3
 81113ca:	f043 0301 	orr.w	r3, r3, #1
 81113ce:	81a3      	strh	r3, [r4, #12]
 81113d0:	89a3      	ldrh	r3, [r4, #12]
 81113d2:	431d      	orrs	r5, r3
 81113d4:	81a5      	strh	r5, [r4, #12]
 81113d6:	e7cf      	b.n	8111378 <__smakebuf_r+0x18>

081113d8 <_putc_r>:
 81113d8:	b570      	push	{r4, r5, r6, lr}
 81113da:	460d      	mov	r5, r1
 81113dc:	4614      	mov	r4, r2
 81113de:	4606      	mov	r6, r0
 81113e0:	b118      	cbz	r0, 81113ea <_putc_r+0x12>
 81113e2:	6a03      	ldr	r3, [r0, #32]
 81113e4:	b90b      	cbnz	r3, 81113ea <_putc_r+0x12>
 81113e6:	f7fe f8a9 	bl	810f53c <__sinit>
 81113ea:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 81113ec:	07d8      	lsls	r0, r3, #31
 81113ee:	d405      	bmi.n	81113fc <_putc_r+0x24>
 81113f0:	89a3      	ldrh	r3, [r4, #12]
 81113f2:	0599      	lsls	r1, r3, #22
 81113f4:	d402      	bmi.n	81113fc <_putc_r+0x24>
 81113f6:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 81113f8:	f7fe fb6f 	bl	810fada <__retarget_lock_acquire_recursive>
 81113fc:	68a3      	ldr	r3, [r4, #8]
 81113fe:	3b01      	subs	r3, #1
 8111400:	2b00      	cmp	r3, #0
 8111402:	60a3      	str	r3, [r4, #8]
 8111404:	da05      	bge.n	8111412 <_putc_r+0x3a>
 8111406:	69a2      	ldr	r2, [r4, #24]
 8111408:	4293      	cmp	r3, r2
 811140a:	db12      	blt.n	8111432 <_putc_r+0x5a>
 811140c:	b2eb      	uxtb	r3, r5
 811140e:	2b0a      	cmp	r3, #10
 8111410:	d00f      	beq.n	8111432 <_putc_r+0x5a>
 8111412:	6823      	ldr	r3, [r4, #0]
 8111414:	1c5a      	adds	r2, r3, #1
 8111416:	6022      	str	r2, [r4, #0]
 8111418:	701d      	strb	r5, [r3, #0]
 811141a:	b2ed      	uxtb	r5, r5
 811141c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 811141e:	07da      	lsls	r2, r3, #31
 8111420:	d405      	bmi.n	811142e <_putc_r+0x56>
 8111422:	89a3      	ldrh	r3, [r4, #12]
 8111424:	059b      	lsls	r3, r3, #22
 8111426:	d402      	bmi.n	811142e <_putc_r+0x56>
 8111428:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 811142a:	f7fe fb57 	bl	810fadc <__retarget_lock_release_recursive>
 811142e:	4628      	mov	r0, r5
 8111430:	bd70      	pop	{r4, r5, r6, pc}
 8111432:	4629      	mov	r1, r5
 8111434:	4622      	mov	r2, r4
 8111436:	4630      	mov	r0, r6
 8111438:	f7fe f971 	bl	810f71e <__swbuf_r>
 811143c:	4605      	mov	r5, r0
 811143e:	e7ed      	b.n	811141c <_putc_r+0x44>

08111440 <_fstat_r>:
 8111440:	b538      	push	{r3, r4, r5, lr}
 8111442:	4d07      	ldr	r5, [pc, #28]	@ (8111460 <_fstat_r+0x20>)
 8111444:	2300      	movs	r3, #0
 8111446:	4604      	mov	r4, r0
 8111448:	4608      	mov	r0, r1
 811144a:	4611      	mov	r1, r2
 811144c:	602b      	str	r3, [r5, #0]
 811144e:	f7f4 f987 	bl	8105760 <_fstat>
 8111452:	1c43      	adds	r3, r0, #1
 8111454:	d102      	bne.n	811145c <_fstat_r+0x1c>
 8111456:	682b      	ldr	r3, [r5, #0]
 8111458:	b103      	cbz	r3, 811145c <_fstat_r+0x1c>
 811145a:	6023      	str	r3, [r4, #0]
 811145c:	bd38      	pop	{r3, r4, r5, pc}
 811145e:	bf00      	nop
 8111460:	10005128 	.word	0x10005128

08111464 <_isatty_r>:
 8111464:	b538      	push	{r3, r4, r5, lr}
 8111466:	4d06      	ldr	r5, [pc, #24]	@ (8111480 <_isatty_r+0x1c>)
 8111468:	2300      	movs	r3, #0
 811146a:	4604      	mov	r4, r0
 811146c:	4608      	mov	r0, r1
 811146e:	602b      	str	r3, [r5, #0]
 8111470:	f7f4 f986 	bl	8105780 <_isatty>
 8111474:	1c43      	adds	r3, r0, #1
 8111476:	d102      	bne.n	811147e <_isatty_r+0x1a>
 8111478:	682b      	ldr	r3, [r5, #0]
 811147a:	b103      	cbz	r3, 811147e <_isatty_r+0x1a>
 811147c:	6023      	str	r3, [r4, #0]
 811147e:	bd38      	pop	{r3, r4, r5, pc}
 8111480:	10005128 	.word	0x10005128

08111484 <__assert_func>:
 8111484:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8111486:	4614      	mov	r4, r2
 8111488:	461a      	mov	r2, r3
 811148a:	4b09      	ldr	r3, [pc, #36]	@ (81114b0 <__assert_func+0x2c>)
 811148c:	681b      	ldr	r3, [r3, #0]
 811148e:	4605      	mov	r5, r0
 8111490:	68d8      	ldr	r0, [r3, #12]
 8111492:	b14c      	cbz	r4, 81114a8 <__assert_func+0x24>
 8111494:	4b07      	ldr	r3, [pc, #28]	@ (81114b4 <__assert_func+0x30>)
 8111496:	9100      	str	r1, [sp, #0]
 8111498:	e9cd 3401 	strd	r3, r4, [sp, #4]
 811149c:	4906      	ldr	r1, [pc, #24]	@ (81114b8 <__assert_func+0x34>)
 811149e:	462b      	mov	r3, r5
 81114a0:	f000 f842 	bl	8111528 <fiprintf>
 81114a4:	f7fd faa2 	bl	810e9ec <abort>
 81114a8:	4b04      	ldr	r3, [pc, #16]	@ (81114bc <__assert_func+0x38>)
 81114aa:	461c      	mov	r4, r3
 81114ac:	e7f3      	b.n	8111496 <__assert_func+0x12>
 81114ae:	bf00      	nop
 81114b0:	10000020 	.word	0x10000020
 81114b4:	081119ec 	.word	0x081119ec
 81114b8:	081119f9 	.word	0x081119f9
 81114bc:	08111a27 	.word	0x08111a27

081114c0 <_calloc_r>:
 81114c0:	b570      	push	{r4, r5, r6, lr}
 81114c2:	fba1 5402 	umull	r5, r4, r1, r2
 81114c6:	b934      	cbnz	r4, 81114d6 <_calloc_r+0x16>
 81114c8:	4629      	mov	r1, r5
 81114ca:	f7fd fac9 	bl	810ea60 <_malloc_r>
 81114ce:	4606      	mov	r6, r0
 81114d0:	b928      	cbnz	r0, 81114de <_calloc_r+0x1e>
 81114d2:	4630      	mov	r0, r6
 81114d4:	bd70      	pop	{r4, r5, r6, pc}
 81114d6:	220c      	movs	r2, #12
 81114d8:	6002      	str	r2, [r0, #0]
 81114da:	2600      	movs	r6, #0
 81114dc:	e7f9      	b.n	81114d2 <_calloc_r+0x12>
 81114de:	462a      	mov	r2, r5
 81114e0:	4621      	mov	r1, r4
 81114e2:	f7fe f9cb 	bl	810f87c <memset>
 81114e6:	e7f4      	b.n	81114d2 <_calloc_r+0x12>

081114e8 <__ascii_mbtowc>:
 81114e8:	b082      	sub	sp, #8
 81114ea:	b901      	cbnz	r1, 81114ee <__ascii_mbtowc+0x6>
 81114ec:	a901      	add	r1, sp, #4
 81114ee:	b142      	cbz	r2, 8111502 <__ascii_mbtowc+0x1a>
 81114f0:	b14b      	cbz	r3, 8111506 <__ascii_mbtowc+0x1e>
 81114f2:	7813      	ldrb	r3, [r2, #0]
 81114f4:	600b      	str	r3, [r1, #0]
 81114f6:	7812      	ldrb	r2, [r2, #0]
 81114f8:	1e10      	subs	r0, r2, #0
 81114fa:	bf18      	it	ne
 81114fc:	2001      	movne	r0, #1
 81114fe:	b002      	add	sp, #8
 8111500:	4770      	bx	lr
 8111502:	4610      	mov	r0, r2
 8111504:	e7fb      	b.n	81114fe <__ascii_mbtowc+0x16>
 8111506:	f06f 0001 	mvn.w	r0, #1
 811150a:	e7f8      	b.n	81114fe <__ascii_mbtowc+0x16>

0811150c <__ascii_wctomb>:
 811150c:	4603      	mov	r3, r0
 811150e:	4608      	mov	r0, r1
 8111510:	b141      	cbz	r1, 8111524 <__ascii_wctomb+0x18>
 8111512:	2aff      	cmp	r2, #255	@ 0xff
 8111514:	d904      	bls.n	8111520 <__ascii_wctomb+0x14>
 8111516:	228a      	movs	r2, #138	@ 0x8a
 8111518:	601a      	str	r2, [r3, #0]
 811151a:	f04f 30ff 	mov.w	r0, #4294967295
 811151e:	4770      	bx	lr
 8111520:	700a      	strb	r2, [r1, #0]
 8111522:	2001      	movs	r0, #1
 8111524:	4770      	bx	lr
	...

08111528 <fiprintf>:
 8111528:	b40e      	push	{r1, r2, r3}
 811152a:	b503      	push	{r0, r1, lr}
 811152c:	4601      	mov	r1, r0
 811152e:	ab03      	add	r3, sp, #12
 8111530:	4805      	ldr	r0, [pc, #20]	@ (8111548 <fiprintf+0x20>)
 8111532:	f853 2b04 	ldr.w	r2, [r3], #4
 8111536:	6800      	ldr	r0, [r0, #0]
 8111538:	9301      	str	r3, [sp, #4]
 811153a:	f7ff fd27 	bl	8110f8c <_vfiprintf_r>
 811153e:	b002      	add	sp, #8
 8111540:	f85d eb04 	ldr.w	lr, [sp], #4
 8111544:	b003      	add	sp, #12
 8111546:	4770      	bx	lr
 8111548:	10000020 	.word	0x10000020

0811154c <_init>:
 811154c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 811154e:	bf00      	nop
 8111550:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8111552:	bc08      	pop	{r3}
 8111554:	469e      	mov	lr, r3
 8111556:	4770      	bx	lr

08111558 <_fini>:
 8111558:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 811155a:	bf00      	nop
 811155c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 811155e:	bc08      	pop	{r3}
 8111560:	469e      	mov	lr, r3
 8111562:	4770      	bx	lr
